(window.webpackJsonp = window.webpackJsonp || []).push([[126], {
    112: function (e, t, r) {
        (function (e) {
            /*!
Waypoints - 4.0.1
Copyright Â© 2011-2016 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blob/master/licenses.txt
*/
            !function () {
                "use strict";
                var e = 0, t = {};

                function r(i) {
                    if (!i) throw new Error("No options passed to Waypoint constructor");
                    if (!i.element) throw new Error("No element option passed to Waypoint constructor");
                    if (!i.handler) throw new Error("No handler option passed to Waypoint constructor");
                    this.key = "waypoint-" + e, this.options = r.Adapter.extend({}, r.defaults, i), this.element = this.options.element, this.adapter = new r.Adapter(this.element), this.callback = i.handler, this.axis = this.options.horizontal ? "horizontal" : "vertical", this.enabled = this.options.enabled, this.triggerPoint = null, this.group = r.Group.findOrCreate({
                        name: this.options.group,
                        axis: this.axis
                    }), this.context = r.Context.findOrCreateByElement(this.options.context), r.offsetAliases[this.options.offset] && (this.options.offset = r.offsetAliases[this.options.offset]), this.group.add(this), this.context.add(this), t[this.key] = this, e += 1
                }

                r.prototype.queueTrigger = function (e) {
                    this.group.queueTrigger(this, e)
                }, r.prototype.trigger = function (e) {
                    this.enabled && this.callback && this.callback.apply(this, e)
                }, r.prototype.destroy = function () {
                    this.context.remove(this), this.group.remove(this), delete t[this.key]
                }, r.prototype.disable = function () {
                    return this.enabled = !1, this
                }, r.prototype.enable = function () {
                    return this.context.refresh(), this.enabled = !0, this
                }, r.prototype.next = function () {
                    return this.group.next(this)
                }, r.prototype.previous = function () {
                    return this.group.previous(this)
                }, r.invokeAll = function (e) {
                    var r = [];
                    for (var i in t) r.push(t[i]);
                    for (var o = 0, a = r.length; o < a; o++) r[o][e]()
                }, r.destroyAll = function () {
                    r.invokeAll("destroy")
                }, r.disableAll = function () {
                    r.invokeAll("disable")
                }, r.enableAll = function () {
                    for (var e in r.Context.refreshAll(), t) t[e].enabled = !0;
                    return this
                }, r.refreshAll = function () {
                    r.Context.refreshAll()
                }, r.viewportHeight = function () {
                    return window.innerHeight || document.documentElement.clientHeight
                }, r.viewportWidth = function () {
                    return document.documentElement.clientWidth
                }, r.adapters = [], r.defaults = {
                    context: window,
                    continuous: !0,
                    enabled: !0,
                    group: "default",
                    horizontal: !1,
                    offset: 0
                }, r.offsetAliases = {
                    "bottom-in-view": function () {
                        return this.context.innerHeight() - this.adapter.outerHeight()
                    }, "right-in-view": function () {
                        return this.context.innerWidth() - this.adapter.outerWidth()
                    }
                }, window.Waypoint = r
            }(), function () {
                "use strict";

                function e(e) {
                    window.setTimeout(e, 1e3 / 60)
                }

                var t = 0, r = {}, i = window.Waypoint, o = window.onload;

                function a(e) {
                    this.element = e, this.Adapter = i.Adapter, this.adapter = new this.Adapter(e), this.key = "waypoint-context-" + t, this.didScroll = !1, this.didResize = !1, this.oldScroll = {
                        x: this.adapter.scrollLeft(),
                        y: this.adapter.scrollTop()
                    }, this.waypoints = {
                        vertical: {},
                        horizontal: {}
                    }, e.waypointContextKey = this.key, r[e.waypointContextKey] = this, t += 1, i.windowContext || (i.windowContext = !0, i.windowContext = new a(window)), this.createThrottledScrollHandler(), this.createThrottledResizeHandler()
                }

                a.prototype.add = function (e) {
                    var t = e.options.horizontal ? "horizontal" : "vertical";
                    this.waypoints[t][e.key] = e, this.refresh()
                }, a.prototype.checkEmpty = function () {
                    var e = this.Adapter.isEmptyObject(this.waypoints.horizontal),
                        t = this.Adapter.isEmptyObject(this.waypoints.vertical),
                        i = this.element == this.element.window;
                    e && t && !i && (this.adapter.off(".waypoints"), delete r[this.key])
                }, a.prototype.createThrottledResizeHandler = function () {
                    var e = this;

                    function t() {
                        e.handleResize(), e.didResize = !1
                    }

                    this.adapter.on("resize.waypoints", (function () {
                        e.didResize || (e.didResize = !0, i.requestAnimationFrame(t))
                    }))
                }, a.prototype.createThrottledScrollHandler = function () {
                    var e = this;

                    function t() {
                        e.handleScroll(), e.didScroll = !1
                    }

                    this.adapter.on("scroll.waypoints", (function () {
                        e.didScroll && !i.isTouch || (e.didScroll = !0, i.requestAnimationFrame(t))
                    }))
                }, a.prototype.handleResize = function () {
                    i.Context.refreshAll()
                }, a.prototype.handleScroll = function () {
                    var e = {}, t = {
                        horizontal: {
                            newScroll: this.adapter.scrollLeft(),
                            oldScroll: this.oldScroll.x,
                            forward: "right",
                            backward: "left"
                        },
                        vertical: {
                            newScroll: this.adapter.scrollTop(),
                            oldScroll: this.oldScroll.y,
                            forward: "down",
                            backward: "up"
                        }
                    };
                    for (var r in t) {
                        var i = t[r], o = i.newScroll > i.oldScroll ? i.forward : i.backward;
                        for (var a in this.waypoints[r]) {
                            var n = this.waypoints[r][a];
                            if (null !== n.triggerPoint) {
                                var s = i.oldScroll < n.triggerPoint, h = i.newScroll >= n.triggerPoint;
                                (s && h || !s && !h) && (n.queueTrigger(o), e[n.group.id] = n.group)
                            }
                        }
                    }
                    for (var l in e) e[l].flushTriggers();
                    this.oldScroll = {x: t.horizontal.newScroll, y: t.vertical.newScroll}
                }, a.prototype.innerHeight = function () {
                    return this.element == this.element.window ? i.viewportHeight() : this.adapter.innerHeight()
                }, a.prototype.remove = function (e) {
                    delete this.waypoints[e.axis][e.key], this.checkEmpty()
                }, a.prototype.innerWidth = function () {
                    return this.element == this.element.window ? i.viewportWidth() : this.adapter.innerWidth()
                }, a.prototype.destroy = function () {
                    var e = [];
                    for (var t in this.waypoints) for (var r in this.waypoints[t]) e.push(this.waypoints[t][r]);
                    for (var i = 0, o = e.length; i < o; i++) e[i].destroy()
                }, a.prototype.refresh = function () {
                    var e, t = this.element == this.element.window, r = t ? void 0 : this.adapter.offset(), o = {};
                    for (var a in this.handleScroll(), e = {
                        horizontal: {
                            contextOffset: t ? 0 : r.left,
                            contextScroll: t ? 0 : this.oldScroll.x,
                            contextDimension: this.innerWidth(),
                            oldScroll: this.oldScroll.x,
                            forward: "right",
                            backward: "left",
                            offsetProp: "left"
                        },
                        vertical: {
                            contextOffset: t ? 0 : r.top,
                            contextScroll: t ? 0 : this.oldScroll.y,
                            contextDimension: this.innerHeight(),
                            oldScroll: this.oldScroll.y,
                            forward: "down",
                            backward: "up",
                            offsetProp: "top"
                        }
                    }) {
                        var n = e[a];
                        for (var s in this.waypoints[a]) {
                            var h, l, c, p, u = this.waypoints[a][s], f = u.options.offset, d = u.triggerPoint, m = 0,
                                y = null == d;
                            u.element !== u.element.window && (m = u.adapter.offset()[n.offsetProp]), "function" == typeof f ? f = f.apply(u) : "string" == typeof f && (f = parseFloat(f), u.options.offset.indexOf("%") > -1 && (f = Math.ceil(n.contextDimension * f / 100))), h = n.contextScroll - n.contextOffset, u.triggerPoint = Math.floor(m + h - f), l = d < n.oldScroll, c = u.triggerPoint >= n.oldScroll, p = !l && !c, !y && (l && c) ? (u.queueTrigger(n.backward), o[u.group.id] = u.group) : !y && p ? (u.queueTrigger(n.forward), o[u.group.id] = u.group) : y && n.oldScroll >= u.triggerPoint && (u.queueTrigger(n.forward), o[u.group.id] = u.group)
                        }
                    }
                    return i.requestAnimationFrame((function () {
                        for (var e in o) o[e].flushTriggers()
                    })), this
                }, a.findOrCreateByElement = function (e) {
                    return a.findByElement(e) || new a(e)
                }, a.refreshAll = function () {
                    for (var e in r) r[e].refresh()
                }, a.findByElement = function (e) {
                    return r[e.waypointContextKey]
                }, window.onload = function () {
                    o && o(), a.refreshAll()
                }, i.requestAnimationFrame = function (t) {
                    (window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || e).call(window, t)
                }, i.Context = a
            }(), function () {
                "use strict";

                function e(e, t) {
                    return e.triggerPoint - t.triggerPoint
                }

                function t(e, t) {
                    return t.triggerPoint - e.triggerPoint
                }

                var r = {vertical: {}, horizontal: {}}, i = window.Waypoint;

                function o(e) {
                    this.name = e.name, this.axis = e.axis, this.id = this.name + "-" + this.axis, this.waypoints = [], this.clearTriggerQueues(), r[this.axis][this.name] = this
                }

                o.prototype.add = function (e) {
                    this.waypoints.push(e)
                }, o.prototype.clearTriggerQueues = function () {
                    this.triggerQueues = {up: [], down: [], left: [], right: []}
                }, o.prototype.flushTriggers = function () {
                    for (var r in this.triggerQueues) {
                        var i = this.triggerQueues[r], o = "up" === r || "left" === r;
                        i.sort(o ? t : e);
                        for (var a = 0, n = i.length; a < n; a += 1) {
                            var s = i[a];
                            (s.options.continuous || a === i.length - 1) && s.trigger([r])
                        }
                    }
                    this.clearTriggerQueues()
                }, o.prototype.next = function (t) {
                    this.waypoints.sort(e);
                    var r = i.Adapter.inArray(t, this.waypoints);
                    return r === this.waypoints.length - 1 ? null : this.waypoints[r + 1]
                }, o.prototype.previous = function (t) {
                    this.waypoints.sort(e);
                    var r = i.Adapter.inArray(t, this.waypoints);
                    return r ? this.waypoints[r - 1] : null
                }, o.prototype.queueTrigger = function (e, t) {
                    this.triggerQueues[t].push(e)
                }, o.prototype.remove = function (e) {
                    var t = i.Adapter.inArray(e, this.waypoints);
                    t > -1 && this.waypoints.splice(t, 1)
                }, o.prototype.first = function () {
                    return this.waypoints[0]
                }, o.prototype.last = function () {
                    return this.waypoints[this.waypoints.length - 1]
                }, o.findOrCreate = function (e) {
                    return r[e.axis][e.name] || new o(e)
                }, i.Group = o
            }(), function () {
                "use strict";
                var t = e, r = window.Waypoint;

                function i(e) {
                    this.$element = t(e)
                }

                t.each(["innerHeight", "innerWidth", "off", "offset", "on", "outerHeight", "outerWidth", "scrollLeft", "scrollTop"], (function (e, t) {
                    i.prototype[t] = function () {
                        var e = Array.prototype.slice.call(arguments);
                        return this.$element[t].apply(this.$element, e)
                    }
                })), t.each(["extend", "inArray", "isEmptyObject"], (function (e, r) {
                    i[r] = t[r]
                })), r.adapters.push({name: "jquery", Adapter: i}), r.Adapter = i
            }(), function () {
                "use strict";
                var t = window.Waypoint;

                function r(e) {
                    return function () {
                        var r = [], i = arguments[0];
                        return e.isFunction(arguments[0]) && ((i = e.extend({}, arguments[1])).handler = arguments[0]), this.each((function () {
                            var o = e.extend({}, i, {element: this});
                            "string" == typeof o.context && (o.context = e(this).closest(o.context)[0]), r.push(new t(o))
                        })), r
                    }
                }

                e && (e.fn.waypoint = r(e)), window.Zepto && (window.Zepto.fn.waypoint = r(window.Zepto))
            }()
        }).call(this, r(0))
    }, 15: function (e, t, r) {
        "use strict";
        r(41);
        t.a = function (e) {
            return "string" == typeof e && (e = e.split(".")), e.reduce((function (e, t) {
                return void 0 !== e && void 0 !== e[t] ? e[t] : void 0
            }), window.CFJS.config)
        }
    }, 48: function (e, t, r) {
        "use strict";
        r(71), r(61), r(41);
        var i, o = 3, a = 100;

        function n() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
            return e >= o ? Promise.resolve({}) : new Promise((function (t, r) {
                var i = new XMLHttpRequest;
                i.open("GET", "/cdn-cgi/trace", !0), i.timeout = 4500, i.onload = function () {
                    if (200 === i.status || 0 === i.status) {
                        var e = i.responseText.split("\n");
                        t(function (e) {
                            for (var t = {}, r = 0; r < e.length - 1; r++) {
                                var i = e[r].split("=");
                                t[i[0].trim()] = i[1].trim()
                            }
                            return t
                        }(e))
                    } else r(Error(i.statusText))
                }, i.ontimeout = function () {
                    r(Error("Orange cloud timeout"))
                }, i.onerror = function () {
                    r(Error("Orange cloud network Error"))
                }, 0 === e ? i.send() : setTimeout((function () {
                    i.send()
                }), a)
            })).catch((function () {
                return n(e + 1)
            }))
        }

        t.a = function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            return (e || void 0 === i) && (i = n()), i
        }
    }, 49: function (e, t, r) {
        "use strict";
        r.d(t, "a", (function () {
            return c
        })), r.d(t, "g", (function () {
            return p
        })), r.d(t, "e", (function () {
            return u
        })), r.d(t, "f", (function () {
            return f
        })), r.d(t, "b", (function () {
            return d
        })), r.d(t, "d", (function () {
            return m
        })), r.d(t, "c", (function () {
            return y
        }));
        r(130), r(41), r(80), r(113), r(71), r(61);
        var i, o = r(96), a = r(15), n = r(76), s = r(74), h = "cfmrk_", l = 864e5;

        function c() {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            return i && !e || (i = window.location.href.indexOf("/lp/") > -1 && -1 === window.location.href.indexOf("/ddos-b/") ? Promise.resolve(!0) : Object(n.a)().then((function (e) {
                return !e || u(s.a)
            }))), i
        }

        function p(e) {
            f({name: h + e, value: "1"})
        }

        function u(e) {
            return "1" === d(h + e)
        }

        function f(e) {
            var t = e.name, r = e.value, i = e.path, o = void 0 === i ? "/" : i, n = e.domain,
                s = void 0 === n ? Object(a.a)("cookieDomain") : n, h = e.daysToExpire, c = void 0 === h ? 365 : h,
                p = new Date;
            p.setTime(p.getTime() + c * l);
            var u = p.toGMTString();
            document.cookie = "".concat(t, "=").concat(r, "; path=").concat(o, "; domain=").concat(s, "; expires=").concat(u)
        }

        function d(e) {
            if (document.cookie) return Object(o.parse)(document.cookie)[e]
        }

        function m() {
            var e = d("sparrow_id");
            if (e && e.length > 0) try {
                var t = JSON.parse(decodeURIComponent(e));
                if ("USER_ID" === t.identityType) return t.identity
            } catch (e) {
                console.log("ID Error: ".concat(e))
            }
            return ""
        }

        function y() {
            var e = d("_gaexp"), t = "";
            return e && (e = (e = (e = e.replace(/GAX[0-9].[0-9]./, "")).split("!")).map((function (e) {
                var t = e.split("."), r = t[0], i = t[t.length - 1];
                return "{'experimentId':'".concat(r, "','variant':").concat(i, "}")
            })), t = "[".concat(e.toString(), "]")), t
        }
    }, 715: function (e, t) {
        e.exports = {
            CF_DATACENTERS: [{lat: "38.95315", lon: "-77.44774"}, {lat: "33.640068", lon: "-84.44403"}, {
                lat: "36.1263",
                lon: "-86.6774"
            }, {lat: "42.3600825", lon: "-71.0588801"}, {lat: "41.976913", lon: "-87.90488"}, {
                lat: "32.89746",
                lon: "-97.036125"
            }, {lat: "39.8561", lon: "-104.6737"}, {lat: "42.2123985", lon: "-83.3534012"}, {
                lat: "29.7604",
                lon: "-95.3698"
            }, {lat: "30.4941006", lon: "-81.6878967"}, {lat: "39.2975998", lon: "-94.7138977"}, {
                lat: "36.1699",
                lon: "-115.1728"
            }, {lat: "33.943398", lon: "-118.40828"}, {lat: "26.1758003", lon: "-98.2386017"}, {
                lat: "25.796",
                lon: "-80.27824"
            }, {lat: "44.883015", lon: "-93.21092"}, {lat: "45.457714", lon: "-73.74991"}, {
                lat: "51.0486",
                lon: "-114.0708"
            }, {lat: "40.68907", lon: "-74.17876"}, {lat: "41.2523634", lon: "-95.99798829999999"}, {
                lat: "36.8618604",
                lon: "-76.23534159999997"
            }, {lat: "19.43333", lon: "-99.13333"}, {lat: "9.0647", lon: "-79.3844"}, {
                lat: "39.871898",
                lon: "-75.241096"
            }, {lat: "33.435036", lon: "-112.00016"}, {lat: "40.4915009", lon: "-80.2329025"}, {
                lat: "45.588997",
                lon: "-122.5929"
            }, {lat: "38.6954002", lon: "-121.5910034"}, {lat: "37.366737", lon: "-121.92638"}, {
                lat: "47.44384",
                lon: "-122.301735"
            }, {lat: "38.6270025", lon: "-90.19940419999999"}, {lat: "32.975500", lon: "-117.533203"}, {
                lat: "40.45",
                lon: "-111.533203"
            }, {lat: "32.18", lon: "-86.23"}, {lat: "39.76838", lon: "-86.15804"}, {
                lat: "30.3964996",
                lon: "-84.3503036"
            }, {lat: "35.1175", lon: "-89.971111"}, {lat: "27.975500", lon: "-82.533203"}, {
                lat: "43.681583",
                lon: "-79.61146"
            }, {lat: "52.1332", lon: "-106.6700"}, {lat: "49.1947", lon: "-123.17919"}, {
                lat: "49.893607",
                lon: "-97.14294009"
            }, {lat: "52.30907", lon: "4.763385"}, {lat: "37.93635", lon: "23.946486"}, {
                lat: "41.390205",
                lon: "2.154007"
            }, {lat: "50.89717", lon: "4.483602"}, {lat: "44.8184013", lon: "20.3090992"}, {
                lat: "52.553944",
                lon: "13.291722"
            }, {lat: "44.571156", lon: "26.077063"}, {lat: "47.4369011", lon: "19.2556"}, {
                lat: "55.62905",
                lon: "12.647601"
            }, {lat: "53.42728", lon: "-6.24357"}, {lat: "51.278328", lon: "6.76558"}, {
                lat: "50.050735",
                lon: "8.570773"
            }, {lat: "53.63128", lon: "10.006414"}, {lat: "60.31795", lon: "24.96645"}, {
                lat: "50.341244",
                lon: "30.895206"
            }, {lat: "38.7812996", lon: "-9.1359196"}, {lat: "51.469604", lon: "-0.453566"}, {
                lat: "49.505332",
                lon: "6.113280"
            }, {lat: "40.46515", lon: "-3.570209"}, {lat: "53.362907", lon: "-2.273354"}, {
                lat: "43.44178",
                lon: "5.222137"
            }, {lat: "48.1351", lon: "11.5820"}, {lat: "45.627403", lon: "8.71237"}, {
                lat: "55.414566",
                lon: "37.899494"
            }, {lat: "60.19419", lon: "11.100411"}, {lat: "49.003197", lon: "2.567023"}, {
                lat: "50.10619",
                lon: "14.266638"
            }, {lat: "56.9235992", lon: "23.9710999"}, {lat: "41.8044444", lon: "12.2508333"}, {
                lat: "42.688343",
                lon: "23.41443"
            }, {lat: "59.64982", lon: "17.930365"}, {lat: "48.11972", lon: "16.563583"}, {
                lat: "52.170906",
                lon: "20.97329"
            }, {lat: "45.8150108", lon: "15.9819189"}, {lat: "47.450603", lon: "8.561746"}, {
                lat: "41.0082376",
                lon: "28.9783589"
            }, {lat: "64.12652059999999", lon: "-21.8174392"}, {lat: "55.953252", lon: "-3.188267"}, {
                lat: "54.687156",
                lon: "25.279651"
            }, {lat: "47.0", lon: "28.9166"}, {lat: "59.4370", lon: "24.7536"}, {
                lat: "-37.004787",
                lon: "174.78352"
            }, {lat: "-27.4697707", lon: "153.0251235"}, {lat: "-37.669613", lon: "144.84978"}, {
                lat: "-31.933603",
                lon: "115.960236"
            }, {lat: "-33.932922", lon: "151.1799"}, {lat: "12.982267", lon: "80.16378"}, {
                lat: "12.982267",
                lon: "80.16378"
            }, {lat: "22.315248", lon: "113.93649"}, {lat: "22.315248", lon: "113.93649"}, {
                lat: "22.198745",
                lon: "113.543873"
            }, {lat: "25.07639", lon: "121.22389"}, {lat: "2.755672", lon: "101.70539"}, {
                lat: "19.095509",
                lon: "72.87497"
            }, {lat: "19.095509", lon: "72.87497"}, {lat: "28.556555", lon: "77.10079"}, {
                lat: "34.43533",
                lon: "135.24397"
            }, {lat: "11.5466003", lon: "104.8440018"}, {lat: "37.448524", lon: "126.45123"}, {
                lat: "1.361173",
                lon: "103.990204"
            }, {lat: "35.773212", lon: "140.38744"}, {lat: "14.509602", lon: "121.01251"}, {
                lat: "10.32",
                lon: "123.75"
            }, {lat: "14.509602", lon: "121.01251"}, {lat: "13.693062", lon: "100.752045"}, {
                lat: "13.693062",
                lon: "100.752045"
            }, {lat: "13.693062", lon: "100.752045"}, {lat: "13.693062", lon: "100.752045"}, {
                lat: "7.1802",
                lon: "79.8843"
            }, {lat: "40.1473007", lon: "44.3959007"}, {lat: "27.7172453", lon: "85.3239605"}, {
                lat: "-34.81273",
                lon: "-58.539833"
            }, {lat: "-12.019421", lon: "-77.107666"}, {lat: "6.171382", lon: "-75.42821"}, {
                lat: "4.598056",
                lon: "-74.075833"
            }, {lat: "-0.1291667", lon: "-78.3575"}, {lat: "-22.8099995", lon: "-43.2505569"}, {
                lat: "-33.397175",
                lon: "-70.79382"
            }, {lat: "-33.397175", lon: "-70.79382"}, {lat: "-23.425669", lon: "-46.481926"}, {
                lat: "12.1889",
                lon: "-68.9598007"
            }, {lat: "30.120106", lon: "31.40647"}, {lat: "-26.132664", lon: "28.231314"}, {
                lat: "-33.9249",
                lon: "18.4241"
            }, {lat: "-8.838333", lon: "13.234443"}, {lat: "11.8251", lon: "42.5903"}, {
                lat: "-4.0327",
                lon: "39.60325"
            }, {lat: "-20.223031", lon: "57.468383"}, {lat: "-29.85868", lon: "31.02184"}, {
                lat: "25.267569",
                lon: "51.558067"
            }, {lat: "32.0853", lon: "34.781768"}, {lat: "33.1545", lon: "44.1404"}, {
                lat: "24.7136",
                lon: "46.6753"
            }, {lat: "25.248665", lon: "55.352917"}, {lat: "29.240116", lon: "47.971252"}, {
                lat: "23.588078",
                lon: "58.29022"
            }, {lat: "33.893791", lon: "35.501777"}, {lat: "22.639444", lon: "113.81084"}, {
                lat: "23.387861",
                lon: "113.29734"
            }, {lat: "23.387861", lon: "113.29734"}, {lat: "30.236935", lon: "120.43236"}, {
                lat: "26.85",
                lon: "112.5"
            }, {lat: "34.736362", lon: "112.38541"}, {lat: "36.265884", lon: "120.38236"}, {
                lat: "41.861084",
                lon: "123.426926"
            }, {lat: "39.122627", lon: "117.3399"}, {lat: "34.441154", lon: "108.75605"}, {
                lat: "38.274376",
                lon: "114.69443"
            }, {lat: "34.52752", lon: "113.84024"}, {lat: "22.61321", lon: "108.1675"}, {
                lat: "31.3",
                lon: "120.63333"
            }, {lat: "36.85769", lon: "117.20688"}, {lat: "30.776598", lon: "114.209625"}, {
                lat: "31.49289",
                lon: "120.42438"
            }, {lat: "27.83815", lon: "113.08673"}, {lat: "31.22463", lon: "121.19656"}, {
                lat: "29.868336",
                lon: "121.54399"
            }, {lat: "31.22463", lon: "121.19656"}, {lat: "29.563010", lon: "106.551556"}, {
                lat: "39.122627",
                lon: "117.3399"
            }],
            LARGEST_CITIES: [{y: 31.22222, x: 121.45806, p: 22315474}, {
                y: -34.61315,
                x: -58.37723,
                p: 13076300
            }, {y: 19.07283, x: 72.88261, p: 12691836}, {y: 19.42847, x: -99.12766, p: 12294193}, {
                y: 39.9075,
                x: 116.39723,
                p: 11716620
            }, {y: 24.9056, x: 67.0822, p: 11624219}, {y: 41.01384, x: 28.94966, p: 11174257}, {
                y: 39.14222,
                x: 117.17667,
                p: 11090314
            }, {y: 23.11667, x: 113.25, p: 11071424}, {y: 28.65381, x: 77.22897, p: 10927986}, {
                y: 14.6042,
                x: 120.9822,
                p: 10444527
            }, {y: 55.75222, x: 37.61556, p: 10381222}, {y: 22.54554, x: 114.0683, p: 10358381}, {
                y: 23.7104,
                x: 90.40744,
                p: 10356500
            }, {y: 37.566, x: 126.9784, p: 10349312}, {y: -23.5475, x: -46.63611, p: 10021295}, {
                y: 30.58333,
                x: 114.26667,
                p: 9785388
            }, {y: 6.45407, x: 3.39467, p: 9e6}, {y: -6.21462, x: 106.84513, p: 8540121}, {
                y: 35.6895,
                x: 139.69171,
                p: 8336599
            }, {y: 40.71427, x: -74.00597, p: 8175133}, {y: 23.04889, x: 113.74472, p: 8e6}, {
                y: 25.04776,
                x: 121.53185,
                p: 7871900
            }, {y: -4.32758, x: 15.31357, p: 7785965}, {y: -12.04318, x: -77.02824, p: 7737002}, {
                y: 30.06263,
                x: 31.24967,
                p: 7734614
            }, {y: 4.60971, x: -74.08175, p: 7674366}, {y: 51.50853, x: -.12574, p: 7556900}, {
                y: 51.51279,
                x: -.09184,
                p: 7556900
            }, {y: 29.56278, x: 106.55278, p: 7457600}, {y: 30.66667, x: 104.06667, p: 7415590}, {
                y: 32.06167,
                x: 118.77778,
                p: 7165292
            }, {y: 35.69439, x: 51.42151, p: 7153309}, {y: 30.79508, x: 106.08473, p: 715e4}, {
                y: 22.28552,
                x: 114.15769,
                p: 7012738
            }, {y: 34.25833, x: 108.92861, p: 6501190}, {y: 31.54972, x: 74.34361, p: 6310888}, {
                y: 41.79222,
                x: 123.43278,
                p: 6255921
            }, {y: 30.29365, x: 120.16142, p: 6241971}, {y: -22.90278, x: -43.2075, p: 6023699}, {
                y: 45.75,
                x: 126.65,
                p: 5878939
            }, {y: 33.34058, x: 44.40088, p: 5672513}, {y: 36.18528, x: 117.12, p: 5499e3}, {
                y: 31.30408,
                x: 120.59538,
                p: 5345961
            }, {y: 23.36814, x: 116.71479, p: 5329024}, {y: 13.75398, x: 100.50144, p: 5104476}, {
                y: 12.97194,
                x: 77.59369,
                p: 5104047
            }, {y: 59.93863, x: 30.31413, p: 5028e3}, {y: -33.45694, x: -70.64827, p: 4837295}, {
                y: 22.56263,
                x: 88.36304,
                p: 4631392
            }, {y: -33.86785, x: 151.20732, p: 4627345}, {y: 16.80528, x: 96.15611, p: 4477638}, {
                y: 36.66833,
                x: 116.99722,
                p: 4335989
            }, {y: 13.08784, x: 80.27847, p: 4328063}, {y: 34.75778, x: 113.64861, p: 4253913}, {
                y: -37.814,
                x: 144.96332,
                p: 4246375
            }, {y: 24.68773, x: 46.72185, p: 4205961}, {y: 43.88, x: 125.32278, p: 4193073}, {
                y: 38.91222,
                x: 121.60222,
                p: 4087733
            }, {y: 22.3384, x: 91.83168, p: 3920222}, {y: 25.03889, x: 102.71833, p: 3855346}, {
                y: 31.21564,
                x: 29.95527,
                p: 3811516
            }, {y: 34.05223, x: -118.24368, p: 3792621}, {y: 23.02579, x: 72.58727, p: 3719710}, {
                y: 36.06605,
                x: 120.36939,
                p: 3718835
            }, {y: 35.10278, x: 129.04028, p: 3678555}, {y: 5.30966, x: -4.01266, p: 3677115}, {
                y: 12.00012,
                x: 8.51672,
                p: 3626068
            }, {y: 23.02677, x: 113.13148, p: 36e5}, {y: 17.38405, x: 78.45636, p: 3597816}, {
                y: 29.45679,
                x: 119.88872,
                p: 359e4
            }, {y: 35.44778, x: 139.6425, p: 3574443}, {y: 7.37756, x: 3.90591, p: 3565108}, {
                y: 1.28967,
                x: 103.85007,
                p: 3547809
            }, {y: 31.56887, x: 120.28857, p: 3543719}, {y: 24.47979, x: 118.08187, p: 3531347}, {
                y: 39.91987,
                x: 32.85427,
                p: 3517182
            }, {y: 34.57952, x: 105.74238, p: 35e5}, {y: 29.87819, x: 121.54945, p: 3491597}, {
                y: 10.82302,
                x: 106.62965,
                p: 3467331
            }, {y: 32.6475, x: 110.77806, p: 346e4}, {y: -33.92584, x: 18.42322, p: 3433441}, {
                y: 37.86944,
                x: 112.56028,
                p: 3426519
            }, {y: 52.52437, x: 13.41053, p: 3426354}, {y: 39.63333, x: 118.18333, p: 3372102}, {
                y: 31.86389,
                x: 117.28083,
                p: 3310268
            }, {y: 45.50884, x: -73.58781, p: 3268513}, {y: 40.4165, x: -3.70256, p: 3255944}, {
                y: 39.03385,
                x: 125.75432,
                p: 3222e3
            }, {y: 33.58831, x: -7.61138, p: 3144909}, {y: 36.79056, x: 118.06333, p: 3129228}, {
                y: 21.31992,
                x: 110.5723,
                p: 3121275
            }, {y: -29.8579, x: 31.0292, p: 3120282}, {y: 28.19874, x: 112.97087, p: 3093980}, {
                y: 34.52813,
                x: 69.17233,
                p: 3043532
            }, {y: 43.80096, x: 87.60046, p: 3029372}, {y: 10.48801, x: -66.87919, p: 3e6}, {
                y: 18.51957,
                x: 73.85535,
                p: 2935744
            }, {y: 21.19594, x: 72.83023, p: 2894504}, {y: 21.54238, x: 39.19797, p: 2867446}, {
                y: 38.04139,
                x: 114.47861,
                p: 2834942
            }, {y: 26.4478, x: 80.34627, p: 2823249}, {y: 50.45466, x: 30.5238, p: 2797553}, {
                y: -8.83682,
                x: 13.23432,
                p: 2776168
            }, {y: 14.6488, x: 121.0509, p: 2761720}, {y: 9.02497, x: 38.74689, p: 2757729}, {
                y: -1.28333,
                x: 36.81667,
                p: 2750547
            }, {y: -12.97111, x: -38.51083, p: 2711840}, {y: 26.91962, x: 75.78781, p: 2711758}, {
                y: -6.82349,
                x: 39.26951,
                p: 2698652
            }, {y: 41.85003, x: -87.65005, p: 2695598}, {y: 36.05701, x: 103.83987, p: 2628426}, {
                y: 37.45646,
                x: 126.70515,
                p: 2628e3
            }, {y: 22.92833, x: 112.03954, p: 2612800}, {y: 43.70011, x: -79.4163, p: 26e5}, {
                y: 30.53302,
                x: 47.79747,
                p: 26e5
            }, {y: 19.03681, x: 73.01582, p: 26e5}, {y: 34.69374, x: 135.50218, p: 2592413}, {
                y: 2.03711,
                x: 45.34375,
                p: 2587183
            }, {y: 35.87028, x: 128.59111, p: 2566540}, {y: 31.41667, x: 73.08333, p: 2506595}, {
                y: 38.41273,
                x: 27.13838,
                p: 2500603
            }, {y: 14.6937, x: -17.44406, p: 2476400}, {y: 26.83928, x: 80.92313, p: 2472011}, {
                y: 30.00808,
                x: 31.21093,
                p: 2443203
            }, {y: -3.71722, x: -38.54306, p: 24e5}, {y: 3.43722, x: -76.5225, p: 2392877}, {
                y: -7.24917,
                x: 112.75083,
                p: 2374658
            }, {y: -19.92083, x: -43.93778, p: 2373224}, {y: 28.68333, x: 115.88333, p: 2357839}, {
                y: 14.71331,
                x: -17.45472,
                p: 2352057
            }, {y: 41.89193, x: 12.51133, p: 2318895}, {y: 36.31559, x: 59.56796, p: 2307177}, {
                y: 40.6501,
                x: -73.94958,
                p: 2300664
            }, {y: 40.68149, x: -73.83652, p: 2272771}, {y: 21.14631, x: 79.08491, p: 2228018}, {
                y: 10.63167,
                x: -71.64056,
                p: 2225e3
            }, {y: -15.77972, x: -47.92972, p: 2207718}, {y: 18.50012, x: -69.98857, p: 2201941}, {
                y: 35.18147,
                x: 136.90641,
                p: 2191279
            }, {y: -27.46794, x: 153.02809, p: 2189878}, {y: 23.13302, x: -82.38304, p: 2163824}, {
                y: 48.85341,
                x: 2.3488,
                p: 2138551
            }, {y: 29.76328, x: -95.36327, p: 2099451}, {y: 36.33306, x: 43.1049, p: 2065597}, {
                y: -26.20227,
                x: 28.04363,
                p: 2026469
            }, {y: 22.31667, x: 114.18333, p: 2019533}, {y: 30.50316, x: 47.81507, p: 2015483}, {
                y: 43.25654,
                x: 76.92848,
                p: 2000900
            }, {y: 6.25184, x: -75.56359, p: 1999979}, {y: 41.26465, x: 69.21627, p: 1978028}, {
                y: 36.7525,
                x: 3.04197,
                p: 1977663
            }, {y: 15.55177, x: 32.53241, p: 1974647}, {y: 5.55602, x: -.1969, p: 1963264}, {
                y: -2.20584,
                x: -79.90795,
                p: 1952029
            }, {y: 39.6086, x: 109.78157, p: 1940653}, {y: 15.35472, x: 44.20667, p: 1937451}, {
                y: 33.88894,
                x: 35.49442,
                p: 1916100
            }, {y: -31.95224, x: 115.8614, p: 1896548}, {y: 43.06417, x: 141.34695, p: 1883027}, {
                y: 43.85083,
                x: 126.56028,
                p: 1881977
            }, {y: 44.43225, x: 26.10626, p: 1877155}, {y: 9.535, x: -13.68778, p: 1871242}, {
                y: 49.24966,
                x: -123.11934,
                p: 1837969
            }, {y: 22.71792, x: 75.8333, p: 1837041}, {y: 19.35738, x: -99.0671, p: 1820888}, {
                y: 19.61725,
                x: -99.06601,
                p: 1806226
            }, {y: 9.53795, x: -13.67729, p: 1767200}, {y: 10.24694, x: -67.59583, p: 1754256}, {
                y: 3.58333,
                x: 98.66667,
                p: 1750971
            }, {y: 33.6007, x: 73.0679, p: 1743101}, {y: 53.9, x: 27.56667, p: 1742124}, {
                y: 47.49801,
                x: 19.03991,
                p: 1741041
            }, {y: 36.335, x: 43.11889, p: 1739800}, {y: 53.57532, x: 10.01534, p: 1739117}, {
                y: -25.42778,
                x: -49.27306,
                p: 1718421
            }, {y: 52.22977, x: 21.01178, p: 1702139}, {y: -6.90389, x: 107.61861, p: 1699719}, {
                y: -26.26781,
                x: 27.85849,
                p: 1695047
            }, {y: 48.20849, x: 16.37208, p: 1691468}, {y: 34.01325, x: -6.83255, p: 1655753}, {
                y: 20.66682,
                x: -103.39182,
                p: 1640589
            }, {y: 41.38879, x: 2.15899, p: 1621537}, {y: -25.74486, x: 28.18783, p: 1619438}, {
                y: 36.20124,
                x: 37.16117,
                p: 1602264
            }, {y: 25.60222, x: 85.11936, p: 1599920}, {y: 23.25469, x: 77.40289, p: 1599914}, {
                y: -3.10194,
                x: -60.025,
                p: 1598210
            }, {y: 32.12278, x: 114.06556, p: 1590668}, {y: 19.04334, x: -98.20193, p: 1590256}, {
                y: 10.52641,
                x: 7.43879,
                p: 1582102
            }, {y: 11.56245, x: 104.91601, p: 1573544}, {y: 33.5102, x: 36.29128, p: 1569394}, {
                y: 32.65246,
                x: 51.67462,
                p: 1547164
            }, {y: 30.90015, x: 75.85229, p: 1545368}, {y: -17.82772, x: 31.05337, p: 1542813}, {
                y: 34.6913,
                x: 135.183,
                p: 1528478
            }, {y: 39.95233, x: -75.16379, p: 1526006}, {y: -6.2349, x: 106.9896, p: 1520119}, {
                y: 22.61626,
                x: 120.31333,
                p: 1519711
            }, {y: 31.73333, x: -106.48333, p: 1512354}, {y: 40.78343, x: -73.96625, p: 1487536}, {
                y: -25.30066,
                x: -57.63591,
                p: 1482200
            }, {y: -8.05389, x: -34.88111, p: 1478098}, {y: 36.32139, x: 127.41972, p: 1475221}, {
                y: 6.68848,
                x: -1.62443,
                p: 1468609
            }, {y: 6.13328, x: 102.2386, p: 1459994}, {y: 35.02107, x: 135.75385, p: 1459640}, {
                y: 3.1412,
                x: 101.68653,
                p: 1453975
            }, {y: 35.83266, x: 50.99155, p: 1448075}, {y: 33.44838, x: -112.07404, p: 1445632}, {
                y: 27.70169,
                x: 85.3206,
                p: 1442271
            }, {y: -2.91673, x: 104.7458, p: 1441500}, {y: 30.19556, x: 71.47528, p: 1437230}, {
                y: 21.0245,
                x: 105.84117,
                p: 1431270
            }, {y: 49.98081, x: 36.25272, p: 1430885}, {y: 27.18333, x: 78.01667, p: 1430055}, {
                y: -31.4135,
                x: -64.18105,
                p: 1428214
            }, {y: 38.08, x: 46.2919, p: 1424641}, {y: 55.0415, x: 82.9346, p: 1419007}, {
                y: 35.15472,
                x: 126.91556,
                p: 1416938
            }, {y: 40.19266, x: 29.08403, p: 1412701}, {y: 22.29941, x: 73.20812, p: 1409476}, {
                y: -1.45583,
                x: -48.50444,
                p: 1407737
            }, {y: 41.85583, x: 123.92333, p: 1400646}, {y: -.22985, x: -78.52495, p: 1399814}, {
                y: 33.60639,
                x: 130.41806,
                p: 1392289
            }, {y: -18.91368, x: 47.53613, p: 1391433}, {y: 34.68361, x: 112.45361, p: 1390581}, {
                y: 25.39242,
                x: 68.37366,
                p: 1386330
            }, {y: 40.84985, x: -73.86641, p: 1385108}, {y: 10.16202, x: -68.00765, p: 1385083}, {
                y: 32.16167,
                x: 74.18831,
                p: 1384471
            }, {y: 10.96854, x: -74.78132, p: 1380425}, {y: 28.15861, x: 113.62709, p: 138e4}, {
                y: 32.5027,
                x: -117.00371,
                p: 1376457
            }, {y: -11.66089, x: 27.47938, p: 1373770}, {y: -30.03306, x: -51.23, p: 1372741}, {
                y: -6.17806,
                x: 106.63,
                p: 1372124
            }, {y: -17.78629, x: -63.18117, p: 1364389}, {y: 36.60056, x: 114.46778, p: 1358318}, {
                y: .31628,
                x: 32.58219,
                p: 1353189
            }, {y: 56.8519, x: 60.6122, p: 1349772}, {y: 22.80979, x: 89.56439, p: 1342339}, {
                y: 4.04827,
                x: 9.70428,
                p: 1338082
            }, {y: 29.42412, x: -98.49363, p: 1327407}, {y: 29.44768, x: 75.67206, p: 1324570}, {
                y: 21.42664,
                x: 39.82563,
                p: 1323624
            }, {y: -5.14, x: 119.4221, p: 1321717}, {y: 32.71533, x: -117.15726, p: 1307402}, {
                y: 35.52056,
                x: 139.71722,
                p: 1306785
            }, {y: -6.28862, x: 106.71789, p: 1303569}, {y: 40.65222, x: 109.82222, p: 1301768}, {
                y: 24.46861,
                x: 39.61417,
                p: 13e5
            }, {y: 3.86667, x: 11.51667, p: 1299369}, {y: 12.65, x: -8, p: 1297281}, {
                y: 19.99727,
                x: 73.79096,
                p: 1289497
            }, {y: -6.9932, x: 110.4203, p: 1288084}, {y: -4.26613, x: 15.28318, p: 1284609}, {
                y: 18.62292,
                x: 73.80696,
                p: 1284606
            }, {y: 56.32867, x: 44.00205, p: 1284164}, {y: 31.95522, x: 35.94503, p: 1275857}, {
                y: 7.20417,
                x: 124.43972,
                p: 1273715
            }, {y: 44.80401, x: 20.46513, p: 1273651}, {y: -34.90328, x: -56.18816, p: 1270737}, {
                y: -15.40669,
                x: 28.28713,
                p: 1267440
            }, {y: 19.2437, x: 73.13554, p: 1262255}, {y: 19.19704, x: 72.96355, p: 1261517}, {
                y: 48.13743,
                x: 11.57549,
                p: 1260391
            }, {y: 59.33258, x: 18.0649, p: 1253309}, {y: 33.9, x: 35.48333, p: 1251739}, {
                y: 29.61031,
                x: 52.53113,
                p: 1249942
            }, {y: 37.00167, x: 35.32889, p: 1248988}, {y: 37.29111, x: 127.00889, p: 1242724}, {
                y: 45.46427,
                x: 9.18951,
                p: 1236837
            }, {y: 18.53917, x: -72.335, p: 1234742}, {y: 19.40061, x: -99.01483, p: 1232220}, {
                y: -34.92866,
                x: 138.59863,
                p: 1225235
            }, {y: 28.97155, x: 77.71934, p: 1223184}, {y: 19.23114, x: 82.54826, p: 1220946}, {
                y: 28.41252,
                x: 77.31977,
                p: 1220229
            }, {y: 34.008, x: 71.57849, p: 1218773}, {y: 7.07306, x: 125.61278, p: 1212504}, {
                y: 21.97473,
                x: 96.08359,
                p: 1208099
            }, {y: 15.64453, x: 32.47773, p: 12e5}, {y: 19.4517, x: -70.69703, p: 12e5}, {
                y: 29.37455,
                x: 113.09481,
                p: 12e5
            }, {y: 41.12361, x: 122.99, p: 1199275}, {y: 34.18045, x: 117.15707, p: 1199193}, {
                y: 28.66249,
                x: 77.43777,
                p: 1199191
            }, {y: -6.4, x: 106.81861, p: 1198129}, {y: 32.78306, x: -96.80667, p: 1197816}, {
                y: 35.90807,
                x: 139.65657,
                p: 1193350
            }, {y: 19.49016, x: -99.10978, p: 1193161}, {y: 19.21667, x: 73.08333, p: 1193e3}, {
                y: -25.96553,
                x: 32.58322,
                p: 1191613
            }, {y: 22.8694, x: -98.75886, p: 1185772}, {y: 26.06139, x: 119.30611, p: 1179720}, {
                y: 22.29161,
                x: 70.79322,
                p: 1177362
            }, {y: -32.94682, x: -60.63932, p: 1173533}, {y: 26.58333, x: 106.71667, p: 1171633}, {
                y: -16.67861,
                x: -49.25389,
                p: 1171195
            }, {y: -23.46278, x: -46.53333, p: 1169577}, {y: 50.08804, x: 14.42076, p: 1165581}, {
                y: 25.31668,
                x: 83.01041,
                p: 1164404
            }, {y: 55.67594, x: 12.56553, p: 1153615}, {y: 42.69751, x: 23.32415, p: 1152556}, {
                y: 32.87519,
                x: 13.18746,
                p: 1150989
            }, {y: 4.77742, x: 7.0134, p: 1148665}, {y: 34.39627, x: 132.45937, p: 1143841}, {
                y: 26.86879,
                x: 100.22072,
                p: 1137600
            }, {y: 25.0657, x: 55.17128, p: 1137347}, {y: 53.20007, x: 50.15, p: 1134730}, {
                y: 54.99244,
                x: 73.36859,
                p: 1129281
            }, {y: 6.33815, x: 5.62575, p: 1125058}, {y: 25.67507, x: -100.31847, p: 1122874}, {
                y: 7.16083,
                x: 124.475,
                p: 1121974
            }, {y: 40.37767, x: 49.89201, p: 1116513}, {y: 21.13052, x: -101.671, p: 1114626}, {
                y: 11.84692,
                x: 13.15712,
                p: 1112449
            }, {y: 55.78874, x: 49.12214, p: 1104738}, {y: 40.18111, x: 44.51361, p: 1093485}, {
                y: 31.63661,
                x: 74.87476,
                p: 1092450
            }, {y: 12.36566, x: -1.53388, p: 1086505}, {y: 35.88333, x: 139.63333, p: 1077730}, {
                y: 47.23135,
                x: 39.72328,
                p: 1074482
            }, {y: 25.44894, x: 81.83329, p: 1073438}, {y: 37.65639, x: 126.835, p: 1073069}, {
                y: 37.05944,
                x: 37.3825,
                p: 1065975
            }, {y: 17.68009, x: 83.20161, p: 1063178}, {y: 38.26889, x: 140.87195, p: 1063103}, {
                y: 38.25759,
                x: 140.8667,
                p: 1063103
            }, {y: 55.15402, x: 61.42915, p: 1062919}, {y: 40.09361, x: 113.29139, p: 1052678}, {
                y: 41.69411,
                x: 44.83368,
                p: 1049498
            }, {y: 31.64615, x: 120.74221, p: 1047700}, {y: 24.1469, x: 120.6839, p: 1040725}, {
                y: 10.01531,
                x: 77.482,
                p: 1034724
            }, {y: 34.33778, x: 108.70261, p: 1034081}, {y: 54.74306, x: 55.96779, p: 1033338}, {
                y: 48.45,
                x: 34.98333,
                p: 1032822
            }, {y: 37.43861, x: 127.13778, p: 1031935}, {y: -22.90556, x: -47.06083, p: 1031554}, {
                y: 23.16697,
                x: 79.95006,
                p: 1030168
            }, {y: 22.57688, x: 88.31857, p: 1027672}, {y: 32.62639, x: 116.99694, p: 1027655}, {
                y: 48.023,
                x: 37.80224,
                p: 1024700
            }, {y: 53.33306, x: -6.24889, p: 1024027}, {y: 51.05011, x: -114.08529, p: 1019942}, {
                y: 50.85045,
                x: 4.34878,
                p: 1019022
            }, {y: 19.87757, x: 75.34226, p: 1016441}, {y: 48.71939, x: 44.50183, p: 1011417}, {
                y: -22.75917,
                x: -43.45111,
                p: 1002118
            }, {y: 23.5418, x: 116.36581, p: 1001985}, {y: 46.47747, x: 30.73262, p: 1001558}, {
                y: 35.99502,
                x: 119.40259,
                p: 1e6
            }, {y: 18.53017, x: 73.85263, p: 1e6}, {y: 33.83333, x: 130.83333, p: 997536}, {
                y: 17.67152,
                x: 75.91044,
                p: 997281
            }, {y: 38.85111, x: 115.49028, p: 995652}, {y: 14.64072, x: -90.51327, p: 994938}, {
                y: 41.28861,
                x: 123.765,
                p: 987717
            }, {y: 20.72356, x: -103.38479, p: 987516}, {y: 52.48142, x: -1.89983, p: 984333}, {
                y: 58.01046,
                x: 56.25017,
                p: 982419
            }, {y: 34.08842, x: 74.80298, p: 975857}, {y: 11.11128, x: 7.7227, p: 975153}, {
                y: 12.13282,
                x: -86.2504,
                p: 973087
            }, {y: -33.91799, x: 25.57007, p: 967677}, {y: 34.03715, x: -4.9998, p: 964891}, {
                y: 50.93333,
                x: 6.95,
                p: 963395
            }, {y: 35.53722, x: 129.31667, p: 962865}, {y: 30.73629, x: 76.7884, p: 960787}, {
                y: 11.00555,
                x: 76.96612,
                p: 959823
            }, {y: 40.85631, x: 14.24641, p: 959470}, {y: -9.66583, x: -35.73528, p: 954991}, {
                y: 10.39972,
                x: -75.51444,
                p: 952024
            }, {y: 31.77359, x: 119.95401, p: 949018}, {y: 24.49258, x: 39.58572, p: 946697}, {
                y: 37.33939,
                x: -121.89496,
                p: 945942
            }, {y: 6.30054, x: -10.7969, p: 939524}, {y: 17.99702, x: -76.79358, p: 937700}, {
                y: 36.19257,
                x: 44.01062,
                p: 932800
            }, {y: 56.01839, x: 92.86717, p: 927200}, {y: 19.745, x: 96.12972, p: 925e3}, {
                y: 26.26841,
                x: 73.00594,
                p: 921476
            }, {y: 35.60472, x: 140.12333, p: 919729}, {y: -2.52972, x: -44.30278, p: 917237}, {
                y: 9.91735,
                x: 78.11962,
                p: 909908
            }, {y: 34.0531, x: -6.79846, p: 903485}, {y: 33.97444, x: 116.79167, p: 903039}, {
                y: -17.3895,
                x: -66.1568,
                p: 900414
            }, {y: 5.41613, x: -4.0159, p: 9e5}, {y: 33.30563, x: 44.18477, p: 9e5}, {
                y: 34.7986,
                x: 114.30742,
                p: 9e5
            }, {y: 42.87, x: 74.59, p: 9e5}, {y: 34.6401, x: 50.8764, p: 9e5}, {
                y: 26.1844,
                x: 91.7458,
                p: 899094
            }, {y: 5.10658, x: 7.36667, p: 897560}, {y: 33.73847, x: 113.30119, p: 889675}, {
                y: 26.22983,
                x: 78.17337,
                p: 882458
            }, {y: 47.34088, x: 123.96045, p: 882364}, {y: 3.03333, x: 101.45, p: 879867}, {
                y: -32.89084,
                x: -68.82717,
                p: 876884
            }, {y: 37.87135, x: 32.48464, p: 875530}, {y: -6.13603, x: 23.58979, p: 874761}, {
                y: 16.51928,
                x: 80.63049,
                p: 874587
            }, {y: 14.76457, x: -17.39071, p: 874062}, {y: 45.07049, x: 7.68682, p: 870456}, {
                y: 12.29791,
                x: 76.63925,
                p: 868313
            }, {y: 27.99942, x: 120.66682, p: 865672}, {y: 51.54056, x: 46.00861, p: 863725}, {
                y: 14.0818,
                x: -87.20681,
                p: 850848
            }, {y: 37.49889, x: 126.78306, p: 850731}, {y: 51.67204, x: 39.1843, p: 848752}, {
                y: 23.34777,
                x: 85.33856,
                p: 846454
            }, {y: 19.47851, x: -99.23963, p: 846185}, {y: 47.90771, x: 106.88324, p: 844818}, {
                y: 10.99081,
                x: 104.78498,
                p: 843931
            }, {y: 31.31901, x: 48.6842, p: 841145}, {y: -16.39889, x: -71.535, p: 841130}, {
                y: -.94924,
                x: 100.35427,
                p: 840352
            }, {y: 15.34776, x: 75.13378, p: 840214}, {y: 31.63416, x: -7.99994, p: 839296}, {
                y: 3.15,
                x: 101.53333,
                p: 833571
            }, {y: 39.76838, x: -86.15804, p: 829718}, {y: 30.33218, x: -81.65565, p: 821784}, {
                y: -22.78556,
                x: -43.31167,
                p: 818329
            }, {y: 9.92849, x: 8.89212, p: 816824}, {y: 39.46975, x: -.37739, p: 814208}, {
                y: 8.49664,
                x: 4.54214,
                p: 814192
            }, {y: -12.05659, x: -77.11814, p: 813264}, {y: -16.5, x: -68.15, p: 812799}, {
                y: 45.41117,
                x: -75.69812,
                p: 812129
            }, {y: 10.07389, x: -69.32278, p: 809490}, {y: 28.63528, x: -106.08889, p: 809232}, {
                y: 37.77493,
                x: -122.41942,
                p: 805235
            }, {y: 22.81667, x: 108.31667, p: 803788}, {y: 8.484, x: -13.22994, p: 802639}, {
                y: 1.4655,
                x: 103.7578,
                p: 802489
            }, {y: 31.76904, x: 35.21633, p: 801e3}, {y: -5.42544, x: 105.25803, p: 800348}, {
                y: -6.59444,
                x: 106.78917,
                p: 8e5
            }, {y: 45.81313, x: 15.97753, p: 8e5}, {y: -4.05466, x: 39.66359, p: 799668}, {
                y: 10.31672,
                x: 123.89071,
                p: 798634
            }, {y: 23.61387, x: 58.5922, p: 797e3}, {y: 47.82289, x: 35.19031, p: 796217}, {
                y: 43.29695,
                x: 5.38107,
                p: 794811
            }, {y: 32.07275, x: 36.08796, p: 792665}, {y: 39.9179, x: 32.86268, p: 792189}, {
                y: 30.26715,
                x: -97.74306,
                p: 790390
            }, {y: 39.96118, x: -82.99879, p: 787033}, {y: 36.76639, x: 3.47717, p: 786499}, {
                y: 31.32556,
                x: 75.57917,
                p: 785178
            }, {y: 8.4855, x: 76.94924, p: 784153}, {y: 34.58333, x: 135.46667, p: 782339}, {
                y: 36.09944,
                x: 114.32889,
                p: 781129
            }, {y: -26.82414, x: -65.2226, p: 781023}, {y: 11.65117, x: 78.15867, p: 778396}, {
                y: 10.8155,
                x: 78.69651,
                p: 775484
            }, {y: 34.72682, x: 36.72339, p: 775404}, {y: 40.81056, x: 111.65222, p: 774477}, {
                y: 13.51366,
                x: 2.1098,
                p: 774235
            }, {y: 22.99083, x: 120.21333, p: 771235}, {y: 30.01556, x: 120.87111, p: 77e4}, {
                y: 51.75,
                x: 19.46667,
                p: 768755
            }, {y: 26.43442, x: 50.10326, p: 768602}, {y: 36.62554, x: 101.75739, p: 767531}, {
                y: 34.3838,
                x: 47.0553,
                p: 766706
            }, {y: 25.18254, x: 75.83907, p: 763088}, {y: -5.795, x: -35.20944, p: 763043}, {
                y: 20.27241,
                x: 85.83385,
                p: 762243
            }, {y: 39.93167, x: 119.58833, p: 759718}, {y: 26.88946, x: 112.61888, p: 759602}, {
                y: 36.90812,
                x: 30.69556,
                p: 758188
            }, {y: 50.06143, x: 19.93658, p: 755050}, {y: 27.88334, x: 78.07475, p: 753207}, {
                y: 16.06778,
                x: 108.22083,
                p: 752493
            }, {y: -29.61679, x: 30.39278, p: 750845}, {y: 6.13748, x: 1.21227, p: 749700}, {
                y: -8.11599,
                x: -79.02998,
                p: 747450
            }, {y: -7.9797, x: 112.6304, p: 746716}, {y: 8.35122, x: -62.64102, p: 746535}, {
                y: 28.34702,
                x: 79.42193,
                p: 745435
            }, {y: -1.94995, x: 30.05885, p: 745261}, {y: -5.08917, x: -42.80194, p: 744512}, {
                y: 35.30889,
                x: 113.86722,
                p: 743601
            }, {y: -23.69389, x: -46.565, p: 743372}, {y: 47.35118, x: 130.30012, p: 743307}, {
                y: 56.946,
                x: 24.10589,
                p: 742572
            }, {y: 52.37403, x: 4.88969, p: 741636}, {y: 32.72541, x: -97.32085, p: 741206}, {
                y: 7.85257,
                x: 3.93125,
                p: 736072
            }, {y: 30.199, x: 67.00971, p: 733675}, {y: 35.22709, x: -80.84313, p: 731424}, {
                y: -20.44278,
                x: -54.64639,
                p: 729151
            }, {y: 37.95, x: 58.38333, p: 727700}, {y: 19.35867, x: -99.20329, p: 727034}, {
                y: 34.37002,
                x: 73.47082,
                p: 725e3
            }, {y: 25.67678, x: -100.25646, p: 724921}, {y: 41.03903, x: 28.85671, p: 724270}, {
                y: 35.56496,
                x: 45.4329,
                p: 723170
            }, {y: 7.89391, x: -72.50782, p: 721398}, {y: 28.83893, x: 78.77684, p: 721139}, {
                y: 12.10672,
                x: 15.0444,
                p: 721081
            }, {y: 39.50972, x: 116.69472, p: 720119}, {y: 32.97944, x: 114.02944, p: 72e4}, {
                y: 37.47649,
                x: 121.44081,
                p: 719332
            }, {y: 49.83826, x: 24.02324, p: 717803}, {y: 20.97537, x: -89.61696, p: 717175}, {
                y: 19.54005,
                x: -99.19538,
                p: 715767
            }, {y: 42.33143, x: -83.04575, p: 713777}, {y: 53.55014, x: -113.46871, p: 712391}, {
                y: 35.82194,
                x: 127.14889,
                p: 711424
            }, {y: 27.83333, x: 113.15, p: 709358}, {y: 3.04384, x: 101.58062, p: 708296}, {
                y: 19.30023,
                x: 73.05881,
                p: 707035
            }, {y: .53333, x: 101.45, p: 703956}, {y: 37.38283, x: -5.97317, p: 703206}, {
                y: 53.5303,
                x: 49.3461,
                p: 702879
            }, {y: -8.18028, x: -35.00139, p: 702621}, {y: 34.97695, x: 138.38306, p: 701561}, {
                y: 18.5,
                x: -70,
                p: 701269
            }, {y: 24.374, x: 88.60114, p: 700133}, {y: -1.24204, x: 116.89419, p: 7e5}, {
                y: 35.20889,
                x: 111.73861,
                p: 699514
            }, {y: -20.15, x: 28.58333, p: 699385}, {y: 45.81444, x: 15.97798, p: 698966}, {
                y: 30.42018,
                x: -9.59815,
                p: 698310
            }, {y: 43.84864, x: 18.35644, p: 696731}, {y: -34.92145, x: -57.95453, p: 694167}, {
                y: 36.81897,
                x: 10.16579,
                p: 693210
            }, {y: 40.81, x: 114.87944, p: 692602}, {y: 6.36536, x: 2.41833, p: 690584}, {
                y: 29.34162,
                x: 104.77689,
                p: 689961
            }, {y: 42.01556, x: 121.65889, p: 689050}, {y: 6.44258, x: 7.5022, p: 688862}, {
                y: 35.76727,
                x: -5.79975,
                p: 688356
            }, {y: 30.24706, x: 115.04814, p: 688090}, {y: 41.27194, x: 123.17306, p: 687890}, {
                y: 32.80589,
                x: 130.69181,
                p: 680423
            }, {y: 21.23333, x: 81.63333, p: 679995}, {y: 6.11278, x: 125.17167, p: 679588}, {
                y: 38.53575,
                x: 68.77905,
                p: 679400
            }, {y: -23.5325, x: -46.79167, p: 677856}, {y: 22.14982, x: -100.97916, p: 677704}, {
                y: -25.96222,
                x: 32.45889,
                p: 675422
            }, {y: 24.79032, x: -107.38782, p: 675e3}, {y: 41.65606, x: -.87734, p: 674317}, {
                y: 26.75479,
                x: 83.37235,
                p: 674246
            }, {y: 27.85, x: 112.9, p: 674189}, {y: 4.5841, x: 101.0829, p: 673318}, {
                y: 43.5789,
                x: -79.6583,
                p: 668549
            }, {y: 35.70506, x: 115.01409, p: 666322}, {y: 32.03028, x: 120.87472, p: 666251}, {
                y: 44.58333,
                x: 129.6,
                p: 665915
            }, {y: 37.97945, x: 23.71622, p: 664046}, {y: -23.66389, x: -46.53833, p: 662373}, {
                y: 18.08581,
                x: -15.9785,
                p: 661400
            }, {y: -4.77609, x: 11.86352, p: 659084}, {y: 21.88234, x: -102.28259, p: 658179}, {
                y: 47.90966,
                x: 33.38044,
                p: 652380
            }, {y: 16.86336, x: -99.8901, p: 652136}, {y: -7.115, x: -34.86306, p: 650883}, {
                y: 37.32361,
                x: 126.82194,
                p: 650728
            }, {y: 32.11486, x: 20.06859, p: 650629}, {y: 50.11552, x: 8.68417, p: 65e4}, {
                y: 45.04484,
                x: 38.97603,
                p: 649851
            }, {y: 25.28194, x: 110.28639, p: 649352}, {y: 31.75872, x: -106.48693, p: 649121}, {
                y: 38.13205,
                x: 13.33561,
                p: 648260
            }, {y: 6.93194, x: 79.84778, p: 648034}, {y: 35.14953, x: -90.04898, p: 646889}, {
                y: -13.96692,
                x: 33.78725,
                p: 646750
            }, {y: 35.69111, x: -.64167, p: 645984}, {y: 37.91363, x: 40.21721, p: 644763}, {
                y: 14.5243,
                x: 121.0792,
                p: 644473
            }, {y: 35.08676, x: -90.05676, p: 641608}, {y: 54.32824, x: 48.38657, p: 640680}, {
                y: 33.51667,
                x: 73.91667,
                p: 64e4
            }, {y: 34.66167, x: 133.935, p: 639652}, {y: 21.28145, x: 110.34271, p: 637790}, {
                y: 29.07694,
                x: 48.08389,
                p: 637411
            }, {y: -7.78278, x: 110.36083, p: 636660}, {y: 43.76681, x: -79.4163, p: 636e3}, {
                y: 47.00556,
                x: 28.8575,
                p: 635994
            }, {y: 51.1, x: 17.03333, p: 634893}, {y: 36.63722, x: 127.48972, p: 634596}, {
                y: 37.3925,
                x: 126.92694,
                p: 634367
            }, {y: 35.40417, x: 8.12417, p: 634332}, {y: 32.21086, x: 119.45508, p: 632552}, {
                y: 49.8844,
                x: -97.14704,
                p: 632063
            }, {y: 40.12917, x: 124.39472, p: 631973}, {y: 56.84976, x: 53.20448, p: 631038}, {
                y: -8.11278,
                x: -35.01472,
                p: 630008
            }, {y: 24.8, x: 113.58333, p: 628749}, {y: 33.3575, x: 120.1573, p: 628441}, {
                y: 19.3467,
                x: -99.16174,
                p: 628063
            }, {y: -19.93167, x: -44.05361, p: 627123}, {y: 20.58806, x: -100.38806, p: 626495}, {
                y: 21.21667,
                x: 81.43333,
                p: 625138
            }, {y: 41.18806, x: 122.04944, p: 625040}, {y: 11.58901, x: 43.14503, p: 623891}, {
                y: 25.42321,
                x: -101.0053,
                p: 621250
            }, {y: 34.31417, x: 47.065, p: 621100}, {y: 39.29038, x: -76.61219, p: 620961}, {
                y: -21.1775,
                x: -47.81028,
                p: 619746
            }, {y: 14.79781, x: 42.95452, p: 617871}, {y: 42.35843, x: -71.05977, p: 617594}, {
                y: 14.58691,
                x: 121.0614,
                p: 617301
            }, {y: 22.80278, x: 86.18545, p: 616338}, {y: 20.04583, x: 110.34167, p: 615835}, {
                y: 13.57952,
                x: 44.02091,
                p: 615222
            }, {y: -23.17944, x: -45.88694, p: 613764}, {y: 32.49069, x: 119.90812, p: 612356}, {
                y: 37.06306,
                x: 114.49417,
                p: 611739
            }, {y: 55.86515, x: -4.25763, p: 610268}, {y: 19.23496, x: 72.85976, p: 609617}, {
                y: 47.60621,
                x: -122.33207,
                p: 608660
            }, {y: 19.29707, x: -99.16787, p: 607545}, {y: 57.62987, x: 39.87368, p: 606730}, {
                y: -26.18848,
                x: 28.32078,
                p: 605344
            }, {y: 34.7, x: 137.73333, p: 605098}, {y: 9.93988, x: 76.26022, p: 604696}, {
                y: 41.10778,
                x: 121.14167,
                p: 604269
            }, {y: 20.93333, x: 77.75, p: 603837}, {y: 24.46667, x: 54.36667, p: 603492}, {
                y: 20.86481,
                x: 106.68345,
                p: 602695
            }, {y: 38.89511, x: -77.03637, p: 601723}, {y: 33.72148, x: 73.04329, p: 601600}, {
                y: 35.46806,
                x: 44.39222,
                p: 601433
            }, {y: 16.85438, x: 74.56417, p: 601214}, {y: 39.73915, x: -104.9847, p: 600158}, {
                y: 46.63611,
                x: 131.15389,
                p: 6e5
            }, {y: -7.70623, x: 114.00976, p: 6e5}, {y: 43.77223, x: -79.25666, p: 6e5}, {
                y: 53.36056,
                x: 83.76361,
                p: 599579
            }, {y: 51.9225, x: 4.47917, p: 598199}, {y: 37.87917, x: 114.65167, p: 597130}, {
                y: 32.62781,
                x: -115.45446,
                p: 597099
            }, {y: 29.1026, x: -110.97732, p: 595811}, {y: 43.0389, x: -87.90647, p: 594833}, {
                y: 37.28077,
                x: 49.58319,
                p: 594590
            }, {y: 7.15571, x: 3.34509, p: 593100}, {y: 51.45657, x: 7.01228, p: 593085}, {
                y: 38.73222,
                x: 35.48528,
                p: 592840
            }, {y: 19.70078, x: -101.18443, p: 592797}, {y: -28.00029, x: 153.43088, p: 591473}, {
                y: 40.66482,
                x: 122.22833,
                p: 591159
            }, {y: 9.05785, x: 7.49508, p: 590400}, {y: 24.51333, x: 117.65556, p: 589831}, {
                y: 48.78232,
                x: 9.17702,
                p: 589793
            }, {y: 51.51494, x: 7.466, p: 588462}, {y: 43.10562, x: 131.87353, p: 587022}, {
                y: 52.29778,
                x: 104.29639,
                p: 586695
            }, {y: -15.78499, x: 35.00854, p: 584877}, {y: 18.00747, x: -76.78319, p: 583958}, {
                y: 45.52345,
                x: -122.67621,
                p: 583776
            }, {y: 36.17497, x: -115.13722, p: 583756}, {y: 41.02252, x: 29.02369, p: 582666}, {
                y: 44.4264,
                x: 8.91519,
                p: 580223
            }, {y: 59.91273, x: 10.74609, p: 58e4}, {y: 20.46497, x: 85.87927, p: 58e4}, {
                y: 35.46756,
                x: -97.51643,
                p: 579999
            }, {y: 35.65583, x: 139.32389, p: 579399}, {y: 48.48271, x: 135.08379, p: 579e3}, {
                y: 48.43776,
                x: 135.13329,
                p: 578303
            }, {y: .39241, x: 9.45356, p: 578156}, {y: 30.28321, x: 57.07879, p: 577514}, {
                y: -6.77137,
                x: -79.84088,
                p: 577375
            }, {y: 37.55274, x: 45.07605, p: 577307}, {y: 41.00231, x: 28.8598, p: 576799}, {
                y: 32.94083,
                x: 117.36083,
                p: 576648
            }, {y: 28.02094, x: 73.30749, p: 576015}, {y: 41.01643, x: 29.12476, p: 573265}, {
                y: 51.22172,
                x: 6.77616,
                p: 573057
            }, {y: -3.31987, x: 114.59075, p: 572837}, {y: 44.3023, x: 86.03694, p: 572772}, {
                y: 7.12539,
                x: -73.1198,
                p: 571820
            }, {y: 42.33343, x: -71.04949, p: 571281}, {y: 1.55, x: 110.33333, p: 570407}, {
                y: 52.40692,
                x: 16.92993,
                p: 570352
            }, {y: 19.18095, x: -96.1429, p: 568313}, {y: 36.72016, x: -4.42034, p: 568305}, {
                y: 7.69385,
                x: -5.03031,
                p: 567481
            }, {y: 15.33805, x: 38.93184, p: 563930}, {y: 13.06269, x: 5.24322, p: 563861}, {
                y: -18.91861,
                x: -48.27722,
                p: 563536
            }, {y: 6.14543, x: 6.78845, p: 561066}, {y: 35.69306, x: 139.98333, p: 560743}, {
                y: 39.91833,
                x: 127.53639,
                p: 559056
            }, {y: -23.50167, x: -47.45806, p: 558862}, {y: 60.16952, x: 24.93545, p: 558457}, {
                y: 18,
                x: 79.58333,
                p: 557802
            }, {y: 20.02472, x: -75.82194, p: 555865}, {y: 43.16143, x: 124.37785, p: 555609}, {
                y: 31.56019,
                x: 130.55814,
                p: 555352
            }, {y: -7.55611, x: 110.83167, p: 555308}, {y: 33.58861, x: 119.01917, p: 555230}, {
                y: 21.77445,
                x: 72.1525,
                p: 554978
            }, {y: -38.00228, x: -57.55754, p: 553935}, {y: 29.4, x: 71.68333, p: 552607}, {
                y: 29.4963,
                x: 60.8629,
                p: 551980
            }, {y: 12.77944, x: 45.03667, p: 550602}, {y: 19.16023, x: 77.31497, p: 550564}, {
                y: 51.7727,
                x: 55.0988,
                p: 550204
            }, {y: 42.67272, x: 21.16688, p: 55e4}, {y: 35.22806, x: 128.68111, p: 55e4}, {
                y: 46.79927,
                x: 130.31633,
                p: 549549
            }, {y: 14.62578, x: 121.12251, p: 549543}, {y: 29.58354, x: 105.06216, p: 546854}, {
                y: 53.07516,
                x: 8.80777,
                p: 546501
            }, {y: 35.08449, x: -106.65114, p: 545852}, {y: 33.89352, x: -5.54727, p: 545705}, {
                y: 25.33737,
                x: 55.41206,
                p: 543733
            }, {y: 25.01427, x: 121.46719, p: 543342}, {y: 32.08361, x: 72.67111, p: 542603}, {
                y: 4.36122,
                x: 18.55496,
                p: 542393
            }, {y: 54.68916, x: 25.2798, p: 542366}, {y: 21.17429, x: -86.84656, p: 542043}, {
                y: 32.39722,
                x: 119.43583,
                p: 539715
            }, {y: 53.7557, x: 87.1099, p: 539616}, {y: .51528, x: 25.19099, p: 539158}, {
                y: 31.25654,
                x: 32.28411,
                p: 538378
            }, {y: 36.79526, x: 34.61792, p: 537842}, {y: 5.51667, x: 5.75, p: 536023}, {
                y: 28.88162,
                x: 120.03308,
                p: 536e3
            }, {y: 6.60086, x: 3.48818, p: 535619}, {y: 39.02111, x: 117.64694, p: 535298}, {
                y: 22.58333,
                x: 113.08333,
                p: 532419
            }, {y: 36.16589, x: -86.78444, p: 530852}, {y: 21.27028, x: 40.41583, p: 530848}, {
                y: -19.84361,
                x: 34.83889,
                p: 530604
            }, {y: 16.29974, x: 80.45729, p: 530577}, {y: 14.85, x: -15.88333, p: 529176}, {
                y: 46.81228,
                x: -71.21454,
                p: 528595
            }, {y: 34.79922, x: 48.51456, p: 528256}, {y: 38.31667, x: 116.86667, p: 527681}, {
                y: 13.68935,
                x: -89.18718,
                p: 525990
            }, {y: 19.42155, x: -98.95038, p: 525389}, {y: 25.54389, x: -103.41898, p: 524066}, {
                y: 30.32443,
                x: 78.03392,
                p: 522081
            }, {y: -15.59611, x: -56.09667, p: 521934}, {y: 19.44506, x: -99.14612, p: 521348}, {
                y: 19.58547,
                x: -99.26035,
                p: 521034
            }, {y: 3.10726, x: 101.60671, p: 520698}, {y: 22.20056, x: 113.54611, p: 520400}, {
                y: 19.30157,
                x: 72.85107,
                p: 520301
            }, {y: 41.0435, x: 28.87619, p: 520235}, {y: 54.6269, x: 39.6916, p: 520173}, {
                y: 32.22174,
                x: -110.92648,
                p: 520116
            }, {y: 43.25011, x: -79.84963, p: 519949}, {y: 57.15222, x: 65.52722, p: 519119}, {
                y: 23.49957,
                x: 87.32155,
                p: 518872
            }, {y: -34.72418, x: -58.25265, p: 518788}, {y: 26.44976, x: 74.64116, p: 517911}, {
                y: 38.71667,
                x: -9.13333,
                p: 517802
            }, {y: 29.04638, x: 111.6783, p: 517780}, {y: 35.23972, x: 113.23306, p: 517540}, {
                y: 19.21667,
                x: 73.15,
                p: 516584
            }, {y: 16.69563, x: 74.23167, p: 516142}, {y: 52.60311, x: 39.57076, p: 515655}, {
                y: 26.71004,
                x: 88.42851,
                p: 515574
            }, {y: 52.37052, x: 9.73322, p: 515140}, {y: 39.77667, x: 30.52056, p: 514869}, {
                y: 34.79049,
                x: 48.57011,
                p: 514102
            }, {y: -24.7859, x: -65.41166, p: 512686}, {y: 53.20066, x: 45.00464, p: 512602}, {
                y: -25.99636,
                x: 28.2268,
                p: 511655
            }, {y: 20.76957, x: 72.96134, p: 510879}, {y: 46.96591, x: 31.9974, p: 510840}, {
                y: -16.82333,
                x: -49.24389,
                p: 510770
            }, {y: -33.61169, x: -70.57577, p: 510417}, {y: 14.55027, x: 121.03269, p: 510383}, {
                y: 55.72545,
                x: 52.41122,
                p: 509870
            }, {y: 31.33728, x: 118.37351, p: 507524}, {y: 19.28786, x: -99.65324, p: 505881}, {
                y: 37.90222,
                x: 139.02361,
                p: 505272
            }, {y: 28.65156, x: 77.18859, p: 505241}, {y: 51.33962, x: 12.37129, p: 504971}, {
                y: 59.99675,
                x: 30.3899,
                p: 504641
            }, {y: 51.43247, x: 6.76516, p: 504358}, {y: 23.68333, x: 86.98333, p: 504271}, {
                y: 57.70716,
                x: 11.96679,
                p: 504084
            }, {y: 34.09174, x: 49.68916, p: 503647}, {y: 46.34968, x: 48.04076, p: 502533}, {
                y: 22.27694,
                x: 113.56778,
                p: 501199
            }, {y: 36.03222, x: 129.365, p: 5e5}]
        }
    }, 727: function (e, t, r) {
        "use strict";
        r.r(t);
        var i = r(0), o = r.n(i), a = r(106), n = r.n(a);
        r(112), r(148);

        function s() {
            return {
                children: [{
                    children: [{
                        attributes: {
                            Vertex: {
                                elements: [1795560, 5021330, 3487240, 1816010, 4970660, 3548290, 1856570, 5015500, 3463770, 1721090, 4758770, 3869330, 1856570, 5015500, 3463770, 1816010, 4970660, 3548290, 1733860, 5001960, 3545430, 1721090, 4758770, 3869330, 1816010, 4970660, 3548290, 1733860, 5001960, 3545430, 1704930, 4754e3, 3882240, 1721090, 4758770, 3869330, 1733860, 5001960, 3545430, 1686920, 4731220, 3917540, 1704930, 4754e3, 3882240, 1702590, 4989e3, 3578470, 1698410, 4964890, 3613570, 1733860, 5001960, 3545430, 1619530, 4768080, 3901360, 1733860, 5001960, 3545430, 1698410, 4964890, 3613570, 1657940, 4887600, 3734870, 1619530, 4768080, 3901360, 1698410, 4964890, 3613570, 1595360, 4779640, 3897200, 1619530, 4768080, 3901360, 1657940, 4887600, 3734870, 1595360, 4779640, 3897200, 1657940, 4887600, 3734870, 1621190, 4830840, 3823200, 1646760, 4954140, 3651780, 1657940, 4887600, 3734870, 1698410, 4964890, 3613570, 1646760, 4954140, 3651780, 1646500, 4920520, 3696760, 1657940, 4887600, 3734870, 1402960, 4914580, 3802860, 1402310, 4873970, 3854660, 1459350, 4852010, 3861150, 1314390, 4898530, 3854520, 1402310, 4873970, 3854660, 1402960, 4914580, 3802860, 1314390, 4898530, 3854520, 1402960, 4914580, 3802860, 1356030, 4914970, 3819240, 1304110, 4921240, 3829170, 1314390, 4898530, 3854520, 1356030, 4914970, 3819240, 1503380, 4892880, 3792530, 1560690, 4858950, 3812810, 1599130, 4877060, 3773820, 1503380, 4892880, 3792530, 1521020, 4864560, 3821610, 1560690, 4858950, 3812810, 1459350, 4852010, 3861150, 1521020, 4864560, 3821610, 1503380, 4892880, 3792530, 1402960, 4914580, 3802860, 1459350, 4852010, 3861150, 1503380, 4892880, 3792530, 1599130, 4877060, 3773820, 1621190, 4830840, 3823200, 1657940, 4887600, 3734870, 1599130, 4877060, 3773820, 1594570, 4862650, 3794150, 1621190, 4830840, 3823200, 1560690, 4858950, 3812810, 1594570, 4862650, 3794150, 1599130, 4877060, 3773820, 1603790, 4751310, 3928050, 1643450, 4721150, 3947840, 1619530, 4768080, 3901360, 1619530, 4768080, 3901360, 1643450, 4721150, 3947840, 1733860, 5001960, 3545430, 1733860, 5001960, 3545430, 1643450, 4721150, 3947840, 1686920, 4731220, 3917540, 1985390, 5054920, 3333430, 1898720, 4731710, 3819440, 1920850, 4713960, 3830230, 1831030, 4735220, 3847840, 1898720, 4731710, 3819440, 1985390, 5054920, 3333430, 1954670, 5072690, 3324640, 1831030, 4735220, 3847840, 1985390, 5054920, 3333430, 1807760, 4758040, 3830770, 1831030, 4735220, 3847840, 1954670, 5072690, 3324640, 1906530, 5035520, 3407500, 1807760, 4758040, 3830770, 1954670, 5072690, 3324640, 1770150, 4739230, 3871160, 1807760, 4758040, 3830770, 1906530, 5035520, 3407500, 1856570, 5015500, 3463770, 1770150, 4739230, 3871160, 1906530, 5035520, 3407500, 1721090, 4758770, 3869330, 1770150, 4739230, 3871160, 1856570, 5015500, 3463770, 1985390, 5054920, 3333430, 1920850, 4713960, 3830230, 2055500, 5035020, 3321120, 1920850, 4713960, 3830230, 2071240, 5046050, 3294660, 2055500, 5035020, 3321120, 1920850, 4713960, 3830230, 1977210, 4675200, 3848880, 2071240, 5046050, 3294660, 2071240, 5046050, 3294660, 1977210, 4675200, 3848880, 2136600, 5018620, 3294820, 1977210, 4675200, 3848880, 2022400, 4655340, 3849470, 2136600, 5018620, 3294820, 2136600, 5018620, 3294820, 2022400, 4655340, 3849470, 2198280, 5027230, 3241050, 2022400, 4655340, 3849470, 2203590, 5034810, 3225740, 2202470, 5035230, 3225850, 2022400, 4655340, 3849470, 2202470, 5035230, 3225850, 2198280, 5027230, 3241050, 2202470, 5035230, 3225850, 2203590, 5034810, 3225740, 2220450, 5069500, 3159610, 2211290, 5031910, 3225e3, 2099270, 4625450, 3844390, 2315310, 4991460, 3214910, 2315310, 4991460, 3214910, 2344480, 5038520, 3119570, 2220450, 5069500, 3159610, 2315310, 4991460, 3214910, 2220450, 5069500, 3159610, 2211290, 5031910, 3225e3, 2076740, 4609250, 3875740, 2099270, 4625450, 3844390, 2211290, 5031910, 3225e3, 2076740, 4609250, 3875740, 2211290, 5031910, 3225e3, 2209780, 5032480, 3225140, 2220450, 5069500, 3159610, 2209780, 5032480, 3225140, 2211290, 5031910, 3225e3, 2046010, 4642740, 3852210, 2076740, 4609250, 3875740, 2209780, 5032480, 3225140, 2046010, 4642740, 3852210, 2209780, 5032480, 3225140, 2206090, 5033870, 3225500, 2220450, 5069500, 3159610, 2206090, 5033870, 3225500, 2209780, 5032480, 3225140, 2022400, 4655340, 3849470, 2046010, 4642740, 3852210, 2206090, 5033870, 3225500, 2022400, 4655340, 3849470, 2206090, 5033870, 3225500, 2203590, 5034810, 3225740, 2203590, 5034810, 3225740, 2206090, 5033870, 3225500, 2220450, 5069500, 3159610, 2327830, 4986420, 3213700, 2211450, 4646110, 3756150, 2381290, 4964510, 3208480, 2381290, 4964510, 3208480, 2403480, 5005330, 3128040, 2344480, 5038520, 3119570, 2381290, 4964510, 3208480, 2344480, 5038520, 3119570, 2327830, 4986420, 3213700, 2172620, 4605800, 3827300, 2211450, 4646110, 3756150, 2327830, 4986420, 3213700, 2172620, 4605800, 3827300, 2327830, 4986420, 3213700, 2324890, 4987610, 3213980, 2344480, 5038520, 3119570, 2324890, 4987610, 3213980, 2327830, 4986420, 3213700, 2099270, 4625450, 3844390, 2172620, 4605800, 3827300, 2324890, 4987610, 3213980, 2099270, 4625450, 3844390, 2324890, 4987610, 3213980, 2315310, 4991460, 3214910, 2315310, 4991460, 3214910, 2324890, 4987610, 3213980, 2344480, 5038520, 3119570, 2333950, 4619130, 3715360, 2364070, 4636690, 3674490, 2461480, 4930400, 3200600, 2333950, 4619130, 3715360, 2461480, 4930400, 3200600, 2458540, 4931680, 3200890, 2475370, 4975760, 3119200, 2458540, 4931680, 3200890, 2461480, 4930400, 3200600, 2265780, 4642020, 3728910, 2333950, 4619130, 3715360, 2458540, 4931680, 3200890, 2265780, 4642020, 3728910, 2458540, 4931680, 3200890, 2449320, 4935670, 3201800, 2449320, 4935670, 3201800, 2458540, 4931680, 3200890, 2475370, 4975760, 3119200, 2403690, 4955130, 3206290, 2265780, 4642020, 3728910, 2449320, 4935670, 3201800, 2449320, 4935670, 3201800, 2475370, 4975760, 3119200, 2426360, 5007560, 3106880, 2449320, 4935670, 3201800, 2426360, 5007560, 3106880, 2403690, 4955130, 3206290, 2211450, 4646110, 3756150, 2265780, 4642020, 3728910, 2403690, 4955130, 3206290, 2211450, 4646110, 3756150, 2403690, 4955130, 3206290, 2396140, 4958310, 3207020, 2396140, 4958310, 3207020, 2403690, 4955130, 3206290, 2426360, 5007560, 3106880, 2211450, 4646110, 3756150, 2396140, 4958310, 3207020, 2381290, 4964510, 3208480, 2396140, 4958310, 3207020, 2426360, 5007560, 3106880, 2403480, 5005330, 3128040, 2396140, 4958310, 3207020, 2403480, 5005330, 3128040, 2381290, 4964510, 3208480, 2583800, 4875410, 3188490, 2594480, 4834880, 3240750, 2664720, 4837020, 3180400, 2664720, 4837020, 3180400, 2695360, 4837470, 3153960, 2565620, 4939010, 3104740, 2664720, 4837020, 3180400, 2565620, 4939010, 3104740, 2583800, 4875410, 3188490, 2428870, 4612750, 3662430, 2594480, 4834880, 3240750, 2583800, 4875410, 3188490, 2428870, 4612750, 3662430, 2583800, 4875410, 3188490, 2546730, 4892450, 3192180, 2565620, 4939010, 3104740, 2546730, 4892450, 3192180, 2583800, 4875410, 3188490, 2364070, 4636690, 3674490, 2428870, 4612750, 3662430, 2546730, 4892450, 3192180, 2364070, 4636690, 3674490, 2546730, 4892450, 3192180, 2536690, 4897010, 3193180, 2536690, 4897010, 3193180, 2546730, 4892450, 3192180, 2565620, 4939010, 3104740, 2461480, 4930400, 3200600, 2364070, 4636690, 3674490, 2536690, 4897010, 3193180, 2536690, 4897010, 3193180, 2565620, 4939010, 3104740, 2475370, 4975760, 3119200, 2536690, 4897010, 3193180, 2475370, 4975760, 3119200, 2461480, 4930400, 3200600, 2583250, 4653360, 3503e3, 2569820, 4598750, 3583520, 2614070, 4625710, 3516630, 2498830, 4547380, 3696710, 2569820, 4598750, 3583520, 2583250, 4653360, 3503e3, 2583930, 4798750, 3301890, 2498830, 4547380, 3696710, 2583250, 4653360, 3503e3, 2428870, 4612750, 3662430, 2498830, 4547380, 3696710, 2583930, 4798750, 3301890, 2428870, 4612750, 3662430, 2583930, 4798750, 3301890, 2594480, 4834880, 3240750, 2583930, 4798750, 3301890, 2583250, 4653360, 3503e3, 2642400, 4755640, 3317830, 2583250, 4653360, 3503e3, 2630800, 4719570, 3377610, 2642400, 4755640, 3317830, 2583250, 4653360, 3503e3, 2634290, 4662940, 3452220, 2630800, 4719570, 3377610, 1914200, 5070560, 3351150, 1906530, 5035520, 3407500, 1954670, 5072690, 3324640, 5951090, 1353590, -1846620, 6059360, 1369820, -1440270, 6054800, 1342330, -1484380, 6060950, 1434190, -1369680, 6059360, 1369820, -1440270, 5951090, 1353590, -1846620, 5934450, 1420620, -1849790, 6060950, 1434190, -1369680, 5951090, 1353590, -1846620, 6062980, 1470560, -1321580, 6060950, 1434190, -1369680, 5934450, 1420620, -1849790, 5905e3, 1478690, -1897590, 6062980, 1470560, -1321580, 5934450, 1420620, -1849790, 5905e3, 1478690, -1897590, 6076370, 1485610, -1241340, 6062980, 1470560, -1321580, 6092010, 1658180, -901688, 6076370, 1485610, -1241340, 5905e3, 1478690, -1897590, 6092010, 1658180, -901688, 5905e3, 1478690, -1897590, 6072880, 1726920, -901688, 6088980, 1783600, -648781, 6091550, 1737200, -743016, 6084330, 1763340, -740567, 6091550, 1737200, -743016, 6092010, 1658180, -901688, 6072880, 1726920, -901688, 6091550, 1737200, -743016, 6072880, 1726920, -901688, 6084330, 1763340, -740567, 6096420, 1641870, -901688, 6089360, 1482900, -1179800, 6076370, 1485610, -1241340, 6096420, 1641870, -901688, 6076370, 1485610, -1241340, 6092010, 1658180, -901688, 6088980, 1783600, -648781, 6093300, 1730800, -743616, 6091550, 1737200, -743016, 6093300, 1730800, -743616, 6096420, 1641870, -901688, 6092010, 1658180, -901688, 6093300, 1730800, -743616, 6092010, 1658180, -901688, 6091550, 1737200, -743016, 6103610, 1614940, -901688, 6104070, 1452760, -1140920, 6089360, 1482900, -1179800, 6103610, 1614940, -901688, 6089360, 1482900, -1179800, 6096420, 1641870, -901688, 6088980, 1783600, -648781, 6096220, 1720060, -744621, 6093300, 1730800, -743616, 6096220, 1720060, -744621, 6103610, 1614940, -901688, 6096420, 1641870, -901688, 6096220, 1720060, -744621, 6096420, 1641870, -901688, 6093300, 1730800, -743616, 5959510, 1290180, -1864650, 6009610, 1253120, -1724780, 5964040, 1238810, -1884760, 5959510, 1290180, -1864650, 6028150, 1294920, -1627090, 6009610, 1253120, -1724780, 5959510, 1290180, -1864650, 6038720, 1302930, -1581150, 6028150, 1294920, -1627090, 6054800, 1342330, -1484380, 6038720, 1302930, -1581150, 5959510, 1290180, -1864650, 5951090, 1353590, -1846620, 6054800, 1342330, -1484380, 5959510, 1290180, -1864650, 5637240, 2342230, -1842090, 5688270, 2285260, -1755270, 5652650, 2212650, -1951080, 5866270, 2334320, -901688, 5652650, 2212650, -1951080, 5688270, 2285260, -1755270, 5866270, 2334320, -901688, 5688270, 2285260, -1755270, 5864410, 2338980, -901688, 5864410, 2338980, -901688, 5877390, 2342240, -804052, 5866270, 2334320, -901688, 5688270, 2285260, -1755270, 5864130, 2339670, -901688, 5864410, 2338980, -901688, 5868080, 2340710, -873026, 5877390, 2342240, -804052, 5864410, 2338980, -901688, 5868080, 2340710, -873026, 5864410, 2338980, -901688, 5864130, 2339670, -901688, 5863720, 2340700, -901688, 5864130, 2339670, -901688, 5688270, 2285260, -1755270, 5863720, 2340700, -901688, 5688270, 2285260, -1755270, 5850960, 2340430, -981188, 5863720, 2340700, -901688, 5868080, 2340710, -873026, 5864130, 2339670, -901688, 5688270, 2285260, -1755270, 5837850, 2343870, -1048330, 5850960, 2340430, -981188, 5768130, 2322740, -1414450, 5837850, 2343870, -1048330, 5688270, 2285260, -1755270, 5969110, 2057150, -901688, 5745610, 1973460, -1936170, 5652650, 2212650, -1951080, 5969110, 2057150, -901688, 5652650, 2212650, -1951080, 5967420, 2062050, -901688, 5967420, 2062050, -901688, 5971910, 2058250, -880493, 5969110, 2057150, -901688, 5652650, 2212650, -1951080, 5960180, 2082880, -901688, 5967420, 2062050, -901688, 5970080, 2075100, -853097, 5971910, 2058250, -880493, 5967420, 2062050, -901688, 5970080, 2075100, -853097, 5967420, 2062050, -901688, 5960180, 2082880, -901688, 5652650, 2212650, -1951080, 5947660, 2118360, -901688, 5960180, 2082880, -901688, 5968820, 2104e3, -789192, 5970080, 2075100, -853097, 5960180, 2082880, -901688, 5968820, 2104e3, -789192, 5960180, 2082880, -901688, 5947660, 2118360, -901688, 5652650, 2212650, -1951080, 5926460, 2176960, -901688, 5947660, 2118360, -901688, 5946200, 2168670, -784905, 5968820, 2104e3, -789192, 5947660, 2118360, -901688, 5946200, 2168670, -784905, 5947660, 2118360, -901688, 5926460, 2176960, -901688, 5652650, 2212650, -1951080, 5923920, 2183880, -901688, 5926460, 2176960, -901688, 5946360, 2175070, -765887, 5946200, 2168670, -784905, 5926460, 2176960, -901688, 5946360, 2175070, -765887, 5926460, 2176960, -901688, 5923920, 2183880, -901688, 5652650, 2212650, -1951080, 5910480, 2219990, -901688, 5923920, 2183880, -901688, 5925560, 2217210, -805011, 5946360, 2175070, -765887, 5923920, 2183880, -901688, 5925560, 2217210, -805011, 5923920, 2183880, -901688, 5910480, 2219990, -901688, 5866270, 2334320, -901688, 5910480, 2219990, -901688, 5652650, 2212650, -1951080, 5877390, 2342240, -804052, 5925560, 2217210, -805011, 5910480, 2219990, -901688, 5877390, 2342240, -804052, 5910480, 2219990, -901688, 5866270, 2334320, -901688, 5784240, 1908850, -1885620, 5999950, 1965370, -901688, 6022e3, 1896730, -901688, 6002920, 1966020, -880431, 6024010, 1896240, -889287, 6022e3, 1896730, -901688, 6002920, 1966020, -880431, 6022e3, 1896730, -901688, 5999950, 1965370, -901688, 5988880, 1998870, -901688, 5999950, 1965370, -901688, 5784240, 1908850, -1885620, 5993530, 2001240, -865022, 6002920, 1966020, -880431, 5999950, 1965370, -901688, 5993530, 2001240, -865022, 5999950, 1965370, -901688, 5988880, 1998870, -901688, 5988880, 1998870, -901688, 5784240, 1908850, -1885620, 5745610, 1973460, -1936170, 5988880, 1998870, -901688, 5745610, 1973460, -1936170, 5988050, 2001330, -901688, 5988050, 2001330, -901688, 5993530, 2001240, -865022, 5988880, 1998870, -901688, 5969110, 2057150, -901688, 5988050, 2001330, -901688, 5745610, 1973460, -1936170, 5971910, 2058250, -880493, 5993530, 2001240, -865022, 5988050, 2001330, -901688, 5971910, 2058250, -880493, 5988050, 2001330, -901688, 5969110, 2057150, -901688, 6072050, 1729840, -901688, 5903330, 1494840, -1890170, 5784240, 1908850, -1885620, 6072050, 1729840, -901688, 5784240, 1908850, -1885620, 6046820, 1816080, -901688, 6075330, 1795370, -737563, 6088980, 1783600, -648781, 6084030, 1764430, -740466, 6084030, 1764430, -740466, 6072050, 1729840, -901688, 6046820, 1816080, -901688, 6084030, 1764430, -740466, 6046820, 1816080, -901688, 6075330, 1795370, -737563, 5784240, 1908850, -1885620, 6043540, 1826930, -901688, 6046820, 1816080, -901688, 6072640, 1807240, -730697, 6088980, 1783600, -648781, 6075330, 1795370, -737563, 6072640, 1807240, -730697, 6075330, 1795370, -737563, 6071750, 1807920, -736384, 6071750, 1807920, -736384, 6075330, 1795370, -737563, 6046820, 1816080, -901688, 6071750, 1807920, -736384, 6046820, 1816080, -901688, 6043540, 1826930, -901688, 5784240, 1908850, -1885620, 6037970, 1845270, -901688, 6043540, 1826930, -901688, 6071260, 1809610, -736226, 6072640, 1807240, -730697, 6071750, 1807920, -736384, 6043540, 1826930, -901688, 6037970, 1845270, -901688, 6055860, 1835320, -796530, 6043540, 1826930, -901688, 6055860, 1835320, -796530, 6071260, 1809610, -736226, 6043540, 1826930, -901688, 6071260, 1809610, -736226, 6071750, 1807920, -736384, 5784240, 1908850, -1885620, 6032380, 1863460, -901688, 6037970, 1845270, -901688, 6044060, 1858240, -831998, 6055860, 1835320, -796530, 6037970, 1845270, -901688, 6044060, 1858240, -831998, 6037970, 1845270, -901688, 6032380, 1863460, -901688, 5784240, 1908850, -1885620, 6022e3, 1896730, -901688, 6032380, 1863460, -901688, 6024010, 1896240, -889287, 6044060, 1858240, -831998, 6032380, 1863460, -901688, 6024010, 1896240, -889287, 6032380, 1863460, -901688, 6022e3, 1896730, -901688, 6176290, 1395090, -764134, 6196150, 1353520, -673265, 6196120, 1342740, -694633, 6187760, 1398470, -658483, 6196150, 1353520, -673265, 6176290, 1395090, -764134, 6187760, 1398470, -658483, 6176290, 1395090, -764134, 6174340, 1397940, -774556, 6187760, 1398470, -658483, 6174340, 1397940, -774556, 6171890, 1409270, -773510, 6162140, 1415050, -837572, 6171890, 1409270, -773510, 6174340, 1397940, -774556, 6180400, 1429690, -660541, 6187760, 1398470, -658483, 6171890, 1409270, -773510, 6180400, 1429690, -660541, 6171890, 1409270, -773510, 6169430, 1420560, -772466, 6169430, 1420560, -772466, 6171890, 1409270, -773510, 6162140, 1415050, -837572, 6139940, 1444230, -943356, 6146700, 1442280, -901688, 6148920, 1432800, -901688, 6166100, 1435740, -771063, 6180400, 1429690, -660541, 6169430, 1420560, -772466, 6148920, 1432800, -901688, 6146700, 1442280, -901688, 6166100, 1435740, -771063, 6148920, 1432800, -901688, 6166100, 1435740, -771063, 6169430, 1420560, -772466, 6148920, 1432800, -901688, 6169430, 1420560, -772466, 6162140, 1415050, -837572, 6145420, 1447740, -901688, 6146700, 1442280, -901688, 6139940, 1444230, -943356, 6172870, 1467810, -647325, 6180400, 1429690, -660541, 6166100, 1435740, -771063, 6172870, 1467810, -647325, 6166100, 1435740, -771063, 6161020, 1458500, -768956, 6161020, 1458500, -768956, 6166100, 1435740, -771063, 6146700, 1442280, -901688, 6161020, 1458500, -768956, 6146700, 1442280, -901688, 6145420, 1447740, -901688, 6145420, 1447740, -901688, 6139940, 1444230, -943356, 6104070, 1452760, -1140920, 6145420, 1447740, -901688, 6104070, 1452760, -1140920, 6142230, 1461200, -901688, 6159560, 1464970, -768358, 6172870, 1467810, -647325, 6161020, 1458500, -768956, 6161020, 1458500, -768956, 6145420, 1447740, -901688, 6142230, 1461200, -901688, 6161020, 1458500, -768956, 6142230, 1461200, -901688, 6159560, 1464970, -768358, 6103610, 1614940, -901688, 6142230, 1461200, -901688, 6104070, 1452760, -1140920, 6088980, 1783600, -648781, 6172870, 1467810, -647325, 6159560, 1464970, -768358, 6088980, 1783600, -648781, 6159560, 1464970, -768358, 6096220, 1720060, -744621, 6096220, 1720060, -744621, 6159560, 1464970, -768358, 6142230, 1461200, -901688, 6096220, 1720060, -744621, 6142230, 1461200, -901688, 6103610, 1614940, -901688, 6122180, 1427040, -1074850, 6141090, 1409780, -986693, 6138880, 1403220, -1009390, 6139940, 1444230, -943356, 6141090, 1409780, -986693, 6122180, 1427040, -1074850, 6104070, 1452760, -1140920, 6139940, 1444230, -943356, 6122180, 1427040, -1074850, 5679650, 2530650, -1415810, 5770520, 2430130, -1210920, 5789260, 2386490, -1208260, 5679650, 2530650, -1415810, 5746790, 2493630, -1194660, 5770520, 2430130, -1210920, 5679650, 2530650, -1415810, 5691100, 2525620, -1378560, 5746790, 2493630, -1194660, 5691100, 2525620, -1378560, 5710220, 2530920, -1287340, 5746790, 2493630, -1194660, 5692620, 2544040, -1338100, 5710220, 2530920, -1287340, 5691100, 2525620, -1378560, 5817700, 2375200, -1088790, 5837850, 2343870, -1048330, 5768130, 2322740, -1414450, 5817700, 2375200, -1088790, 5768130, 2322740, -1414450, 5797720, 2360730, -1218210, 5679650, 2530650, -1415810, 5797720, 2360730, -1218210, 5768130, 2322740, -1414450, 5679650, 2530650, -1415810, 5789260, 2386490, -1208260, 5797720, 2360730, -1218210, 5725670, 2538720, -1201060, 5746790, 2493630, -1194660, 5710220, 2530920, -1287340, 5714940, 2546600, -1234760, 5725670, 2538720, -1201060, 5710220, 2530920, -1287340, 6193300, 1429320, -528066, 6205490, 1389460, -490250, 6200320, 1389530, -551222, 6200320, 1389530, -551222, 6205490, 1389460, -490250, 6201780, 1371270, -579539, 6205490, 1389460, -490250, 6211300, 1356390, -508793, 6201780, 1371270, -579539, 6201780, 1371270, -579539, 6211300, 1356390, -508793, 6198050, 1366890, -627527, 6198050, 1366890, -627527, 6211300, 1356390, -508793, 6202910, 1339110, -639150, 6211300, 1356390, -508793, 6216770, 1311780, -556369, 6202910, 1339110, -639150, 5926800, 2227950, -765473, 5946360, 2175070, -765887, 5925560, 2217210, -805011, 5858690, 2353270, -901688, 5863720, 2340700, -901688, 5850960, 2340430, -981188, 5858690, 2353270, -901688, 5850960, 2340430, -981188, 5854180, 2359200, -915269, 5858690, 2353270, -901688, 5868080, 2340710, -873026, 5863720, 2340700, -901688, 6072880, 1726920, -901688, 5905e3, 1478690, -1897590, 5903330, 1494840, -1890170, 6072880, 1726920, -901688, 5903330, 1494840, -1890170, 6072050, 1729840, -901688, 6088980, 1783600, -648781, 6084330, 1763340, -740567, 6084030, 1764430, -740466, 6084330, 1763340, -740567, 6072880, 1726920, -901688, 6072050, 1729840, -901688, 6084330, 1763340, -740567, 6072050, 1729840, -901688, 6084030, 1764430, -740466, 5591400, 2398210, -1908120, 5637240, 2342230, -1842090, 5652650, 2212650, -1951080, 6009610, 1253120, -1724780, 5985980, 1233110, -1818210, 5964040, 1238810, -1884760, 4572060, 1719890, 4087330, 4520660, 1692790, 4154800, 4521650, 1690140, 4154800, 4481050, 1672120, 4205430, 4430220, 1637370, 4271980, 4521650, 1690140, 4154800, 4481050, 1672120, 4205430, 4521650, 1690140, 4154800, 4520660, 1692790, 4154800, 4572060, 1719890, 4087330, 4518350, 1698960, 4154800, 4520660, 1692790, 4154800, 4506320, 1694280, 4169640, 4481050, 1672120, 4205430, 4520660, 1692790, 4154800, 4506320, 1694280, 4169640, 4520660, 1692790, 4154800, 4518350, 1698960, 4154800, 4517840, 1700320, 4154800, 4518350, 1698960, 4154800, 4572060, 1719890, 4087330, 4517840, 1700320, 4154800, 4572060, 1719890, 4087330, 4548430, 1716440, 4114870, 4517840, 1700320, 4154800, 4506320, 1694280, 4169640, 4518350, 1698960, 4154800, 4509390, 1722600, 4154800, 4517840, 1700320, 4154800, 4548430, 1716440, 4114870, 4509390, 1722600, 4154800, 4548430, 1716440, 4114870, 4510490, 1733220, 4149220, 4509390, 1722600, 4154800, 4506320, 1694280, 4169640, 4517840, 1700320, 4154800, 4510490, 1733220, 4149220, 4548430, 1716440, 4114870, 4528860, 1738460, 4127110, 4535570, 1652440, 4154800, 4618620, 1679210, 4051990, 4618270, 1694620, 4046e3, 4535570, 1652440, 4154800, 4618270, 1694620, 4046e3, 4532750, 1660160, 4154800, 4532750, 1660160, 4154800, 4417390, 1613970, 4293970, 4535570, 1652440, 4154800, 4529900, 1667910, 4154800, 4532750, 1660160, 4154800, 4618270, 1694620, 4046e3, 4430220, 1637370, 4271980, 4417390, 1613970, 4293970, 4532750, 1660160, 4154800, 4430220, 1637370, 4271980, 4532750, 1660160, 4154800, 4529900, 1667910, 4154800, 4529900, 1667910, 4154800, 4618270, 1694620, 4046e3, 4572060, 1719890, 4087330, 4529900, 1667910, 4154800, 4572060, 1719890, 4087330, 4521650, 1690140, 4154800, 4521650, 1690140, 4154800, 4430220, 1637370, 4271980, 4529900, 1667910, 4154800, 4551280, 1608660, 4154800, 4597810, 1619700, 4099280, 4604510, 1672260, 4070750, 4551280, 1608660, 4154800, 4604510, 1672260, 4070750, 4543860, 1629510, 4154800, 4543860, 1629510, 4154800, 4493170, 1594650, 4222440, 4551280, 1608660, 4154800, 4604510, 1672260, 4070750, 4539530, 1641530, 4154800, 4543860, 1629510, 4154800, 4419630, 1585770, 4302110, 4493170, 1594650, 4222440, 4543860, 1629510, 4154800, 4419630, 1585770, 4302110, 4543860, 1629510, 4154800, 4539530, 1641530, 4154800, 4604510, 1672260, 4070750, 4538990, 1643010, 4154800, 4539530, 1641530, 4154800, 4431170, 1595460, 4286720, 4419630, 1585770, 4302110, 4539530, 1641530, 4154800, 4431170, 1595460, 4286720, 4539530, 1641530, 4154800, 4538990, 1643010, 4154800, 4536060, 1651100, 4154800, 4538990, 1643010, 4154800, 4604510, 1672260, 4070750, 4417390, 1613970, 4293970, 4431170, 1595460, 4286720, 4538990, 1643010, 4154800, 4417390, 1613970, 4293970, 4538990, 1643010, 4154800, 4536060, 1651100, 4154800, 4536060, 1651100, 4154800, 4604510, 1672260, 4070750, 4618620, 1679210, 4051990, 4536060, 1651100, 4154800, 4618620, 1679210, 4051990, 4535570, 1652440, 4154800, 4417390, 1613970, 4293970, 4536060, 1651100, 4154800, 4535570, 1652440, 4154800, 4554760, 1598770, 4154800, 4567850, 1601350, 4139510, 4597810, 1619700, 4099280, 4554760, 1598770, 4154800, 4597810, 1619700, 4099280, 4553e3, 1603780, 4154800, 4553e3, 1603780, 4154800, 4518530, 1591540, 4196650, 4554760, 1598770, 4154800, 4551280, 1608660, 4154800, 4553e3, 1603780, 4154800, 4597810, 1619700, 4099280, 4493170, 1594650, 4222440, 4518530, 1591540, 4196650, 4553e3, 1603780, 4154800, 4493170, 1594650, 4222440, 4553e3, 1603780, 4154800, 4551280, 1608660, 4154800, 4430520, 1658520, 4263560, 4430220, 1637370, 4271980, 4481050, 1672120, 4205430, 4453810, 1673210, 4233650, 4430520, 1658520, 4263560, 4481050, 1672120, 4205430, 4419630, 1585770, 4302110, 4466350, 1564490, 4261730, 4486830, 1577580, 4235480, 4419630, 1585770, 4302110, 4486830, 1577580, 4235480, 4493170, 1594650, 4222440, 3288700, 4783700, 2633360, 3289750, 4782970, 2633360, 3311960, 4823580, 2530120, 3288700, 4783700, 2633360, 3311960, 4823580, 2530120, 3301410, 4808720, 2571560, 3288700, 4783700, 2633360, 3269420, 4746200, 2723080, 3289750, 4782970, 2633360, 3272590, 4794730, 2633360, 3288700, 4783700, 2633360, 3301410, 4808720, 2571560, 3200330, 4757350, 2784590, 3269420, 4746200, 2723080, 3288700, 4783700, 2633360, 3200330, 4757350, 2784590, 3288700, 4783700, 2633360, 3272590, 4794730, 2633360, 3267120, 4798460, 2633360, 3272590, 4794730, 2633360, 3301410, 4808720, 2571560, 3200330, 4757350, 2784590, 3272590, 4794730, 2633360, 3267120, 4798460, 2633360, 3200330, 4757350, 2784590, 3267120, 4798460, 2633360, 3245970, 4791800, 2671120, 3267120, 4798460, 2633360, 3301410, 4808720, 2571560, 3269710, 4811970, 2605530, 3267120, 4798460, 2633360, 3269710, 4811970, 2605530, 3259690, 4803510, 2633360, 3245970, 4791800, 2671120, 3267120, 4798460, 2633360, 3259690, 4803510, 2633360, 3258350, 4827290, 2591480, 3269710, 4811970, 2605530, 3301410, 4808720, 2571560, 3203040, 4820380, 2671510, 3200330, 4757350, 2784590, 3245970, 4791800, 2671120, 3203040, 4820380, 2671510, 3193670, 4781660, 2750610, 3200330, 4757350, 2784590, 3376210, 4722340, 2633360, 3422870, 4712550, 2590600, 3381030, 4829840, 2425340, 3376210, 4722340, 2633360, 3381030, 4829840, 2425340, 3352250, 4739380, 2633360, 3352250, 4739380, 2633360, 3348360, 4727840, 2658770, 3376210, 4722340, 2633360, 3304090, 4773080, 2633360, 3352250, 4739380, 2633360, 3381030, 4829840, 2425340, 3269420, 4746200, 2723080, 3348360, 4727840, 2658770, 3352250, 4739380, 2633360, 3269420, 4746200, 2723080, 3352250, 4739380, 2633360, 3304090, 4773080, 2633360, 3304090, 4773080, 2633360, 3381030, 4829840, 2425340, 3346780, 4821580, 2488030, 3304090, 4773080, 2633360, 3346780, 4821580, 2488030, 3299690, 4776120, 2633360, 3269420, 4746200, 2723080, 3304090, 4773080, 2633360, 3299690, 4776120, 2633360, 3299690, 4776120, 2633360, 3346780, 4821580, 2488030, 3311960, 4823580, 2530120, 3299690, 4776120, 2633360, 3311960, 4823580, 2530120, 3289750, 4782970, 2633360, 3289750, 4782970, 2633360, 3269420, 4746200, 2723080, 3299690, 4776120, 2633360, 3600440, 4568360, 2608010, 3615990, 4558890, 2603100, 3619450, 4569510, 2579720, 3605180, 4580450, 2580290, 3600440, 4568360, 2608010, 3619450, 4569510, 2579720, 3616370, 4628860, 2476840, 3605180, 4580450, 2580290, 3619450, 4569510, 2579720, 3537950, 4623610, 2596220, 3605180, 4580450, 2580290, 3616370, 4628860, 2476840, 3381030, 4829840, 2425340, 3537950, 4623610, 2596220, 3616370, 4628860, 2476840, 3381030, 4829840, 2425340, 3471560, 4675140, 2593580, 3537950, 4623610, 2596220, 3381030, 4829840, 2425340, 3422870, 4712550, 2590600, 3471560, 4675140, 2593580, 3346780, 4821580, 2488030, 3381030, 4829840, 2425340, 3358890, 4834310, 2446950, 2801310, -4544500, -3478400, 2752020, -4490080, -3586030, 2774400, -4514500, -3538120, 2892590, -4719960, -3157260, 2958130, -4849660, -2890420, 2886320, -4723370, -3157900, 2892590, -4719960, -3157260, 2886320, -4723370, -3157900, 2752020, -4490080, -3586030, 2892590, -4719960, -3157260, 2752020, -4490080, -3586030, 2801310, -4544500, -3478400, 3035620, -4785190, -2917230, 2958130, -4849660, -2890420, 2892590, -4719960, -3157260, 3035620, -4785190, -2917230, 2892590, -4719960, -3157260, 2942110, -4692710, -3152160, 2942110, -4692710, -3152160, 2892590, -4719960, -3157260, 2801310, -4544500, -3478400, 3035620, -4785190, -2917230, 2942110, -4692710, -3152160, 2944490, -4691390, -3151900, 2942110, -4692710, -3152160, 2801310, -4544500, -3478400, 2856210, -4596280, -3364620, 2942110, -4692710, -3152160, 2856210, -4596280, -3364620, 2944490, -4691390, -3151900, 2825630, -4545320, -3457730, 2856210, -4596280, -3364620, 2801310, -4544500, -3478400, 2974120, -4985370, -2633360, 2902460, -5027430, -2633360, 2789350, -4774670, -3167810, 2974120, -4985370, -2633360, 2789350, -4774670, -3167810, 2852970, -4741290, -3161330, 2974120, -4985370, -2633360, 2852970, -4741290, -3161330, 3001180, -4956920, -2656110, 2852970, -4741290, -3161330, 2789350, -4774670, -3167810, 2549030, -4281460, -3968130, 2974120, -4985370, -2633360, 2911680, -5049080, -2581600, 2902460, -5027430, -2633360, 2880330, -4726610, -3158520, 3001180, -4956920, -2656110, 2852970, -4741290, -3161330, 2852970, -4741290, -3161330, 2549030, -4281460, -3968130, 2752020, -4490080, -3586030, 2852970, -4741290, -3161330, 2752020, -4490080, -3586030, 2880330, -4726610, -3158520, 2678720, -4245380, -3921510, 2752020, -4490080, -3586030, 2549030, -4281460, -3968130, 2786940, -4351520, -3726160, 2752020, -4490080, -3586030, 2678720, -4245380, -3921510, 2797040, -4272410, -3808670, 2786940, -4351520, -3726160, 2678720, -4245380, -3921510, 2818570, -4296990, -3765180, 2786940, -4351520, -3726160, 2797040, -4272410, -3808670, 2958130, -4849660, -2890420, 3001180, -4956920, -2656110, 2880330, -4726610, -3158520, 2958130, -4849660, -2890420, 2880330, -4726610, -3158520, 2886320, -4723370, -3157900, 2752020, -4490080, -3586030, 2886320, -4723370, -3157900, 2880330, -4726610, -3158520, 3080050, -4886720, -2695360, 3001180, -4956920, -2656110, 2958130, -4849660, -2890420, 3081060, -4861290, -2739540, 3080050, -4886720, -2695360, 2958130, -4849660, -2890420, 2902460, -5027430, -2633360, 2834360, -5066130, -2633360, 2748720, -4795430, -3171940, 2902460, -5027430, -2633360, 2748720, -4795430, -3171940, 2789350, -4774670, -3167810, 2549030, -4281460, -3968130, 2789350, -4774670, -3167810, 2748720, -4795430, -3171940, 2911680, -5049080, -2581600, 2842670, -5096080, -2566210, 2834360, -5066130, -2633360, 2911680, -5049080, -2581600, 2834360, -5066130, -2633360, 2902460, -5027430, -2633360, 2826430, -5070560, -2633360, 2677020, -4831040, -3179160, 2748720, -4795430, -3171940, 2826430, -5070560, -2633360, 2748720, -4795430, -3171940, 2834360, -5066130, -2633360, 2677020, -4831040, -3179160, 2390670, -4355340, -3986140, 2549030, -4281460, -3968130, 2677020, -4831040, -3179160, 2549030, -4281460, -3968130, 2748720, -4795430, -3171940, 2834360, -5066130, -2633360, 2842670, -5096080, -2566210, 2826430, -5070560, -2633360, 2822100, -5072970, -2633360, 2636890, -4850410, -3183190, 2677020, -4831040, -3179160, 2822100, -5072970, -2633360, 2677020, -4831040, -3179160, 2826430, -5070560, -2633360, 2636890, -4850410, -3183190, 2309980, -4406590, -3977430, 2390670, -4355340, -3986140, 2636890, -4850410, -3183190, 2390670, -4355340, -3986140, 2677020, -4831040, -3179160, 2842670, -5096080, -2566210, 2822100, -5072970, -2633360, 2826430, -5070560, -2633360, 2822100, -5072970, -2633360, 2668210, -5155580, -2633360, 2545340, -4893090, -3192310, 2822100, -5072970, -2633360, 2545340, -4893090, -3192310, 2636890, -4850410, -3183190, 2636890, -4850410, -3183190, 2545340, -4893090, -3192310, 2309980, -4406590, -3977430, 2842670, -5096080, -2566210, 2710200, -5247560, -2399960, 2668210, -5155580, -2633360, 2842670, -5096080, -2566210, 2668210, -5155580, -2633360, 2822100, -5072970, -2633360, 3289160, -4609650, -2924990, 3328170, -4687580, -2753070, 3289910, -4661810, -2840820, 3373950, -4666090, -2733930, 3328170, -4687580, -2753070, 3289160, -4609650, -2924990, 3373090, -4583300, -2870660, 3373950, -4666090, -2733930, 3289160, -4609650, -2924990, 3398160, -4613920, -2791490, 3373950, -4666090, -2733930, 3373090, -4583300, -2870660, 3102720, -4650740, -3059620, 3124530, -4718260, -2932240, 3035620, -4785190, -2917230, 3193990, -4681470, -2916440, 3124530, -4718260, -2932240, 3102720, -4650740, -3059620, 3222930, -4630680, -2964940, 3193990, -4681470, -2916440, 3102720, -4650740, -3059620, 3289910, -4661810, -2840820, 3193990, -4681470, -2916440, 3222930, -4630680, -2964940, 3289160, -4609650, -2924990, 3289910, -4661810, -2840820, 3222930, -4630680, -2964940, 3035620, -4785190, -2917230, 2966720, -4678920, -3149610, 3005600, -4656800, -3145560, 3035620, -4785190, -2917230, 3005600, -4656800, -3145560, 3102720, -4650740, -3059620, 3005600, -4656800, -3145560, 2966720, -4678920, -3149610, 2953700, -4658800, -3191120, 3035620, -4785190, -2917230, 2952970, -4686650, -3151030, 2966720, -4678920, -3149610, 2952970, -4686650, -3151030, 2909330, -4633370, -3267470, 2953700, -4658800, -3191120, 2952970, -4686650, -3151030, 2953700, -4658800, -3191120, 2966720, -4678920, -3149610, 3035620, -4785190, -2917230, 2944490, -4691390, -3151900, 2952970, -4686650, -3151030, 2944490, -4691390, -3151900, 2856210, -4596280, -3364620, 2909330, -4633370, -3267470, 2944490, -4691390, -3151900, 2909330, -4633370, -3267470, 2952970, -4686650, -3151030, 1484960, -3407030, -5166030, 1438690, -3382770, -5194790, 1455860, -3340280, -5217300, 1558190, -3349170, -5182160, 1484960, -3407030, -5166030, 1455860, -3340280, -5217300, 1558190, -3349170, -5182160, 1455860, -3340280, -5217300, 1512940, -3319840, -5214120, 1403980, -3399970, -5193070, 1422120, -3564570, -5077230, 1340200, -3425650, -5193040, 1403980, -3399970, -5193070, 1427770, -3489940, -5126910, 1422120, -3564570, -5077230, 1484960, -3407030, -5166030, 1427770, -3489940, -5126910, 1403980, -3399970, -5193070, 1484960, -3407030, -5166030, 1403980, -3399970, -5193070, 1438690, -3382770, -5194790, 1845770, -4460390, -4154800, 1683480, -4080490, -4588490, 1726990, -4127260, -4530510, 1845770, -4460390, -4154800, 1726990, -4127260, -4530510, 1862750, -4453330, -4154800, 2237020, -5356770, -2633360, 2109670, -5069090, -3234770, 2117440, -5066320, -3234030, 2237020, -5356770, -2633360, 2117440, -5066320, -3234030, 2237650, -5356510, -2633360, 2109670, -5069090, -3234770, 1845770, -4460390, -4154800, 1862750, -4453330, -4154800, 2109670, -5069090, -3234770, 1862750, -4453330, -4154800, 2117440, -5066320, -3234030, 2237650, -5356510, -2633360, 2246710, -5378410, -2580840, 2237020, -5356770, -2633360, 1656670, -4025450, -4646110, 1683480, -4080490, -4588490, 1845770, -4460390, -4154800, 1656670, -4025450, -4646110, 1845770, -4460390, -4154800, 1835840, -4464480, -4154800, 1656670, -4025450, -4646110, 1835840, -4464480, -4154800, 1646960, -4028370, -4647020, 1656670, -4025450, -4646110, 1646960, -4028370, -4647020, 1555240, -3814060, -4853460, 2236650, -5356930, -2633360, 2105120, -5070700, -3235200, 2109670, -5069090, -3234770, 2236650, -5356930, -2633360, 2109670, -5069090, -3234770, 2237020, -5356770, -2633360, 2105120, -5070700, -3235200, 1835840, -4464480, -4154800, 1845770, -4460390, -4154800, 2105120, -5070700, -3235200, 1845770, -4460390, -4154800, 2109670, -5069090, -3234770, 2246710, -5378410, -2580840, 2236650, -5356930, -2633360, 2237020, -5356770, -2633360, 1835840, -4464480, -4154800, 1808060, -4475810, -4154800, 1638840, -4030800, -4647790, 1835840, -4464480, -4154800, 1638840, -4030800, -4647790, 1646960, -4028370, -4647020, 1646960, -4028370, -4647020, 1638840, -4030800, -4647790, 1555240, -3814060, -4853460, 2221190, -5363360, -2633360, 2104990, -5288400, -2868270, 2036120, -5094580, -3241800, 2221190, -5363360, -2633360, 2036120, -5094580, -3241800, 2105120, -5070700, -3235200, 2221190, -5363360, -2633360, 2105120, -5070700, -3235200, 2236650, -5356930, -2633360, 2105120, -5070700, -3235200, 2036120, -5094580, -3241800, 1808060, -4475810, -4154800, 2105120, -5070700, -3235200, 1808060, -4475810, -4154800, 1835840, -4464480, -4154800, 2246710, -5378410, -2580840, 2221190, -5363360, -2633360, 2236650, -5356930, -2633360, 1764840, -4493020, -4154800, 1580490, -4047700, -4653270, 1638840, -4030800, -4647790, 1764840, -4493020, -4154800, 1638840, -4030800, -4647790, 1808060, -4475810, -4154800, 1580490, -4047700, -4653270, 1482090, -3806990, -4881630, 1555240, -3814060, -4853460, 1580490, -4047700, -4653270, 1555240, -3814060, -4853460, 1638840, -4030800, -4647790, 2036120, -5094580, -3241800, 2104990, -5288400, -2868270, 2022320, -5099230, -3243110, 2022320, -5099230, -3243110, 1764840, -4493020, -4154800, 1808060, -4475810, -4154800, 2022320, -5099230, -3243110, 1808060, -4475810, -4154800, 2036120, -5094580, -3241800, 1764840, -4493020, -4154800, 1742430, -4501760, -4154800, 1573530, -4049660, -4653920, 1764840, -4493020, -4154800, 1573530, -4049660, -4653920, 1580490, -4047700, -4653270, 1580490, -4047700, -4653270, 1573530, -4049660, -4653920, 1482090, -3806990, -4881630, 2104990, -5288400, -2868270, 2028410, -5284510, -2929550, 1968180, -5117080, -3248270, 2104990, -5288400, -2868270, 1968180, -5117080, -3248270, 2022310, -5099230, -3243120, 2022320, -5099230, -3243110, 1968180, -5117080, -3248270, 1742430, -4501760, -4154800, 2022320, -5099230, -3243110, 1742430, -4501760, -4154800, 1764840, -4493020, -4154800, 1723590, -4509010, -4154800, 1547710, -4056800, -4656330, 1573530, -4049660, -4653920, 1723590, -4509010, -4154800, 1573530, -4049660, -4653920, 1742430, -4501760, -4154800, 1547710, -4056800, -4656330, 1440510, -3779930, -4914760, 1482090, -3806990, -4881630, 1547710, -4056800, -4656330, 1482090, -3806990, -4881630, 1573530, -4049660, -4653920, 1968180, -5117080, -3248270, 2028410, -5284510, -2929550, 1962800, -5118820, -3248780, 1962800, -5118820, -3248780, 1723590, -4509010, -4154800, 1742430, -4501760, -4154800, 1962800, -5118820, -3248780, 1742430, -4501760, -4154800, 1968180, -5117080, -3248270, 1708540, -4514730, -4154800, 1527040, -4062400, -4658270, 1547710, -4056800, -4656330, 1708540, -4514730, -4154800, 1547710, -4056800, -4656330, 1723590, -4509010, -4154800, 1527040, -4062400, -4658270, 1373770, -3673990, -5012570, 1440510, -3779930, -4914760, 1527040, -4062400, -4658270, 1440510, -3779930, -4914760, 1547710, -4056800, -4656330, 2028410, -5284510, -2929550, 1958500, -5120210, -3249190, 1962800, -5118820, -3248780, 1958500, -5120210, -3249190, 1708540, -4514730, -4154800, 1723590, -4509010, -4154800, 1958500, -5120210, -3249190, 1723590, -4509010, -4154800, 1962800, -5118820, -3248780, 1429220, -3687730, -4987080, 1440510, -3779930, -4914760, 1373770, -3673990, -5012570, 1427990, -3638470, -5023240, 1429220, -3687730, -4987080, 1373770, -3673990, -5012570, 1453060, -3623730, -5026690, 1429220, -3687730, -4987080, 1427990, -3638470, -5023240, 1669650, -4021510, -4644890, 1683480, -4080490, -4588490, 1656670, -4025450, -4646110, 1656670, -4025450, -4646110, 1555240, -3814060, -4853460, 1636750, -3887250, -4768410, 1656670, -4025450, -4646110, 1636750, -3887250, -4768410, 1669650, -4021510, -4644890, 1725890, -4003900, -4639570, 1683480, -4080490, -4588490, 1669650, -4021510, -4644890, 1725890, -4003900, -4639570, 1669650, -4021510, -4644890, 1636750, -3887250, -4768410, 1725890, -4003900, -4639570, 1636750, -3887250, -4768410, 1729750, -3996670, -4644330, 1735620, -3895540, -4726780, 1729750, -3996670, -4644330, 1636750, -3887250, -4768410, 1789410, -3952240, -4659630, 1729750, -3996670, -4644330, 1735620, -3895540, -4726780, 2102400, -4209060, -4291880, 2097670, -4254760, -4249210, 2046720, -4253410, -4275150, 2102400, -4209060, -4291880, 2046720, -4253410, -4275150, 2024380, -4221200, -4317220, 2046720, -4253410, -4275150, 2005950, -4297580, -4250390, 2024380, -4221200, -4317220, 2024380, -4221200, -4317220, 2005950, -4297580, -4250390, 1945180, -4206240, -4367590, 2005950, -4297580, -4250390, 2026300, -4368870, -4167810, 1945180, -4206240, -4367590, 2028180, -4380460, -4154800, 1945180, -4206240, -4367590, 2026300, -4368870, -4167810, 2028180, -4380460, -4154800, 2026300, -4368870, -4167810, 2031140, -4379090, -4154800, 2454270, -5260780, -2633360, 2321180, -4989100, -3214350, 2322720, -4988480, -3214190, 2454270, -5260780, -2633360, 2322720, -4988480, -3214190, 2454740, -5260560, -2633360, 2321180, -4989100, -3214350, 2028180, -4380460, -4154800, 2031140, -4379090, -4154800, 2321180, -4989100, -3214350, 2031140, -4379090, -4154800, 2322720, -4988480, -3214190, 2502360, -5357770, -2382200, 2454270, -5260780, -2633360, 2454740, -5260560, -2633360, 2048530, -4370980, -4154800, 2031140, -4379090, -4154800, 2026300, -4368870, -4167810, 2454740, -5260560, -2633360, 2322720, -4988480, -3214190, 2338020, -4982290, -3212700, 2454740, -5260560, -2633360, 2338020, -4982290, -3212700, 2459390, -5258400, -2633360, 2048530, -4370980, -4154800, 2063800, -4372340, -4145860, 2338020, -4982290, -3212700, 2048530, -4370980, -4154800, 2338020, -4982290, -3212700, 2322720, -4988480, -3214190, 2048530, -4370980, -4154800, 2322720, -4988480, -3214190, 2031140, -4379090, -4154800, 2459390, -5258400, -2633360, 2502360, -5357770, -2382200, 2454740, -5260560, -2633360, 2507250, -5235740, -2633360, 2459390, -5258400, -2633360, 2338020, -4982290, -3212700, 2507250, -5235740, -2633360, 2338020, -4982290, -3212700, 2367730, -4970130, -3209810, 2367730, -4970130, -3209810, 2338020, -4982290, -3212700, 2063800, -4372340, -4145860, 2544010, -5304290, -2456120, 2502360, -5357770, -2382200, 2459390, -5258400, -2633360, 2544010, -5304290, -2456120, 2459390, -5258400, -2633360, 2507250, -5235740, -2633360, 2125170, -4313300, -4176390, 2132830, -4330470, -4154800, 2081890, -4355190, -4154800, 2507250, -5235740, -2633360, 2367730, -4970130, -3209810, 2403300, -4955300, -3206330, 2507250, -5235740, -2633360, 2403300, -4955300, -3206330, 2515680, -5231700, -2633360, 2081890, -4355190, -4154800, 2132830, -4330470, -4154800, 2403300, -4955300, -3206330, 2081890, -4355190, -4154800, 2403300, -4955300, -3206330, 2367730, -4970130, -3209810, 2081890, -4355190, -4154800, 2367730, -4970130, -3209810, 2063800, -4372340, -4145860, 2515680, -5231700, -2633360, 2544010, -5304290, -2456120, 2507250, -5235740, -2633360, 2125170, -4313300, -4176390, 2133250, -4330260, -4154800, 2132830, -4330470, -4154800, 2548620, -5215730, -2633360, 2515680, -5231700, -2633360, 2403300, -4955300, -3206330, 2548620, -5215730, -2633360, 2403300, -4955300, -3206330, 2424070, -4946500, -3204290, 2424070, -4946500, -3204290, 2403300, -4955300, -3206330, 2132830, -4330470, -4154800, 2424070, -4946500, -3204290, 2132830, -4330470, -4154800, 2133250, -4330260, -4154800, 2594960, -5317340, -2373760, 2544010, -5304290, -2456120, 2515680, -5231700, -2633360, 2594960, -5317340, -2373760, 2515680, -5231700, -2633360, 2548620, -5215730, -2633360, 2134410, -4329690, -4154800, 2133250, -4330260, -4154800, 2125170, -4313300, -4176390, 2638380, -5170900, -2633360, 2548620, -5215730, -2633360, 2424070, -4946500, -3204290, 2638380, -5170900, -2633360, 2424070, -4946500, -3204290, 2481260, -4921750, -3198650, 2481260, -4921750, -3198650, 2424070, -4946500, -3204290, 2133250, -4330260, -4154800, 2481260, -4921750, -3198650, 2133250, -4330260, -4154800, 2134410, -4329690, -4154800, 2699480, -5263120, -2378010, 2594960, -5317340, -2373760, 2548620, -5215730, -2633360, 2699480, -5263120, -2378010, 2548620, -5215730, -2633360, 2638380, -5170900, -2633360, 2134410, -4329690, -4154800, 2125170, -4313300, -4176390, 2206580, -4283560, -4164840, 2134410, -4329690, -4154800, 2206580, -4283560, -4164840, 2210520, -4291330, -4154800, 2638380, -5170900, -2633360, 2481260, -4921750, -3198650, 2520230, -4904440, -3194800, 2638380, -5170900, -2633360, 2520230, -4904440, -3194800, 2650510, -5164700, -2633360, 2481260, -4921750, -3198650, 2134410, -4329690, -4154800, 2210520, -4291330, -4154800, 2481260, -4921750, -3198650, 2210520, -4291330, -4154800, 2520230, -4904440, -3194800, 2650510, -5164700, -2633360, 2699480, -5263120, -2378010, 2638380, -5170900, -2633360, 2210600, -4291290, -4154800, 2210520, -4291330, -4154800, 2206580, -4283560, -4164840, 2663190, -5158170, -2633360, 2650510, -5164700, -2633360, 2520230, -4904440, -3194800, 2663190, -5158170, -2633360, 2520230, -4904440, -3194800, 2528310, -4900800, -3194010, 2528310, -4900800, -3194e3, 2520230, -4904440, -3194800, 2210520, -4291330, -4154800, 2528310, -4900800, -3194e3, 2210520, -4291330, -4154800, 2210600, -4291290, -4154800, 2710200, -5247560, -2399960, 2699480, -5263120, -2378010, 2650510, -5164700, -2633360, 2710200, -5247560, -2399960, 2650510, -5164700, -2633360, 2663190, -5158170, -2633360, 2214910, -4289070, -4154800, 2210600, -4291290, -4154800, 2206580, -4283560, -4164840, 2663190, -5158170, -2633360, 2528310, -4900800, -3194010, 2544440, -4893500, -3192400, 2663190, -5158170, -2633360, 2544440, -4893500, -3192400, 2667950, -5155710, -2633360, 2214910, -4289070, -4154800, 2266300, -4322250, -4092650, 2544440, -4893500, -3192400, 2214910, -4289070, -4154800, 2544440, -4893500, -3192400, 2528310, -4900800, -3194e3, 2214910, -4289070, -4154800, 2528310, -4900800, -3194e3, 2210600, -4291290, -4154800, 2667950, -5155710, -2633360, 2710200, -5247560, -2399960, 2663190, -5158170, -2633360, 2668210, -5155580, -2633360, 2667950, -5155710, -2633360, 2544440, -4893500, -3192400, 2668210, -5155580, -2633360, 2544440, -4893500, -3192400, 2545340, -4893090, -3192310, 2545340, -4893090, -3192310, 2544440, -4893500, -3192400, 2266300, -4322250, -4092650, 2545340, -4893090, -3192310, 2266300, -4322250, -4092650, 2309980, -4406590, -3977430, 2668210, -5155580, -2633360, 2710200, -5247560, -2399960, 2667950, -5155710, -2633360, 2306600, -4361150, -4028800, 2309980, -4406590, -3977430, 2266300, -4322250, -4092650, 2019390, -4384520, -4154800, 1901970, -4140660, -4448e3, 1945180, -4206240, -4367590, 2019390, -4384520, -4154800, 1945180, -4206240, -4367590, 2028180, -4380460, -4154800, 2452890, -5261430, -2633360, 2316610, -4990940, -3214790, 2321180, -4989100, -3214350, 2452890, -5261430, -2633360, 2321180, -4989100, -3214350, 2454270, -5260780, -2633360, 2316610, -4990940, -3214790, 2019390, -4384520, -4154800, 2028180, -4380460, -4154800, 2316610, -4990940, -3214790, 2028180, -4380460, -4154800, 2321180, -4989100, -3214350, 2502360, -5357770, -2382200, 2452890, -5261430, -2633360, 2454270, -5260780, -2633360, 2005080, -4391080, -4154800, 1867530, -4110330, -4490240, 1901970, -4140660, -4448e3, 2005080, -4391080, -4154800, 1901970, -4140660, -4448e3, 2019390, -4384520, -4154800, 2450640, -5262480, -2633360, 2309160, -4993920, -3215510, 2316610, -4990940, -3214790, 2450640, -5262480, -2633360, 2316610, -4990940, -3214790, 2452890, -5261430, -2633360, 2309160, -4993920, -3215510, 2005080, -4391080, -4154800, 2019390, -4384520, -4154800, 2309160, -4993920, -3215510, 2019390, -4384520, -4154800, 2316610, -4990940, -3214790, 2502360, -5357770, -2382200, 2450640, -5262480, -2633360, 2452890, -5261430, -2633360, 2005080, -4391080, -4154800, 1987140, -4399230, -4154800, 1867530, -4110330, -4490240, 2450640, -5262480, -2633360, 2343500, -5311060, -2633360, 2235480, -5022720, -3222660, 2450640, -5262480, -2633360, 2235480, -5022720, -3222660, 2309160, -4993920, -3215510, 2309160, -4993920, -3215510, 2235480, -5022720, -3222660, 1987140, -4399230, -4154800, 2309160, -4993920, -3215510, 1987140, -4399230, -4154800, 2005080, -4391080, -4154800, 2502360, -5357770, -2382200, 2383430, -5422740, -2357190, 2343500, -5311060, -2633360, 2502360, -5357770, -2382200, 2343500, -5311060, -2633360, 2450640, -5262480, -2633360, 1927330, -4425760, -4154800, 1799420, -4140360, -4490460, 1867530, -4110330, -4490240, 1927330, -4425760, -4154800, 1867530, -4110330, -4490240, 1987140, -4399230, -4154800, 2333260, -5315560, -2633360, 2203580, -5034810, -3225740, 2235480, -5022720, -3222660, 2333260, -5315560, -2633360, 2235480, -5022720, -3222660, 2343500, -5311060, -2633360, 2203580, -5034810, -3225740, 1927330, -4425760, -4154800, 1987140, -4399230, -4154800, 2203580, -5034810, -3225740, 1987140, -4399230, -4154800, 2235480, -5022720, -3222660, 2343500, -5311060, -2633360, 2383430, -5422740, -2357190, 2333260, -5315560, -2633360, 1927330, -4425760, -4154800, 1917190, -4430160, -4154800, 1799420, -4140360, -4490460, 2333260, -5315560, -2633360, 2272750, -5341710, -2633360, 2162320, -5050110, -3229720, 2333260, -5315560, -2633360, 2162320, -5050110, -3229720, 2203580, -5034810, -3225740, 2203580, -5034810, -3225740, 2162320, -5050110, -3229720, 1917190, -4430160, -4154800, 2203580, -5034810, -3225740, 1917190, -4430160, -4154800, 1927330, -4425760, -4154800, 2383430, -5422740, -2357190, 2296830, -5407100, -2475320, 2272750, -5341710, -2633360, 2383430, -5422740, -2357190, 2272750, -5341710, -2633360, 2333260, -5315560, -2633360, 1868260, -4451010, -4154800, 1726990, -4127260, -4530510, 1799420, -4140360, -4490460, 1868260, -4451010, -4154800, 1799420, -4140360, -4490460, 1917190, -4430160, -4154800, 2267620, -5343890, -2633360, 2138020, -5058950, -3232050, 2162320, -5050110, -3229720, 2267620, -5343890, -2633360, 2162320, -5050110, -3229720, 2272750, -5341710, -2633360, 2138020, -5058950, -3232050, 1868260, -4451010, -4154800, 1917190, -4430160, -4154800, 2138020, -5058950, -3232050, 1917190, -4430160, -4154800, 2162320, -5050110, -3229720, 2272750, -5341710, -2633360, 2296830, -5407100, -2475320, 2267620, -5343890, -2633360, 1868260, -4451010, -4154800, 1862750, -4453330, -4154800, 1726990, -4127260, -4530510, 2267620, -5343890, -2633360, 2237650, -5356510, -2633360, 2117440, -5066320, -3234030, 2267620, -5343890, -2633360, 2117440, -5066320, -3234030, 2138020, -5058950, -3232050, 2138020, -5058950, -3232050, 2117440, -5066320, -3234030, 1862750, -4453330, -4154800, 2138020, -5058950, -3232050, 1862750, -4453330, -4154800, 1868260, -4451010, -4154800, 2296830, -5407100, -2475320, 2246710, -5378410, -2580840, 2237650, -5356510, -2633360, 2296830, -5407100, -2475320, 2237650, -5356510, -2633360, 2267620, -5343890, -2633360, 2213730, -5366440, -2633360, 2135390, -5398090, -2633360, 2109660, -5324600, -2797470, 2246710, -5378410, -2580840, 2135790, -5399260, -2630650, 2135390, -5398090, -2633360, 2246710, -5378410, -2580840, 2135390, -5398090, -2633360, 2213730, -5366440, -2633360, 2213730, -5366440, -2633360, 2109660, -5324600, -2797470, 2104990, -5288400, -2868270, 2213730, -5366440, -2633360, 2104990, -5288400, -2868270, 2221190, -5363360, -2633360, 2246710, -5378410, -2580840, 2213730, -5366440, -2633360, 2221190, -5363360, -2633360, 2104990, -5288400, -2868270, 2109660, -5324600, -2797470, 2084470, -5317520, -2829430, 1409820, -4092060, -4669170, 1415550, -4243440, -4531200, 1360530, -4103490, -4673730, 1360530, -4103490, -4673730, 1221290, -3739810, -5003420, 1373770, -3673990, -5012570, 1360530, -4103490, -4673730, 1373770, -3673990, -5012570, 1409820, -4092060, -4669170, 1459610, -4293180, -4470360, 1415550, -4243440, -4531200, 1409820, -4092060, -4669170, 1459610, -4293180, -4470360, 1409820, -4092060, -4669170, 1436650, -4085580, -4666690, 1373770, -3673990, -5012570, 1436650, -4085580, -4666690, 1409820, -4092060, -4669170, 1436650, -4085580, -4666690, 1485e3, -4073440, -4662180, 1604480, -4552750, -4154800, 1436650, -4085580, -4666690, 1604480, -4552750, -4154800, 1574050, -4563360, -4154800, 1436650, -4085580, -4666690, 1574050, -4563360, -4154800, 1459610, -4293180, -4470360, 1373770, -3673990, -5012570, 1485e3, -4073440, -4662180, 1436650, -4085580, -4666690, 1604480, -4552750, -4154800, 1641280, -4717020, -3953630, 1574050, -4563360, -4154800, 1642960, -4539010, -4154800, 1604480, -4552750, -4154800, 1485e3, -4073440, -4662180, 1642960, -4539010, -4154800, 1485e3, -4073440, -4662180, 1500410, -4069450, -4660750, 1373770, -3673990, -5012570, 1500410, -4069450, -4660750, 1485e3, -4073440, -4662180, 1735820, -4865290, -3728650, 1641280, -4717020, -3953630, 1604480, -4552750, -4154800, 1735820, -4865290, -3728650, 1604480, -4552750, -4154800, 1642960, -4539010, -4154800, 1674890, -4527330, -4154800, 1642960, -4539010, -4154800, 1500410, -4069450, -4660750, 1674890, -4527330, -4154800, 1500410, -4069450, -4660750, 1513310, -4066050, -4659550, 1373770, -3673990, -5012570, 1513310, -4066050, -4659550, 1500410, -4069450, -4660750, 1822100, -4956940, -3564230, 1735820, -4865290, -3728650, 1642960, -4539010, -4154800, 1822100, -4956940, -3564230, 1642960, -4539010, -4154800, 1674890, -4527330, -4154800, 1675780, -4527e3, -4154800, 1674890, -4527330, -4154800, 1513310, -4066050, -4659550, 1675780, -4527e3, -4154800, 1513310, -4066050, -4659550, 1513680, -4065960, -4659510, 1373770, -3673990, -5012570, 1513680, -4065960, -4659510, 1513310, -4066050, -4659550, 1841860, -5010030, -3479400, 1822100, -4956940, -3564230, 1674890, -4527330, -4154800, 1841860, -5010030, -3479400, 1674890, -4527330, -4154800, 1675780, -4527e3, -4154800, 1684750, -4523670, -4154800, 1675780, -4527e3, -4154800, 1513680, -4065960, -4659510, 1684750, -4523670, -4154800, 1513680, -4065960, -4659510, 1517320, -4064990, -4659170, 1373770, -3673990, -5012570, 1517320, -4064990, -4659170, 1513680, -4065960, -4659510, 1906250, -5136730, -3254140, 1950910, -5261620, -3021330, 1897460, -5139460, -3254970, 1675780, -4527e3, -4154800, 1684750, -4523670, -4154800, 1906250, -5136730, -3254140, 1675780, -4527e3, -4154800, 1906250, -5136730, -3254140, 1897460, -5139460, -3254970, 1675780, -4527e3, -4154800, 1897460, -5139460, -3254970, 1841860, -5010030, -3479400, 1708540, -4514730, -4154800, 1684750, -4523670, -4154800, 1517320, -4064990, -4659170, 1708540, -4514730, -4154800, 1517320, -4064990, -4659170, 1527040, -4062400, -4658270, 1527040, -4062400, -4658270, 1517320, -4064990, -4659170, 1373770, -3673990, -5012570, 2028410, -5284510, -2929550, 1950910, -5261620, -3021330, 1906250, -5136730, -3254140, 2028410, -5284510, -2929550, 1906250, -5136730, -3254140, 1958500, -5120210, -3249190, 1958500, -5120210, -3249190, 1906250, -5136730, -3254140, 1684750, -4523670, -4154800, 1958500, -5120210, -3249190, 1684750, -4523670, -4154800, 1708540, -4514730, -4154800, 1415550, -4243440, -4531200, 1355480, -4151350, -4633020, 1341280, -4107780, -4675520, 1415550, -4243440, -4531200, 1341280, -4107780, -4675520, 1360530, -4103490, -4673730, 1360530, -4103490, -4673730, 1341280, -4107780, -4675520, 1221290, -3739810, -5003420, 1341280, -4107780, -4675520, 1355480, -4151350, -4633020, 1336910, -4108740, -4675920, 1336910, -4108740, -4675920, 1230630, -3858390, -4910850, 1221290, -3739810, -5003420, 1336910, -4108740, -4675920, 1221290, -3739810, -5003420, 1341280, -4107780, -4675520, 1355480, -4151350, -4633020, 1328230, -4110640, -4676720, 1336910, -4108740, -4675920, 1328230, -4110640, -4676720, 1291600, -4054760, -4735e3, 1230630, -3858390, -4910850, 1328230, -4110640, -4676720, 1230630, -3858390, -4910850, 1336910, -4108740, -4675920, 1355480, -4151350, -4633020, 1313870, -4113730, -4678050, 1328230, -4110640, -4676720, 1313870, -4113730, -4678050, 1295980, -4097200, -4697370, 1291600, -4054760, -4735e3, 1313870, -4113730, -4678050, 1291600, -4054760, -4735e3, 1328230, -4110640, -4676720, 1230630, -3858390, -4910850, 1291600, -4054760, -4735e3, 1253380, -4011360, -4781690, 1230630, -3858390, -4910850, 1253380, -4011360, -4781690, 1184090, -3867120, -4915400, 1253380, -4011360, -4781690, 1169230, -3904180, -4889770, 1184090, -3867120, -4915400, 1253380, -4011360, -4781690, 1189e3, -3992350, -4813720, 1169230, -3904180, -4889770, 1950910, -5261620, -3021330, 1901410, -5227920, -3109500, 1891680, -5174590, -3202600, 1950910, -5261620, -3021330, 1891680, -5174590, -3202600, 1882550, -5144040, -3256380, 1950910, -5261620, -3021330, 1882550, -5144040, -3256380, 1897460, -5139460, -3254970, 1897460, -5139460, -3254970, 1882550, -5144040, -3256380, 1841860, -5010030, -3479400, 1882550, -5144040, -3256380, 1891680, -5174590, -3202600, 1877780, -5145500, -3256820, 1877780, -5145500, -3256820, 1822920, -5028750, -3462440, 1841860, -5010030, -3479400, 1877780, -5145500, -3256820, 1841860, -5010030, -3479400, 1882550, -5144040, -3256380, 1891680, -5174590, -3202600, 1847910, -5154510, -3259650, 1877780, -5145500, -3256820, 1847910, -5154510, -3259650, 1816450, -5139490, -3300520, 1822920, -5028750, -3462440, 1847910, -5154510, -3259650, 1822920, -5028750, -3462440, 1877780, -5145500, -3256820, 1735820, -4865290, -3728650, 1657490, -4847180, -3787020, 1637860, -4788870, -3868320, 1735820, -4865290, -3728650, 1637860, -4788870, -3868320, 1641280, -4717020, -3953630, 1514650, -4583420, -4154800, 1485640, -4504510, -4249840, 1466100, -4372600, -4391080, 1514650, -4583420, -4154800, 1466100, -4372600, -4391080, 1522040, -4580970, -4154800, 1522040, -4580970, -4154800, 1542120, -4657720, -4061650, 1514650, -4583420, -4154800, 1536950, -4575990, -4154800, 1522040, -4580970, -4154800, 1466100, -4372600, -4391080, 1583860, -4710020, -3985070, 1542120, -4657720, -4061650, 1522040, -4580970, -4154800, 1583860, -4710020, -3985070, 1522040, -4580970, -4154800, 1536950, -4575990, -4154800, 1536950, -4575990, -4154800, 1466100, -4372600, -4391080, 1461e3, -4323740, -4440550, 1536950, -4575990, -4154800, 1461e3, -4323740, -4440550, 1541030, -4574620, -4154800, 1541030, -4574620, -4154800, 1583860, -4710020, -3985070, 1536950, -4575990, -4154800, 1569830, -4564820, -4154800, 1541030, -4574620, -4154800, 1461e3, -4323740, -4440550, 1641280, -4717020, -3953630, 1583860, -4710020, -3985070, 1541030, -4574620, -4154800, 1641280, -4717020, -3953630, 1541030, -4574620, -4154800, 1569830, -4564820, -4154800, 1569830, -4564820, -4154800, 1461e3, -4323740, -4440550, 1459610, -4293180, -4470360, 1569830, -4564820, -4154800, 1459610, -4293180, -4470360, 1574050, -4563360, -4154800, 1641280, -4717020, -3953630, 1569830, -4564820, -4154800, 1574050, -4563360, -4154800, 1485640, -4504510, -4249840, 1449340, -4500380, -4266600, 1440630, -4411610, -4360590, 1466100, -4372600, -4391080, 1485640, -4504510, -4249840, 1440630, -4411610, -4360590, 1514650, -4583420, -4154800, 1499290, -4588470, -4154800, 1485640, -4504510, -4249840, 1542120, -4657720, -4061650, 1500170, -4594050, -4148350, 1499290, -4588470, -4154800, 1542120, -4657720, -4061650, 1499290, -4588470, -4154800, 1514650, -4583420, -4154800, 1459610, -4293180, -4470360, 1422190, -4290070, -4485280, 1415550, -4243440, -4531200, 1461e3, -4323740, -4440550, 1466100, -4372600, -4391080, 1430810, -4350190, -4424620, 1822100, -4956940, -3564230, 1751950, -4916800, -3653270, 1735820, -4865290, -3728650, 1221290, -3739810, -5003420, 1230630, -3858390, -4910850, 1209650, -3797060, -4963230, 2383430, -5422740, -2357190, 2289540, -5421880, -2449770, 2296830, -5407100, -2475320, 2225830, -4283410, -4154800, 2214910, -4289070, -4154800, 2206580, -4283560, -4164840, 2266300, -4322250, -4092650, 2214910, -4289070, -4154800, 2225830, -4283410, -4154800, 2266300, -4322250, -4092650, 2225830, -4283410, -4154800, 2263240, -4282830, -4135280, 1422120, -3564570, -5077230, 1413180, -3612330, -5046090, 1340200, -3425650, -5193040, 2821430, -4382330, -3663990, 2752020, -4490080, -3586030, 2786940, -4351520, -3726160, 3440750, 3530800, 4033080, 3427630, 3501400, 4069470, 3409580, 3452610, 4125550, 3415e3, 3540600, 4046260, 3427630, 3501400, 4069470, 3440750, 3530800, 4033080, 3451350, 3591950, 3969950, 3415e3, 3540600, 4046260, 3440750, 3530800, 4033080, 3395120, 3575650, 4032240, 3415e3, 3540600, 4046260, 3451350, 3591950, 3969950, 3427170, 3612210, 3972490, 3395120, 3575650, 4032240, 3451350, 3591950, 3969950, 3417330, 3409360, 4154800, 3486580, 3461590, 4053520, 3472630, 3472870, 4055830, 3417330, 3409360, 4154800, 3472630, 3472870, 4055830, 3414600, 3412110, 4154800, 3414600, 3412110, 4154800, 3397490, 3394230, 4183180, 3417330, 3409360, 4154800, 3403290, 3423380, 4154800, 3414600, 3412110, 4154800, 3472630, 3472870, 4055830, 3398730, 3420090, 4161200, 3397490, 3394230, 4183180, 3414600, 3412110, 4154800, 3398730, 3420090, 4161200, 3414600, 3412110, 4154800, 3403290, 3423380, 4154800, 3403290, 3423380, 4154800, 3472630, 3472870, 4055830, 3467990, 3504270, 4032890, 3403290, 3423380, 4154800, 3467990, 3504270, 4032890, 3402280, 3424380, 4154800, 3402280, 3424380, 4154800, 3398730, 3420090, 4161200, 3403290, 3423380, 4154800, 3400710, 3425950, 4154800, 3402280, 3424380, 4154800, 3467990, 3504270, 4032890, 3400710, 3425950, 4154800, 3467990, 3504270, 4032890, 3409580, 3452610, 4125550, 3400710, 3425950, 4154800, 3398730, 3420090, 4161200, 3402280, 3424380, 4154800, 3440750, 3530800, 4033080, 3409580, 3452610, 4125550, 3467990, 3504270, 4032890, 3495450, 3423e3, 4078410, 3495700, 3346720, 4140610, 3526710, 3365060, 4099520, 3463120, 3362840, 4154800, 3495700, 3346720, 4140610, 3495450, 3423e3, 4078410, 3463120, 3362840, 4154800, 3495450, 3423e3, 4078410, 3424280, 3402390, 4154800, 3397490, 3394230, 4183180, 3463120, 3362840, 4154800, 3424280, 3402390, 4154800, 3424280, 3402390, 4154800, 3495450, 3423e3, 4078410, 3486580, 3461590, 4053520, 3424280, 3402390, 4154800, 3486580, 3461590, 4053520, 3417330, 3409360, 4154800, 3397490, 3394230, 4183180, 3424280, 3402390, 4154800, 3417330, 3409360, 4154800, 3463120, 3362840, 4154800, 3491590, 3333270, 4154800, 3495700, 3346720, 4140610, 3397490, 3394230, 4183180, 3487070, 3318690, 4170140, 3491590, 3333270, 4154800, 3397490, 3394230, 4183180, 3491590, 3333270, 4154800, 3463120, 3362840, 4154800, 3392600, 3433980, 4154800, 3400710, 3425950, 4154800, 3409580, 3452610, 4125550, 3392600, 3433980, 4154800, 3409580, 3452610, 4125550, 3384730, 3451590, 4146670, 3392600, 3433980, 4154800, 3398730, 3420090, 4161200, 3400710, 3425950, 4154800, 3394520, 3501880, 4096540, 3409580, 3452610, 4125550, 3427630, 3501400, 4069470, 3451350, 3591950, 3969950, 3440750, 3530800, 4033080, 3448620, 3538310, 4019840, 498082, -868284, -6277980, 503286, -941906, -6267010, 473035, -899298, -6275560, 498082, -868284, -6277980, 537331, -974942, -6259180, 503286, -941906, -6267010, 498082, -868284, -6277980, 565329, -1003710, -6252210, 537331, -974942, -6259180, 560514, -954309, -6260320, 565329, -1003710, -6252210, 498082, -868284, -6277980, 560514, -954309, -6260320, 498082, -868284, -6277980, 527463, -908671, -6269910, 503286, -941906, -6267010, 472242, -969860, -6265180, 473035, -899298, -6275560, 473035, -899298, -6275560, 472242, -969860, -6265180, 434854, -911202, -6276600, 472242, -969860, -6265180, 429898, -953969, -6270630, 434854, -911202, -6276600, 472242, -969860, -6265180, 431667, -957896, -6269910, 429898, -953969, -6270630, 472242, -969860, -6265180, 435492, -991609, -6264440, 431667, -957896, -6269910, -1090460, -414052, -6249550, -1138740, -426166, -6240180, -1180690, -424003, -6232580, -1090460, -414052, -6249550, -1180690, -424003, -6232580, -1089470, -372415, -6252320, -1180690, -424003, -6232580, -1220370, -414380, -6225620, -1089470, -372415, -6252320, -1089470, -372415, -6252320, -1220370, -414380, -6225620, -1134630, -359053, -6245120, -1220370, -414380, -6225620, -1175230, -358699, -6237670, -1134630, -359053, -6245120, -1181640, -359754, -6236410, -1249600, -379515, -6222070, -1214460, -354832, -6230430, -1220370, -414380, -6225620, -1249600, -379515, -6222070, -1181640, -359754, -6236410, -1220370, -414380, -6225620, -1181640, -359754, -6236410, -1175230, -358699, -6237670, 922182, -977235, -6214100, 925634, -980986, -6213e3, 901323, -984787, -6215950, 901323, -984787, -6215950, 884135, -987165, -6218030, 719760, -758633, -6270730, 901323, -984787, -6215950, 719760, -758633, -6270730, 922182, -977235, -6214100, 926910, -975463, -6213670, 925634, -980986, -6213e3, 922182, -977235, -6214100, 926910, -975463, -6213670, 922182, -977235, -6214100, 719760, -758633, -6270730, 926910, -975463, -6213670, 719760, -758633, -6270730, 934532, -939595, -6218030, 760874, -757707, -6266020, 934532, -939595, -6218030, 719760, -758633, -6270730, 920613, -886570, -6227820, 934532, -939595, -6218030, 760874, -757707, -6266020, 806145, -760557, -6260050, 920613, -886570, -6227820, 760874, -757707, -6266020, 806145, -760557, -6260050, 878986, -833832, -6241010, 920613, -886570, -6227820, 806145, -760557, -6260050, 846322, -799555, -6249950, 878986, -833832, -6241010, 677276, -762470, -6274970, 766010, -924784, -6243070, 635195, -770063, -6278420, 677276, -762470, -6274970, 799533, -949950, -6235140, 766010, -924784, -6243070, 677276, -762470, -6274970, 834718, -970689, -6227380, 799533, -949950, -6235140, 874426, -993913, -6218320, 875334, -994991, -6218030, 873822, -994109, -6218380, 873822, -994109, -6218380, 834718, -970689, -6227380, 677276, -762470, -6274970, 873822, -994109, -6218380, 677276, -762470, -6274970, 874426, -993913, -6218320, 877820, -992799, -6218030, 875334, -994991, -6218030, 874426, -993913, -6218320, 877820, -992799, -6218030, 874426, -993913, -6218320, 677276, -762470, -6274970, 877820, -992799, -6218030, 677276, -762470, -6274970, 884135, -987165, -6218030, 719760, -758633, -6270730, 884135, -987165, -6218030, 677276, -762470, -6274970, 606718, -800830, -6277390, 638956, -879061, -6263800, 609722, -844290, -6271440, 689896, -878375, -6258530, 638956, -879061, -6263800, 606718, -800830, -6277390, 635195, -770063, -6278420, 689896, -878375, -6258530, 606718, -800830, -6277390, 635195, -770063, -6278420, 726069, -896342, -6251930, 689896, -878375, -6258530, 766010, -924784, -6243070, 726069, -896342, -6251930, 635195, -770063, -6278420, -971340, -1518370, -6097630, -970476, -1516210, -6098300, -924070, -1500700, -6109260, -971340, -1518370, -6097630, -924070, -1500700, -6109260, -956507, -1527760, -6097630, -956507, -1527760, -6097630, -983860, -1549960, -6087740, -971340, -1518370, -6097630, -936991, -1539810, -6097630, -956507, -1527760, -6097630, -924070, -1500700, -6109260, -941571, -1553980, -6093360, -983860, -1549960, -6087740, -956507, -1527760, -6097630, -941571, -1553980, -6093360, -956507, -1527760, -6097630, -936991, -1539810, -6097630, -936991, -1539810, -6097630, -924070, -1500700, -6109260, -883137, -1515430, -6111660, -936991, -1539810, -6097630, -883137, -1515430, -6111660, -927972, -1545260, -6097630, -927972, -1545260, -6097630, -941571, -1553980, -6093360, -936991, -1539810, -6097630, -903831, -1559500, -6097630, -927972, -1545260, -6097630, -883137, -1515430, -6111660, -903831, -1559500, -6097630, -883137, -1515430, -6111660, -897898, -1560300, -6098300, -903831, -1559500, -6097630, -941571, -1553980, -6093360, -927972, -1545260, -6097630, -871523, -1553540, -6103810, -897898, -1560300, -6098300, -883137, -1515430, -6111660, -895080, -1564540, -6097630, -897898, -1560300, -6098300, -871523, -1553540, -6103810, -895080, -1564540, -6097630, -871523, -1553540, -6103810, -873148, -1576890, -6097630, -874233, -1595230, -6092730, -895080, -1564540, -6097630, -873148, -1576890, -6097630, -1050970, -1451220, -6100760, -1060600, -1457430, -6097630, -1069910, -1450610, -6097630, -1098490, -1481380, -6085220, -1103180, -1449020, -6092110, -1069910, -1450610, -6097630, -1098490, -1481380, -6085220, -1069910, -1450610, -6097630, -1060600, -1457430, -6097630, -1053720, -1462410, -6097630, -1060600, -1457430, -6097630, -1050970, -1451220, -6100760, -1057890, -1479830, -6092730, -1098490, -1481380, -6085220, -1060600, -1457430, -6097630, -1057890, -1479830, -6092730, -1060600, -1457430, -6097630, -1053720, -1462410, -6097630, -1053720, -1462410, -6097630, -1050970, -1451220, -6100760, -1011990, -1465920, -6103810, -1053720, -1462410, -6097630, -1011990, -1465920, -6103810, -1037620, -1473870, -6097630, -1037620, -1473870, -6097630, -1057890, -1479830, -6092730, -1053720, -1462410, -6097630, -1032700, -1477320, -6097630, -1037620, -1473870, -6097630, -1011990, -1465920, -6103810, -1032700, -1477320, -6097630, -1011990, -1465920, -6103810, -994567, -1472730, -6105030, -1032700, -1477320, -6097630, -1057890, -1479830, -6092730, -1037620, -1473870, -6097630, 307498, -1280440, -6219790, 322991, -1390940, -6195390, 324789, -1434250, -6185490, 355121, -1363260, -6199760, 322991, -1390940, -6195390, 307498, -1280440, -6219790, 343062, -1260290, -6222030, 355121, -1363260, -6199760, 307498, -1280440, -6219790, 373518, -1327310, -6206430, 355121, -1363260, -6199760, 343062, -1260290, -6222030, 377189, -1286230, -6214800, 373518, -1327310, -6206430, 343062, -1260290, -6222030, 307498, -1280440, -6219790, 324789, -1434250, -6185490, 269629, -1260490, -6225580, 408309, -1755630, -6097630, 269629, -1260490, -6225580, 324789, -1434250, -6185490, 366807, -1424080, -6185490, 408309, -1755630, -6097630, 324789, -1434250, -6185490, 366807, -1424080, -6185490, 420782, -1715950, -6108e3, 408309, -1755630, -6097630, 463291, -1715840, -6104970, 420782, -1715950, -6108e3, 366807, -1424080, -6185490, 1054330, -2248890, -5854950, 1088540, -2374420, -5799240, 1011280, -2219910, -5873450, 1088540, -2374420, -5799240, 989364, -2187640, -5889160, 1011280, -2219910, -5873450, 1088540, -2374420, -5799240, 1047080, -2358070, -5813430, 989364, -2187640, -5889160, 738594, -1644210, -6097630, 735939, -1645400, -6097630, 649165, -1448580, -6156730, 989364, -2187640, -5889160, 1047080, -2358070, -5813430, 735939, -1645400, -6097630, 989364, -2187640, -5889160, 735939, -1645400, -6097630, 738594, -1644210, -6097630, 649165, -1448580, -6156730, 735939, -1645400, -6097630, 731790, -1647250, -6097630, 1047080, -2358070, -5813430, 1005370, -2334800, -5830050, 731790, -1647250, -6097630, 1047080, -2358070, -5813430, 731790, -1647250, -6097630, 735939, -1645400, -6097630, 649165, -1448580, -6156730, 731790, -1647250, -6097630, 716703, -1653870, -6097630, 1005370, -2334800, -5830050, 766167, -1816780, -6045380, 716703, -1653870, -6097630, 1005370, -2334800, -5830050, 716703, -1653870, -6097630, 731790, -1647250, -6097630, 1005370, -2334800, -5830050, 779311, -1858580, -6031070, 766167, -1816780, -6045380, 793441, -1986840, -5988480, 829706, -2100550, -5944890, 798190, -2024820, -5975200, 861465, -2129650, -5930100, 829706, -2100550, -5944890, 793441, -1986840, -5988480, 788787, -1944250, -6002960, 861465, -2129650, -5930100, 793441, -1986840, -5988480, 892316, -2163260, -5913460, 861465, -2129650, -5930100, 788787, -1944250, -6002960, 784954, -1901140, -6017160, 892316, -2163260, -5913460, 788787, -1944250, -6002960, 913824, -2198330, -5897330, 892316, -2163260, -5913460, 784954, -1901140, -6017160, 779311, -1858580, -6031070, 913824, -2198330, -5897330, 784954, -1901140, -6017160, 971333, -2316540, -5843e3, 913824, -2198330, -5897330, 779311, -1858580, -6031070, 1005370, -2334800, -5830050, 971333, -2316540, -5843e3, 779311, -1858580, -6031070, 971333, -2316540, -5843e3, 933964, -2281910, -5862560, 923262, -2242630, -5879270, 971333, -2316540, -5843e3, 923262, -2242630, -5879270, 913824, -2198330, -5897330, -359893, -1889670, -6060750, -407105, -1965150, -6033880, -397704, -1903370, -6054140, -360714, -1959400, -6038670, -407105, -1965150, -6033880, -359893, -1889670, -6060750, -316264, -1903790, -6058780, -360714, -1959400, -6038670, -359893, -1889670, -6060750, -309740, -1959700, -6041380, -360714, -1959400, -6038670, -316264, -1903790, -6058780, -274601, -1906040, -6060090, -309740, -1959700, -6041380, -316264, -1903790, -6058780, -270171, -1950840, -6046110, -309740, -1959700, -6041380, -274601, -1906040, -6060090, -234652, -1915570, -6058780, -270171, -1950840, -6046110, -274601, -1906040, -6060090, -234253, -1968040, -6042060, -270171, -1950840, -6046110, -234652, -1915570, -6058780, -207537, -1910310, -6061410, -234253, -1968040, -6042060, -234652, -1915570, -6058780, 863505, -1582190, -6097630, 862914, -1582510, -6097630, 839349, -1537930, -6112210, 946568, -1734380, -6044030, 988916, -1822330, -6011510, 862914, -1582510, -6097630, 946568, -1734380, -6044030, 862914, -1582510, -6097630, 863505, -1582190, -6097630, 865716, -1580980, -6097630, 863505, -1582190, -6097630, 839349, -1537930, -6112210, 946568, -1734380, -6044030, 863505, -1582190, -6097630, 865716, -1580980, -6097630, 946568, -1734380, -6044030, 865716, -1580980, -6097630, 936327, -1694890, -6056730, 865716, -1580980, -6097630, 839349, -1537930, -6112210, 875539, -1568350, -6099480, 865716, -1580980, -6097630, 875539, -1568350, -6099480, 878295, -1574030, -6097630, 878295, -1574030, -6097630, 936327, -1694890, -6056730, 865716, -1580980, -6097630, 875539, -1568350, -6099480, 878301, -1574020, -6097630, 878295, -1574030, -6097630, 918410, -1657110, -6069830, 936327, -1694890, -6056730, 878295, -1574030, -6097630, 918410, -1657110, -6069830, 878295, -1574030, -6097630, 878301, -1574020, -6097630, 879029, -1573620, -6097630, 878301, -1574020, -6097630, 875539, -1568350, -6099480, 906990, -1615600, -6082640, 918410, -1657110, -6069830, 878301, -1574020, -6097630, 906990, -1615600, -6082640, 878301, -1574020, -6097630, 879029, -1573620, -6097630, 806712, -1514870, -6122290, 845511, -1591880, -6097630, 844188, -1592580, -6097630, 999093, -1901110, -5985550, 1008280, -1942730, -5970720, 844188, -1592580, -6097630, 999093, -1901110, -5985550, 844188, -1592580, -6097630, 845511, -1591880, -6097630, 848172, -1590460, -6097630, 845511, -1591880, -6097630, 806712, -1514870, -6122290, 998098, -1861970, -5997920, 999093, -1901110, -5985550, 845511, -1591880, -6097630, 998098, -1861970, -5997920, 845511, -1591880, -6097630, 848172, -1590460, -6097630, 848172, -1590460, -6097630, 806712, -1514870, -6122290, 839349, -1537930, -6112210, 848172, -1590460, -6097630, 839349, -1537930, -6112210, 861853, -1583090, -6097630, 861853, -1583090, -6097630, 998098, -1861970, -5997920, 848172, -1590460, -6097630, 839349, -1537930, -6112210, 862914, -1582510, -6097630, 861853, -1583090, -6097630, 988916, -1822330, -6011510, 998098, -1861970, -5997920, 861853, -1583090, -6097630, 988916, -1822330, -6011510, 861853, -1583090, -6097630, 862914, -1582510, -6097630, 810510, -1609980, -6097630, 764653, -1520030, -6126380, 806712, -1514870, -6122290, 810510, -1609980, -6097630, 806712, -1514870, -6122290, 841947, -1593770, -6097630, 841947, -1593770, -6097630, 1023e3, -2024960, -5941020, 810510, -1609980, -6097630, 806712, -1514870, -6122290, 843424, -1592980, -6097630, 841947, -1593770, -6097630, 1018800, -1981170, -5956390, 1023e3, -2024960, -5941020, 841947, -1593770, -6097630, 1018800, -1981170, -5956390, 841947, -1593770, -6097630, 843424, -1592980, -6097630, 806712, -1514870, -6122290, 844188, -1592580, -6097630, 843424, -1592980, -6097630, 1008280, -1942730, -5970720, 1018800, -1981170, -5956390, 843424, -1592980, -6097630, 1008280, -1942730, -5970720, 843424, -1592980, -6097630, 844188, -1592580, -6097630, 704476, -1467250, -6146290, 777147, -1626350, -6097630, 773744, -1627970, -6097630, 990884, -2104180, -5919040, 985018, -2142810, -5906240, 773744, -1627970, -6097630, 990884, -2104180, -5919040, 773744, -1627970, -6097630, 777147, -1626350, -6097630, 783011, -1623530, -6097630, 777147, -1626350, -6097630, 704476, -1467250, -6146290, 1010260, -2067770, -5928530, 990884, -2104180, -5919040, 777147, -1626350, -6097630, 1010260, -2067770, -5928530, 777147, -1626350, -6097630, 783011, -1623530, -6097630, 783011, -1623530, -6097630, 704476, -1467250, -6146290, 735877, -1491930, -6136730, 783011, -1623530, -6097630, 735877, -1491930, -6136730, 796035, -1617190, -6097630, 796035, -1617190, -6097630, 1010260, -2067770, -5928530, 783011, -1623530, -6097630, 800849, -1614810, -6097630, 796035, -1617190, -6097630, 735877, -1491930, -6136730, 1023e3, -2024960, -5941020, 1010260, -2067770, -5928530, 796035, -1617190, -6097630, 1023e3, -2024960, -5941020, 796035, -1617190, -6097630, 800849, -1614810, -6097630, 800849, -1614810, -6097630, 735877, -1491930, -6136730, 764653, -1520030, -6126380, 800849, -1614810, -6097630, 764653, -1520030, -6126380, 810510, -1609980, -6097630, 1023e3, -2024960, -5941020, 800849, -1614810, -6097630, 810510, -1609980, -6097630, 738594, -1644210, -6097630, 649165, -1448580, -6156730, 704476, -1467250, -6146290, 738594, -1644210, -6097630, 704476, -1467250, -6146290, 771874, -1628860, -6097630, 771874, -1628860, -6097630, 989364, -2187640, -5889160, 738594, -1644210, -6097630, 704476, -1467250, -6146290, 773744, -1627970, -6097630, 771874, -1628860, -6097630, 985018, -2142810, -5906240, 989364, -2187640, -5889160, 771874, -1628860, -6097630, 985018, -2142810, -5906240, 771874, -1628860, -6097630, 773744, -1627970, -6097630, 151e4, -2378990, -5702780, 1492780, -2445040, -5679490, 1452140, -2380310, -5717150, 1492780, -2445040, -5679490, 1423060, -2372600, -5727580, 1452140, -2380310, -5717150, 1492780, -2445040, -5679490, 1452430, -2432860, -5695060, 1423060, -2372600, -5727580, 1423060, -2372600, -5727580, 1452430, -2432860, -5695060, 1400050, -2404500, -572e4, 1452430, -2432860, -5695060, 1408750, -2428980, -5707590, 1400050, -2404500, -572e4, 1400050, -2404500, -572e4, 1408750, -2428980, -5707590, 1360560, -2415780, -5724740, 1408750, -2428980, -5707590, 1367970, -2438680, -5713330, 1360560, -2415780, -5724740, 1360560, -2415780, -5724740, 1367970, -2438680, -5713330, 1320200, -2411140, -5736060, 1367970, -2438680, -5713330, 1328450, -2438060, -5722850, 1320200, -2411140, -5736060, 1320200, -2411140, -5736060, 1328450, -2438060, -5722850, 1277560, -2404970, -5748210, 1328450, -2438060, -5722850, 1286920, -2424600, -5737930, 1277560, -2404970, -5748210, 1277560, -2404970, -5748210, 1286920, -2424600, -5737930, 1243250, -2389470, -5762080, 1286920, -2424600, -5737930, 1243440, -2440540, -5740740, 1243250, -2389470, -5762080, 1243250, -2389470, -5762080, 1243440, -2440540, -5740740, 1219300, -2357180, -5780350, 1219300, -2357180, -5780350, 1243440, -2440540, -5740740, 1169070, -2275310, -5823080, 1204300, -2322350, -5797450, 1219300, -2357180, -5780350, 1169070, -2275310, -5823080, 1207440, -2282390, -5812550, 1204300, -2322350, -5797450, 1169070, -2275310, -5823080, 151e4, -2378990, -5702780, 1532310, -2434310, -5673610, 1492780, -2445040, -5679490, 1543440, -2397120, -5686330, 1532310, -2434310, -5673610, 151e4, -2378990, -5702780, 1169070, -2275310, -5823080, 1243440, -2440540, -5740740, 1205260, -2430970, -5752850, 1169070, -2275310, -5823080, 1205260, -2430970, -5752850, 1128040, -2287010, -5826570, 1205260, -2430970, -5752850, 1169860, -2417440, -5765760, 1128040, -2287010, -5826570, 1128040, -2287010, -5826570, 1169860, -2417440, -5765760, 1091300, -2266960, -5841290, 1169860, -2417440, -5765760, 1134540, -2385920, -5785780, 1091300, -2266960, -5841290, 1091300, -2266960, -5841290, 1134540, -2385920, -5785780, 1054330, -2248890, -5854950, 1134540, -2385920, -5785780, 1088540, -2374420, -5799240, 1054330, -2248890, -5854950, 672744, -1672240, -6097630, 568357, -1438900, -6166920, 608746, -1447640, -6161050, 672744, -1672240, -6097630, 608746, -1447640, -6161050, 682742, -1668180, -6097630, 682742, -1668180, -6097630, 710274, -1754160, -6070480, 672744, -1672240, -6097630, 608746, -1447640, -6161050, 695373, -1662950, -6097630, 682742, -1668180, -6097630, 741075, -1777620, -6060030, 710274, -1754160, -6070480, 682742, -1668180, -6097630, 741075, -1777620, -6060030, 682742, -1668180, -6097630, 695373, -1662950, -6097630, 699681, -1661150, -6097630, 695373, -1662950, -6097630, 608746, -1447640, -6161050, 766167, -1816780, -6045380, 741075, -1777620, -6060030, 695373, -1662950, -6097630, 766167, -1816780, -6045380, 695373, -1662950, -6097630, 699681, -1661150, -6097630, 699681, -1661150, -6097630, 608746, -1447640, -6161050, 649165, -1448580, -6156730, 699681, -1661150, -6097630, 649165, -1448580, -6156730, 716703, -1653870, -6097630, 716703, -1653870, -6097630, 766167, -1816780, -6045380, 699681, -1661150, -6097630, 503682, -1730680, -6097630, 500723, -1729360, -6098250, 450679, -1404270, -6184480, 503682, -1730680, -6097630, 450679, -1404270, -6184480, 533356, -1721770, -6097630, 533356, -1721770, -6097630, 539429, -1746230, -6090190, 503682, -1730680, -6097630, 566463, -1711160, -6097630, 533356, -1721770, -6097630, 450679, -1404270, -6184480, 580936, -1748310, -6085800, 539429, -1746230, -6090190, 533356, -1721770, -6097630, 580936, -1748310, -6085800, 533356, -1721770, -6097630, 566463, -1711160, -6097630, 566463, -1711160, -6097630, 450679, -1404270, -6184480, 491275, -1395110, -6183470, 566463, -1711160, -6097630, 491275, -1395110, -6183470, 571738, -1709410, -6097630, 571738, -1709410, -6097630, 580936, -1748310, -6085800, 566463, -1711160, -6097630, 608673, -1696610, -6097630, 571738, -1709410, -6097630, 491275, -1395110, -6183470, 628044, -1745320, -6082e3, 580936, -1748310, -6085800, 571738, -1709410, -6097630, 628044, -1745320, -6082e3, 571738, -1709410, -6097630, 608673, -1696610, -6097630, 608673, -1696610, -6097630, 491275, -1395110, -6183470, 526199, -1429990, -6172690, 608673, -1696610, -6097630, 526199, -1429990, -6172690, 612240, -1695320, -6097630, 612240, -1695320, -6097630, 628044, -1745320, -6082e3, 608673, -1696610, -6097630, 642898, -1683940, -6097630, 612240, -1695320, -6097630, 526199, -1429990, -6172690, 671928, -1744590, -6077550, 628044, -1745320, -6082e3, 612240, -1695320, -6097630, 671928, -1744590, -6077550, 612240, -1695320, -6097630, 642898, -1683940, -6097630, 642898, -1683940, -6097630, 526199, -1429990, -6172690, 568357, -1438900, -6166920, 642898, -1683940, -6097630, 568357, -1438900, -6166920, 650841, -1680880, -6097630, 650841, -1680880, -6097630, 671928, -1744590, -6077550, 642898, -1683940, -6097630, 672744, -1672240, -6097630, 650841, -1680880, -6097630, 568357, -1438900, -6166920, 710274, -1754160, -6070480, 671928, -1744590, -6077550, 650841, -1680880, -6097630, 710274, -1754160, -6070480, 650841, -1680880, -6097630, 672744, -1672240, -6097630, 408446, -1421560, -6183470, 463291, -1715840, -6104970, 366807, -1424080, -6185490, 500723, -1729360, -6098250, 463291, -1715840, -6104970, 408446, -1421560, -6183470, 450679, -1404270, -6184480, 500723, -1729360, -6098250, 408446, -1421560, -6183470, 377038, -1762610, -6097630, 269629, -1260490, -6225580, 408309, -1755630, -6097630, 377038, -1762610, -6097630, 408309, -1755630, -6097630, 408300, -1755630, -6097630, 408300, -1755630, -6097630, 381862, -1785170, -6090810, 377038, -1762610, -6097630, 376967, -1762630, -6097630, 258960, -1216720, -6234680, 269629, -1260490, -6225580, 376967, -1762630, -6097630, 269629, -1260490, -6225580, 377038, -1762610, -6097630, 381862, -1785170, -6090810, 376967, -1762630, -6097630, 377038, -1762610, -6097630, 376927, -1762640, -6097630, 249218, -1174880, -6243040, 258960, -1216720, -6234680, 376927, -1762640, -6097630, 258960, -1216720, -6234680, 376967, -1762630, -6097630, 381862, -1785170, -6090810, 376927, -1762640, -6097630, 376967, -1762630, -6097630, 376927, -1762640, -6097630, 335574, -1770980, -6097630, 249218, -1174880, -6243040, 381862, -1785170, -6090810, 337094, -1783490, -6093920, 335574, -1770980, -6097630, 381862, -1785170, -6090810, 335574, -1770980, -6097630, 376927, -1762640, -6097630, 708859, -1826060, -6049550, 779224, -2036160, -5973860, 780427, -2086170, -5956540, 774616, -1989400, -5990080, 779224, -2036160, -5973860, 708859, -1826060, -6049550, 732062, -1859410, -6036700, 774616, -1989400, -5990080, 708859, -1826060, -6049550, 766693, -1941520, -6006670, 774616, -1989400, -5990080, 732062, -1859410, -6036700, 753100, -1895710, -6022900, 766693, -1941520, -6006670, 732062, -1859410, -6036700, 708859, -1826060, -6049550, 780427, -2086170, -5956540, 785340, -2125830, -5941950, 708859, -1826060, -6049550, 785340, -2125830, -5941950, 666261, -1826520, -6054220, 785340, -2125830, -5941950, 778788, -2169500, -5927110, 666261, -1826520, -6054220, 666261, -1826520, -6054220, 778788, -2169500, -5927110, 623790, -1819440, -6060820, 778788, -2169500, -5927110, 738567, -2166280, -5933390, 623790, -1819440, -6060820, 623790, -1819440, -6060820, 738567, -2166280, -5933390, 676012, -2046730, -5982750, 738567, -2166280, -5933390, 701683, -2126900, -5951960, 676012, -2046730, -5982750, 623790, -1819440, -6060820, 676012, -2046730, -5982750, 661670, -2010230, -5996620, 623790, -1819440, -6060820, 661670, -2010230, -5996620, 611196, -1869790, -6046860, 661670, -2010230, -5996620, 634823, -1962490, -6015180, 611196, -1869790, -6046860, 611196, -1869790, -6046860, 634823, -1962490, -6015180, 568479, -1867990, -6051550, 634823, -1962490, -6015180, 596306, -1978840, -6013780, 568479, -1867990, -6051550, 568479, -1867990, -6051550, 596306, -1978840, -6013780, 569150, -1973910, -6018e3, 596306, -1978840, -6013780, 569150, -1973910, -6018e3, 569150, -1973910, -6018e3, 568479, -1867990, -6051550, 569150, -1973910, -6018e3, 528002, -1864680, -6056210, 569150, -1973910, -6018e3, 511202, -1901710, -6046190, 528002, -1864680, -6056210, 569150, -1973910, -6018e3, 520538, -1944380, -6031900, 511202, -1901710, -6046190, -324333, -337538, -6339610, -417906, -255762, -6337970, .279735, -2.44552e-8, -6356750, -324333, -337538, -6339610, .279735, -2.44552e-8, -6356750, -.279735, -0, -6356750, -324333, -337538, -6339610, -.279735, -0, -6356750, 268633, .00946547, -6351110, 215480, 91783.3, -6352460, 268633, -.00811972, -6351110, -.279735, -0, -6356750, .279735, 2.44552e-8, -6356750, 215480, 91783.3, -6352460, -.279735, -0, -6356750, -432754, -293118, -6335370, -417906, -255762, -6337970, -324333, -337538, -6339610, -432754, -293118, -6335370, -324333, -337538, -6339610, -326091, -377181, -6337300, -326091, -377181, -6337300, -324333, -337538, -6339610, 268633, .00946547, -6351110, -326091, -377181, -6337300, 268633, .00946547, -6351110, 288919, .0153405, -6350230, 288919, 276251e-9, -6350230, 268633, -.00811972, -6351110, 215480, 91783.3, -6352460, 288919, 276251e-9, -6350230, 215480, 91783.3, -6352460, 226889, 103770, -6351890, .279735, 2.44552e-8, -6356750, 226889, 103770, -6351890, 215480, 91783.3, -6352460, -442446, -332101, -6332800, -432754, -293118, -6335370, -326091, -377181, -6337300, -442446, -332101, -6332800, -326091, -377181, -6337300, -324699, -415611, -6334980, -324699, -415611, -6334980, -326091, -377181, -6337300, 288919, .00732572, -6350230, -324699, -415611, -6334980, 288919, .00732572, -6350230, 308455, .0104402, -6349310, 308455, .00657095, -6349310, 288919, .0045858, -6350230, 226889, 103770, -6351890, 308455, .00657095, -6349310, 226889, 103770, -6351890, 237222, 115703, -6351310, .279735, 2.44552e-8, -6356750, 237222, 115703, -6351310, 226889, 103770, -6351890, -482899, -365320, -6328040, -442446, -332101, -6332800, -324699, -415611, -6334980, -482899, -365320, -6328040, -324699, -415611, -6334980, -317043, -473485, -6331330, -317043, -473485, -6331330, -324699, -415611, -6334980, 308455, .00562862, -6349310, -317043, -473485, -6331330, 308455, .00562862, -6349310, 337904, -.00553014, -6347820, 337904, .0111087, -6347820, 308455, .00415412, -6349310, 237222, 115703, -6351310, 337904, .0111087, -6347820, 237222, 115703, -6351310, 251592, 134321, -6350390, .279735, 2.44552e-8, -6356750, 251592, 134321, -6350390, 237222, 115703, -6351310, -281190, -590694, -6323230, -482899, -365320, -6328040, -317043, -473485, -6331330, 337904, -.00929269, -6347820, 571553, -.00840434, -6331180, 397948, -642387, -6311980, 337904, -.00929269, -6347820, 397948, -642387, -6311980, -281190, -590694, -6323230, 337904, -.00929269, -6347820, -281190, -590694, -6323230, -317043, -473485, -6331330, 571553, .00454614, -6331180, 337904, .0088775, -6347820, 251592, 134321, -6350390, 571553, .00454614, -6331180, 251592, 134321, -6350390, 318904, 296594, -6341920, .279735, 2.44552e-8, -6356750, 318904, 296594, -6341920, 251592, 134321, -6350390, 432763, -666602, -6307210, 397948, -642387, -6311980, 571553, -.00178114, -6331180, 432763, -666602, -6307210, 571553, -.00178114, -6331180, 604271, -.00544919, -6328160, 604271, -.00544919, -6328160, 571553, -.00178114, -6331180, 318904, 296594, -6341920, 604271, -.00544919, -6328160, 318904, 296594, -6341920, 322468, 319948, -6340610, .279735, 2.44552e-8, -6356750, 322468, 319948, -6340610, 318904, 296594, -6341920, 470227, -680690, -6303050, 432763, -666602, -6307210, 604271, -.00453228, -6328160, 470227, -680690, -6303050, 604271, -.00453228, -6328160, 633462, -.0114829, -6325320, 633462, -.0114829, -6325320, 604271, -.00453228, -6328160, 322468, 319948, -6340610, 633462, -.0114829, -6325320, 322468, 319948, -6340610, 324601, 340704, -6339430, .279735, 2.44552e-8, -6356750, 324594, 340696, -6339430, 322468, 319948, -6340610, 511305, -694020, -6298430, 470227, -680690, -6303050, 633462, -.00916424, -6325320, 511305, -694020, -6298430, 633462, -.00916424, -6325320, 665016, .00512766, -6322100, 665016, .00512766, -6322100, 633462, -.00916424, -6325320, 324601, 340704, -6339430, 665016, .00512766, -6322100, 324601, 340704, -6339430, 325844, 362975, -6338140, .279735, 2.44552e-8, -6356750, 325844, 362975, -6338140, 324594, 340696, -6339430, 553636, -697104, -6294530, 511305, -694020, -6298430, 665016, .00981016, -6322100, 553636, -697104, -6294530, 665016, .00981016, -6322100, 692945, -.00259398, -6319120, 692945, -.00259398, -6319120, 665016, .00981016, -6322100, 325844, 362975, -6338140, 692945, -.00259398, -6319120, 325844, 362975, -6338140, 326080, 382532, -6336980, .279735, 2.44552e-8, -6356750, 326080, 382532, -6336980, 325844, 362975, -6338140, 646721, -599046, -6295740, 553636, -697104, -6294530, 692945, -.00758147, -6319120, 646721, -599046, -6295740, 692945, -.00758147, -6319120, 712970, -.0118815, -6316910, 712970, -.0118815, -6316910, 692945, -.00758147, -6319120, 326080, 382532, -6336980, 712970, -.0118815, -6316910, 326080, 382532, -6336980, 325770, 396439, -6336150, .279735, 2.44552e-8, -6356750, 325770, 396439, -6336150, 326080, 382532, -6336980, 688763, -623701, -6288930, 646721, -599046, -6295740, 712970, -.00805054, -6316910, 688763, -623701, -6288930, 712970, -.00805054, -6316910, 753787, -.00444764, -6312200, 753787, -.00444764, -6312200, 712970, -.00805054, -6316910, 325770, 396439, -6336150, 753787, -.00444764, -6312200, 325770, 396439, -6336150, 323956, 424440, -6334440, .279735, 2.44552e-8, -6356750, 323956, 424440, -6334440, 325770, 396439, -6336150, 728279, -627999, -6284080, 688763, -623701, -6288930, 753787, -349011e-9, -6312200, 728279, -627999, -6284080, 753787, -349011e-9, -6312200, 785073, -.00799695, -6308410, 785073, -.00799695, -6308410, 753787, -349011e-9, -6312200, 323956, 424440, -6334440, 785073, -.00799695, -6308410, 323956, 424440, -6334440, 321557, 445566, -6333120, .279735, 2.44552e-8, -6356750, 321558, 445565, -6333120, 323956, 424440, -6334440, 756954, -596623, -6283760, 728279, -627999, -6284080, 785073, -.00782055, -6308410, 756954, -596623, -6283760, 785073, -.00782055, -6308410, 795912, .00166133, -6307060, 795912, .00166133, -6307060, 785073, -.00782055, -6308410, 321557, 445566, -6333120, 795912, .00166133, -6307060, 321557, 445566, -6333120, 320530, 452796, -6332660, .279735, 2.44552e-8, -6356750, 320530, 452796, -6332660, 321558, 445565, -6333120, 796282, -584215, -6280080, 756954, -596623, -6283760, 795912, .005584, -6307060, 796282, -584215, -6280080, 795912, .005584, -6307060, 823031, -.00865532, -6303610, 823031, -.00865532, -6303610, 795912, .005584, -6307060, 320530, 452796, -6332660, 823031, -.00865532, -6303610, 320530, 452796, -6332660, 317549, 470733, -6331510, .279735, 2.44552e-8, -6356750, 317549, 470733, -6331510, 320530, 452796, -6332660, 834638, -571197, -6276330, 796282, -584215, -6280080, 823031, -.0114658, -6303610, 834638, -571197, -6276330, 823031, -.0114658, -6303610, 850233, -.01574, -6300020, 850233, -.01574, -6300020, 823031, -.0114658, -6303610, 317549, 470733, -6331510, 850233, -.01574, -6300020, 317549, 470733, -6331510, 313986, 488462, -6330350, .279735, 2.44552e-8, -6356750, 313986, 488462, -6330350, 317549, 470733, -6331510, 867566, -548670, -6273890, 834638, -571197, -6276330, 850233, -.00997973, -6300020, 867566, -548670, -6273890, 850233, -.00997973, -6300020, 871369, -.00388679, -6297150, 871369, -.00388679, -6297150, 850233, -.00997973, -6300020, 313986, 488462, -6330350, 871369, -.00388679, -6297150, 313986, 488462, -6330350, 310840, 502031, -6329450, .279735, 2.44552e-8, -6356750, 310840, 502031, -6329450, 313986, 488462, -6330350, 904914, -524499, -6270700, 867566, -548670, -6273890, 871369, .00111524, -6297150, 904914, -524499, -6270700, 871369, .00111524, -6297150, 897194, .00709642, -6293550, 897194, .00709642, -6293550, 871369, .00111524, -6297150, 310840, 502031, -6329450, 897194, .00709642, -6293550, 310840, 502031, -6329450, 306563, 518371, -6328350, .279735, 2.44552e-8, -6356750, 306563, 518371, -6328350, 310840, 502031, -6329450, 943394, -513283, -6265980, 904914, -524499, -6270700, 897194, .00653798, -6293550, 943394, -513283, -6265980, 897194, .00653798, -6293550, 928110, -.0107872, -6289090, 928110, -.0107872, -6289090, 897194, .00653798, -6293550, 306563, 518371, -6328350, 928110, -.0107872, -6289090, 306563, 518371, -6328350, 300864, 537568, -6327030, .279735, 2.44552e-8, -6356750, 300864, 537568, -6327030, 306563, 518371, -6328350, 1325030, -690113, -6179910, 943394, -513283, -6265980, 928110, -.014055, -6289090, 1325030, -690113, -6179910, 928110, -.014055, -6289090, 1298940, -.01329, -6223530, 1298940, -.01329, -6223530, 928110, -.014055, -6289090, 300864, 537568, -6327030, 1298940, -.01329, -6223530, 300864, 537568, -6327030, 195706, 735021, -6311390, .279735, 2.44552e-8, -6356750, 195706, 735021, -6311390, 300864, 537568, -6327030, 1354300, -665233, -6176320, 1325030, -690113, -6179910, 1298940, -.00758906, -6223530, 1354300, -665233, -6176320, 1298940, -.00758906, -6223530, 1320420, .0131859, -6219040, 1320420, .0131859, -6219040, 1298940, -.00758906, -6223530, 195706, 735021, -6311390, 1320420, .0131859, -6219040, 195706, 735021, -6311390, 188134, 744580, -6310500, .279735, 2.44552e-8, -6356750, 188134, 744580, -6310500, 195706, 735021, -6311390, 1369830, -652636, -6174250, 1354300, -665233, -6176320, 1320420, .0168801, -6219040, 1369830, -652636, -6174250, 1320420, .0168801, -6219040, 1332260, .0102217, -6216530, 1332260, .0102217, -6216530, 1320420, .0168801, -6219040, 188134, 744580, -6310500, 1332260, .0102217, -6216530, 188134, 744580, -6310500, 183916, 749766, -6310020, .279735, 2.44552e-8, -6356750, 183916, 749766, -6310020, 188134, 744580, -6310500, 1390840, -617136, -6173210, 1369830, -652636, -6174250, 1332260, .00191314, -6216530, 1390840, -617136, -6173210, 1332260, .00191314, -6216530, 1345990, .00823939, -6213590, 1345990, .00823939, -6213590, 1332260, .00191314, -6216530, 183916, 749766, -6310020, 1345990, .00823939, -6213590, 183916, 749766, -6310020, 178980, 755699, -6309460, .279735, 2.44552e-8, -6356750, 178980, 755699, -6309460, 183916, 749766, -6310020, 1419940, -586959, -6169550, 1390840, -617136, -6173210, 1345990, .0073009, -6213590, 1419940, -586959, -6169550, 1345990, .0073009, -6213590, 1368910, -.00370735, -6208620, 1368910, -.00370735, -6208620, 1345990, .0073009, -6213590, 178980, 755699, -6309460, 1368910, -.00370735, -6208620, 178980, 755699, -6309460, 170654, 765427, -6308520, .279735, 2.44552e-8, -6356750, 170654, 765427, -6308520, 178980, 755699, -6309460, 1452030, -563927, -6164260, 1419940, -586959, -6169550, 1368910, -.0072352, -6208620, 1452030, -563927, -6164260, 1368910, -.0072352, -6208620, 1396270, -.00327403, -6202560, 1396270, -.00327403, -6202560, 1368910, -.0072352, -6208620, 170654, 765427, -6308520, 1396270, -.00327403, -6202560, 170654, 765427, -6308520, 160572, 776752, -6307410, .279735, 2.44552e-8, -6356750, 160572, 776752, -6307410, 170654, 765427, -6308520, 1487570, -541738, -6157820, 1452030, -563927, -6164260, 1396270, 184914e-9, -6202560, 1487570, -541738, -6157820, 1396270, 184914e-9, -6202560, 1427640, -.00464407, -6195460, 1427640, -.00464407, -6195460, 1396270, 184914e-9, -6202560, 160572, 776752, -6307410, 1427640, -.00464407, -6195460, 160572, 776752, -6307410, 148844, 789358, -6306140, .279735, 2.44552e-8, -6356750, 148844, 789358, -6306140, 160572, 776752, -6307410, 1521710, -521400, -6151270, 1487570, -541738, -6157820, 1427640, -.00473135, -6195460, 1521710, -521400, -6151270, 1427640, -.00473135, -6195460, 1458520, -.00132722, -6188320, 1458520, -.00132722, -6188320, 1427640, -.00473135, -6195460, 148844, 789358, -6306140, 1458520, -.00132722, -6188320, 148844, 789358, -6306140, 137137, 801358, -6304900, .279735, 2.44552e-8, -6356750, 137137, 801358, -6304900, 148843, 789358, -6306140, 1566630, -475958, -6143730, 1566190, -494510, -6142380, 1541600, -509642, -6147330, 1458520, 89198e-8, -6188320, 1499620, .00442088, -6178550, 1566630, -475958, -6143730, 1458520, 89198e-8, -6188320, 1566630, -475958, -6143730, 1541600, -509642, -6147330, 1458520, 89198e-8, -6188320, 1541600, -509642, -6147330, 1521710, -521400, -6151270, 1499620, -.00572451, -6178550, 1458520, 89198e-8, -6188320, 137137, 801358, -6304900, 1499620, -.00572451, -6178550, 137137, 801358, -6304900, 121329, 816747, -6303260, .279735, 2.44552e-8, -6356750, 121329, 816747, -6303260, 137137, 801358, -6304900, 1608030, -480645, -6132730, 1566190, -494510, -6142380, 1566630, -475958, -6143730, 1608030, -480645, -6132730, 1566630, -475958, -6143730, 1607600, -416397, -6137510, 1607600, -416397, -6137510, 1566630, -475958, -6143730, 1499620, .00451193, -6178550, 1607600, -416397, -6137510, 1499620, .00451193, -6178550, 1539280, .00154318, -6168850, 1539280, .00135198, -6168850, 1499620, -.00612863, -6178550, 121329, 816747, -6303260, 1539280, .00135198, -6168850, 121329, 816747, -6303260, 105869, 830963, -6301690, .279735, 2.44552e-8, -6356750, 105869, 830963, -6301690, 121329, 816747, -6303260, 1646150, -462758, -6124040, 1608030, -480645, -6132730, 1607600, -416397, -6137510, 1646150, -462758, -6124040, 1607600, -416397, -6137510, 1642530, -360512, -6131830, 1642530, -360512, -6131830, 1607600, -416397, -6137510, 1539280, .00126619, -6168850, 1642530, -360512, -6131830, 1539280, .00126619, -6168850, 1575790, -.00368994, -6159690, 1575790, .00146035, -6159690, 1539280, .00408781, -6168850, 105869, 830963, -6301690, 1575790, .00146035, -6159690, 105869, 830963, -6301690, 91479, 843506, -6300260, .279735, 2.44552e-8, -6356750, 91479, 843506, -6300260, 105869, 830963, -6301690, 1689100, -465499, -6112210, 1646150, -462758, -6124040, 1642530, -360512, -6131830, 1689100, -465499, -6112210, 1642530, -360512, -6131830, 1678920, -296236, -6125460, 1678920, -296236, -6125460, 1642530, -360512, -6131830, 1575790, -.00396048, -6159690, 1678920, -296236, -6125460, 1575790, -.00396048, -6159690, 1617130, -.010286, -6149040, 1617130, -.00123402, -6149040, 1575790, -343229e-9, -6159690, 91479, 843506, -6300260, 1617130, -.00123402, -6149040, 91479, 843506, -6300260, 75035.9, 857114, -6298650, .279735, 2.44552e-8, -6356750, 75035.9, 857114, -6298650, 91479, 843506, -6300260, 1678910, -296234, -6125460, 1768150, -99947.9, -6106800, 1790580, -206831, -6097630, 1678910, -296234, -6125460, 1790580, -206831, -6097630, 1741060, -466558, -6097630, 1678910, -296234, -6125460, 1741060, -466558, -6097630, 1689100, -465499, -6112210, 1768150, -99947.9, -6106800, 1678910, -296234, -6125460, 1617130, -.00609087, -6149040, 1768150, -99947.9, -6106800, 1617130, -.00609087, -6149040, 1740520, -766369e-9, -6115490, 1740520, -.0132942, -6115490, 1617130, -.00108989, -6149040, 75035.9, 857114, -6298650, 1740520, -.0132942, -6115490, 75035.9, 857114, -6298650, 25250.4, 894084, -6293940, .279735, 2.44552e-8, -6356750, 25250.4, 894084, -6293940, 75035.9, 857114, -6298650, 1790580, -206831, -6097630, 1816790, -466770, -6075630, 1741060, -466558, -6097630, 18e5, -94724.2, -6097630, 1790580, -206831, -6097630, 1768150, -99947.9, -6106800, 18e5, -94724.2, -6097630, 1768150, -99947.9, -6106800, 1787330, -46606.3, -6101880, 1787330, -46606.3, -6101880, 1768150, -99947.9, -6106800, 1740520, -902653e-9, -6115490, 1787330, -46606.3, -6101880, 1740520, -902653e-9, -6115490, 1773630, -359838e-9, -6106030, 1773630, -.00713188, -6106030, 1740520, -.0130975, -6115490, 25250.4, 894084, -6293940, 1773630, -.00713188, -6106030, 25250.4, 894084, -6293940, 11771.9, 903110, -6292700, .279735, 2.44552e-8, -6356750, 11771.9, 903110, -6292700, 25250.4, 894084, -6293940, 1849780, -437680, -6067880, 1816790, -466770, -6075630, 1790580, -206831, -6097630, 1849780, -437680, -6067880, 1790580, -206831, -6097630, 18e5, -94724.2, -6097630, 1802490, 0, -6097630, 18e5, -94724.2, -6097630, 1787330, -46606.3, -6101880, 1802490, 0, -6097630, 1787330, -46606.3, -6101880, 1773630, -.00107786, -6106030, 11771.9, 903110, -6292700, -4780.96, 913698, -6291190, 1802100, 37593.1, -6097630, 11771.9, 903110, -6292700, 1802100, 37593.1, -6097630, 1802490, 0, -6097630, 11771.9, 903110, -6292700, 1802490, 0, -6097630, 1773630, -.00402133, -6106030, .279735, 2.44552e-8, -6356750, -4780.96, 913698, -6291190, 11771.9, 903110, -6292700, 18e5, -94724.2, -6097630, 1802490, 0, -6097630, 1814200, .00494132, -6094180, 18e5, -94724.2, -6097630, 1814200, .00494132, -6094180, 1889890, -411839, -6057400, 18e5, -94724.2, -6097630, 1889890, -411839, -6057400, 1849780, -437680, -6067880, 1808220, 18921.2, -6095910, 1814200, .00494132, -6094180, 1802490, 0, -6097630, 1802100, 37593.1, -6097630, 1808220, 18921.2, -6095910, 1802490, 0, -6097630, 1793250, 182232, -6097630, 1802100, 37593.1, -6097630, -4780.96, 913698, -6291190, 1793250, 182232, -6097630, -4780.96, 913698, -6291190, -23813.5, 925196, -6289470, .279735, 2.44552e-8, -6356750, -23813.5, 925196, -6289470, -4780.96, 913698, -6291190, 1936140, -394267, -6044030, 1889890, -411839, -6057400, 1814200, .00494132, -6094180, 1936140, -394267, -6044030, 1814200, .00494132, -6094180, 1860780, 45744e-8, -6080210, 1860780, 45744e-8, -6080210, 1814200, .00494132, -6094180, 1808220, 18921.2, -6095910, 1860780, 45744e-8, -6080210, 1808220, 18921.2, -6095910, 1828750, 94201.9, -6089130, 1828750, 94201.9, -6089130, 1808220, 18921.2, -6095910, 1802100, 37593.1, -6097630, 1828750, 94201.9, -6089130, 1802100, 37593.1, -6097630, 1793250, 182232, -6097630, 1771300, 333874, -6097630, 1793250, 182232, -6097630, -23813.5, 925196, -6289470, 1771300, 333874, -6097630, -23813.5, 925196, -6289470, -45022, 937237, -6287590, .279735, 2.44552e-8, -6356750, -45022, 937237, -6287590, -23813.5, 925196, -6289470, 1988360, -387234, -6027620, 1936140, -394267, -6044030, 1860780, -.00200872, -6080210, 1988360, -387234, -6027620, 1860780, -.00200872, -6080210, 1912650, -.00576836, -6064200, 1912650, -.00576836, -6064200, 1860780, -.00200872, -6080210, 1828750, 94201.9, -6089130, 1912650, -.00576836, -6064200, 1828750, 94201.9, -6089130, 1847420, 177898, -6081670, 1847420, 177898, -6081670, 1828750, 94201.9, -6089130, 1793250, 182232, -6097630, 1847420, 177898, -6081670, 1793250, 182232, -6097630, 1771300, 333874, -6097630, 1764790, 366705, -6097630, 1771300, 333874, -6097630, -45022, 937237, -6287590, 1764790, 366705, -6097630, -45022, 937237, -6287590, -49806.5, 939849, -6287160, .279735, 2.44552e-8, -6356750, -49806.5, 939849, -6287160, -45022, 937237, -6287590, 1990580, -301452, -6031760, 1988360, -387234, -6027620, 1912650, -.00476773, -6064200, 1990580, -301452, -6031760, 1912650, -.00476773, -6064200, 1924360, .00286613, -6060520, 1924360, .00286613, -6060520, 1912650, -.00476773, -6064200, 1847420, 177898, -6081670, 1924360, .00286613, -6060520, 1847420, 177898, -6081670, 1851040, 196741, -608e4, 1851040, 196741, -608e4, 1847420, 177898, -6081670, 1771300, 333874, -6097630, 1851040, 196741, -608e4, 1771300, 333874, -6097630, 1764790, 366705, -6097630, 1760130, 388483, -6097630, 1764790, 366705, -6097630, -49806.5, 939849, -6287160, 1760130, 388483, -6097630, -49806.5, 939849, -6287160, -53021.4, 941575, -6286880, .279735, 2.44552e-8, -6356750, -53021.4, 941575, -6286880, -49806.5, 939849, -6287160, 1992320, -259345, -6033140, 1990580, -301452, -6031760, 1924360, .00524738, -6060520, 1992320, -259345, -6033140, 1924360, .00524738, -6060520, 1932240, 580358e-9, -6058030, 1932240, 580358e-9, -6058030, 1924360, .00524738, -6060520, 1851040, 196741, -608e4, 1932240, 580358e-9, -6058030, 1851040, 196741, -608e4, 1853350, 209396, -6078880, 1853350, 209396, -6078880, 1851040, 196741, -608e4, 1764790, 366705, -6097630, 1853350, 209396, -6078880, 1764790, 366705, -6097630, 1760130, 388483, -6097630, 1734210, 491408, -6097630, 1760130, 388483, -6097630, -53021.4, 941575, -6286880, 1734210, 491408, -6097630, -53021.4, 941575, -6286880, -68696.4, 949763, -6285510, .279735, 2.44552e-8, -6356750, -68696.4, 949763, -6285510, -53021.4, 941575, -6286880, 2031570, -263041, -6019960, 1992320, -259345, -6033140, 1932240, -.00204127, -6058030, 2031570, -263041, -6019960, 1932240, -.00204127, -6058030, 1970630, 631787e-9, -6045740, 1970630, 631787e-9, -6045740, 1932240, -.00204127, -6058030, 1853350, 209396, -6078880, 1970630, 631787e-9, -6045740, 1853350, 209396, -6078880, 1863280, 270958, -6073450, 1863280, 270958, -6073450, 1853350, 209396, -6078880, 1760130, 388483, -6097630, 1863280, 270958, -6073450, 1760130, 388483, -6097630, 1734210, 491408, -6097630, 1726020, 519428, -6097630, 1734210, 491408, -6097630, -68696.4, 949763, -6285510, 1726020, 519428, -6097630, -68696.4, 949763, -6285510, -73108.2, 951992, -6285120, .279735, 2.44552e-8, -6356750, -73108.2, 951992, -6285120, -68696.4, 949763, -6285510, 2030720, -196837, -6022760, 2031570, -263041, -6019960, 1970630, .00164788, -6045740, 2030720, -196837, -6022760, 1970630, .00164788, -6045740, 1981450, -.00185406, -6042220, 1981450, -.00185406, -6042220, 1970630, .00164788, -6045740, 1863280, 270958, -6073450, 1981450, -.00185406, -6042220, 1863280, 270958, -6073450, 1865680, 288252, -6071930, 1865680, 288252, -6071930, 1863280, 270958, -6073450, 1734210, 491408, -6097630, 1865680, 288252, -6071930, 1734210, 491408, -6097630, 1726020, 519428, -6097630, 1721080, 535585, -6097630, 1726020, 519428, -6097630, -73108.2, 951992, -6285120, 1721080, 535585, -6097630, -73108.2, 951992, -6285120, -75684.9, 953286, -6284900, .279735, 2.44552e-8, -6356750, -75684.9, 953286, -6284900, -73109.8, 951992, -6285120, 2028180, -153983, -6024850, 2030720, -196837, -6022760, 1981450, -.0026768, -6042220, 2028180, -153983, -6024850, 1981450, -.0026768, -6042220, 1987770, -.00147743, -6040160, 1987770, -.00147743, -6040160, 1981450, -.0026768, -6042220, 1865680, 288252, -6071930, 1987770, -.00147743, -6040160, 1865680, 288252, -6071930, 1867e3, 298335, -6071040, 1867e3, 298335, -6071040, 1865680, 288252, -6071930, 1726020, 519428, -6097630, 1867e3, 298335, -6071040, 1726020, 519428, -6097630, 1721080, 535585, -6097630, 1700270, 598366, -6097630, 1721080, 535585, -6097630, -75684.9, 953286, -6284900, 1700270, 598366, -6097630, -75684.9, 953286, -6284900, -85911.6, 958294, -6284010, .279735, 2.44552e-8, -6356750, -85911.6, 958294, -6284010, -75684.9, 953286, -6284900, 2015340, -8042.19, -6031070, 2028180, -153983, -6024850, 1987770, -140203e-9, -6040160, 2015340, -8042.19, -6031070, 1987770, -140203e-9, -6040160, 2012890, -699764e-10, -6031890, 2012890, -699764e-10, -6031890, 1987770, -140203e-9, -6040160, 1867e3, 298335, -6071040, 2012890, -699764e-10, -6031890, 1867e3, 298335, -6071040, 1871660, 338313, -6067530, 1871660, 338313, -6067530, 1867e3, 298335, -6071040, 1721080, 535585, -6097630, 1871660, 338313, -6067530, 1721080, 535585, -6097630, 1700270, 598366, -6097630, 1656610, 710362, -6097630, 1700270, 598366, -6097630, -85911.6, 958294, -6284010, 1656610, 710362, -6097630, -85911.6, 958294, -6284010, -105121, 967281, -6282350, .279735, 2.44552e-8, -6356750, -105120, 967282, -6282350, -85911.6, 958294, -6284010, 2022700, 787906e-10, -6028630, 2015340, -8042.19, -6031070, 2012890, -1.38963e-7, -6031890, 1871660, 338313, -6067530, 1877990, 413065, -6060990, 2050360, 31071.2, -6019260, 1871660, 338313, -6067530, 2050360, 31071.2, -6019260, 2022700, 787906e-10, -6028630, 1871660, 338313, -6067530, 2022700, 787906e-10, -6028630, 2012890, -1.38963e-7, -6031890, 1877990, 413065, -6060990, 1871660, 338313, -6067530, 1700270, 598366, -6097630, 1877990, 413065, -6060990, 1700270, 598366, -6097630, 1656610, 710362, -6097630, 1626110, 777649, -6097630, 1656610, 710362, -6097630, -105121, 967281, -6282350, 1626110, 777649, -6097630, -105121, 967281, -6282350, -117329, 972702, -6281310, .279735, 2.44552e-8, -6356750, -117329, 972702, -6281310, -105121, 967281, -6282350, 2068100, 68124.9, -6012930, 2050360, 31071.2, -6019260, 1877990, 413065, -6060990, 2068100, 68124.9, -6012930, 1877990, 413065, -6060990, 1880430, 460340, -6056850, 1880430, 460340, -6056850, 1877990, 413065, -6060990, 1656610, 710362, -6097630, 1880430, 460340, -6056850, 1656610, 710362, -6097630, 1626110, 777649, -6097630, 1596630, 836496, -6097630, 1626110, 777649, -6097630, -117329, 972702, -6281310, 1596630, 836496, -6097630, -117329, 972702, -6281310, -128472, 977460, -6280360, .279735, 2.44552e-8, -6356750, -128472, 977460, -6280360, -117329, 972702, -6281310, 2080800, 109875, -6007960, 2068100, 68124.9, -6012930, 1880430, 460340, -6056850, 2080800, 109875, -6007960, 1880430, 460340, -6056850, 1881590, 503308, -6053100, 1881590, 503308, -6053100, 1880430, 460340, -6056850, 1626110, 777649, -6097630, 1881590, 503308, -6053100, 1626110, 777649, -6097630, 1596630, 836496, -6097630, 1565750, 892960, -6097630, 1596630, 836496, -6097630, -128472, 977460, -6280360, 1565750, 892960, -6097630, -128472, 977460, -6280360, -139619, 982047, -6279410, .279735, 2.44552e-8, -6356750, -139619, 982047, -6279410, -128473, 977460, -6280360, 2092690, 151440, -6002960, 2080800, 109875, -6007960, 1881590, 503308, -6053100, 2092690, 151440, -6002960, 1881590, 503308, -6053100, 1881770, 546105, -6049360, 1881770, 546105, -6049360, 1881590, 503308, -6053100, 1596630, 836496, -6097630, 1881770, 546105, -6049360, 1596630, 836496, -6097630, 1565750, 892960, -6097630, 1522230, 965285, -6097630, 1565750, 892960, -6097630, -139619, 982047, -6279410, 1522230, 965285, -6097630, -139619, 982047, -6279410, -154622, 987960, -6278140, .279735, 2.44552e-8, -6356750, -154622, 987960, -6278140, -139619, 982047, -6279410, 2114330, 190840, -5994300, 2092690, 151440, -6002960, 1881770, 546105, -6049360, 2114330, 190840, -5994300, 1881770, 546105, -6049360, 1880480, 603396, -6044340, 1880480, 603396, -6044340, 1881770, 546105, -6049360, 1565750, 892960, -6097630, 1880480, 603396, -6044340, 1565750, 892960, -6097630, 1522230, 965285, -6097630, 1485490, 1020920, -6097630, 1522230, 965285, -6097630, -154622, 987960, -6278140, 1485490, 1020920, -6097630, -154622, 987960, -6278140, -166784, 992523, -6277110, .279735, 2.44552e-8, -6356750, -166784, 992523, -6277110, -154622, 987960, -6278140, 2126600, 233799, -5988480, 2114330, 190840, -5994300, 1880480, 603396, -6044340, 2126600, 233799, -5988480, 1880480, 603396, -6044340, 1878190, 649567, -6040300, 1878190, 649567, -6040300, 1880480, 603396, -6044340, 1522230, 965285, -6097630, 1878190, 649567, -6040300, 1522230, 965285, -6097630, 1485490, 1020920, -6097630, 1466480, 1048050, -6097630, 1485490, 1020920, -6097630, -166784, 992523, -6277110, 1466480, 1048050, -6097630, -166784, 992523, -6277110, -172934, 994760, -6276600, .279735, 2.44552e-8, -6356750, -172934, 994760, -6276600, -166784, 992523, -6277110, 2062910, 394185, -6002240, 2126600, 233799, -5988480, 1878190, 649567, -6040300, 2062910, 394185, -6002240, 1878190, 649567, -6040300, 1876600, 672812, -6038260, 1876600, 672812, -6038260, 1878190, 649567, -6040300, 1485490, 1020920, -6097630, 1876600, 672812, -6038260, 1485490, 1020920, -6097630, 1466480, 1048050, -6097630, 1420880, 1109090, -6097630, 1466480, 1048050, -6097630, -172934, 994760, -6276600, 1420880, 1109090, -6097630, -172934, 994760, -6276600, -187342, 999799, -6275390, .279735, 2.44552e-8, -6356750, -187342, 999799, -6275390, -172934, 994760, -6276600, 2074870, 439280, -5995030, 2062910, 394185, -6002240, 1876600, 672812, -6038260, 2074870, 439280, -5995030, 1876600, 672812, -6038260, 1871820, 727018, -6033490, 1871820, 727018, -6033490, 1876600, 672812, -6038260, 1466480, 1048050, -6097630, 1871820, 727018, -6033490, 1466480, 1048050, -6097630, 1420880, 1109090, -6097630, 1356940, 1186450, -6097630, 1420880, 1109090, -6097630, -187342, 999799, -6275390, 1356940, 1186450, -6097630, -187342, 999799, -6275390, -206918, 1006240, -6273760, .279735, 2.44552e-8, -6356750, -206918, 1006240, -6273760, -187342, 999799, -6275390, 2111590, 464430, -5980390, 2074870, 439280, -5995030, 1871820, 727018, -6033490, 2111590, 464430, -5980390, 1871820, 727018, -6033490, 1862930, 799989, -6027050, 1862930, 799989, -6027050, 1871820, 727018, -6033490, 1420880, 1109090, -6097630, 1862930, 799989, -6027050, 1420880, 1109090, -6097630, 1356940, 1186450, -6097630, 1332580, 1213750, -6097630, 1356940, 1186450, -6097630, -206918, 1006240, -6273760, 1332580, 1213750, -6097630, -206918, 1006240, -6273760, -214221, 1008520, -6273150, .279735, 2.44552e-8, -6356750, -214221, 1008520, -6273150, -206918, 1006240, -6273760, 2071260, 559908, -5986280, 2111590, 464430, -5980390, 1862930, 799989, -6027050, 2071260, 559908, -5986280, 1862930, 799989, -6027050, 1858920, 827022, -6024660, 1858920, 827022, -6024660, 1862930, 799989, -6027050, 1356940, 1186450, -6097630, 1858920, 827022, -6024660, 1356940, 1186450, -6097630, 1332580, 1213750, -6097630, 1261830, 1287150, -6097630, 1332580, 1213750, -6097630, -214221, 1008520, -6273150, 1261830, 1287150, -6097630, -214221, 1008520, -6273150, -235061, 1014680, -6271420, .279735, 2.44552e-8, -6356750, -235061, 1014680, -6271420, -214221, 1008520, -6273150, 2100590, 600323, -5972220, 2071260, 559908, -5986280, 1858920, 827022, -6024660, 2100590, 600323, -5972220, 1858920, 827022, -6024660, 1845470, 903548, -6017840, 1845470, 903548, -6017840, 1858920, 827022, -6024660, 1332580, 1213750, -6097630, 1845470, 903548, -6017840, 1332580, 1213750, -6097630, 1261830, 1287150, -6097630, 1239820, 1308360, -6097630, 1261830, 1287150, -6097630, -235061, 1014680, -6271420, 1239820, 1308360, -6097630, -235061, 1014680, -6271420, -241463, 1016460, -6270890, .279735, 2.44552e-8, -6356750, -241463, 1016460, -6270890, -235061, 1014680, -6271420, 1952720, 811617, -5997200, 2100590, 600323, -5972220, 1845470, 903548, -6017840, 1952720, 811617, -5997200, 1845470, 903548, -6017840, 1840760, 926834, -6015750, 1840760, 926834, -6015750, 1845470, 903548, -6017840, 1261830, 1287150, -6097630, 1840760, 926834, -6015750, 1261830, 1287150, -6097630, 1239820, 1308360, -6097630, 1190340, 1353530, -6097630, 1239820, 1308360, -6097630, -241463, 1016460, -6270890, 1190340, 1353530, -6097630, -241463, 1016460, -6270890, -255708, 1020280, -6269720, .279735, 2.44552e-8, -6356750, -255708, 1020280, -6269720, -241463, 1016460, -6270890, 1953830, 856298, -5990660, 1952720, 811617, -5997200, 1840760, 926834, -6015750, 1953830, 856298, -5990660, 1840760, 926834, -6015750, 1829300, 978386, -6011120, 1829300, 978386, -6011120, 1840760, 926834, -6015750, 1239820, 1308360, -6097630, 1829300, 978386, -6011120, 1239820, 1308360, -6097630, 1190340, 1353530, -6097630, 1160560, 1379150, -6097630, 1190340, 1353530, -6097630, -255708, 1020280, -6269720, 1160560, 1379150, -6097630, -255708, 1020280, -6269720, -264213, 1022440, -6269020, .279735, 2.44552e-8, -6356750, -264213, 1022440, -6269020, -255708, 1020280, -6269720, 1939600, 897922, -5989200, 1953830, 856298, -5990660, 1829300, 978386, -6011120, 1939600, 897922, -5989200, 1829300, 978386, -6011120, 1821830, 1008940, -6008350, 1821830, 1008940, -6008350, 1829300, 978386, -6011120, 1190340, 1353530, -6097630, 1821830, 1008940, -6008350, 1190340, 1353530, -6097630, 1160560, 1379150, -6097630, 1137470, 1398250, -6097630, 1160560, 1379150, -6097630, -264213, 1022440, -6269020, 1137470, 1398250, -6097630, -264213, 1022440, -6269020, -270779, 1024060, -6268480, .279735, 2.44552e-8, -6356750, -270779, 1024060, -6268480, -264213, 1022440, -6269020, 1921420, 936196, -5989200, 1939600, 897922, -5989200, 1821830, 1008940, -6008350, 1921420, 936196, -5989200, 1821830, 1008940, -6008350, 1815740, 1032390, -6006230, 1815740, 1032390, -6006230, 1821830, 1008940, -6008350, 1160560, 1379150, -6097630, 1815740, 1032390, -6006230, 1160560, 1379150, -6097630, 1137470, 1398250, -6097630, 1111300, 1419150, -6097630, 1137470, 1398250, -6097630, -270779, 1024060, -6268480, 1111300, 1419150, -6097630, -270779, 1024060, -6268480, -278192, 1025830, -6267870, .279735, 2.44552e-8, -6356750, -278192, 1025830, -6267870, -270779, 1024060, -6268480, 1904640, 974389, -5988480, 1921420, 936196, -5989200, 1815740, 1032390, -6006230, 1904640, 974389, -5988480, 1815740, 1032390, -6006230, 1808540, 1058780, -6003820, 1808540, 1058780, -6003820, 1815740, 1032390, -6006230, 1137470, 1398250, -6097630, 1808540, 1058780, -6003820, 1137470, 1398250, -6097630, 1111300, 1419150, -6097630, 1068110, 1451930, -6097630, 1111300, 1419150, -6097630, -278192, 1025830, -6267870, 1068110, 1451930, -6097630, -278192, 1025830, -6267870, -290386, 1028600, -6266870, .279735, 2.44552e-8, -6356750, -290386, 1028600, -6266870, -278192, 1025830, -6267870, 1900080, 1014230, -5983340, 1904640, 974389, -5988480, 1808540, 1058780, -6003820, 1900080, 1014230, -5983340, 1808540, 1058780, -6003820, 1795950, 1101840, -5999880, 1795950, 1101840, -5999880, 1808540, 1058780, -6003820, 1111300, 1419150, -6097630, 1795950, 1101840, -5999880, 1111300, 1419150, -6097630, 1068110, 1451930, -6097630, 1026510, 1481630, -6097630, 1068110, 1451930, -6097630, -290386, 1028600, -6266870, 1026510, 1481630, -6097630, -290386, 1028600, -6266870, -302085, 1031110, -6265910, .279735, 2.44552e-8, -6356750, -302085, 1031110, -6265910, -290386, 1028600, -6266870, 1891820, 1055150, -5978910, 1900080, 1014230, -5983340, 1795950, 1101840, -5999880, 1891820, 1055150, -5978910, 1795950, 1101840, -5999880, 1783e3, 1142800, -5996100, 1783e3, 1142800, -5996100, 1795950, 1101840, -5999880, 1068110, 1451930, -6097630, 1783e3, 1142800, -5996100, 1068110, 1451930, -6097630, 1026510, 1481630, -6097630, 962932, 1523720, -6097630, 1026510, 1481630, -6097630, -302085, 1031110, -6265910, 962932, 1523720, -6097630, -302085, 1031110, -6265910, -319903, 1034650, -6264450, .279735, 2.44552e-8, -6356750, -319903, 1034650, -6264450, -302085, 1031110, -6265910, 1900290, 1098530, -5968480, 1891820, 1055150, -5978910, 1783e3, 1142800, -5996100, 1900290, 1098530, -5968480, 1783e3, 1142800, -5996100, 1761670, 1204560, -5990360, 1761670, 1204560, -5990360, 1783e3, 1142800, -5996100, 1026510, 1481630, -6097630, 1761670, 1204560, -5990360, 1026510, 1481630, -6097630, 962932, 1523720, -6097630, 913915, 1553620, -6097630, 962932, 1523720, -6097630, -319903, 1034650, -6264450, 913915, 1553620, -6097630, -319903, 1034650, -6264450, -333630, 1037140, -6263330, .279735, 2.44552e-8, -6356750, -333630, 1037140, -6263330, -319903, 1034650, -6264450, 1897840, 1139060, -5961700, 1900290, 1098530, -5968480, 1761670, 1204560, -5990360, 1897840, 1139060, -5961700, 1761670, 1204560, -5990360, 1743960, 1251540, -5985940, 1743960, 1251540, -5985940, 1761670, 1204560, -5990360, 962932, 1523720, -6097630, 1743960, 1251540, -5985940, 962932, 1523720, -6097630, 913915, 1553620, -6097630, 875698, 1575470, -6097630, 913915, 1553620, -6097630, -333630, 1037140, -6263330, 875698, 1575470, -6097630, -333630, 1037140, -6263330, -344347, 1038960, -6262450, .279735, 2.44552e-8, -6356750, -344347, 1038960, -6262450, -333630, 1037140, -6263330, 1885990, 1178050, -5957910, 1897840, 1139060, -5961700, 1743960, 1251540, -5985940, 1885990, 1178050, -5957910, 1743960, 1251540, -5985940, 1729370, 1287810, -5982500, 1729370, 1287810, -5982500, 1743960, 1251540, -5985940, 913915, 1553620, -6097630, 1729370, 1287810, -5982500, 913915, 1553620, -6097630, 875698, 1575470, -6097630, 814832, 1607800, -6097630, 875698, 1575470, -6097630, -344347, 1038960, -6262450, 814832, 1607800, -6097630, -344347, 1038960, -6262450, -361441, 1041600, -6261060, .279735, 2.44552e-8, -6356750, -361441, 1041600, -6261060, -344347, 1038960, -6262450, 1894220, 1218600, -5947200, 1885990, 1178050, -5957910, 1729370, 1287810, -5982500, 1894220, 1218600, -5947200, 1729370, 1287810, -5982500, 1704740, 1345020, -5977010, 1704740, 1345020, -5977010, 1729370, 1287810, -5982500, 875698, 1575470, -6097630, 1704740, 1345020, -5977010, 875698, 1575470, -6097630, 814832, 1607800, -6097630, 743776, 1641880, -6097630, 814832, 1607800, -6097630, -361441, 1041600, -6261060, 743776, 1641880, -6097630, -361441, 1041600, -6261060, -381448, 1044330, -6259430, .279735, 2.44552e-8, -6356750, -381448, 1044330, -6259430, -361441, 1041600, -6261060, 1727040, 1381120, -5962460, 1894220, 1218600, -5947200, 1704740, 1345020, -5977010, 1727040, 1381120, -5962460, 1704740, 1345020, -5977010, 1673790, 1410990, -5970590, 1673790, 1410990, -5970590, 1704740, 1345020, -5977010, 814832, 1607800, -6097630, 1673790, 1410990, -5970590, 814832, 1607800, -6097630, 743776, 1641880, -6097630, 682265, 1668380, -6097630, 743776, 1641880, -6097630, -381448, 1044330, -6259430, 682265, 1668380, -6097630, -381448, 1044330, -6259430, -398883, 1046380, -6258010, .279735, 2.44552e-8, -6356750, -398883, 1046380, -6258010, -381448, 1044330, -6259430, 1721150, 1427300, -5953340, 1727040, 1381120, -5962460, 1673790, 1410990, -5970590, 1721150, 1427300, -5953340, 1673790, 1410990, -5970590, 1645050, 1467450, -5965e3, 1645050, 1467450, -5965e3, 1673790, 1410990, -5970590, 743776, 1641880, -6097630, 1645050, 1467450, -5965e3, 743776, 1641880, -6097630, 682265, 1668380, -6097630, 606099, 1697530, -6097630, 682265, 1668380, -6097630, -398883, 1046380, -6258010, 606099, 1697530, -6097630, -398883, 1046380, -6258010, -420649, 1048510, -6256240, .279735, 2.44552e-8, -6356750, -420649, 1048510, -6256240, -398883, 1046380, -6258010, 1746800, 1466800, -5936360, 1721150, 1427300, -5953340, 1645050, 1467450, -5965e3, 1746800, 1466800, -5936360, 1645050, 1467450, -5965e3, 1606890, 1536590, -5958040, 1606890, 1536590, -5958040, 1645050, 1467450, -5965e3, 682265, 1668380, -6097630, 1606890, 1536590, -5958040, 682265, 1668380, -6097630, 606099, 1697530, -6097630, 557942, 1713960, -6097630, 606099, 1697530, -6097630, -420649, 1048510, -6256240, 557942, 1713960, -6097630, -420649, 1048510, -6256240, -434520, 1049640, -6255110, .279735, 2.44552e-8, -6356750, -434520, 1049640, -6255110, -420649, 1048510, -6256240, 1737390, 1506110, -5929310, 1746800, 1466800, -5936360, 1606890, 1536590, -5958040, 1737390, 1506110, -5929310, 1606890, 1536590, -5958040, 1581260, 1579900, -5953600, 1581260, 1579900, -5953600, 1606890, 1536590, -5958040, 606099, 1697530, -6097630, 1581260, 1579900, -5953600, 606099, 1697530, -6097630, 557942, 1713960, -6097630, 483394, 1736460, -6097630, 557942, 1713960, -6097630, -434520, 1049640, -6255110, 483394, 1736460, -6097630, -434520, 1049640, -6255110, -456194, 1051030, -6253340, .279735, 2.44552e-8, -6356750, -456194, 1051030, -6253340, -434520, 1049640, -6255110, 1735580, 1560500, -5915860, 1737390, 1506110, -5929310, 1581260, 1579900, -5953600, 1735580, 1560500, -5915860, 1581260, 1579900, -5953600, 1539220, 1646330, -5946660, 1539220, 1646330, -5946660, 1581260, 1579900, -5953600, 557942, 1713960, -6097630, 1539220, 1646330, -5946660, 557942, 1713960, -6097630, 483394, 1736460, -6097630, 440318, 1747880, -6097630, 483394, 1736460, -6097630, -456194, 1051030, -6253340, 440318, 1747880, -6097630, -456194, 1051030, -6253340, -468835, 1051640, -6252310, .279735, 2.44552e-8, -6356750, -468835, 1051640, -6252310, -456194, 1051030, -6253340, 1719080, 1599630, -5910260, 1735580, 1560500, -5915860, 1539220, 1646330, -5946660, 1719080, 1599630, -5910260, 1539220, 1646330, -5946660, 1513590, 1684380, -5942610, 1513590, 1684380, -5942610, 1539220, 1646330, -5946660, 483394, 1736460, -6097630, 1513590, 1684380, -5942610, 483394, 1736460, -6097630, 440318, 1747880, -6097630, 384473, 1761010, -6097630, 440318, 1747880, -6097630, -468835, 1051640, -6252310, 384473, 1761010, -6097630, -468835, 1051640, -6252310, -485405, 1052200, -6250960, .279735, 2.44552e-8, -6356750, -485405, 1052200, -6250960, -468835, 1051640, -6252310, 1700490, 1648690, -5902200, 1719080, 1599630, -5910260, 1513590, 1684380, -5942610, 1700490, 1648690, -5902200, 1513590, 1684380, -5942610, 1478860, 1733360, -5937300, 1478860, 1733360, -5937300, 1513590, 1684380, -5942610, 440318, 1747880, -6097630, 1478860, 1733360, -5937300, 440318, 1747880, -6097630, 384473, 1761010, -6097630, 378315, 1762340, -6097630, 384473, 1761010, -6097630, -485405, 1052200, -6250960, 378315, 1762340, -6097630, -485405, 1052200, -6250960, -487252, 1052240, -6250810, .279735, 2.44552e-8, -6356750, -487252, 1052240, -6250810, -485405, 1052200, -6250960, 1478110, 1734380, -5937190, 1700490, 1648690, -5902200, 1478860, 1733360, -5937300, 384473, 1761010, -6097630, 378315, 1762340, -6097630, 711255, 1825580, -6049410, 384473, 1761010, -6097630, 711255, 1825580, -6049410, 1478110, 1734380, -5937190, 384473, 1761010, -6097630, 1478110, 1734380, -5937190, 1478860, 1733360, -5937300, 362860, 1765590, -6097630, 378315, 1762340, -6097630, -487252, 1052240, -6250810, 362860, 1765590, -6097630, -487252, 1052240, -6250810, -491860, 1052350, -6250440, .279735, 2.44552e-8, -6356750, -491860, 1052350, -6250440, -487252, 1052240, -6250810, 670713, 1829770, -6052750, 711255, 1825580, -6049410, 378315, 1762340, -6097630, 670713, 1829770, -6052750, 378315, 1762340, -6097630, 362860, 1765590, -6097630, 299274, 1777470, -6097630, 362860, 1765590, -6097630, -491860, 1052350, -6250440, 299274, 1777470, -6097630, -491860, 1052350, -6250440, -511050, 1052560, -6248870, .279735, 2.44552e-8, -6356750, -511050, 1052560, -6248870, -491860, 1052350, -6250440, 639767, 1860650, -6046730, 670713, 1829770, -6052750, 362860, 1765590, -6097630, 639767, 1860650, -6046730, 362860, 1765590, -6097630, 299274, 1777470, -6097630, 217648, 1789300, -6097630, 299274, 1777470, -6097630, -511050, 1052560, -6248870, 217648, 1789300, -6097630, -511050, 1052560, -6248870, -536080, 1052340, -6246830, .279735, 2.44552e-8, -6356750, -536080, 1052340, -6246830, -511050, 1052560, -6248870, 635067, 1906120, -6033140, 639767, 1860650, -6046730, 299274, 1777470, -6097630, 635067, 1906120, -6033140, 299274, 1777470, -6097630, 217648, 1789300, -6097630, 148044, 1796400, -6097630, 217648, 1789300, -6097630, -536080, 1052340, -6246830, 148044, 1796400, -6097630, -536080, 1052340, -6246830, -557826, 1051680, -6245040, .279735, 2.44552e-8, -6356750, -557826, 1051680, -6245040, -536080, 1052340, -6246830, 636214, 1947220, -6019960, 635067, 1906120, -6033140, 217648, 1789300, -6097630, 636214, 1947220, -6019960, 217648, 1789300, -6097630, 148044, 1796400, -6097630, 84123.2, 1800520, -6097630, 148044, 1796400, -6097630, -557826, 1051680, -6245040, 84123.2, 1800520, -6097630, -557826, 1051680, -6245040, -578166, 1050680, -6243370, .279735, 2.44552e-8, -6356750, -578166, 1050680, -6243370, -557826, 1051680, -6245040, 627532, 1984790, -6008670, 636214, 1947220, -6019960, 148044, 1796400, -6097630, 627532, 1984790, -6008670, 148044, 1796400, -6097630, 84123.2, 1800520, -6097630, 22977.2, 1802340, -6097630, 84123.2, 1800520, -6097630, -578166, 1050680, -6243370, 22977.2, 1802340, -6097630, -578166, 1050680, -6243370, -597957, 1049350, -6241740, .279735, 2.44552e-8, -6356750, -597957, 1049350, -6241740, -578166, 1050680, -6243370, 614797, 2021180, -5997920, 627532, 1984790, -6008670, 84123.2, 1800520, -6097630, 614797, 2021180, -5997920, 84123.2, 1800520, -6097630, 22977.2, 1802340, -6097630, -34968.2, 1802150, -6097630, 22977.2, 1802340, -6097630, -597957, 1049350, -6241740, -34968.2, 1802150, -6097630, -597957, 1049350, -6241740, -617058, 1047720, -6240170, .279735, 2.44552e-8, -6356750, -617058, 1047720, -6240170, -597957, 1049350, -6241740, 616452, 2059440, -5984810, 614797, 2021180, -5997920, 22977.2, 1802340, -6097630, 616452, 2059440, -5984810, 22977.2, 1802340, -6097630, -34968.2, 1802150, -6097630, -116479, 1798720, -6097630, -34968.2, 1802150, -6097630, -617058, 1047720, -6240170, -116479, 1798720, -6097630, -617058, 1047720, -6240170, -644535, 1044810, -6237890, .279735, 2.44552e-8, -6356750, -644535, 1044810, -6237890, -617058, 1047720, -6240170, 611696, 2114410, -5966230, 616452, 2059440, -5984810, -34968.2, 1802150, -6097630, 611696, 2114410, -5966230, -34968.2, 1802150, -6097630, -116479, 1798720, -6097630, -145505, 1796610, -6097630, -116479, 1798720, -6097630, -644535, 1044810, -6237890, -145505, 1796610, -6097630, -644535, 1044810, -6237890, -654490, 1043590, -6237070, .279735, 2.44552e-8, -6356750, -654490, 1043590, -6237070, -644535, 1044810, -6237890, 591276, 2130860, -5962460, 611696, 2114410, -5966230, -116479, 1798720, -6097630, 591276, 2130860, -5962460, -116479, 1798720, -6097630, -145505, 1796610, -6097630, -179417, 1793540, -6097630, -145505, 1796610, -6097630, -654490, 1043590, -6237070, -179417, 1793540, -6097630, -654490, 1043590, -6237070, -666257, 1042040, -6236090, .279735, 2.44552e-8, -6356750, -666257, 1042040, -6236090, -654490, 1043590, -6237070, 549932, 2146140, -5960940, 591276, 2130860, -5962460, -145505, 1796610, -6097630, 549932, 2146140, -5960940, -145505, 1796610, -6097630, -179417, 1793540, -6097630, -219702, 1789050, -6097630, -179417, 1793540, -6097630, -666257, 1042040, -6236090, -219702, 1789050, -6097630, -666257, 1042040, -6236090, -680407, 1040010, -6234910, .279735, 2.44552e-8, -6356750, -680407, 1040010, -6234910, -666257, 1042040, -6236090, 515280, 2167370, -5956390, 549932, 2146140, -5960940, -179417, 1793540, -6097630, 515280, 2167370, -5956390, -179417, 1793540, -6097630, -219702, 1789050, -6097630, -264744, 1782940, -6097630, -219702, 1789050, -6097630, -680407, 1040010, -6234910, -264744, 1782940, -6097630, -680407, 1040010, -6234910, -696498, 1037480, -6233560, .279735, 2.44552e-8, -6356750, -696498, 1037480, -6233560, -680407, 1040010, -6234910, 480182, 2192180, -5950280, 515280, 2167370, -5956390, -219702, 1789050, -6097630, 480182, 2192180, -5950280, -219702, 1789050, -6097630, -264744, 1782940, -6097630, -324022, 1773120, -6097630, -264744, 1782940, -6097630, -696498, 1037480, -6233560, -324022, 1773120, -6097630, -696498, 1037480, -6233560, -718077, 1033720, -6231750, .279735, 2.44552e-8, -6356750, -718077, 1033720, -6231750, -696498, 1037480, -6233560, 469839, 2236220, -5934800, 480182, 2192180, -5950280, -264744, 1782940, -6097630, 469839, 2236220, -5934800, -264744, 1782940, -6097630, -324022, 1773120, -6097630, -373958, 1763270, -6097630, -324022, 1773120, -6097630, -718077, 1033720, -6231750, -373958, 1763270, -6097630, -718077, 1033720, -6231750, -736663, 1030140, -6230180, .279735, 2.44552e-8, -6356750, -736663, 1030140, -6230180, -718077, 1033720, -6231750, 466135, 2276560, -5919830, 469839, 2236220, -5934800, -324022, 1773120, -6097630, 466135, 2276560, -5919830, -324022, 1773120, -6097630, -373958, 1763270, -6097630, -430901, 1750220, -6097630, -373958, 1763270, -6097630, -736663, 1030140, -6230180, -430901, 1750220, -6097630, -736663, 1030140, -6230180, -758318, 1025590, -6228350, .279735, 2.44552e-8, -6356750, -758318, 1025590, -6228350, -736663, 1030140, -6230180, 446161, 2319910, -5904630, 466135, 2276560, -5919830, -373958, 1763270, -6097630, 446161, 2319910, -5904630, -373958, 1763270, -6097630, -430901, 1750220, -6097630, -480087, 1737380, -6097630, -430901, 1750220, -6097630, -758318, 1025590, -6228350, -480087, 1737380, -6097630, -758318, 1025590, -6228350, -777453, 1021220, -6226720, .279735, 2.44552e-8, -6356750, -777453, 1021220, -6226720, -758318, 1025590, -6228350, 410988, 2353180, -5894080, 446161, 2319910, -5904630, -430901, 1750220, -6097630, 410988, 2353180, -5894080, -430901, 1750220, -6097630, -480087, 1737380, -6097630, -518868, 1726190, -6097630, -480087, 1737380, -6097630, -777453, 1021220, -6226720, -518868, 1726190, -6097630, -777453, 1021220, -6226720, -792840, 1017460, -6225400, .279735, 2.44552e-8, -6356750, -792840, 1017460, -6225400, -777453, 1021220, -6226720, 379547, 2378980, -5885880, 410988, 2353180, -5894080, -480087, 1737380, -6097630, 379547, 2378980, -5885880, -480087, 1737380, -6097630, -518868, 1726190, -6097630, -563488, 1712150, -6097630, -518868, 1726190, -6097630, -792840, 1017460, -6225400, -563488, 1712150, -6097630, -792840, 1017460, -6225400, -810873, 1012790, -6223850, .279735, 2.44552e-8, -6356750, -810873, 1012790, -6223850, -792840, 1017460, -6225400, 361847, 2416500, -5871790, 379547, 2378980, -5885880, -518868, 1726190, -6097630, 361847, 2416500, -5871790, -518868, 1726190, -6097630, -563488, 1712150, -6097630, -592362, 1702370, -6097630, -563488, 1712150, -6097630, -810873, 1012790, -6223850, -592362, 1702370, -6097630, -810873, 1012790, -6223850, -822766, 1009530, -6222830, .279735, 2.44552e-8, -6356750, -822766, 1009530, -6222830, -810873, 1012790, -6223850, 340384, 2437950, -5864250, 361847, 2416500, -5871790, -563488, 1712150, -6097630, 340384, 2437950, -5864250, -563488, 1712150, -6097630, -592362, 1702370, -6097630, -622219, 1691690, -6097630, -592362, 1702370, -6097630, -822766, 1009530, -6222830, -622219, 1691690, -6097630, -822766, 1009530, -6222830, -835222, 1005990, -6221750, .279735, 2.44552e-8, -6356750, -835222, 1005990, -6221750, -822766, 1009530, -6222830, 311555, 2458070, -5857490, 340384, 2437950, -5864250, -592362, 1702370, -6097630, 311555, 2458070, -5857490, -592362, 1702370, -6097630, -622219, 1691690, -6097630, -634573, 1687090, -6097630, -622219, 1691690, -6097630, -835222, 1005990, -6221750, -634573, 1687090, -6097630, -835222, 1005990, -6221750, -840414, 1004480, -6221290, .279735, 2.44552e-8, -6356750, -840414, 1004480, -6221290, -835222, 1005990, -6221750, 267562, 2453100, -5861720, 311555, 2458070, -5857490, -622219, 1691690, -6097630, 267562, 2453100, -5861720, -622219, 1691690, -6097630, -634573, 1687090, -6097630, -662311, 1676400, -6097630, -634573, 1687090, -6097630, -840414, 1004480, -6221290, -662311, 1676400, -6097630, -840414, 1004480, -6221290, -852241, 1000920, -6220270, .279735, 2.44552e-8, -6356750, -852241, 1000920, -6220270, -840414, 1004480, -6221290, 229894, 2467040, -5857490, 267562, 2453100, -5861720, -634573, 1687090, -6097630, 229894, 2467040, -5857490, -634573, 1687090, -6097630, -662311, 1676400, -6097630, -692949, 1663970, -6097630, -662311, 1676400, -6097630, -852241, 1000920, -6220270, -692949, 1663970, -6097630, -852241, 1000920, -6220270, -865489, 996791, -6219110, .279735, 2.44552e-8, -6356750, -865489, 996791, -6219110, -852241, 1000920, -6220270, 188611, 2482660, -5852400, 229894, 2467040, -5857490, -662311, 1676400, -6097630, 188611, 2482660, -5852400, -662311, 1676400, -6097630, -692949, 1663970, -6097630, -710683, 1656470, -6097630, -692949, 1663970, -6097630, -865489, 996791, -6219110, -710683, 1656470, -6097630, -865489, 996791, -6219110, -873257, 994287, -6218430, .279735, 2.44552e-8, -6356750, -873257, 994287, -6218430, -865489, 996791, -6219110, 140708, 2479790, -5854950, 188611, 2482660, -5852400, -692949, 1663970, -6097630, 140708, 2479790, -5854950, -692949, 1663970, -6097630, -710683, 1656470, -6097630, -748224, 1639850, -6097630, -710683, 1656470, -6097630, -873257, 994287, -6218430, -748224, 1639850, -6097630, -873257, 994287, -6218430, -889919, 988737, -6216960, .279735, 2.44552e-8, -6356750, -889919, 988737, -6216960, -873257, 994287, -6218430, 110577, 2509500, -5843e3, 140708, 2479790, -5854950, -710683, 1656470, -6097630, 110577, 2509500, -5843e3, -710683, 1656470, -6097630, -748224, 1639850, -6097630, -769255, 1630090, -6097630, -748224, 1639850, -6097630, -889919, 988737, -6216960, -769255, 1630090, -6097630, -889919, 988737, -6216960, -899431, 985452, -6216120, .279735, 2.44552e-8, -6356750, -899431, 985452, -6216120, -889919, 988737, -6216960, 51196.7, 2503370, -5846430, 110577, 2509500, -5843e3, -748224, 1639850, -6097630, 51196.7, 2503370, -5846430, -748224, 1639850, -6097630, -769255, 1630090, -6097630, -770620, 1629450, -6097630, -769255, 1630090, -6097630, -899431, 985452, -6216120, -770620, 1629450, -6097630, -899431, 985452, -6216120, -900047, 985228, -6216060, .279735, 2.44552e-8, -6356750, -900047, 985228, -6216060, -899431, 985452, -6216120, 14279.3, 2483740, -5854950, 51196.7, 2503370, -5846430, -769255, 1630090, -6097630, 14279.3, 2483740, -5854950, -769255, 1630090, -6097630, -770620, 1629450, -6097630, -783876, 1623110, -6097630, -770620, 1629450, -6097630, -900047, 985228, -6216060, -783876, 1623110, -6097630, -900047, 985228, -6216060, -906098, 983099, -6215530, .279735, 2.44552e-8, -6356750, -906091, 983091, -6215530, -900047, 985228, -6216060, -27238.8, 2475570, -5858340, 14279.3, 2483740, -5854950, -770620, 1629450, -6097630, -27238.8, 2475570, -5858340, -770620, 1629450, -6097630, -783876, 1623110, -6097630, -812533, 1608960, -6097630, -783876, 1623110, -6097630, -906091, 983091, -6215530, -812533, 1608960, -6097630, -906091, 983091, -6215530, -919322, 978294, -6214350, .279735, 2.44552e-8, -6356750, -919322, 978294, -6214350, -906091, 983091, -6215530, -69034.1, 2486850, -5853250, -27238.8, 2475570, -5858340, -783876, 1623110, -6097630, -69034.1, 2486850, -5853250, -783876, 1623110, -6097630, -812533, 1608960, -6097630, -826906, 1601620, -6097630, -812533, 1608960, -6097630, -919322, 978294, -6214350, -826906, 1601620, -6097630, -919322, 978294, -6214350, -926057, 975792, -6213750, .279735, 2.44552e-8, -6356750, -926057, 975792, -6213750, -919322, 978294, -6214350, -112856, 2477180, -5856650, -69034.1, 2486850, -5853250, -812533, 1608960, -6097630, -112856, 2477180, -5856650, -812533, 1608960, -6097630, -826906, 1601620, -6097630, -844216, 1592560, -6097630, -826906, 1601620, -6097630, -926057, 975792, -6213750, -844216, 1592560, -6097630, -926057, 975792, -6213750, -934233, 972679, -6213020, .279735, 2.44552e-8, -6356750, -934233, 972679, -6213020, -926057, 975792, -6213750, -153360, 2472980, -5857490, -112856, 2477180, -5856650, -826906, 1601620, -6097630, -153360, 2472980, -5857490, -826906, 1601620, -6097630, -844216, 1592560, -6097630, -863996, 1581920, -6097630, -844216, 1592560, -6097630, -934233, 972679, -6213020, -863996, 1581920, -6097630, -934233, 972679, -6213020, -943657, 969029, -6212170, .279735, 2.44552e-8, -6356750, -943657, 969029, -6212170, -934233, 972679, -6213020, -181137, 2481200, -5853250, -153360, 2472980, -5857490, -844216, 1592560, -6097630, -181137, 2481200, -5853250, -844216, 1592560, -6097630, -863996, 1581920, -6097630, -875514, 1575580, -6097630, -863996, 1581920, -6097630, -943657, 969029, -6212170, -875514, 1575580, -6097630, -943657, 969029, -6212170, -949203, 966827, -6211670, .279735, 2.44552e-8, -6356750, -949203, 966827, -6211670, -943657, 969029, -6212170, -247766, 2447070, -5865090, -181137, 2481200, -5853250, -863996, 1581920, -6097630, -247766, 2447070, -5865090, -863996, 1581920, -6097630, -875514, 1575580, -6097630, -903286, 1559820, -6097630, -875514, 1575580, -6097630, -949203, 966827, -6211670, -903286, 1559820, -6097630, -949203, 966827, -6211670, -962757, 961346, -6210440, .279735, 2.44552e-8, -6356750, -962757, 961346, -6210440, -949203, 966827, -6211670, -287854, 2456900, -5859190, -247766, 2447070, -5865090, -875514, 1575580, -6097630, -287854, 2456900, -5859190, -875514, 1575580, -6097630, -903286, 1559820, -6097630, -924302, 1547460, -6097630, -903286, 1559820, -6097630, -962757, 961346, -6210440, -924302, 1547460, -6097630, -962757, 961346, -6210440, -973165, 956995, -6209500, .279735, 2.44552e-8, -6356750, -973165, 956995, -6209500, -962757, 961346, -6210440, -333992, 2451050, -5859190, -287854, 2456900, -5859190, -903286, 1559820, -6097630, -333992, 2451050, -5859190, -903286, 1559820, -6097630, -924302, 1547460, -6097630, -951515, 1530880, -6097630, -924302, 1547460, -6097630, -973165, 956995, -6209500, -951515, 1530880, -6097630, -973165, 956995, -6209500, -986851, 951129, -6208250, .279735, 2.44552e-8, -6356750, -986851, 951129, -6208250, -973165, 956995, -6209500, -375458, 2459310, -5853250, -333992, 2451050, -5859190, -924302, 1547460, -6097630, -375458, 2459310, -5853250, -924302, 1547460, -6097630, -951515, 1530880, -6097630, -962073, 1524260, -6097630, -951515, 1530880, -6097630, -986851, 951129, -6208250, -962073, 1524260, -6097630, -986851, 951129, -6208250, -992236, 948764, -6207760, .279735, 2.44552e-8, -6356750, -992236, 948764, -6207760, -986851, 951129, -6208250, -417567, 2438200, -5859190, -375458, 2459310, -5853250, -951515, 1530880, -6097630, -417567, 2438200, -5859190, -951515, 1530880, -6097630, -962073, 1524260, -6097630, -996538, 1501960, -6097630, -962073, 1524260, -6097630, -992236, 948764, -6207760, -996538, 1501960, -6097630, -992236, 948764, -6207760, -1010060, 940743, -6206110, .279735, 2.44552e-8, -6356750, -1010060, 940743, -6206110, -992236, 948764, -6207760, -452040, 2466850, -5844720, -417567, 2438200, -5859190, -962073, 1524260, -6097630, -452040, 2466850, -5844720, -962073, 1524260, -6097630, -996538, 1501960, -6097630, -1026710, 1481490, -6097630, -996538, 1501960, -6097630, -1010060, 940743, -6206110, -1026710, 1481490, -6097630, -1010060, 940743, -6206110, -1026020, 933281, -6204630, .279735, 2.44552e-8, -6356750, -1026020, 933281, -6204630, -1010060, 940743, -6206110, -480386, 2496250, -5830050, -452040, 2466850, -5844720, -996538, 1501960, -6097630, -480386, 2496250, -5830050, -996538, 1501960, -6097630, -1026710, 1481490, -6097630, -1055300, 1461270, -6097630, -1026710, 1481490, -6097630, -1026020, 933281, -6204630, -1055300, 1461270, -6097630, -1026020, 933281, -6204630, -1041470, 925799, -6203190, .279735, 2.44552e-8, -6356750, -1041470, 925799, -6203190, -1026020, 933281, -6204630, -515867, 2517790, -5817830, -480386, 2496250, -5830050, -1026710, 1481490, -6097630, -515867, 2517790, -5817830, -1026710, 1481490, -6097630, -1055300, 1461270, -6097630, -1100500, 1427540, -6097630, -1055300, 1461270, -6097630, -1041470, 925799, -6203190, -1100500, 1427540, -6097630, -1041470, 925799, -6203190, -1066570, 913124, -6200820, .279735, 2.44552e-8, -6356750, -1066570, 913124, -6200820, -1041470, 925799, -6203190, -698372, 2406640, -5845570, -515867, 2517790, -5817830, -1055300, 1461270, -6097630, -698372, 2406640, -5845570, -1055300, 1461270, -6097630, -1100500, 1427540, -6097630, -1116650, 1414940, -6097630, -1100500, 1427540, -6097630, -1066570, 913124, -6200820, -1116650, 1414940, -6097630, -1066570, 913124, -6200820, -1075750, 908307, -6199940, .279735, 2.44552e-8, -6356750, -1075750, 908307, -6199940, -1066570, 913124, -6200820, -738794, 2392420, -5846430, -698372, 2406640, -5845570, -1100500, 1427540, -6097630, -738794, 2392420, -5846430, -1100500, 1427540, -6097630, -1116650, 1414940, -6097630, -1132730, 1402100, -6097630, -1116650, 1414940, -6097630, -1075750, 908307, -6199940, -1132730, 1402100, -6097630, -1075750, 908307, -6199940, -1084990, 903371, -6199060, .279735, 2.44552e-8, -6356750, -1084990, 903371, -6199060, -1075750, 908307, -6199940, -777112, 2380250, -5846430, -738794, 2392420, -5846430, -1116650, 1414940, -6097630, -777112, 2380250, -5846430, -1116650, 1414940, -6097630, -1132730, 1402100, -6097630, -1157510, 1381720, -6097630, -1132730, 1402100, -6097630, -1084990, 903371, -6199060, -1157510, 1381720, -6097630, -1084990, 903371, -6199060, -1099500, 895424, -6197670, .279735, 2.44552e-8, -6356750, -1099500, 895424, -6197670, -1084990, 903371, -6199060, -825714, 2376600, -5841290, -777112, 2380250, -5846430, -1132730, 1402100, -6097630, -825714, 2376600, -5841290, -1132730, 1402100, -6097630, -1157510, 1381720, -6097630, -1182660, 1360250, -6097630, -1157510, 1381720, -6097630, -1099500, 895424, -6197670, -1182660, 1360250, -6097630, -1099500, 895424, -6197670, -1114550, 886936, -6196210, .279735, 2.44552e-8, -6356750, -1114550, 886936, -6196210, -1099500, 895424, -6197670, -875102, 2373850, -5835250, -825714, 2376600, -5841290, -1157510, 1381720, -6097630, -875102, 2373850, -5835250, -1157510, 1381720, -6097630, -1182660, 1360250, -6097630, -1209510, 1336430, -6097630, -1182660, 1360250, -6097630, -1114550, 886936, -6196210, -1209510, 1336430, -6097630, -1114550, 886936, -6196210, -1130960, 877392, -6194600, .279735, 2.44552e-8, -6356750, -1130960, 877392, -6194600, -1114550, 886936, -6196210, -919152, 2387250, -5823080, -875102, 2373850, -5835250, -1182660, 1360250, -6097630, -919152, 2387250, -5823080, -1182660, 1360250, -6097630, -1209510, 1336430, -6097630, -1234e3, 1313850, -6097630, -1209510, 1336430, -6097630, -1130960, 877392, -6194600, -1234e3, 1313850, -6097630, -1130960, 877392, -6194600, -1146290, 868194, -6193090, .279735, 2.44552e-8, -6356750, -1146290, 868194, -6193090, -1130960, 877392, -6194600, -958783, 2403940, -5809900, -919152, 2387250, -5823080, -1209510, 1336430, -6097630, -958783, 2403940, -5809900, -1209510, 1336430, -6097630, -1234e3, 1313850, -6097630, -1253150, 1295600, -6097630, -1234e3, 1313850, -6097630, -1146290, 868194, -6193090, -1253150, 1295600, -6097630, -1146290, 868194, -6193090, -1158520, 860646, -6191880, .279735, 2.44552e-8, -6356750, -1158520, 860646, -6191880, -1146290, 868194, -6193090, -1006980, 2388500, -5808130, -958783, 2403940, -5809900, -1234e3, 1313850, -6097630, -1006980, 2388500, -5808130, -1234e3, 1313850, -6097630, -1253150, 1295600, -6097630, -1269510, 1279570, -6097630, -1253150, 1295600, -6097630, -1158520, 860646, -6191880, -1269510, 1279570, -6097630, -1158520, 860646, -6191880, -1169150, 853963, -6190810, .279735, 2.44552e-8, -6356750, -1169150, 853963, -6190810, -1158520, 860646, -6191880, -1093260, 2281610, -5835250, -1006980, 2388500, -5808130, -1253150, 1295600, -6097630, -1093260, 2281610, -5835250, -1253150, 1295600, -6097630, -1269510, 1279570, -6097630, -1288160, 1260800, -6097630, -1269510, 1279570, -6097630, -1169150, 853963, -6190810, -1288160, 1260800, -6097630, -1169150, 853963, -6190810, -1181470, 846008, -6189570, .279735, 2.44552e-8, -6356750, -1181470, 846008, -6189570, -1169150, 853963, -6190810, -1153560, 2226880, -5844720, -1093260, 2281610, -5835250, -1269510, 1279570, -6097630, -1153560, 2226880, -5844720, -1269510, 1279570, -6097630, -1288160, 1260800, -6097630, -1296080, 1252660, -6097630, -1288160, 1260800, -6097630, -1181470, 846008, -6189570, -1296080, 1252660, -6097630, -1181470, 846008, -6189570, -1186760, 842546, -6189040, .279735, 2.44552e-8, -6356750, -1186760, 842546, -6189040, -1181470, 846008, -6189570, -1187200, 2179380, -5855800, -1153560, 2226880, -5844720, -1288160, 1260800, -6097630, -1187200, 2179380, -5855800, -1288160, 1260800, -6097630, -1296080, 1252660, -6097630, -1311560, 1236430, -6097630, -1296080, 1252660, -6097630, -1186760, 842546, -6189040, -1311560, 1236430, -6097630, -1186760, 842546, -6189040, -1197260, 835562, -6187970, .279735, 2.44552e-8, -6356750, -1197260, 835562, -6187970, -1186760, 842546, -6189040, -1229600, 2144140, -5860030, -1187200, 2179380, -5855800, -1296080, 1252660, -6097630, -1229600, 2144140, -5860030, -1296080, 1252660, -6097630, -1311560, 1236430, -6097630, -1330680, 1215840, -6097630, -1311560, 1236430, -6097630, -1197260, 835562, -6187970, -1330680, 1215840, -6097630, -1197260, 835562, -6187970, -1210460, 826584, -6186620, .279735, 2.44552e-8, -6356750, -1210460, 826584, -6186620, -1197260, 835562, -6187970, -1272380, 2128430, -5856650, -1229600, 2144140, -5860030, -1311560, 1236430, -6097630, -1272380, 2128430, -5856650, -1311560, 1236430, -6097630, -1330680, 1215840, -6097630, -1354390, 1189360, -6097630, -1330680, 1215840, -6097630, -1210460, 826584, -6186620, -1354390, 1189360, -6097630, -1210460, 826584, -6186620, -1227190, 814882, -6184880, .279735, 2.44552e-8, -6356750, -1227190, 814882, -6184880, -1210460, 826584, -6186620, -1318240, 2138240, -5843e3, -1272380, 2128430, -5856650, -1330680, 1215840, -6097630, -1318240, 2138240, -5843e3, -1330680, 1215840, -6097630, -1354390, 1189360, -6097630, -1375290, 1165130, -6097630, -1354390, 1189360, -6097630, -1227190, 814882, -6184880, -1375290, 1165130, -6097630, -1227190, 814882, -6184880, -1242320, 803970, -6183300, .279735, 2.44552e-8, -6356750, -1242320, 803970, -6183300, -1227190, 814882, -6184880, -1360170, 2149920, -5829190, -1318240, 2138240, -5843e3, -1354390, 1189360, -6097630, -1360170, 2149920, -5829190, -1354390, 1189360, -6097630, -1375290, 1165130, -6097630, -1390640, 1146770, -6097630, -1375290, 1165130, -6097630, -1242320, 803970, -6183300, -1390640, 1146770, -6097630, -1242320, 803970, -6183300, -1253700, 795557, -6182100, .279735, 2.44552e-8, -6356750, -1253700, 795557, -6182100, -1242320, 803970, -6183300, -1398200, 2134970, -5825700, -1360170, 2149920, -5829190, -1375290, 1165130, -6097630, -1398200, 2134970, -5825700, -1375290, 1165130, -6097630, -1390640, 1146770, -6097630, -1398600, 1137050, -6097630, -1390640, 1146770, -6097630, -1253700, 795557, -6182100, -1398600, 1137050, -6097630, -1253700, 795557, -6182100, -1259650, 791094, -6181470, .279735, 2.44552e-8, -6356750, -1259650, 791094, -6181470, -1253700, 795557, -6182100, -1423730, 2101100, -5831790, -1398200, 2134970, -5825700, -1390640, 1146770, -6097630, -1423730, 2101100, -5831790, -1390640, 1146770, -6097630, -1398600, 1137050, -6097630, -1409740, 1123210, -6097630, -1398600, 1137050, -6097630, -1259650, 791094, -6181470, -1409740, 1123210, -6097630, -1259650, 791094, -6181470, -1268110, 784666, -6180570, .279735, 2.44552e-8, -6356750, -1268110, 784666, -6180570, -1259650, 791094, -6181470, -1455780, 2066770, -5836120, -1423730, 2101100, -5831790, -1398600, 1137050, -6097630, -1455780, 2066770, -5836120, -1398600, 1137050, -6097630, -1409740, 1123210, -6097630, -1427480, 1100580, -6097630, -1409740, 1123210, -6097630, -1268110, 784666, -6180570, -1427480, 1100580, -6097630, -1268110, 784666, -6180570, -1281820, 774007, -6179090, .279735, 2.44552e-8, -6356750, -1281820, 774007, -6179090, -1268110, 784666, -6180570, -1498950, 2055570, -5829190, -1455780, 2066770, -5836120, -1409740, 1123210, -6097630, -1498950, 2055570, -5829190, -1409740, 1123210, -6097630, -1427480, 1100580, -6097630, -1439470, 1084840, -6097630, -1427480, 1100580, -6097630, -1281820, 774007, -6179090, -1439470, 1084840, -6097630, -1281820, 774007, -6179090, -1291280, 766492, -6178060, .279735, 2.44552e-8, -6356750, -1291280, 766492, -6178060, -1281820, 774007, -6179090, -1531080, 2031740, -5829190, -1498950, 2055570, -5829190, -1427480, 1100580, -6097630, -1531080, 2031740, -5829190, -1427480, 1100580, -6097630, -1439470, 1084840, -6097630, -1448190, 1073170, -6097630, -1439470, 1084840, -6097630, -1291280, 766492, -6178060, -1448190, 1073170, -6097630, -1291280, 766492, -6178060, -1298240, 760882, -6177300, .279735, 2.44552e-8, -6356750, -1298240, 760882, -6177300, -1291280, 766492, -6178060, -1556030, 2000030, -5833520, -1531080, 2031740, -5829190, -1439470, 1084840, -6097630, -1556030, 2000030, -5833520, -1439470, 1084840, -6097630, -1448190, 1073170, -6097630, -1448250, 1073100, -6097630, -1448190, 1073170, -6097630, -1298240, 760882, -6177300, -1448250, 1073100, -6097630, -1298240, 760882, -6177300, -1298330, 760813, -6177290, -1298330, 760813, -6177290, -1298240, 760882, -6177300, .279735, 2.44552e-8, -6356750, -1298330, 760813, -6177290, .279735, 2.44552e-8, -6356750, -945042, 347933, -6277020, -1448250, 1073100, -6097630, -1556030, 2000030, -5833520, -1448190, 1073170, -6097630, .279735, 2.44552e-8, -6356750, -877726, 291487, -6289570, -945042, 347933, -6277020, .279735, 2.44552e-8, -6356750, -842760, 265867, -6295440, -877726, 291487, -6289570, .279735, 2.44552e-8, -6356750, -812828, 237610, -6300470, -842760, 265867, -6295440, .279735, 2.44552e-8, -6356750, -784799, 208878, -6305010, -812828, 237610, -6300470, .279735, 2.44552e-8, -6356750, -756230, 180104, -6309360, -784799, 208878, -6305010, .279735, 2.44552e-8, -6356750, -676516, 126545, -6319640, -756230, 180104, -6309360, .279735, 2.44552e-8, -6356750, -658302, 89193.1, -6322180, -676516, 126545, -6319640, .279735, 2.44552e-8, -6356750, -650174, 85862.4, -6323060, -658302, 89193.1, -6322180, .279735, 2.44552e-8, -6356750, -618597, 73500.4, -6326360, -650174, 85862.4, -6323060, .279735, 2.44552e-8, -6356750, -649655, 45587.8, -6323530, -618597, 73500.4, -6326360, .279735, 2.44552e-8, -6356750, -616133, 18534, -6327e3, -649655, 45587.8, -6323530, -589627, -.0515468, -6329530, -616133, 18534, -6327e3, .279735, 2.44552e-8, -6356750, -1455e3, 1063920, -6097630, -1448250, 1073100, -6097630, -1298330, 760813, -6177290, -1455e3, 1063920, -6097630, -1298330, 760813, -6177290, -1302420, 757482, -6176840, -945042, 347933, -6277020, -1302420, 757482, -6176840, -1298330, 760813, -6177290, -1581650, 1966960, -5837840, -1556030, 2000030, -5833520, -1448250, 1073100, -6097630, -1581650, 1966960, -5837840, -1448250, 1073100, -6097630, -1455e3, 1063920, -6097630, -1467050, 1047250, -6097630, -1455e3, 1063920, -6097630, -1302420, 757482, -6176840, -1467050, 1047250, -6097630, -1302420, 757482, -6176840, -1309870, 751356, -6176020, -945042, 347933, -6277020, -1309870, 751356, -6176020, -1302420, 757482, -6176840, -1623920, 1955740, -5830050, -1581650, 1966960, -5837840, -1455e3, 1063920, -6097630, -1623920, 1955740, -5830050, -1455e3, 1063920, -6097630, -1467050, 1047250, -6097630, -1479880, 1029040, -6097630, -1467050, 1047250, -6097630, -1309870, 751356, -6176020, -1479880, 1029040, -6097630, -1309870, 751356, -6176020, -1318020, 744545, -6175120, -945042, 347933, -6277020, -1318020, 744545, -6175120, -1309870, 751356, -6176020, -1670860, 1937010, -5823080, -1623920, 1955740, -5830050, -1467050, 1047250, -6097630, -1670860, 1937010, -5823080, -1467050, 1047250, -6097630, -1479880, 1029040, -6097630, -1489690, 1014790, -6097630, -1479880, 1029040, -6097630, -1318020, 744545, -6175120, -1489690, 1014790, -6097630, -1318020, 744545, -6175120, -1324400, 739153, -6174410, -945042, 347933, -6277020, -1324400, 739153, -6174410, -1318010, 744568, -6175120, -1707720, 1909980, -5821340, -1670860, 1937010, -5823080, -1479880, 1029040, -6097630, -1707720, 1909980, -5821340, -1479880, 1029040, -6097630, -1489690, 1014790, -6097630, -1499730, 999891, -6097630, -1489690, 1014790, -6097630, -1324400, 739153, -6174410, -1499730, 999891, -6097630, -1324400, 739153, -6174410, -1331100, 733411, -6173660, -945042, 347933, -6277020, -1331100, 733411, -6173660, -1324400, 739153, -6174410, -1745250, 1875740, -5821340, -1707720, 1909980, -5821340, -1489690, 1014790, -6097630, -1745250, 1875740, -5821340, -1489690, 1014790, -6097630, -1499730, 999891, -6097630, -1509240, 985475, -6097630, -1499730, 999891, -6097630, -1331100, 733411, -6173660, -1509240, 985475, -6097630, -1331100, 733411, -6173660, -1337590, 727792, -6172930, -945042, 347933, -6277020, -1337590, 727792, -6172930, -1331100, 733411, -6173660, -1782070, 1854700, -5816950, -1745250, 1875740, -5821340, -1499730, 999891, -6097630, -1782070, 1854700, -5816950, -1499730, 999891, -6097630, -1509240, 985475, -6097630, -1518040, 971870, -6097630, -1509240, 985475, -6097630, -1337590, 727792, -6172930, -1518040, 971870, -6097630, -1337590, 727792, -6172930, -1343730, 722404, -6172230, -945042, 347933, -6277020, -1343730, 722404, -6172230, -1337590, 727792, -6172930, -1816650, 1832120, -5813430, -1782070, 1854700, -5816950, -1509240, 985475, -6097630, -1816650, 1832120, -5813430, -1509240, 985475, -6097630, -1518040, 971870, -6097630, -1525820, 959598, -6097630, -1518040, 971870, -6097630, -1343730, 722404, -6172230, -1525820, 959598, -6097630, -1343730, 722404, -6172230, -1349270, 717482, -6171600, -945042, 347933, -6277020, -1349270, 717482, -6171600, -1343730, 722404, -6172230, -1832950, 1732250, -5838700, -1816650, 1832120, -5813430, -1518040, 971870, -6097630, -1832950, 1732250, -5838700, -1518040, 971870, -6097630, -1525820, 959598, -6097630, -1530660, 951863, -6097630, -1525820, 959598, -6097630, -1349270, 717482, -6171600, -1530660, 951863, -6097630, -1349270, 717482, -6171600, -1352750, 714371, -6171200, -945042, 347933, -6277020, -1352750, 714371, -6171200, -1349270, 717482, -6171600, -1844880, 1692890, -5846430, -1832950, 1732250, -5838700, -1525820, 959598, -6097630, -1844880, 1692890, -5846430, -1525820, 959598, -6097630, -1530660, 951863, -6097630, -1541200, 934706, -6097630, -1530660, 951863, -6097630, -1352750, 714371, -6171200, -1541200, 934706, -6097630, -1352750, 714371, -6171200, -1360530, 707343, -6170300, -945042, 347933, -6277020, -1360530, 707343, -6170300, -1352750, 714371, -6171200, -1882610, 1659980, -5843860, -1844880, 1692890, -5846430, -1530660, 951863, -6097630, -1882610, 1659980, -5843860, -1530660, 951863, -6097630, -1541200, 934706, -6097630, -1552450, 915889, -6097630, -1541200, 934706, -6097630, -1360530, 707343, -6170300, -1552450, 915889, -6097630, -1360530, 707343, -6170300, -1369090, 699485, -6169310, -945042, 347933, -6277020, -1369090, 699485, -6169310, -1360530, 707343, -6170300, -1921660, 1617730, -5843e3, -1882610, 1659980, -5843860, -1541200, 934706, -6097630, -1921660, 1617730, -5843e3, -1541200, 934706, -6097630, -1552450, 915889, -6097630, -1560530, 902061, -6097630, -1552450, 915889, -6097630, -1369090, 699485, -6169310, -1560530, 902061, -6097630, -1369090, 699485, -6169310, -1375390, 693615, -6168580, -945042, 347933, -6277020, -1375390, 693615, -6168580, -1369090, 699485, -6169310, -1951540, 1591120, -5840430, -1921660, 1617730, -5843e3, -1552450, 915889, -6097630, -1951540, 1591120, -5840430, -1552450, 915889, -6097630, -1560530, 902061, -6097630, -1571110, 883505, -6097630, -1560530, 902061, -6097630, -1375390, 693615, -6168580, -1571110, 883505, -6097630, -1375390, 693615, -6168580, -1383870, 685606, -6167580, -945042, 347933, -6277020, -1383870, 685606, -6167580, -1375390, 693615, -6168580, -1987480, 1545990, -5840430, -1951540, 1591120, -5840430, -1560530, 902061, -6097630, -1987480, 1545990, -5840430, -1560530, 902061, -6097630, -1571110, 883505, -6097630, -1578730, 869816, -6097630, -1571110, 883505, -6097630, -1383870, 685606, -6167580, -1578730, 869816, -6097630, -1383870, 685606, -6167580, -1390140, 679611, -6166840, -945042, 347933, -6277020, -1390140, 679611, -6166840, -1383870, 685606, -6167580, -2014180, 1514380, -5839570, -1987480, 1545990, -5840430, -1571110, 883505, -6097630, -2014180, 1514380, -5839570, -1571110, 883505, -6097630, -1578730, 869816, -6097630, -1588580, 851684, -6097630, -1578730, 869816, -6097630, -1390140, 679611, -6166840, -1588580, 851684, -6097630, -1390140, 679611, -6166840, -1398460, 671532, -6165850, -945042, 347933, -6277020, -1398460, 671532, -6165850, -1390140, 679611, -6166840, -2045060, 1465520, -5841290, -2014180, 1514380, -5839570, -1578730, 869816, -6097630, -2045060, 1465520, -5841290, -1578730, 869816, -6097630, -1588580, 851684, -6097630, -1594970, 839654, -6097630, -1588580, 851684, -6097630, -1398460, 671532, -6165850, -1594970, 839654, -6097630, -1398460, 671532, -6165850, -1404020, 666077, -6165190, -945042, 347933, -6277020, -1404020, 666077, -6165190, -1398460, 671532, -6165850, -2020680, 1362970, -5874290, -2045060, 1465520, -5841290, -1588580, 851684, -6097630, -2020680, 1362970, -5874290, -1588580, 851684, -6097630, -1594970, 839654, -6097630, -1597780, 834305, -6097630, -1594970, 839654, -6097630, -1404020, 666077, -6165190, -1597780, 834305, -6097630, -1404020, 666077, -6165190, -1406480, 663638, -6164890, -945042, 347933, -6277020, -1406480, 663638, -6164890, -1404020, 666077, -6165190, -2010580, 1323420, -5886700, -2020680, 1362970, -5874290, -1594970, 839654, -6097630, -2010580, 1323420, -5886700, -1594970, 839654, -6097630, -1597780, 834305, -6097630, -1604700, 820918, -6097630, -1597780, 834305, -6097630, -1406480, 663638, -6164890, -1604700, 820918, -6097630, -1406480, 663638, -6164890, -1412670, 657448, -6164140, -945042, 347933, -6277020, -1412670, 657448, -6164140, -1406480, 663638, -6164890, -2014530, 1272400, -5896520, -2010580, 1323420, -5886700, -1597780, 834305, -6097630, -2014530, 1272400, -5896520, -1597780, 834305, -6097630, -1604700, 820918, -6097630, -1611940, 806602, -6097630, -1604700, 820918, -6097630, -1412670, 657448, -6164140, -1611940, 806602, -6097630, -1412670, 657448, -6164140, -1419300, 650735, -6163340, -945042, 347933, -6277020, -1419300, 650735, -6163340, -1412670, 657448, -6164140, -2016370, 1219230, -5907050, -2014530, 1272400, -5896520, -1604700, 820918, -6097630, -2016370, 1219230, -5907050, -1604700, 820918, -6097630, -1611940, 806602, -6097630, -1621290, 787641, -6097630, -1611940, 806602, -6097630, -1419310, 650739, -6163340, -1621290, 787641, -6097630, -1419310, 650739, -6163340, -1428110, 641698, -6162260, -945042, 347933, -6277020, -1428110, 641698, -6162260, -1419310, 650739, -6163340, -2027490, 1164350, -5914260, -2016370, 1219230, -5907050, -1611940, 806602, -6097630, -2027490, 1164350, -5914260, -1611940, 806602, -6097630, -1621290, 787641, -6097630, -1631260, 766778, -6097630, -1621290, 787641, -6097630, -1428110, 641698, -6162260, -1631260, 766778, -6097630, -1428110, 641698, -6162260, -1437840, 631526, -6161060, -945042, 347933, -6277020, -1437840, 631526, -6161060, -1428110, 641698, -6162260, -2040080, 1108410, -5920630, -2027490, 1164350, -5914260, -1621290, 787641, -6097630, -2040080, 1108410, -5920630, -1621290, 787641, -6097630, -1631260, 766778, -6097630, -1638570, 751027, -6097630, -1631260, 766778, -6097630, -1437840, 631526, -6161060, -1638570, 751027, -6097630, -1437840, 631526, -6161060, -1445210, 623693, -6160130, -945042, 347933, -6277020, -1445210, 623693, -6160130, -1437840, 631526, -6161060, -2045e3, 1064470, -5926950, -2040080, 1108410, -5920630, -1631260, 766778, -6097630, -2045e3, 1064470, -5926950, -1631260, 766778, -6097630, -1638570, 751027, -6097630, -1647400, 731470, -6097630, -1638570, 751027, -6097630, -1445210, 623693, -6160130, -1647400, 731470, -6097630, -1445210, 623693, -6160130, -1454390, 613761, -6158980, -945042, 347933, -6277020, -1454390, 613761, -6158980, -1445210, 623693, -6160130, -2063860, 1022800, -5927750, -2045e3, 1064470, -5926950, -1638570, 751027, -6097630, -2063860, 1022800, -5927750, -1638570, 751027, -6097630, -1647400, 731470, -6097630, -1653490, 717586, -6097630, -1647400, 731470, -6097630, -1454390, 613761, -6158980, -1653490, 717586, -6097630, -1454390, 613761, -6158980, -1460920, 606597, -6158150, -945042, 347933, -6277020, -1460920, 606597, -6158150, -1454390, 613761, -6158980, -2106480, 1014460, -5914260, -2063860, 1022800, -5927750, -1647400, 731470, -6097630, -2106480, 1014460, -5914260, -1647400, 731470, -6097630, -1653490, 717586, -6097630, -1659170, 704346, -6097630, -1653490, 717586, -6097630, -1460920, 606597, -6158150, -1659170, 704346, -6097630, -1460920, 606597, -6158150, -1467180, 599640, -6157350, -945042, 347933, -6277020, -1467180, 599640, -6157350, -1460920, 606597, -6158150, -2095960, 969980, -5925380, -2106480, 1014460, -5914260, -1653490, 717586, -6097630, -2095960, 969980, -5925380, -1653490, 717586, -6097630, -1659170, 704346, -6097630, -1664040, 692775, -6097630, -1659170, 704346, -6097630, -1467180, 599640, -6157350, -1664040, 692775, -6097630, -1467180, 599640, -6157350, -1472650, 593494, -6156640, -945042, 347933, -6277020, -1472650, 593494, -6156640, -1467180, 599640, -6157350, -2078890, 928628, -5937920, -2095960, 969980, -5925380, -1659170, 704346, -6097630, -2078890, 928628, -5937920, -1659170, 704346, -6097630, -1664040, 692775, -6097630, -1670130, 677964, -6097630, -1664050, 692746, -6097630, -1472650, 593494, -6156640, -1670130, 677964, -6097630, -1472650, 593494, -6156640, -1479660, 585509, -6155730, -945042, 347933, -6277020, -1479660, 585509, -6155730, -1472650, 593494, -6156640, -2070380, 886895, -5947200, -2078890, 928628, -5937920, -1664050, 692746, -6097630, -2070380, 886895, -5947200, -1664050, 692746, -6097630, -1670130, 677964, -6097630, -1678950, 655811, -6097630, -1670130, 677964, -6097630, -1479660, 585509, -6155730, -1678950, 655811, -6097630, -1479660, 585509, -6155730, -1490200, 573289, -6154350, -945042, 347933, -6277020, -1490200, 573289, -6154350, -1479660, 585509, -6155730, -2079230, 838965, -5951040, -2070380, 886895, -5947200, -1670130, 677964, -6097630, -2079230, 838965, -5951040, -1670130, 677964, -6097630, -1678950, 655811, -6097630, -1687200, 634278, -6097630, -1678950, 655811, -6097630, -1490200, 573289, -6154350, -1687200, 634278, -6097630, -1490200, 573289, -6154350, -1500480, 561097, -6152980, -945042, 347933, -6277020, -1500480, 561097, -6152980, -1490200, 573289, -6154350, -2084240, 792518, -5955620, -2079230, 838965, -5951040, -1678950, 655811, -6097630, -2084240, 792518, -5955620, -1678950, 655811, -6097630, -1687200, 634278, -6097630, -1690640, 625052, -6097630, -1687200, 634278, -6097630, -1500480, 561097, -6152980, -1690640, 625052, -6097630, -1500480, 561097, -6152980, -1504900, 555784, -6152390, -945042, 347933, -6277020, -1504900, 555784, -6152390, -1500480, 561097, -6152980, -2052460, 760410, -5970720, -2084240, 792518, -5955620, -1687200, 634278, -6097630, -2052460, 760410, -5970720, -1687200, 634278, -6097630, -1690640, 625052, -6097630, -1698920, 602187, -6097630, -1690640, 625052, -6097630, -1504900, 555784, -6152390, -1698920, 602187, -6097630, -1504900, 555784, -6152390, -1515870, 542371, -6150900, -1515870, 542371, -6150900, -1504900, 555784, -6152390, -945042, 347933, -6277020, -2043830, 711458, -5979650, -2052460, 760410, -5970720, -1690640, 625052, -6097630, -2043830, 711458, -5979650, -1690640, 625052, -6097630, -1698920, 602187, -6097630, -1698920, 602187, -6097630, -1515870, 542371, -6150900, -1520510, 536591, -6150270, -1698920, 602187, -6097630, -1520510, 536591, -6150270, -1700620, 597381, -6097630, -1515870, 542371, -6150900, -945042, 347933, -6277020, -986850, 353013, -6270340, -1515870, 542371, -6150900, -986850, 353013, -6270340, -1520510, 536591, -6150270, -2043830, 711458, -5979650, -1698920, 602187, -6097630, -1700620, 597381, -6097630, -2020680, 1362970, -5874290, -2066600, 1420870, -5844720, -2045060, 1465520, -5841290, -2057190, 1377370, -5858340, -2066600, 1420870, -5844720, -2020680, 1362970, -5874290, -1864930, 1808880, -5805470, -1892140, 1846650, -5784880, -1891540, 1886860, -5772170, -1845090, 1768950, -5823960, -1864930, 1808880, -5805470, -1891540, 1886860, -5772170, -1845090, 1768950, -5823960, -1891540, 1886860, -5772170, -1860720, 1858640, -5791180, -1832950, 1732250, -5838700, -1845090, 1768950, -5823960, -1860720, 1858640, -5791180, -1832950, 1732250, -5838700, -1860720, 1858640, -5791180, -1816650, 1832120, -5813430, -1078610, 2323980, -5821340, -1071130, 2362610, -5807240, -1046740, 2395320, -5798350, -1093260, 2281610, -5835250, -1078610, 2323980, -5821340, -1046740, 2395320, -5798350, -1093260, 2281610, -5835250, -1046740, 2395320, -5798350, -1006980, 2388500, -5808130, -698372, 2406640, -5845570, -587638, 2579830, -5783970, -515867, 2517790, -5817830, -698372, 2406640, -5845570, -613484, 2559480, -5790280, -587638, 2579830, -5783970, -698372, 2406640, -5845570, -660688, 2481650, -5818710, -613484, 2559480, -5790280, -660688, 2481650, -5818710, -640691, 2524020, -5802800, -613484, 2559480, -5790280, 51196.7, 2503370, -5846430, 90660.7, 2578510, -5813430, 110577, 2509500, -5843e3, 51196.7, 2503370, -5846430, 73110.2, 2551020, -5825700, 90660.7, 2578510, -5813430, 1232290, 2017460, -5903980, 1576290, 2062750, -5806360, 1232870, 2016890, -5904060, 1232290, 2017460, -5903980, 1232870, 2016890, -5904060, 711255, 1825580, -6049410, 1232290, 2017460, -5903980, 711255, 1825580, -6049410, 748022, 1846770, -6038610, 1549560, 2102770, -5799240, 1576290, 2062750, -5806360, 1232290, 2017460, -5903980, 1549560, 2102770, -5799240, 1232290, 2017460, -5903980, 1211230, 2037740, -5901400, 748022, 1846770, -6038610, 1211230, 2037740, -5901400, 1232290, 2017460, -5903980, 1520210, 2133900, -5795660, 1549560, 2102770, -5799240, 1211230, 2037740, -5901400, 1520210, 2133900, -5795660, 1211230, 2037740, -5901400, 1194190, 2053780, -5899320, 748022, 1846770, -6038610, 1194190, 2053780, -5899320, 1211230, 2037740, -5901400, 1483810, 2152100, -5798350, 1520210, 2133900, -5795660, 1194190, 2053780, -5899320, 1483810, 2152100, -5798350, 1194190, 2053780, -5899320, 1182130, 2064910, -5897870, 748022, 1846770, -6038610, 1182130, 2064910, -5897870, 1194190, 2053780, -5899320, 1369540, 2129680, -5834390, 1483810, 2152100, -5798350, 1182130, 2064910, -5897870, 1369540, 2129680, -5834390, 1182130, 2064910, -5897870, 1179190, 2067610, -5897520, 748022, 1846770, -6038610, 1179190, 2067610, -5897520, 1182130, 2064910, -5897870, 1318590, 2121480, -5848990, 1369540, 2129680, -5834390, 1179190, 2067610, -5897520, 1318590, 2121480, -5848990, 1179190, 2067610, -5897520, 1175280, 2071180, -5897050, 748022, 1846770, -6038610, 1175280, 2071180, -5897050, 1179190, 2067610, -5897520, 1281400, 2111230, -5860880, 1318590, 2121480, -5848990, 1175280, 2071180, -5897050, 1281400, 2111230, -5860880, 1175280, 2071180, -5897050, 1174180, 2072190, -5896920, 748022, 1846770, -6038610, 1174180, 2072190, -5896920, 1175280, 2071180, -5897050, 1231040, 2127020, -5865920, 1281400, 2111230, -5860880, 1174180, 2072190, -5896920, 1231040, 2127020, -5865920, 1174180, 2072190, -5896920, 1152360, 2091790, -5894320, 748022, 1846770, -6038610, 1152360, 2091790, -5894320, 1174180, 2072190, -5896920, 1192360, 2116540, -5877610, 1231040, 2127020, -5865920, 1152360, 2091790, -5894320, 1192360, 2116540, -5877610, 1152360, 2091790, -5894320, 1148070, 2095580, -5893810, 748022, 1846770, -6038610, 1148070, 2095580, -5893810, 1152360, 2091790, -5894320, 1148300, 2108560, -5889160, 1192360, 2116540, -5877610, 1148070, 2095580, -5893810, 1148300, 2108560, -5889160, 1148070, 2095580, -5893810, 1138860, 2103660, -5892730, 748022, 1846770, -6038610, 1138860, 2103660, -5892730, 1148070, 2095580, -5893810, 1122580, 2117740, -5890820, 1148300, 2108560, -5889160, 1138860, 2103660, -5892730, 1122580, 2117740, -5890820, 1138860, 2103660, -5892730, 748022, 1846770, -6038610, 1122580, 2117740, -5890820, 748022, 1846770, -6038610, 111e4, 2122110, -5891620, 1083130, 2150800, -5886260, 1089290, 2155540, -5883400, 1102020, 2135160, -5888430, 1102020, 2135160, -5888430, 111e4, 2122110, -5891620, 748022, 1846770, -6038610, 1102020, 2135160, -5888430, 748022, 1846770, -6038610, 1083130, 2150800, -5886260, 1075310, 2209840, -5865920, 1089290, 2155540, -5883400, 1083130, 2150800, -5886260, 1075310, 2209840, -5865920, 1083130, 2150800, -5886260, 1045660, 2180860, -5882e3, 748022, 1846770, -6038610, 1045660, 2180860, -5882e3, 1083130, 2150800, -5886260, 1029520, 2207060, -5875120, 1075310, 2209840, -5865920, 1045660, 2180860, -5882e3, 1029520, 2207060, -5875120, 1045660, 2180860, -5882e3, 1022420, 2198880, -5879390, 748022, 1846770, -6038610, 1022420, 2198880, -5879390, 1045660, 2180860, -5882e3, 1007290, 2210370, -5877710, 1029520, 2207060, -5875120, 1022420, 2198880, -5879390, 1007290, 2210370, -5877710, 1022420, 2198880, -5879390, 748022, 1846770, -6038610, 1007290, 2210370, -5877710, 748022, 1846770, -6038610, 986712, 2213250, -5880100, 748022, 1846770, -6038610, 945500, 2217970, -5885050, 986712, 2213250, -5880100, 748022, 1846770, -6038610, 814141, 1996260, -5982600, 945500, 2217970, -5885050, 793885, 196e4, -5997200, 814141, 1996260, -5982600, 748022, 1846770, -6038610, 756288, 1977030, -5996470, 793885, 196e4, -5997200, 748022, 1846770, -6038610, 756288, 1977030, -5996470, 748022, 1846770, -6038610, 748874, 1893370, -6024150, 1369540, 2129680, -5834390, 1442770, 2167850, -5802800, 1483810, 2152100, -5798350, 1369540, 2129680, -5834390, 1397080, 2164360, -5815190, 1442770, 2167850, -5802800, 1693600, 1687540, -5893260, 1700490, 1648690, -5902200, 1478110, 1734380, -5937190, 1693600, 1687540, -5893260, 1478110, 1734380, -5937190, 1452740, 1768410, -5933440, 711255, 1825580, -6049410, 1452740, 1768410, -5933440, 1478110, 1734380, -5937190, 1686170, 1729080, -5883400, 1693600, 1687540, -5893260, 1452740, 1768410, -5933440, 1686170, 1729080, -5883400, 1452740, 1768410, -5933440, 1425970, 1802880, -5929580, 711255, 1825580, -6049410, 1425970, 1802880, -5929580, 1452740, 1768410, -5933440, 1677680, 1768110, -5874290, 1686170, 1729080, -5883400, 1425970, 1802880, -5929580, 1677680, 1768110, -5874290, 1425970, 1802880, -5929580, 1401540, 1833170, -5926140, 711255, 1825580, -6049410, 1401540, 1833170, -5926140, 1425970, 1802880, -5929580, 1640240, 1786460, -5879270, 1677680, 1768110, -5874290, 1401540, 1833170, -5926140, 1640240, 1786460, -5879270, 1401540, 1833170, -5926140, 1396520, 1839280, -5925440, 711255, 1825580, -6049410, 1396520, 1839280, -5925440, 1401540, 1833170, -5926140, 1636110, 1839190, -5864250, 1640240, 1786460, -5879270, 1396520, 1839280, -5925440, 1636110, 1839190, -5864250, 1396520, 1839280, -5925440, 1361770, 1880280, -5920680, 711255, 1825580, -6049410, 1361770, 1880280, -5920680, 1396520, 1839280, -5925440, 1633770, 1878820, -5852400, 1636110, 1839190, -5864250, 1361770, 1880280, -5920680, 1633770, 1878820, -5852400, 1361770, 1880280, -5920680, 1336700, 1908670, -5917330, 711255, 1825580, -6049410, 1336700, 1908670, -5917330, 1361770, 1880280, -5920680, 1601430, 1903840, -5853250, 1633770, 1878820, -5852400, 1336700, 1908670, -5917330, 1601430, 1903840, -5853250, 1336700, 1908670, -5917330, 1324050, 1922640, -5915670, 711255, 1825580, -6049410, 1324050, 1922640, -5915670, 1336700, 1908670, -5917330, 1589200, 1945320, -5843e3, 1601430, 1903840, -5853250, 1324050, 1922640, -5915670, 1589200, 1945320, -5843e3, 1324050, 1922640, -5915670, 1299120, 1949500, -5912420, 711255, 1825580, -6049410, 1299120, 1949500, -5912420, 1324050, 1922640, -5915670, 1605300, 1978800, -5827450, 1589200, 1945320, -5843e3, 1299120, 1949500, -5912420, 1605300, 1978800, -5827450, 1299120, 1949500, -5912420, 1278780, 1970790, -5909820, 711255, 1825580, -6049410, 1278780, 1970790, -5909820, 1299120, 1949500, -5912420, 1593380, 2024210, -5815190, 1605300, 1978800, -5827450, 1278780, 1970790, -5909820, 1593380, 2024210, -5815190, 1278780, 1970790, -5909820, 1253670, 1996330, -5906650, 711255, 1825580, -6049410, 1253670, 1996330, -5906650, 1278780, 1970790, -5909820, 1576290, 2062750, -5806360, 1593380, 2024210, -5815190, 1253670, 1996330, -5906650, 1576290, 2062750, -5806360, 1253670, 1996330, -5906650, 1232870, 2016890, -5904060, 711255, 1825580, -6049410, 1232870, 2016890, -5904060, 1253670, 1996330, -5906650, 1765870, 1374940, -5952570, 1811980, 1375370, -5938690, 1829990, 1337490, -5941800, 1727040, 1381120, -5962460, 1765870, 1374940, -5952570, 1829990, 1337490, -5941800, 1727040, 1381120, -5962460, 1829990, 1337490, -5941800, 1930270, 1268060, -5925380, 1829990, 1337490, -5941800, 1869900, 1323980, -5932450, 1930270, 1268060, -5925380, 1869900, 1323980, -5932450, 1946330, 1306420, -5911860, 1930270, 1268060, -5925380, 1869900, 1323980, -5932450, 1909e3, 1332160, -5918250, 1946330, 1306420, -5911860, 1952720, 811617, -5997200, 2075990, 725349, -5966980, 2090970, 687546, -5966230, 1952720, 811617, -5997200, 2049920, 761368, -5971470, 2075990, 725349, -5966980, 1952720, 811617, -5997200, 1990450, 801083, -5986280, 2049920, 761368, -5971470, 1990450, 801083, -5986280, 2029500, 797520, -5973710, 2049920, 761368, -5971470, 1952720, 811617, -5997200, 2100710, 643317, -5967730, 2100590, 600323, -5972220, 1952720, 811617, -5997200, 2090970, 687546, -5966230, 2100710, 643317, -5967730, 2071260, 559908, -5986280, 2131e3, 508571, -5969980, 2111590, 464430, -5980390, 2071260, 559908, -5986280, 2112840, 555673, -5972220, 2131e3, 508571, -5969980, 2103250, 380322, -5989200, 2156590, 361863, -5971470, 2148560, 320611, -5976690, 2062910, 394185, -6002240, 2103250, 380322, -5989200, 2148560, 320611, -5976690, 2062910, 394185, -6002240, 2148560, 320611, -5976690, 2145320, 268572, -5980390, 2148560, 320611, -5976690, 2179010, 296274, -5966980, 2145320, 268572, -5980390, 2015340, -8042.19, -6031070, 2049750, -109180, -6018560, 2028180, -153983, -6024850, 2015340, -8042.19, -6031070, 2064080, -64703.6, -6014340, 2049750, -109180, -6018560, 2015340, -8042.19, -6031070, 2058740, -23697.7, -6016450, 2064080, -64703.6, -6014340, 2030720, -196837, -6022760, 2074900, -249924, -6005820, 2031570, -263041, -6019960, 2030720, -196837, -6022760, 2068950, -209827, -6009380, 2074900, -249924, -6005820, 1990580, -301452, -6031760, 2021650, -367244, -6017860, 1988360, -387234, -6027620, 1990580, -301452, -6031760, 2022740, -324027, -6019960, 2021650, -367244, -6017860, 646721, -599046, -6295740, 594637, -702695, -6290200, 553636, -697104, -6294530, 646721, -599046, -6295740, 626043, -677817, -6289880, 594637, -702695, -6290200, 646721, -599046, -6295740, 643678, -639774, -6292070, 626043, -677817, -6289880, -1289600, -979069, -6148510, -482899, -365320, -6328040, -281190, -590694, -6323230, -1289600, -979069, -6148510, -281190, -590694, -6323230, 146728, -984881, -6278810, 397948, -642387, -6311980, 146728, -984881, -6278810, -281190, -590694, -6323230, -1291150, -1021920, -6141260, -1289600, -979069, -6148510, 146728, -984881, -6278810, -1291150, -1021920, -6141260, 146728, -984881, -6278810, 156803, -988789, -6277960, 397948, -642387, -6311980, 156803, -988789, -6277960, 146728, -984881, -6278810, -1266870, -1055180, -6140690, -1291150, -1021920, -6141260, 156803, -988789, -6277960, -1266870, -1055180, -6140690, 156803, -988789, -6277960, 161178, -990443, -6277590, 397948, -642387, -6311980, 161178, -990443, -6277590, 156803, -988789, -6277960, -1249600, -1091710, -6137870, -1266870, -1055180, -6140690, 161178, -990443, -6277590, -1249600, -1091710, -6137870, 161178, -990443, -6277590, 167543, -992797, -6277050, 397948, -642387, -6311980, 167543, -992797, -6277050, 161178, -990443, -6277590, -1242170, -1138e3, -6131010, -1249600, -1091710, -6137870, 167543, -992797, -6277050, -1242170, -1138e3, -6131010, 167543, -992797, -6277050, 177617, -996421, -6276210, 397948, -642387, -6311980, 177617, -996421, -6276210, 167543, -992797, -6277050, -1237370, -1177140, -6124630, -1242170, -1138e3, -6131010, 177617, -996421, -6276210, -1237370, -1177140, -6124630, 177617, -996421, -6276210, 186333, -999460, -6275470, 397948, -642387, -6311980, 186333, -999460, -6275470, 177617, -996421, -6276210, -1228600, -1219410, -6118160, -1237370, -1177140, -6124630, 186333, -999460, -6275470, -1228600, -1219410, -6118160, 186333, -999460, -6275470, 195378, -1002510, -6274720, 397948, -642387, -6311980, 195378, -1002510, -6274720, 186333, -999460, -6275470, -1207370, -1231600, -6119940, -1228600, -1219410, -6118160, 195376, -1002510, -6274720, -1207370, -1231600, -6119940, 195376, -1002510, -6274720, 196193, -1002770, -6274650, 397948, -642387, -6311980, 196193, -1002770, -6274650, 195376, -1002510, -6274720, -1186740, -1239860, -6122290, -1207370, -1231600, -6119940, 196193, -1002770, -6274650, -1186740, -1239860, -6122290, 196193, -1002770, -6274650, 196225, -1002780, -6274650, 397948, -642387, -6311980, 196225, -1002780, -6274650, 196193, -1002770, -6274650, -1121520, -1293580, -6123460, -1186740, -1239860, -6122290, 196225, -1002780, -6274650, -1121520, -1293580, -6123460, 196225, -1002780, -6274650, 203811, -1005250, -6274020, 397948, -642387, -6311980, 203811, -1005250, -6274020, 196225, -1002780, -6274650, -1091590, -1321670, -6122870, -1121520, -1293580, -6123460, 203811, -1005250, -6274020, -1091590, -1321670, -6122870, 203811, -1005250, -6274020, 208621, -1006780, -6273620, 397948, -642387, -6311980, 208621, -1006780, -6273620, 203811, -1005250, -6274020, -1070170, -1357890, -6118760, -1091590, -1321670, -6122870, 208621, -1006780, -6273620, -1070170, -1357890, -6118760, 208621, -1006780, -6273620, 216331, -1009160, -6272980, 397948, -642387, -6311980, 216331, -1009160, -6272980, 208621, -1006780, -6273620, -1031530, -1374320, -6121700, -1070170, -1357890, -6118760, 216331, -1009160, -6272980, -1031530, -1374320, -6121700, 216331, -1009160, -6272980, 218234, -1009750, -6272820, 397948, -642387, -6311980, 218234, -1009750, -6272820, 216331, -1009160, -6272980, -989372, -1392080, -6124630, -1031530, -1374320, -6121700, 218234, -1009750, -6272820, -989372, -1392080, -6124630, 218234, -1009750, -6272820, 220659, -1010480, -6272620, 397948, -642387, -6311980, 220659, -1010480, -6272620, 218234, -1009750, -6272820, -957647, -1419180, -6123460, -989372, -1392080, -6124630, 220659, -1010480, -6272620, -957647, -1419180, -6123460, 220659, -1010480, -6272620, 226402, -1012180, -6272140, 397948, -642387, -6311980, 226402, -1012180, -6272140, 220659, -1010480, -6272620, -920319, -1441170, -6124040, -957647, -1419180, -6123460, 226402, -1012180, -6272140, -920319, -1441170, -6124040, 226402, -1012180, -6272140, 230927, -1013500, -6271760, 397948, -642387, -6311980, 230927, -1013500, -6271760, 226402, -1012180, -6272140, -881496, -1462770, -6124630, -920319, -1441170, -6124040, 230927, -1013500, -6271760, -881496, -1462770, -6124630, 230927, -1013500, -6271760, 235701, -1014860, -6271370, 397948, -642387, -6311980, 235701, -1014860, -6271370, 230927, -1013500, -6271760, -848335, -1487110, -6123460, -881496, -1462770, -6124630, 235701, -1014860, -6271370, -848335, -1487110, -6123460, 235701, -1014860, -6271370, 241683, -1016530, -6270880, 397948, -642387, -6311980, 241683, -1016530, -6270880, 235701, -1014860, -6271370, -836914, -1529670, -6114600, -848335, -1487110, -6123460, 241683, -1016530, -6270880, -836914, -1529670, -6114600, 241683, -1016530, -6270880, 252871, -1019540, -6269950, 397948, -642387, -6311980, 252871, -1019540, -6269950, 241683, -1016530, -6270880, -767478, -1558620, -6116390, -836914, -1529670, -6114600, 252871, -1019540, -6269950, -767478, -1558620, -6116390, 252871, -1019540, -6269950, 260733, -1021560, -6269300, 397948, -642387, -6311980, 260733, -1021560, -6269300, 252871, -1019540, -6269950, -640022, -1560610, -6130430, -767478, -1558620, -6116390, 260733, -1021560, -6269300, -640022, -1560610, -6130430, 260733, -1021560, -6269300, 264328, -1022470, -6269010, 397948, -642387, -6311980, 264328, -1022470, -6269010, 260733, -1021560, -6269300, -575837, -1576450, -6132730, -640022, -1560610, -6130430, 264328, -1022470, -6269010, -575837, -1576450, -6132730, 264328, -1022470, -6269010, 271646, -1024270, -6268410, 397948, -642387, -6311980, 271646, -1024270, -6268410, 264328, -1022470, -6269010, -493580, -1559830, -6144060, -575837, -1576450, -6132730, 271646, -1024270, -6268410, -493580, -1559830, -6144060, 271646, -1024270, -6268410, 272075, -1024370, -6268370, 397948, -642387, -6311980, 272075, -1024370, -6268370, 271646, -1024270, -6268410, -456813, -1577600, -6142380, -493580, -1559830, -6144060, 272075, -1024370, -6268370, -456813, -1577600, -6142380, 272075, -1024370, -6268370, 280100, -1026270, -6267710, 397948, -642387, -6311980, 280100, -1026270, -6267710, 272075, -1024370, -6268370, 273624, -1047470, -6264510, -456813, -1577600, -6142380, 280100, -1026270, -6267710, 273624, -1047470, -6264510, 280100, -1026270, -6267710, 285e3, -1027400, -6267310, 397948, -642387, -6311980, 285e3, -1027400, -6267310, 280100, -1026270, -6267710, 295664, -1029750, -6266430, 273624, -1047470, -6264510, 285e3, -1027400, -6267310, 295664, -1029750, -6266430, 285e3, -1027400, -6267310, 397948, -642387, -6311980, 295664, -1029750, -6266430, 397948, -642387, -6311980, 307123, -1020130, -6267450, 397948, -642387, -6311980, 341999, -940308, -6278050, 307123, -1020130, -6267450, 397948, -642387, -6311980, 358865, -896845, -6283420, 341999, -940308, -6278050, 397948, -642387, -6311980, 390325, -864647, -6286040, 358865, -896845, -6283420, 397948, -642387, -6311980, 413268, -820122, -6290510, 390325, -864647, -6286040, 397948, -642387, -6311980, 421994, -778901, -6295140, 413268, -820122, -6290510, 397948, -642387, -6311980, 428462, -732972, -6300180, 421994, -778901, -6295140, 397948, -642387, -6311980, 413877, -681032, -6306940, 428462, -732972, -6300180, 259751, -1093130, -6257340, 264945, -1133930, -6249910, 249218, -1174880, -6243040, 17513.1, -1802400, -6097630, 17421.9, -1802400, -6097630, 259751, -1093130, -6257340, 17513.1, -1802400, -6097630, 259751, -1093130, -6257340, 249218, -1174880, -6243040, 17513.1, -1802400, -6097630, -2842.43, -1836030, -6087680, 17421.9, -1802400, -6097630, 249218, -1174880, -6243040, 81637.4, -1800640, -6097630, 17513.1, -1802400, -6097630, 25869.8, -1917390, -6062660, -2842.43, -1836030, -6087680, 17513.1, -1802400, -6097630, 25869.8, -1917390, -6062660, 17513.1, -1802400, -6097630, 81637.4, -1800640, -6097630, 249218, -1174880, -6243040, 82787.5, -1800590, -6097630, 81637.4, -1800640, -6097630, 51417, -1868810, -6077550, 25869.8, -1917390, -6062660, 81637.4, -1800640, -6097630, 51417, -1868810, -6077550, 81637.4, -1800640, -6097630, 82787.5, -1800590, -6097630, 249218, -1174880, -6243040, 107728, -1799270, -6097630, 82787.5, -1800590, -6097630, 88201.7, -1848580, -6083270, 51417, -1868810, -6077550, 82787.5, -1800590, -6097630, 88201.7, -1848580, -6083270, 82787.5, -1800590, -6097630, 107728, -1799270, -6097630, 249218, -1174880, -6243040, 147834, -1796420, -6097630, 107728, -1799270, -6097630, 129347, -1856650, -6080100, 88201.7, -1848580, -6083270, 107728, -1799270, -6097630, 129347, -1856650, -6080100, 107728, -1799270, -6097630, 147834, -1796420, -6097630, 249218, -1174880, -6243040, 157244, -1795620, -6097630, 147834, -1796420, -6097630, 152479, -1812860, -6092680, 129347, -1856650, -6080100, 147834, -1796420, -6097630, 152479, -1812860, -6092680, 147834, -1796420, -6097630, 157244, -1795620, -6097630, 249218, -1174880, -6243040, 195965, -1791800, -6097630, 157244, -1795620, -6097630, 193506, -1804720, -6093920, 152479, -1812860, -6092680, 157244, -1795620, -6097630, 193506, -1804720, -6093920, 157244, -1795620, -6097630, 195965, -1791800, -6097630, 230081, -1787740, -6097630, 195965, -1791800, -6097630, 249218, -1174880, -6243040, 230081, -1787740, -6097630, 249218, -1174880, -6243040, 230106, -1787740, -6097630, 230081, -1787740, -6097630, 193506, -1804720, -6093920, 195965, -1791800, -6097630, 249218, -1174880, -6243040, 263904, -1759710, -6104360, 230106, -1787740, -6097630, 281437, -1780380, -6097630, 263904, -1759710, -6104360, 249218, -1174880, -6243040, 281437, -1780380, -6097630, 249218, -1174880, -6243040, 293949, -1778360, -6097630, 293949, -1778360, -6097630, 294394, -1795280, -6092680, 281437, -1780380, -6097630, 249218, -1174880, -6243040, 309758, -1775670, -6097630, 293949, -1778360, -6097630, 313013, -1830390, -6081370, 294394, -1795280, -6092680, 293949, -1778360, -6097630, 313013, -1830390, -6081370, 293949, -1778360, -6097630, 309758, -1775670, -6097630, 249218, -1174880, -6243040, 335574, -1770980, -6097630, 309758, -1775670, -6097630, 337094, -1783490, -6093920, 313013, -1830390, -6081370, 309758, -1775670, -6097630, 337094, -1783490, -6093920, 309758, -1775670, -6097630, 335574, -1770980, -6097630, 273624, -1047470, -6264510, 259751, -1093130, -6257340, -293329, -1643910, -6135020, -245651, -1785670, -6097630, -293329, -1643910, -6135020, 259751, -1093130, -6257340, -245651, -1785670, -6097630, 259751, -1093130, -6257340, -233010, -1787360, -6097630, -233010, -1787360, -6097630, -242257, -1794600, -6095160, -245651, -1785670, -6097630, 259751, -1093130, -6257340, -197022, -1791690, -6097630, -233010, -1787360, -6097630, -199170, -1793550, -6097020, -242257, -1794600, -6095160, -233010, -1787360, -6097630, -199170, -1793550, -6097020, -233010, -1787360, -6097630, -197022, -1791690, -6097630, 259751, -1093130, -6257340, -144363, -1796700, -6097630, -197022, -1791690, -6097630, -159951, -1812220, -6092680, -199170, -1793550, -6097020, -197022, -1791690, -6097630, -159951, -1812220, -6092680, -197022, -1791690, -6097630, -144363, -1796700, -6097630, 259751, -1093130, -6257340, -86888.6, -1800390, -6097630, -144363, -1796700, -6097630, -117885, -1836440, -6086420, -159951, -1812220, -6092680, -144363, -1796700, -6097630, -117885, -1836440, -6086420, -144363, -1796700, -6097630, -86888.6, -1800390, -6097630, 259751, -1093130, -6257340, -41941, -1802e3, -6097630, -86888.6, -1800390, -6097630, -78846.4, -1851100, -6082640, -117885, -1836440, -6086420, -86888.6, -1800390, -6097630, -78846.4, -1851100, -6082640, -86888.6, -1800390, -6097630, -41941, -1802e3, -6097630, 259751, -1093130, -6257340, -27827.8, -1802270, -6097630, -41941, -1802e3, -6097630, -45310.4, -1827090, -6090190, -78846.4, -1851100, -6082640, -41941, -1802e3, -6097630, -45310.4, -1827090, -6090190, -41941, -1802e3, -6097630, -27827.8, -1802270, -6097630, 259751, -1093130, -6257340, 17421.9, -1802400, -6097630, -27827.8, -1802270, -6097630, -2842.43, -1836030, -6087680, -45310.4, -1827090, -6090190, -27827.8, -1802270, -6097630, -2842.43, -1836030, -6087680, -27827.8, -1802270, -6097630, 17421.9, -1802400, -6097630, -242257, -1794600, -6095160, -261072, -1830060, -6083900, -298545, -1856120, -6074340, -245651, -1785670, -6097630, -297487, -1777770, -6097630, -293329, -1643910, -6135020, -298545, -1856120, -6074340, -297487, -1777770, -6097630, -245651, -1785670, -6097630, -298545, -1856120, -6074340, -245651, -1785670, -6097630, -242257, -1794600, -6095160, -297487, -1777770, -6097630, -320153, -1773830, -6097630, -293329, -1643910, -6135020, -298545, -1856120, -6074340, -339555, -1866040, -6069180, -320153, -1773830, -6097630, -298545, -1856120, -6074340, -320153, -1773830, -6097630, -297487, -1777770, -6097630, -329560, -1772100, -6097630, -318542, -1675730, -6125210, -293329, -1643910, -6135020, -329560, -1772100, -6097630, -293329, -1643910, -6135020, -320153, -1773830, -6097630, -320153, -1773830, -6097630, -339555, -1866040, -6069180, -329560, -1772100, -6097630, -340595, -1770020, -6097630, -340258, -1710130, -6114600, -318542, -1675730, -6125210, -340595, -1770020, -6097630, -318542, -1675730, -6125210, -329560, -1772100, -6097630, -339555, -1866040, -6069180, -340595, -1770020, -6097630, -329560, -1772100, -6097630, 273624, -1047470, -6264510, -426535, -1605740, -6137300, -456813, -1577600, -6142380, 273624, -1047470, -6264510, -383153, -1612300, -6138430, -426535, -1605740, -6137300, 273624, -1047470, -6264510, -341952, -1606410, -6142380, -383153, -1612300, -6138430, 273624, -1047470, -6264510, -299904, -1595440, -6147400, -341952, -1606410, -6142380, 273624, -1047470, -6264510, -293329, -1643910, -6135020, -299904, -1595440, -6147400, -640022, -1560610, -6130430, -671551, -1586310, -6120520, -742844, -1591440, -6111010, -671551, -1586310, -6120520, -728120, -1639700, -6100090, -742844, -1591440, -6111010, -671551, -1586310, -6120520, -696289, -1616920, -6109810, -728120, -1639700, -6100090, -588737, -585.717, -6329610, -589627, .0515468, -6329530, .279735, -2.44552e-8, -6356750, -478791, -192754, -6335900, -588737, -585.717, -6329610, .279735, -2.44552e-8, -6356750, -417906, -255762, -6337970, -478791, -192754, -6335900, .279735, -2.44552e-8, -6356750, -417906, -255762, -6337970, -496217, -229369, -6333360, -478791, -192754, -6335900, -417906, -255762, -6337970, -458797, -254923, -6335190, -496217, -229369, -6333360, -478791, -192754, -6335900, -515565, -168214, -6333730, -606614, -59660.8, -6327660, -515565, -168214, -6333730, -651092, -78594.7, -6323060, -606614, -59660.8, -6327660, -515565, -168214, -6333730, -657046, -81967.4, -6322400, -651092, -78594.7, -6323060, -515565, -168214, -6333730, -590049, -135985, -6328040, -657046, -81967.4, -6322400, -515565, -168214, -6333730, -555335, -157332, -6330670, -590049, -135985, -6328040, -590049, -135985, -6328040, -629709, -127772, -6324410, -657046, -81967.4, -6322400, -629709, -127772, -6324410, -671273, -118955, -6320340, -657046, -81967.4, -6322400, -629709, -127772, -6324410, -643769, -125136, -6323060, -671273, -118955, -6320340, -478791, -192754, -6335900, -606614, -59660.8, -6327660, -621706, -31048.1, -6326410, -606614, -59660.8, -6327660, -656350, -44917.9, -6322850, -621706, -31048.1, -6326410, -606614, -59660.8, -6327660, -654998, -46410.7, -6322970, -656350, -44917.9, -6322850, -606614, -59660.8, -6327660, -654082, -47688.4, -6323060, -654998, -46410.7, -6322970, -478791, -192754, -6335900, -621706, -31048.1, -6326410, -617881, -29603.2, -6326780, -478791, -192754, -6335900, -617881, -29603.2, -6326780, -588737, -585.717, -6329610, -617881, -29603.2, -6326780, -653342, -10731, -6323300, -588737, -585.717, -6329610, -1190210, 314600, -6237220, -1298440, 365635, -6212960, -1158730, 339583, -6241800, -1190210, 314600, -6237220, -1264230, 344836, -6221140, -1298440, 365635, -6212960, -1260190, 300126, -6224260, -1264230, 344836, -6221140, -1190210, 314600, -6237220, -1216250, 280883, -6233820, -1260190, 300126, -6224260, -1190210, 314600, -6237220, -1730020, 505959, -6097630, -1575840, 463078, -6142360, -1579360, 458069, -6141840, -1730020, 505959, -6097630, -1579360, 458069, -6141840, -1731190, 501942, -6097630, -1575840, 463078, -6142360, -1459460, 430428, -6173210, -1500100, 435165, -6163200, -1575840, 463078, -6142360, -1500100, 435165, -6163200, -1579360, 458069, -6141840, -2029160, 587912, -5997920, -1730020, 505959, -6097630, -1731190, 501942, -6097630, -1729690, 507076, -6097630, -1574860, 464462, -6142510, -1575840, 463078, -6142360, -1729690, 507076, -6097630, -1575840, 463078, -6142360, -1730020, 505959, -6097630, -1574860, 464462, -6142510, -1411830, 419006, -6184980, -1459460, 430428, -6173210, -1574860, 464462, -6142510, -1459460, 430428, -6173210, -1575840, 463078, -6142360, -2029160, 587912, -5997920, -1729690, 507076, -6097630, -1730020, 505959, -6097630, -1729690, 507076, -6097630, -1724350, 524950, -6097630, -1569590, 471856, -6143290, -1729690, 507076, -6097630, -1569590, 471856, -6143290, -1574860, 464462, -6142510, -1574860, 464462, -6142510, -1569590, 471856, -6143290, -1411830, 419006, -6184980, -2029160, 587912, -5997920, -2014920, 628081, -5998640, -1724350, 524950, -6097630, -2029160, 587912, -5997920, -1724350, 524950, -6097630, -1729690, 507076, -6097630, -1724350, 524950, -6097630, -1724230, 525342, -6097630, -1569230, 472345, -6143340, -1724350, 524950, -6097630, -1569230, 472345, -6143340, -1569590, 471856, -6143290, -1569590, 471856, -6143290, -1569230, 472345, -6143340, -1373160, 407010, -6194420, -1569590, 471856, -6143290, -1373160, 407010, -6194420, -1411830, 419006, -6184980, -1724350, 524950, -6097630, -2014920, 628081, -5998640, -1724230, 525342, -6097630, -1724230, 525342, -6097630, -1723970, 526214, -6097630, -1568460, 473426, -6143460, -1724230, 525342, -6097630, -1568460, 473426, -6143460, -1569230, 472345, -6143340, -1569230, 472345, -6143340, -1568460, 473426, -6143460, -1158730, 339583, -6241800, -1569230, 472345, -6143340, -1158730, 339583, -6241800, -1373160, 407010, -6194420, -1724230, 525342, -6097630, -2014920, 628081, -5998640, -1723970, 526214, -6097630, -1336110, 381659, -6204060, -1373160, 407010, -6194420, -1158730, 339583, -6241800, -1298440, 365635, -6212960, -1336110, 381659, -6204060, -1158730, 339583, -6241800, -1702090, 593164, -6097630, -1524500, 531602, -6149720, -1526240, 529404, -6149480, -1702090, 593164, -6097630, -1526240, 529404, -6149480, -1702730, 591322, -6097630, -1524500, 531602, -6149720, -1028180, 359098, -6263400, -1078140, 372834, -6254250, -1524500, 531602, -6149720, -1078140, 372834, -6254250, -1526240, 529404, -6149480, -1702730, 591322, -6097630, -2043830, 711458, -5979650, -1702090, 593164, -6097630, -1707890, 576262, -6097630, -1702730, 591322, -6097630, -1526240, 529404, -6149480, -1707890, 576262, -6097630, -1526240, 529404, -6149480, -1532950, 520844, -6148550, -1532950, 520844, -6148550, -1526240, 529404, -6149480, -1078140, 372834, -6254250, -2017960, 672459, -5992850, -2043830, 711458, -5979650, -1702730, 591322, -6097630, -2017960, 672459, -5992850, -1702730, 591322, -6097630, -1707890, 576262, -6097630, -1707890, 576262, -6097630, -1532950, 520844, -6148550, -1541080, 510321, -6147400, -1707890, 576262, -6097630, -1541080, 510321, -6147400, -1710730, 567759, -6097630, -1532950, 520844, -6148550, -1078140, 372834, -6254250, -1142750, 376469, -6242630, -1532950, 520844, -6148550, -1142750, 376469, -6242630, -1541080, 510321, -6147400, -1710730, 567759, -6097630, -2017960, 672459, -5992850, -1707890, 576262, -6097630, -1717830, 545918, -6097630, -1710730, 567759, -6097630, -1541080, 510321, -6147400, -1717830, 545918, -6097630, -1541080, 510321, -6147400, -1550420, 497993, -6146080, -1550420, 497993, -6146080, -1541080, 510321, -6147400, -1142750, 376469, -6242630, -2014920, 628081, -5998640, -2017960, 672459, -5992850, -1710730, 567759, -6097630, -2014920, 628081, -5998640, -1710730, 567759, -6097630, -1717830, 545918, -6097630, -1717830, 545918, -6097630, -1550420, 497993, -6146080, -1568460, 473426, -6143460, -1717830, 545918, -6097630, -1568460, 473426, -6143460, -1723970, 526214, -6097630, -1550420, 497993, -6146080, -1142750, 376469, -6242630, -1158730, 339583, -6241800, -1550420, 497993, -6146080, -1158730, 339583, -6241800, -1568460, 473426, -6143460, -1723970, 526214, -6097630, -2014920, 628081, -5998640, -1717830, 545918, -6097630, -1903930, 316559, -6058720, -2012270, 336666, -6022760, -1854100, 323258, -6073700, -1985510, 307125, -6033140, -2012270, 336666, -6022760, -1903930, 316559, -6058720, -1985510, 307125, -6033140, -1903930, 316559, -6058720, -1943810, 304775, -6046730, -1763120, 374666, -6097630, -1744450, 371590, -6103150, -1769010, 334673, -6098250, -1763120, 374666, -6097630, -1769010, 334673, -6098250, -1771040, 335249, -6097630, -1771040, 335249, -6097630, -2043360, 418474, -6007250, -1763120, 374666, -6097630, -1771080, 335002, -6097630, -1771040, 335249, -6097630, -1769010, 334673, -6098250, -2026190, 376849, -6015750, -2043360, 418474, -6007250, -1771040, 335249, -6097630, -2026190, 376849, -6015750, -1771040, 335249, -6097630, -1771080, 335002, -6097630, -1771210, 334353, -6097630, -1771080, 335002, -6097630, -1769010, 334673, -6098250, -2026190, 376849, -6015750, -1771080, 335002, -6097630, -1771210, 334353, -6097630, -2026190, 376849, -6015750, -1771210, 334353, -6097630, -1815020, 327979, -6085160, -2012270, 336666, -6022760, -2026190, 376849, -6015750, -1815020, 327979, -6085160, -2012270, 336666, -6022760, -1815020, 327979, -6085160, -1854100, 323258, -6073700, -1749700, 433039, -6097630, -1672120, 413963, -6120520, -1703620, 381211, -6114e3, -1749700, 433039, -6097630, -1703620, 381211, -6114e3, -1757630, 399645, -6097630, -1757630, 399645, -6097630, -2046870, 506019, -5999360, -1749700, 433039, -6097630, -1703620, 381211, -6114e3, -1758910, 393968, -6097630, -1757630, 399645, -6097630, -2048920, 461406, -6002240, -2046870, 506019, -5999360, -1757630, 399645, -6097630, -2048920, 461406, -6002240, -1757630, 399645, -6097630, -1758910, 393968, -6097630, -1760160, 388317, -6097630, -1758910, 393968, -6097630, -1703620, 381211, -6114e3, -2043360, 418474, -6007250, -2048920, 461406, -6002240, -1758910, 393968, -6097630, -2043360, 418474, -6007250, -1758910, 393968, -6097630, -1760160, 388317, -6097630, -1760160, 388317, -6097630, -1703620, 381211, -6114e3, -1744450, 371590, -6103150, -1760160, 388317, -6097630, -1744450, 371590, -6103150, -1763120, 374666, -6097630, -2043360, 418474, -6007250, -1760160, 388317, -6097630, -1763120, 374666, -6097630, -1731190, 501942, -6097630, -1579360, 458069, -6141840, -1585890, 448702, -6140860, -1731190, 501942, -6097630, -1585890, 448702, -6140860, -1733390, 494292, -6097630, -1579360, 458069, -6141840, -1500100, 435165, -6163200, -1546010, 436486, -6151820, -1579360, 458069, -6141840, -1546010, 436486, -6151820, -1585890, 448702, -6140860, -1733390, 494292, -6097630, -2029160, 587912, -5997920, -1731190, 501942, -6097630, -1736940, 481663, -6097630, -1733390, 494292, -6097630, -1585890, 448702, -6140860, -1736940, 481663, -6097630, -1585890, 448702, -6140860, -1587430, 446446, -6140620, -1587430, 446446, -6140620, -1585890, 448702, -6140860, -1546010, 436486, -6151820, -2033890, 548024, -6000080, -2029160, 587912, -5997920, -1733390, 494292, -6097630, -2033890, 548024, -6000080, -1733390, 494292, -6097630, -1736940, 481663, -6097630, -1736940, 481663, -6097630, -1587430, 446446, -6140620, -1598820, 429658, -6138880, -1736940, 481663, -6097630, -1598820, 429658, -6138880, -1740620, 468189, -6097630, -1587430, 446446, -6140620, -1546010, 436486, -6151820, -1584100, 425672, -6142940, -1587430, 446446, -6140620, -1584100, 425672, -6142940, -1598820, 429658, -6138880, -1740620, 468189, -6097630, -2033890, 548024, -6000080, -1736940, 481663, -6097630, -1743930, 455691, -6097630, -1740620, 468189, -6097630, -1598820, 429658, -6138880, -1743930, 455691, -6097630, -1598820, 429658, -6138880, -1599480, 428670, -6138770, -1599480, 428670, -6138770, -1598820, 429658, -6138880, -1584100, 425672, -6142940, -2046870, 506019, -5999360, -2033890, 548024, -6000080, -1740620, 468189, -6097630, -2046870, 506019, -5999360, -1740620, 468189, -6097630, -1743930, 455691, -6097630, -1743930, 455691, -6097630, -1599480, 428670, -6138770, -1604130, 421673, -6138050, -1743930, 455691, -6097630, -1604130, 421673, -6138050, -1627950, 416654, -6132160, -1743930, 455691, -6097630, -1627950, 416654, -6132160, -1747240, 442865, -6097630, -1604130, 421673, -6138050, -1599480, 428670, -6138770, -1584100, 425672, -6142940, -2046870, 506019, -5999360, -1743930, 455691, -6097630, -1747240, 442865, -6097630, -1747240, 442865, -6097630, -1627950, 416654, -6132160, -1672120, 413963, -6120520, -1747240, 442865, -6097630, -1672120, 413963, -6120520, -1749700, 433039, -6097630, -2046870, 506019, -5999360, -1747240, 442865, -6097630, -1749700, 433039, -6097630, 801022, 2043580, -5968480, 904409, 2226300, -5888340, 814141, 1996260, -5982600, 865460, 2241730, -5888340, 904409, 2226300, -5888340, 801022, 2043580, -5968480, 776e3, 2081700, -5958670, 865460, 2241730, -5888340, 801022, 2043580, -5968480, 795830, 2152860, -5930880, 865460, 2241730, -5888340, 776e3, 2081700, -5958670, 795830, 2152860, -5930880, 776e3, 2081700, -5958670, 788076, 2127420, -5941020, 1730360, -504805, -6097630, 1704400, -503744, -6104970, 1689100, -465499, -6112210, 1730360, -504805, -6097630, 1689100, -465499, -6112210, 1733350, -494431, -6097630, 1733350, -494431, -6097630, 1749810, -505480, -6092060, 1730360, -504805, -6097630, 1689100, -465499, -6112210, 1737550, -479478, -6097630, 1733350, -494431, -6097630, 1787880, -494038, -6082e3, 1749810, -505480, -6092060, 1733350, -494431, -6097630, 1787880, -494038, -6082e3, 1733350, -494431, -6097630, 1737550, -479478, -6097630, 1741060, -466558, -6097630, 1737550, -479478, -6097630, 1689100, -465499, -6112210, 1816790, -466770, -6075630, 1787880, -494038, -6082e3, 1737550, -479478, -6097630, 1816790, -466770, -6075630, 1737550, -479478, -6097630, 1741060, -466558, -6097630, 1325030, -690113, -6179910, 1291370, -712367, -6184480, 943394, -513283, -6265980, 943394, -513283, -6265980, 1291370, -712367, -6184480, 970860, -543817, -6259260, 1291370, -712367, -6184480, 1000420, -570299, -6252290, 970860, -543817, -6259260, 1291370, -712367, -6184480, 1035920, -590538, -6244670, 1000420, -570299, -6252290, 1291370, -712367, -6184480, 1243030, -711419, -6194420, 1035920, -590538, -6244670, 974365, -649362, -6248710, 1114360, -748728, -6214340, 1074370, -761445, -6219790, 1157580, -729316, -6208780, 1114360, -748728, -6214340, 974365, -649362, -6248710, 1011680, -622995, -6245490, 1157580, -729316, -6208780, 974365, -649362, -6248710, 1200240, -721125, -6201680, 1157580, -729316, -6208780, 1011680, -622995, -6245490, 1035920, -590538, -6244670, 1200240, -721125, -6201680, 1011680, -622995, -6245490, 1035920, -590538, -6244670, 1243030, -711419, -6194420, 1200240, -721125, -6201680, 951602, -682283, -6248710, 1049240, -756099, -6224700, 981396, -710780, -6240980, 1074370, -761445, -6219790, 1049240, -756099, -6224700, 951602, -682283, -6248710, 974365, -649362, -6248710, 1074370, -761445, -6219790, 951602, -682283, -6248710, -340595, -1770020, -6097630, -356090, -1766960, -6097630, -340258, -1710130, -6114600, -339555, -1866040, -6069180, -380285, -1851780, -6071120, -356090, -1766960, -6097630, -339555, -1866040, -6069180, -356090, -1766960, -6097630, -340595, -1770020, -6097630, -381003, -1761760, -6097630, -380560, -1710240, -6112210, -340258, -1710130, -6114600, -381003, -1761760, -6097630, -340258, -1710130, -6114600, -356090, -1766960, -6097630, -356090, -1766960, -6097630, -380285, -1851780, -6071120, -381003, -1761760, -6097630, -381003, -1761760, -6097630, -395503, -1758560, -6097630, -380560, -1710240, -6112210, -380285, -1851780, -6071120, -423983, -1848690, -6069180, -395503, -1758560, -6097630, -380285, -1851780, -6071120, -395503, -1758560, -6097630, -381003, -1761760, -6097630, -408353, -1755620, -6097630, -406553, -1745260, -6100700, -380560, -1710240, -6112210, -408353, -1755620, -6097630, -380560, -1710240, -6112210, -395503, -1758560, -6097630, -395503, -1758560, -6097630, -423983, -1848690, -6069180, -408353, -1755620, -6097630, -408353, -1755620, -6097630, -410681, -1755080, -6097630, -406553, -1745260, -6100700, -423983, -1848690, -6069180, -422317, -1782490, -6088940, -410681, -1755080, -6097630, -423983, -1848690, -6069180, -410681, -1755080, -6097630, -408353, -1755620, -6097630, -482899, -365320, -6328040, -894735, -594055, -6265980, -510490, -333687, -6327630, -482899, -365320, -6328040, -1241830, -834350, -6179400, -894735, -594055, -6265980, -482899, -365320, -6328040, -1336990, -939301, -6144620, -1241830, -834350, -6179400, -482899, -365320, -6328040, -1298040, -931983, -6154010, -1336990, -939301, -6144620, -1289600, -979069, -6148510, -1298040, -931983, -6154010, -482899, -365320, -6328040, -593793, -330460, -6320570, -884254, -468228, -6278050, -746509, -385863, -6301340, -840085, -472437, -6283760, -884254, -468228, -6278050, -593793, -330460, -6320570, -551146, -317423, -6325070, -840085, -472437, -6283760, -593793, -330460, -6320570, -852748, -515101, -6278730, -840085, -472437, -6283760, -551146, -317423, -6325070, -510490, -333687, -6327630, -852748, -515101, -6278730, -551146, -317423, -6325070, -510490, -333687, -6327630, -872128, -561596, -6272120, -852748, -515101, -6278730, -894735, -594055, -6265980, -872128, -561596, -6272120, -510490, -333687, -6327630, -593793, -330460, -6320570, -673793, -337263, -6312240, -630040, -312946, -6317970, -593793, -330460, -6320570, -712246, -362313, -6306660, -673793, -337263, -6312240, -593793, -330460, -6320570, -746509, -385863, -6301340, -712246, -362313, -6306660, -1275950, -855983, -6169550, -1342e3, -898322, -6149620, -1314790, -870373, -6159440, -1336990, -939301, -6144620, -1342e3, -898322, -6149620, -1275950, -855983, -6169550, -1336990, -939301, -6144620, -1275950, -855983, -6169550, -1241830, -834350, -6179400, -1018490, -599172, -6246700, -1229280, -709670, -6197340, -1224850, -669639, -6202640, -1238970, -751885, -6190480, -1229280, -709670, -6197340, -1018490, -599172, -6246700, -975416, -608017, -6252680, -1238970, -751885, -6190480, -1018490, -599172, -6246700, -1254380, -795688, -6181950, -1238970, -751885, -6190480, -975416, -608017, -6252680, -936233, -613354, -6258110, -1254380, -795688, -6181950, -975416, -608017, -6252680, -1241830, -834350, -6179400, -1254380, -795688, -6181950, -936233, -613354, -6258110, -1241830, -834350, -6179400, -936233, -613354, -6258110, -894735, -594055, -6265980, -1188880, -498098, -6225580, -1334650, -542624, -6192450, -1231330, -496191, -6217530, -1294550, -550171, -6200240, -1334650, -542624, -6192450, -1188880, -498098, -6225580, -1146010, -510812, -6232540, -1294550, -550171, -6200240, -1188880, -498098, -6225580, -1287920, -591588, -6197820, -1294550, -550171, -6200240, -1146010, -510812, -6232540, -1287920, -591588, -6197820, -1146010, -510812, -6232540, -1103100, -506691, -6240560, -1284440, -633609, -6194420, -1287920, -591588, -6197820, -1103100, -506691, -6240560, -1075720, -538917, -6242630, -1284440, -633609, -6194420, -1103100, -506691, -6240560, -1233400, -630621, -6205010, -1284440, -633609, -6194420, -1075720, -538917, -6242630, -1045010, -565317, -6245490, -1233400, -630621, -6205010, -1075720, -538917, -6242630, -1224850, -669639, -6202640, -1233400, -630621, -6205010, -1045010, -565317, -6245490, -1018490, -599172, -6246700, -1224850, -669639, -6202640, -1045010, -565317, -6245490, -788345, -404077, -6295140, -886825, -424724, -6280760, -827125, -394058, -6290830, -884254, -468228, -6278050, -886825, -424724, -6280760, -788345, -404077, -6295140, -884254, -468228, -6278050, -788345, -404077, -6295140, -746509, -385863, -6301340, -886825, -424724, -6280760, -909986, -389325, -6279750, -867710, -399286, -6285070, -886825, -424724, -6280760, -867710, -399286, -6285070, -827125, -394058, -6290830, -1334650, -542624, -6192450, -1349150, -535120, -6189980, -1231330, -496191, -6217530, -423983, -1848690, -6069180, -452053, -1857070, -6064630, -422317, -1782490, -6088940, 904409, 2226300, -5888340, 945500, 2217970, -5885050, 814141, 1996260, -5982600, 756288, 1977030, -5996470, 748874, 1893370, -6024150, 746160, 1936660, -6010800, -1700620, 597381, -6097630, -1520510, 536591, -6150270, -1524500, 531602, -6149720, -1700620, 597381, -6097630, -1524500, 531602, -6149720, -1702090, 593164, -6097630, -1520510, 536591, -6150270, -986850, 353013, -6270340, -1028180, 359098, -6263400, -1520510, 536591, -6150270, -1028180, 359098, -6263400, -1524500, 531602, -6149720, -2043830, 711458, -5979650, -1700620, 597381, -6097630, -1702090, 593164, -6097630, -1121520, -1293580, -6123460, -1164030, -1281190, -6118160, -1186740, -1239860, -6122290, -767478, -1558620, -6116390, -812076, -1561980, -6109810, -836914, -1529670, -6114600, -640022, -1560610, -6130430, -742844, -1591440, -6111010, -767478, -1558620, -6116390, -575837, -1576450, -6132730, -623112, -1601420, -6121700, -640022, -1560610, -6130430, -493580, -1559830, -6144060, -534443, -1577580, -6136160, -575837, -1576450, -6132730, 341999, -940308, -6278050, 329434, -981323, -6272480, 307123, -1020130, -6267450, 2062910, 394185, -6002240, 2145320, 268572, -5980390, 2126600, 233799, -5988480, 1727040, 1381120, -5962460, 1930270, 1268060, -5925380, 1894220, 1218600, -5947200, -247766, 2447070, -5865090, -217059, 2472250, -5855800, -181137, 2481200, -5853250, -1153560, 2226880, -5844720, -1138550, 2263850, -5833520, -1093260, 2281610, -5835250, -877726, 291487, -6289570, -918102, 313978, -6282760, -945042, 347933, -6277020, -676516, 126545, -6319640, -728715, 143021, -6313520, -756230, 180104, -6309360, 623790, -1819440, -6060820, 611196, -1869790, -6046860, 582588, -1835230, -6060170, -407105, -1965150, -6033880, -424592, -1942300, -6040030, -397704, -1903370, -6054140, 829706, -2100550, -5944890, 811134, -2063850, -5960180, 798190, -2024820, -5975200, 1394410, 3890160, -4841990, 1514140, 3887590, -4808210, 1496120, 3846270, -4846660, 1394410, 3890160, -4841990, 1516620, 3923780, -4778140, 1514140, 3887590, -4808210, 1394410, 3890160, -4841990, 1518150, 3941550, -4763100, 1516620, 3923780, -4778140, 1394410, 3890160, -4841990, 1464490, 3933700, -4786180, 1518150, 3941550, -4763100, 1395920, 3947430, -4795300, 1464490, 3933700, -4786180, 1394410, 3890160, -4841990, 1388190, 3933200, -4809120, 1395920, 3947430, -4795300, 1394410, 3890160, -4841990, -4956170, 3022530, -2633360, -4834250, 2956060, -2918040, -4858560, 2919890, -2914100, -4956170, 3022530, -2633360, -4858560, 2919890, -2914100, -4969620, 3000350, -2633360, -4834250, 2956060, -2918040, -4292950, 2650860, -3888730, -4346040, 2567780, -3885530, -4834250, 2956060, -2918040, -4346040, 2567780, -3885530, -4858560, 2919890, -2914100, -4969620, 3000350, -2633360, -5103310, 3100790, -2233470, -4956170, 3022530, -2633360, -4992360, 2962360, -2633360, -4969620, 3000350, -2633360, -4858560, 2919890, -2914100, -4992360, 2962360, -2633360, -4858560, 2919890, -2914100, -4877370, 2891480, -2911020, -4346040, 2567780, -3885530, -4877370, 2891480, -2911020, -4858560, 2919890, -2914100, -5112670, 3037010, -2298300, -5103310, 3100790, -2233470, -4969620, 3000350, -2633360, -5112670, 3037010, -2298300, -4969620, 3000350, -2633360, -4992360, 2962360, -2633360, -5009140, 2933910, -2633360, -4992360, 2962360, -2633360, -4877370, 2891480, -2911020, -5009140, 2933910, -2633360, -4877370, 2891480, -2911020, -4891320, 2870180, -2908720, -4891320, 2870180, -2908720, -4877370, 2891480, -2911020, -4346040, 2567780, -3885530, -5094770, 2979770, -2409530, -5112670, 3037010, -2298300, -4992360, 2962360, -2633360, -5094770, 2979770, -2409530, -4992360, 2962360, -2633360, -5009140, 2933910, -2633360, -5009140, 2933910, -2633360, -4891320, 2870180, -2908720, -4900600, 2855880, -2907180, -5009140, 2933910, -2633360, -4900600, 2855880, -2907180, -5013030, 2927260, -2633360, -4891320, 2870180, -2908720, -4346040, 2567780, -3885530, -4408e3, 2550500, -3827060, -4891320, 2870180, -2908720, -4408e3, 2550500, -3827060, -4900600, 2855880, -2907180, -5013030, 2927260, -2633360, -5094770, 2979770, -2409530, -5009140, 2933910, -2633360, -4391870, 2535950, -3854980, -4408e3, 2550500, -3827060, -4346040, 2567780, -3885530, -5060400, 2593440, -2879430, -5135730, 2633180, -2705900, -5055120, 2602660, -2880390, -5055120, 2602660, -2880390, -4771270, 2489060, -3412e3, -4838030, 2476600, -3326550, -5055120, 2602660, -2880390, -4838030, 2476600, -3326550, -5060400, 2593440, -2879430, -5114180, 2590530, -2786150, -5135730, 2633180, -2705900, -5060400, 2593440, -2879430, -5114180, 2590530, -2786150, -5060400, 2593440, -2879430, -5071760, 2573500, -2877360, -5071760, 2573500, -2877360, -5060400, 2593440, -2879430, -4838030, 2476600, -3326550, -5114180, 2590530, -2786150, -5071760, 2573500, -2877360, -5072100, 2572890, -2877300, -5071760, 2573500, -2877360, -4838030, 2476600, -3326550, -5059510, 2567610, -2903880, -5071760, 2573500, -2877360, -5059510, 2567610, -2903880, -5072100, 2572890, -2877300, -5059510, 2567610, -2903880, -4838030, 2476600, -3326550, -4911330, 2495e3, -3203930, -4883360, 2478540, -3258630, -4911330, 2495e3, -3203930, -4838030, 2476600, -3326550, -4967090, 2493950, -3118220, -5059510, 2567610, -2903880, -4911330, 2495e3, -3203930, -5041490, 2506020, -2987270, -5059510, 2567610, -2903880, -4967090, 2493950, -3118220, -5041490, 2506020, -2987270, -4967090, 2493950, -3118220, -4997030, 2490120, -3073430, -5027020, 2651010, -2885440, -5055120, 2602660, -2880390, -5135730, 2633180, -2705900, -5027020, 2651010, -2885440, -5135730, 2633180, -2705900, -5133100, 2711190, -2633360, -5027020, 2651010, -2885440, -5133100, 2711190, -2633360, -5129310, 2718350, -2633360, -5055120, 2602660, -2880390, -5027020, 2651010, -2885440, -4771270, 2489060, -3412e3, -5133100, 2711190, -2633360, -5132680, 2720600, -2624530, -5129310, 2718350, -2633360, -5128930, 2719070, -2633360, -5015250, 2670920, -2887530, -5027020, 2651010, -2885440, -5128930, 2719070, -2633360, -5027020, 2651010, -2885440, -5129310, 2718350, -2633360, -5015250, 2670920, -2887530, -4712690, 2536570, -3457800, -4771270, 2489060, -3412e3, -5015250, 2670920, -2887530, -4771270, 2489060, -3412e3, -5027020, 2651010, -2885440, -5129310, 2718350, -2633360, -5132680, 2720600, -2624530, -5128930, 2719070, -2633360, -5128930, 2719070, -2633360, -5107130, 2759800, -2633360, -4999020, 2698110, -2890390, -5128930, 2719070, -2633360, -4999020, 2698110, -2890390, -5015250, 2670920, -2887530, -5015250, 2670920, -2887530, -4999020, 2698110, -2890390, -4712690, 2536570, -3457800, -5132680, 2720600, -2624530, -5125710, 2770420, -2586e3, -5107130, 2759800, -2633360, -5132680, 2720600, -2624530, -5107130, 2759800, -2633360, -5128930, 2719070, -2633360, -5106260, 2761410, -2633360, -4993020, 2708060, -2891440, -4999020, 2698110, -2890390, -5106260, 2761410, -2633360, -4999020, 2698110, -2890390, -5107130, 2759800, -2633360, -4993020, 2708060, -2891440, -4654900, 2543840, -3529510, -4712690, 2536570, -3457800, -4993020, 2708060, -2891440, -4712690, 2536570, -3457800, -4999020, 2698110, -2890390, -5107130, 2759800, -2633360, -5125710, 2770420, -2586e3, -5106260, 2761410, -2633360, -5105590, 2762650, -2633360, -4988090, 2716210, -2892300, -4993020, 2708060, -2891440, -5105590, 2762650, -2633360, -4993020, 2708060, -2891440, -5106260, 2761410, -2633360, -4988090, 2716210, -2892300, -4613170, 2555960, -3574940, -4654900, 2543840, -3529510, -4988090, 2716210, -2892300, -4654900, 2543840, -3529510, -4993020, 2708060, -2891440, -5125710, 2770420, -2586e3, -5105590, 2762650, -2633360, -5106260, 2761410, -2633360, -5031270, 2895800, -2633360, -4917160, 2830120, -2904430, -4922230, 2822180, -2903570, -5031270, 2895800, -2633360, -4922230, 2822180, -2903570, -5033540, 2891840, -2633360, -4917160, 2830120, -2904430, -4453390, 2563400, -3765810, -4507120, 2567900, -3698680, -4917160, 2830120, -2904430, -4507120, 2567900, -3698680, -4922230, 2822180, -2903570, -5033540, 2891840, -2633360, -5123370, 2948810, -2387020, -5031270, 2895800, -2633360, -5050460, 2862190, -2633360, -5033540, 2891840, -2633360, -4922230, 2822180, -2903570, -5050460, 2862190, -2633360, -4922230, 2822180, -2903570, -4935820, 2800750, -2901270, -4935820, 2800750, -2901270, -4922230, 2822180, -2903570, -4507120, 2567900, -3698680, -5128270, 2903440, -2431400, -5123370, 2948810, -2387020, -5033540, 2891840, -2633360, -5128270, 2903440, -2431400, -5033540, 2891840, -2633360, -5050460, 2862190, -2633360, -5050460, 2862190, -2633360, -4935820, 2800750, -2901270, -4943210, 2788990, -2900020, -5050460, 2862190, -2633360, -4943210, 2788990, -2900020, -5053460, 2856900, -2633360, -4935820, 2800750, -2901270, -4507120, 2567900, -3698680, -4552270, 2553150, -3653620, -4935820, 2800750, -2901270, -4552270, 2553150, -3653620, -4943210, 2788990, -2900020, -5053460, 2856900, -2633360, -5128270, 2903440, -2431400, -5050460, 2862190, -2633360, -5063700, 2838710, -2633360, -5053460, 2856900, -2633360, -4943210, 2788990, -2900020, -5063700, 2838710, -2633360, -4943210, 2788990, -2900020, -4951310, 2776040, -2898640, -4951310, 2776040, -2898640, -4943210, 2788990, -2900020, -4552270, 2553150, -3653620, -5146260, 2884760, -2415670, -5128270, 2903440, -2431400, -5053460, 2856900, -2633360, -5146260, 2884760, -2415670, -5053460, 2856900, -2633360, -5063700, 2838710, -2633360, -5063700, 2838710, -2633360, -4951310, 2776040, -2898640, -4957540, 2766020, -2897570, -5063700, 2838710, -2633360, -4957540, 2766020, -2897570, -5066320, 2834020, -2633360, -4951310, 2776040, -2898640, -4552270, 2553150, -3653620, -4613170, 2555960, -3574940, -4951310, 2776040, -2898640, -4613170, 2555960, -3574940, -4957540, 2766020, -2897570, -5066320, 2834020, -2633360, -5146260, 2884760, -2415670, -5063700, 2838710, -2633360, -5072890, 2822260, -2633360, -5066320, 2834020, -2633360, -4957540, 2766020, -2897570, -5072890, 2822260, -2633360, -4957540, 2766020, -2897570, -4962610, 2757840, -2896710, -4613170, 2555960, -3574940, -4962610, 2757840, -2896710, -4957540, 2766020, -2897570, -5114990, 2846970, -2523760, -5146260, 2884760, -2415670, -5066320, 2834020, -2633360, -5114990, 2846970, -2523760, -5066320, 2834020, -2633360, -5072890, 2822260, -2633360, -5105590, 2762650, -2633360, -5072890, 2822260, -2633360, -4962610, 2757840, -2896710, -5105590, 2762650, -2633360, -4962610, 2757840, -2896710, -4988090, 2716210, -2892300, -4988090, 2716210, -2892300, -4962610, 2757840, -2896710, -4613170, 2555960, -3574940, -5125710, 2770420, -2586e3, -5114990, 2846970, -2523760, -5072890, 2822260, -2633360, -5125710, 2770420, -2586e3, -5072890, 2822260, -2633360, -5105590, 2762650, -2633360, -5030210, 2897640, -2633360, -5013030, 2927260, -2633360, -4900600, 2855880, -2907180, -5030210, 2897640, -2633360, -4900600, 2855880, -2907180, -4914760, 2833880, -2904820, -4914760, 2833880, -2904820, -4900600, 2855880, -2907180, -4408e3, 2550500, -3827060, -5123370, 2948810, -2387020, -5094770, 2979770, -2409530, -5013030, 2927260, -2633360, -5123370, 2948810, -2387020, -5013030, 2927260, -2633360, -5030210, 2897640, -2633360, -5030210, 2897640, -2633360, -4914760, 2833880, -2904820, -4917160, 2830120, -2904430, -5030210, 2897640, -2633360, -4917160, 2830120, -2904430, -5031270, 2895800, -2633360, -4914760, 2833880, -2904820, -4408e3, 2550500, -3827060, -4453390, 2563400, -3765810, -4914760, 2833880, -2904820, -4453390, 2563400, -3765810, -4917160, 2830120, -2904430, -5123370, 2948810, -2387020, -5030210, 2897640, -2633360, -5031270, 2895800, -2633360, -5118430, 3093970, -2208340, -5096020, 3162380, -2163110, -5103310, 3100790, -2233470, -4956170, 3022530, -2633360, -4934250, 3058170, -2633360, -4816180, 2982550, -2920940, -4956170, 3022530, -2633360, -4816180, 2982550, -2920940, -4834250, 2956060, -2918040, -4834250, 2956060, -2918040, -4816180, 2982550, -2920940, -4292950, 2650860, -3888730, -5103310, 3100790, -2233470, -5096020, 3162380, -2163110, -4934250, 3058170, -2633360, -5103310, 3100790, -2233470, -4934250, 3058170, -2633360, -4956170, 3022530, -2633360, -4934250, 3058170, -2633360, -4906890, 3101890, -2633360, -4793840, 3014870, -2924480, -4934250, 3058170, -2633360, -4793840, 3014870, -2924480, -4816180, 2982550, -2920940, -4292950, 2650860, -3888730, -4816180, 2982550, -2920940, -4793840, 3014870, -2924480, -5096020, 3162380, -2163110, -5071580, 3234560, -2113590, -4906890, 3101890, -2633360, -5096020, 3162380, -2163110, -4906890, 3101890, -2633360, -4934250, 3058170, -2633360, -4893090, 3123610, -2633360, -4771050, 3047340, -2928070, -4793840, 3014870, -2924480, -4893090, 3123610, -2633360, -4793840, 3014870, -2924480, -4906890, 3101890, -2633360, -4771050, 3047340, -2928070, -4226080, 2704560, -3924590, -4292950, 2650860, -3888730, -4771050, 3047340, -2928070, -4292950, 2650860, -3888730, -4793840, 3014870, -2924480, -4906890, 3101890, -2633360, -5071580, 3234560, -2113590, -4893090, 3123610, -2633360, -4886490, 3133940, -2633360, -4760010, 3062910, -2929790, -4771050, 3047340, -2928070, -4886490, 3133940, -2633360, -4771050, 3047340, -2928070, -4893090, 3123610, -2633360, -4760010, 3062910, -2929790, -4181850, 2723830, -3958270, -4226080, 2704560, -3924590, -4760010, 3062910, -2929790, -4226080, 2704560, -3924590, -4771050, 3047340, -2928070, -5071580, 3234560, -2113590, -4886490, 3133940, -2633360, -4893090, 3123610, -2633360, -4886490, 3133940, -2633360, -4843030, 3200670, -2633360, -4724290, 3112490, -2935310, -4886490, 3133940, -2633360, -4724290, 3112490, -2935310, -4760010, 3062910, -2929790, -4760010, 3062910, -2929790, -4724290, 3112490, -2935310, -4181850, 2723830, -3958270, -5071580, 3234560, -2113590, -5025330, 3340460, -2058980, -4843030, 3200670, -2633360, -5071580, 3234560, -2113590, -4843030, 3200670, -2633360, -4886490, 3133940, -2633360, -4833400, 3215200, -2633360, -4708870, 3133540, -2937680, -4724290, 3112490, -2935310, -4833400, 3215200, -2633360, -4724290, 3112490, -2935310, -4843030, 3200670, -2633360, -4708870, 3133540, -2937680, -4128040, 2751190, -3995400, -4181850, 2723830, -3958270, -4708870, 3133540, -2937680, -4181850, 2723830, -3958270, -4724290, 3112490, -2935310, -4843030, 3200670, -2633360, -5025330, 3340460, -2058980, -4833400, 3215200, -2633360, -4833400, 3215200, -2633360, -4820570, 3234410, -2633360, -4698300, 3147850, -2939280, -4833400, 3215200, -2633360, -4698300, 3147850, -2939280, -4708870, 3133540, -2937680, -4708870, 3133540, -2937680, -4698300, 3147850, -2939280, -4128040, 2751190, -3995400, -5025330, 3340460, -2058980, -5026300, 3382120, -1987850, -4820570, 3234410, -2633360, -5025330, 3340460, -2058980, -4820570, 3234410, -2633360, -4833400, 3215200, -2633360, -4820570, 3234410, -2633360, -4814750, 3243070, -2633360, -4693530, 3154280, -294e4, -4820570, 3234410, -2633360, -4693530, 3154280, -294e4, -4698300, 3147850, -2939280, -4128040, 2751190, -3995400, -4698300, 3147850, -2939280, -4693530, 3154280, -294e4, -5026300, 3382120, -1987850, -5053980, 3423220, -1842980, -4814750, 3243070, -2633360, -5026300, 3382120, -1987850, -4814750, 3243070, -2633360, -4820570, 3234410, -2633360, -5046710, 3383580, -1933280, -5053980, 3423220, -1842980, -5026300, 3382120, -1987850, -4783400, 3289140, -2633360, -4775980, 3299900, -2633360, -4651360, 3210310, -2946340, -4783400, 3289140, -2633360, -4651360, 3210310, -2946340, -4657400, 3202370, -2945440, -4113200, 2827980, -3957170, -4657400, 3202370, -2945440, -4651360, 3210310, -2946340, -5045900, 3469900, -1777100, -5054270, 3503400, -1685820, -4775980, 3299900, -2633360, -5045900, 3469900, -1777100, -4775980, 3299900, -2633360, -4783400, 3289140, -2633360, -4789020, 3280950, -2633360, -4783400, 3289140, -2633360, -4657400, 3202370, -2945440, -4789020, 3280950, -2633360, -4657400, 3202370, -2945440, -4661880, 3196480, -2944770, -4661880, 3196480, -2944770, -4657400, 3202370, -2945440, -4113200, 2827980, -3957170, -5042110, 3447620, -1830060, -5045900, 3469900, -1777100, -4783400, 3289140, -2633360, -5042110, 3447620, -1830060, -4783400, 3289140, -2633360, -4789020, 3280950, -2633360, -4789020, 3280950, -2633360, -4661880, 3196480, -2944770, -4685980, 3164420, -2941140, -4789020, 3280950, -2633360, -4685980, 3164420, -2941140, -4805560, 3256670, -2633360, -4661880, 3196480, -2944770, -4113200, 2827980, -3957170, -4128040, 2751190, -3995400, -4661880, 3196480, -2944770, -4128040, 2751190, -3995400, -4685980, 3164420, -2941140, -4805560, 3256670, -2633360, -5042110, 3447620, -1830060, -4789020, 3280950, -2633360, -4814750, 3243070, -2633360, -4805560, 3256670, -2633360, -4685980, 3164420, -2941140, -4814750, 3243070, -2633360, -4685980, 3164420, -2941140, -4693530, 3154280, -294e4, -4128040, 2751190, -3995400, -4693530, 3154280, -294e4, -4685980, 3164420, -2941140, -5053980, 3423220, -1842980, -5042110, 3447620, -1830060, -4805560, 3256670, -2633360, -5053980, 3423220, -1842980, -4805560, 3256670, -2633360, -4814750, 3243070, -2633360, -4727790, 3368570, -2633360, -4598880, 3278050, -2954070, -4617910, 3253720, -2951290, -4727790, 3368570, -2633360, -4617910, 3253720, -2951290, -4741800, 3348820, -2633360, -4598880, 3278050, -2954070, -4091520, 2919960, -3912900, -4129740, 2888240, -3896360, -4598880, 3278050, -2954070, -4129740, 2888240, -3896360, -4617910, 3253720, -2951290, -4741800, 3348820, -2633360, -5039540, 3586180, -1551350, -4727790, 3368570, -2633360, -4752590, 3333490, -2633360, -4741800, 3348820, -2633360, -4617910, 3253720, -2951290, -4752590, 3333490, -2633360, -4617910, 3253720, -2951290, -4626390, 3242800, -2950030, -4129740, 2888240, -3896360, -4626390, 3242800, -2950030, -4617910, 3253720, -2951290, -5050660, 3550320, -1596720, -5039540, 3586180, -1551350, -4741800, 3348820, -2633360, -5050660, 3550320, -1596720, -4741800, 3348820, -2633360, -4752590, 3333490, -2633360, -4765420, 3315130, -2633360, -4752590, 3333490, -2633360, -4626390, 3242800, -2950030, -4765420, 3315130, -2633360, -4626390, 3242800, -2950030, -4636580, 3229590, -2948530, -4636580, 3229590, -2948530, -4626390, 3242800, -2950030, -4129740, 2888240, -3896360, -5054270, 3503400, -1685820, -5050660, 3550320, -1596720, -4752590, 3333490, -2633360, -5054270, 3503400, -1685820, -4752590, 3333490, -2633360, -4765420, 3315130, -2633360, -4765420, 3315130, -2633360, -4636580, 3229590, -2948530, -4651360, 3210310, -2946340, -4765420, 3315130, -2633360, -4651360, 3210310, -2946340, -4775980, 3299900, -2633360, -4636580, 3229590, -2948530, -4129740, 2888240, -3896360, -4113200, 2827980, -3957170, -4636580, 3229590, -2948530, -4113200, 2827980, -3957170, -4651360, 3210310, -2946340, -4775980, 3299900, -2633360, -5054270, 3503400, -1685820, -4765420, 3315130, -2633360, -4113200, 2827980, -3957170, -4129740, 2888240, -3896360, -4092680, 2878840, -3941850, -4080700, 2578720, -4154800, -4080210, 2579500, -4154800, -3944720, 2473170, -4344660, -4080700, 2578720, -4154800, -3944720, 2473170, -4344660, -4000670, 2498250, -4279090, -4080700, 2578720, -4154800, -4085950, 2584130, -4146330, -4080210, 2579500, -4154800, -4106290, 2537780, -4154800, -4080700, 2578720, -4154800, -4000670, 2498250, -4279090, -4108640, 2538640, -4151970, -4085950, 2584130, -4146330, -4080700, 2578720, -4154800, -4108640, 2538640, -4151970, -4080700, 2578720, -4154800, -4106290, 2537780, -4154800, -4106290, 2537780, -4154800, -4000670, 2498250, -4279090, -4037460, 2487750, -4250750, -4106290, 2537780, -4154800, -4037460, 2487750, -4250750, -4106640, 2537210, -4154800, -4106640, 2537210, -4154800, -4108640, 2538640, -4151970, -4106290, 2537780, -4154800, -3947110, 2508300, -4322440, -4038680, 2631880, -4162470, -3871940, 2526980, -4378800, -4061240, 2609270, -4154800, -4038680, 2631880, -4162470, -3947110, 2508300, -4322440, -4061240, 2609270, -4154800, -3947110, 2508300, -4322440, -4079490, 2580640, -4154800, -4085950, 2584130, -4146330, -4061240, 2609270, -4154800, -4079490, 2580640, -4154800, -4079490, 2580640, -4154800, -3947110, 2508300, -4322440, -3944720, 2473170, -4344660, -4079490, 2580640, -4154800, -3944720, 2473170, -4344660, -4080210, 2579500, -4154800, -4080210, 2579500, -4154800, -4085950, 2584130, -4146330, -4079490, 2580640, -4154800, -3866220, 2543210, -4374480, -4005130, 2664630, -4173950, -3840690, 2585900, -4371970, -4038680, 2631880, -4162470, -4005130, 2664630, -4173950, -3866220, 2543210, -4374480, -4038680, 2631880, -4162470, -3866220, 2543210, -4374480, -3871940, 2526980, -4378800, -3941220, 2787240, -4154800, -3925450, 2777520, -4176030, -3900430, 2701290, -4248380, -3941220, 2787240, -4154800, -3900430, 2701290, -4248380, -3945940, 2780560, -4154800, -3945940, 2780560, -4154800, -3953960, 2795e3, -4137560, -3941220, 2787240, -4154800, -3972880, 2741930, -4154800, -3945940, 2780560, -4154800, -3900430, 2701290, -4248380, -3980330, 2746050, -4145e3, -3953960, 2795e3, -4137560, -3945940, 2780560, -4154800, -3980330, 2746050, -4145e3, -3945940, 2780560, -4154800, -3972880, 2741930, -4154800, -3972880, 2741930, -4154800, -3900430, 2701290, -4248380, -3866180, 2663920, -4302560, -3972880, 2741930, -4154800, -3866180, 2663920, -4302560, -3973450, 2741100, -4154800, -3973450, 2741100, -4154800, -3980330, 2746050, -4145e3, -3972880, 2741930, -4154800, -3988890, 2718590, -4154800, -3973450, 2741100, -4154800, -3866180, 2663920, -4302560, -3988890, 2718590, -4154800, -3866180, 2663920, -4302560, -4005130, 2664630, -4173950, -3988890, 2718590, -4154800, -3980330, 2746050, -4145e3, -3973450, 2741100, -4154800, -4005130, 2664630, -4173950, -3866180, 2663920, -4302560, -3840690, 2585900, -4371970, -2381500, 5294130, -2633360, -2357150, 5240990, -2757760, -2348480, 5217570, -2808740, -2381500, 5294130, -2633360, -2348480, 5217570, -2808740, -2382330, 5293750, -2633360, -2382330, 5293750, -2633360, -2418750, 5375690, -2427450, -2381500, 5294130, -2633360, -2397750, 5286790, -2633360, -2382330, 5293750, -2633360, -2348480, 5217570, -2808740, -2470360, 5383820, -2356900, -2418750, 5375690, -2427450, -2382330, 5293750, -2633360, -2470360, 5383820, -2356900, -2382330, 5293750, -2633360, -2397750, 5286790, -2633360, -2397750, 5286790, -2633360, -2348480, 5217570, -2808740, -2336280, 5098870, -3026910, -2397750, 5286790, -2633360, -2336280, 5098870, -3026910, -2419780, 5276740, -2633360, -2470360, 5383820, -2356900, -2397750, 5286790, -2633360, -2419780, 5276740, -2633360, -2336280, 5098870, -3026910, -2348480, 5217570, -2808740, -2305360, 5135880, -2988050, -2348480, 5217570, -2808740, -2310600, 5177780, -2911220, -2305360, 5135880, -2988050, -2348480, 5217570, -2808740, -2329160, 5246890, -2770220, -2310600, 5177780, -2911220, -2329160, 5246890, -2770220, -2289200, 5279660, -2741290, -2301990, 5224750, -2833600, -2310600, 5177780, -2911220, -2329160, 5246890, -2770220, -2301990, 5224750, -2833600, -2310600, 5177780, -2911220, -2301990, 5224750, -2833600, -2274720, 5237e3, -2833020, -2301990, 5224750, -2833600, -2270320, 5261750, -2790660, -2274720, 5237e3, -2833020, -2273750, 4753340, -3581900, -2296180, 4804330, -3499160, -2250970, 4816460, -3511740, -2316450, 4810010, -3478070, -2296180, 4804330, -3499160, -2273750, 4753340, -3581900, -2343300, 4674360, -3640150, -2316450, 4810010, -3478070, -2273750, 4753340, -3581900, -2343300, 4674360, -3640150, -2351280, 4863410, -3379700, -2316450, 4810010, -3478070, -2535860, 5221940, -2633360, -2399110, 4957060, -3206740, -2449690, 4935510, -3201760, -2535860, 5221940, -2633360, -2449690, 4935510, -3201760, -2555350, 5212440, -2633360, -2399110, 4957060, -3206740, -2351280, 4863410, -3379700, -2343300, 4674360, -3640150, -2399110, 4957060, -3206740, -2343300, 4674360, -3640150, -2449690, 4935510, -3201760, -2555350, 5212440, -2633360, -2605260, 5354130, -2278490, -2535860, 5221940, -2633360, -2532220, 5223710, -2633360, -2389700, 4961e3, -3207660, -2399110, 4957060, -3206740, -2532220, 5223710, -2633360, -2399110, 4957060, -3206740, -2535860, 5221940, -2633360, -2389700, 4961e3, -3207660, -2356820, 4899310, -3323910, -2351280, 4863410, -3379700, -2389700, 4961e3, -3207660, -2351280, 4863410, -3379700, -2399110, 4957060, -3206740, -2605260, 5354130, -2278490, -2532220, 5223710, -2633360, -2535860, 5221940, -2633360, -2532220, 5223710, -2633360, -2501820, 5238340, -2633360, -2384550, 4963150, -3208160, -2532220, 5223710, -2633360, -2384550, 4963150, -3208160, -2389700, 4961e3, -3207660, -2389700, 4961e3, -3207660, -2384550, 4963150, -3208160, -2356820, 4899310, -3323910, -2605260, 5354130, -2278490, -2552290, 5360610, -2322500, -2501820, 5238340, -2633360, -2605260, 5354130, -2278490, -2501820, 5238340, -2633360, -2532220, 5223710, -2633360, -2486350, 5245700, -2633360, -2340420, 4981320, -3212460, -2384550, 4963150, -3208160, -2486350, 5245700, -2633360, -2384550, 4963150, -3208160, -2501820, 5238340, -2633360, -2340420, 4981320, -3212460, -2336110, 4973260, -3227950, -2356820, 4899310, -3323910, -2340420, 4981320, -3212460, -2356820, 4899310, -3323910, -2384550, 4963150, -3208160, -2501820, 5238340, -2633360, -2552290, 5360610, -2322500, -2486350, 5245700, -2633360, -2480770, 5248340, -2633360, -2352380, 5035510, -3118500, -2338460, 4982110, -3212660, -2480770, 5248340, -2633360, -2338460, 4982110, -3212660, -2340420, 4981320, -3212460, -2480770, 5248340, -2633360, -2340420, 4981320, -3212460, -2486350, 5245700, -2633360, -2340420, 4981320, -3212460, -2338460, 4982110, -3212660, -2336110, 4973260, -3227950, -2552290, 5360610, -2322500, -2480770, 5248340, -2633360, -2486350, 5245700, -2633360, -2352380, 5035510, -3118500, -2335360, 5008880, -3173320, -2335970, 4983130, -3212900, -2352380, 5035510, -3118500, -2335970, 4983130, -3212900, -2338460, 4982110, -3212660, -2336110, 4973260, -3227950, -2338460, 4982110, -3212660, -2335970, 4983130, -3212900, -3266310, 4799010, -2633360, -3121570, 4588260, -3133390, -3179300, 4552680, -3127270, -3266310, 4799010, -2633360, -3179300, 4552680, -3127270, -3302560, 4774140, -2633360, -3121570, 4588260, -3133390, -3012740, 4429450, -3450190, -3087390, 4394710, -3428700, -3121570, 4588260, -3133390, -3087390, 4394710, -3428700, -3179300, 4552680, -3127270, -3302560, 4774140, -2633360, -3446490, 5060330, -1781580, -3266310, 4799010, -2633360, -3258600, 4804250, -2633360, -3109220, 4595750, -3134690, -3121570, 4588260, -3133390, -3258600, 4804250, -2633360, -3121570, 4588260, -3133390, -3266310, 4799010, -2633360, -3109220, 4595750, -3134690, -2979970, 4413170, -3498840, -3012740, 4429450, -3450190, -3109220, 4595750, -3134690, -3012740, 4429450, -3450190, -3121570, 4588260, -3133390, -3446490, 5060330, -1781580, -3258600, 4804250, -2633360, -3266310, 4799010, -2633360, -3258600, 4804250, -2633360, -3240880, 4816220, -2633360, -3101660, 4600300, -3135490, -3258600, 4804250, -2633360, -3101660, 4600300, -3135490, -3109220, 4595750, -3134690, -3109220, 4595750, -3134690, -3101660, 4600300, -3135490, -2979970, 4413170, -3498840, -3446490, 5060330, -1781580, -3398040, 5064640, -1860130, -3240880, 4816220, -2633360, -3446490, 5060330, -1781580, -3240880, 4816220, -2633360, -3258600, 4804250, -2633360, -3226920, 4825590, -2633360, -3078450, 4614190, -3137940, -3101660, 4600300, -3135490, -3226920, 4825590, -2633360, -3101660, 4600300, -3135490, -3240880, 4816220, -2633360, -3078450, 4614190, -3137940, -2937630, 4411460, -3536340, -2979970, 4413170, -3498840, -3078450, 4614190, -3137940, -2979970, 4413170, -3498840, -3101660, 4600300, -3135490, -3240880, 4816220, -2633360, -3398040, 5064640, -1860130, -3226920, 4825590, -2633360, -3226920, 4825590, -2633360, -3206840, 4838950, -2633360, -3069450, 4619540, -3138880, -3226920, 4825590, -2633360, -3069450, 4619540, -3138880, -3078450, 4614190, -3137940, -3078450, 4614190, -3137940, -3069450, 4619540, -3138880, -2937630, 4411460, -3536340, -3398040, 5064640, -1860130, -3356780, 5084260, -1881240, -3206840, 4838950, -2633360, -3398040, 5064640, -1860130, -3206840, 4838950, -2633360, -3226920, 4825590, -2633360, -3206840, 4838950, -2633360, -3188320, 4851170, -2633360, -3061270, 4624370, -3139750, -3206840, 4838950, -2633360, -3061270, 4624370, -3139750, -3069450, 4619540, -3138880, -2937630, 4411460, -3536340, -3069450, 4619540, -3138880, -3061270, 4624370, -3139750, -3356780, 5084260, -1881240, -3334410, 5132e3, -1789790, -3188320, 4851170, -2633360, -3356780, 5084260, -1881240, -3188320, 4851170, -2633360, -3206840, 4838950, -2633360, -3094950, 4911270, -2633360, -2951680, 4687370, -3151160, -2990550, 4665420, -3147120, -3094950, 4911270, -2633360, -2990550, 4665420, -3147120, -3116690, 4897500, -2633360, -2951680, 4687370, -3151160, -2819210, 4479780, -3546760, -2871130, 4453240, -3538580, -2951680, 4687370, -3151160, -2871130, 4453240, -3538580, -2990550, 4665420, -3147120, -3116690, 4897500, -2633360, -3233580, 5126500, -1979170, -3094950, 4911270, -2633360, -3119600, 4895650, -2633360, -3116690, 4897500, -2633360, -2990550, 4665420, -3147120, -3119600, 4895650, -2633360, -2990550, 4665420, -3147120, -2991890, 4664640, -3147e3, -2871130, 4453240, -3538580, -2991890, 4664640, -3147e3, -2990550, 4665420, -3147120, -3244900, 5135500, -1937170, -3233580, 5126500, -1979170, -3116690, 4897500, -2633360, -3244900, 5135500, -1937170, -3116690, 4897500, -2633360, -3119600, 4895650, -2633360, -3121730, 4894290, -2633360, -3119600, 4895650, -2633360, -2991890, 4664640, -3147e3, -3121730, 4894290, -2633360, -2991890, 4664640, -3147e3, -2992810, 4664110, -3146900, -2871130, 4453240, -3538580, -2992810, 4664110, -3146900, -2991890, 4664640, -3147e3, -3256910, 5149340, -1879800, -3244900, 5135500, -1937170, -3119600, 4895650, -2633360, -3256910, 5149340, -1879800, -3119600, 4895650, -2633360, -3121730, 4894290, -2633360, -3154800, 4873040, -2633360, -3121730, 4894290, -2633360, -2992810, 4664110, -3146900, -3154800, 4873040, -2633360, -2992810, 4664110, -3146900, -3007270, 4655830, -3145390, -3007270, 4655830, -3145390, -2992810, 4664110, -3146900, -2871130, 4453240, -3538580, -3334410, 5132e3, -1789790, -3256910, 5149340, -1879800, -3121730, 4894290, -2633360, -3334410, 5132e3, -1789790, -3121730, 4894290, -2633360, -3154800, 4873040, -2633360, -3154800, 4873040, -2633360, -3007270, 4655830, -3145390, -3061270, 4624370, -3139750, -3154800, 4873040, -2633360, -3061270, 4624370, -3139750, -3188320, 4851170, -2633360, -3007270, 4655830, -3145390, -2871130, 4453240, -3538580, -2937630, 4411460, -3536340, -3007270, 4655830, -3145390, -2937630, 4411460, -3536340, -3061270, 4624370, -3139750, -3188320, 4851170, -2633360, -3334410, 5132e3, -1789790, -3154800, 4873040, -2633360, -2969160, 4988330, -2633360, -2820620, 4758400, -3164630, -2864870, 4734930, -3160110, -2969160, 4988330, -2633360, -2864870, 4734930, -3160110, -2990630, 4975480, -2633360, -2820620, 4758400, -3164630, -2695100, 4560790, -3540030, -2755620, 4532380, -3529970, -2820620, 4758400, -3164630, -2755620, 4532380, -3529970, -2864870, 4734930, -3160110, -2990630, 4975480, -2633360, -3081250, 5157380, -2134760, -2969160, 4988330, -2633360, -3021320, 4956910, -2633360, -2990630, 4975480, -2633360, -2864870, 4734930, -3160110, -3021320, 4956910, -2633360, -2864870, 4734930, -3160110, -2877650, 4728060, -3158790, -2877650, 4728060, -3158790, -2864870, 4734930, -3160110, -2755620, 4532380, -3529970, -3138610, 5141870, -2088430, -3081250, 5157380, -2134760, -2990630, 4975480, -2633360, -3138610, 5141870, -2088430, -2990630, 4975480, -2633360, -3021320, 4956910, -2633360, -3021320, 4956910, -2633360, -2877650, 4728060, -3158790, -2931560, 4698580, -3153240, -3021320, 4956910, -2633360, -2931560, 4698580, -3153240, -3048780, 4940060, -2633360, -2877650, 4728060, -3158790, -2755620, 4532380, -3529970, -2819210, 4479780, -3546760, -2877650, 4728060, -3158790, -2819210, 4479780, -3546760, -2931560, 4698580, -3153240, -3048780, 4940060, -2633360, -3138610, 5141870, -2088430, -3021320, 4956910, -2633360, -3063940, 4930670, -2633360, -3048780, 4940060, -2633360, -2931560, 4698580, -3153240, -3063940, 4930670, -2633360, -2931560, 4698580, -3153240, -2938150, 4694910, -3152570, -2819210, 4479780, -3546760, -2938150, 4694910, -3152570, -2931560, 4698580, -3153240, -3171560, 5144220, -2032480, -3138610, 5141870, -2088430, -3048780, 4940060, -2633360, -3171560, 5144220, -2032480, -3048780, 4940060, -2633360, -3063940, 4930670, -2633360, -3094950, 4911270, -2633360, -3063940, 4930670, -2633360, -2938150, 4694910, -3152570, -3094950, 4911270, -2633360, -2938150, 4694910, -3152570, -2951680, 4687370, -3151160, -2951680, 4687370, -3151160, -2938150, 4694910, -3152570, -2819210, 4479780, -3546760, -3233580, 5126500, -1979170, -3171560, 5144220, -2032480, -3063940, 4930670, -2633360, -3233580, 5126500, -1979170, -3063940, 4930670, -2633360, -3094950, 4911270, -2633360, -2813840, 5077560, -2633360, -2804440, 5082750, -2633360, -2673800, 4832610, -3179490, -2813840, 5077560, -2633360, -2673800, 4832610, -3179490, -2677790, 4830670, -3179090, -2552750, 4603950, -3589010, -2677790, 4830670, -3179090, -2673800, 4832610, -3179490, -2904930, 5243220, -2172290, -2886980, 5243590, -2195060, -2804440, 5082750, -2633360, -2904930, 5243220, -2172290, -2804440, 5082750, -2633360, -2813840, 5077560, -2633360, -2829870, 5068640, -2633360, -2813840, 5077560, -2633360, -2677790, 4830670, -3179090, -2829870, 5068640, -2633360, -2677790, 4830670, -3179090, -2684730, 4827280, -3178390, -2684730, 4827280, -3178390, -2677790, 4830670, -3179090, -2552750, 4603950, -3589010, -2930750, 5232800, -2162800, -2904930, 5243220, -2172290, -2813840, 5077560, -2633360, -2930750, 5232800, -2162800, -2813840, 5077560, -2633360, -2829870, 5068640, -2633360, -2829870, 5068640, -2633360, -2684730, 4827280, -3178390, -2702410, 4818580, -3176610, -2829870, 5068640, -2633360, -2702410, 4818580, -3176610, -2838e3, 5064090, -2633360, -2684730, 4827280, -3178390, -2552750, 4603950, -3589010, -2574780, 4588400, -3593150, -2684730, 4827280, -3178390, -2574780, 4588400, -3593150, -2702410, 4818580, -3176610, -2838e3, 5064090, -2633360, -2930750, 5232800, -2162800, -2829870, 5068640, -2633360, -2871440, 5045210, -2633360, -2838e3, 5064090, -2633360, -2702410, 4818580, -3176610, -2871440, 5045210, -2633360, -2702410, 4818580, -3176610, -2717030, 4811340, -3175130, -2717030, 4811340, -3175130, -2702410, 4818580, -3176610, -2574780, 4588400, -3593150, -2980670, 5203490, -2165250, -2930750, 5232800, -2162800, -2838e3, 5064090, -2633360, -2980670, 5203490, -2165250, -2838e3, 5064090, -2633360, -2871440, 5045210, -2633360, -2871440, 5045210, -2633360, -2717030, 4811340, -3175130, -2752850, 4793350, -3171520, -2871440, 5045210, -2633360, -2752850, 4793350, -3171520, -2887980, 5035760, -2633360, -2717030, 4811340, -3175130, -2574780, 4588400, -3593150, -2638880, 4590270, -3544250, -2717030, 4811340, -3175130, -2638880, 4590270, -3544250, -2752850, 4793350, -3171520, -2887980, 5035760, -2633360, -2980670, 5203490, -2165250, -2871440, 5045210, -2633360, -2948850, 5000360, -2633360, -2887980, 5035760, -2633360, -2752850, 4793350, -3171520, -2948850, 5000360, -2633360, -2752850, 4793350, -3171520, -2778070, 4780480, -3168950, -2778070, 4780480, -3168950, -2752850, 4793350, -3171520, -2638880, 4590270, -3544250, -3081250, 5157380, -2134760, -2980670, 5203490, -2165250, -2887980, 5035760, -2633360, -3081250, 5157380, -2134760, -2887980, 5035760, -2633360, -2948850, 5000360, -2633360, -2948850, 5000360, -2633360, -2778070, 4780480, -3168950, -2820620, 4758400, -3164630, -2948850, 5000360, -2633360, -2820620, 4758400, -3164630, -2969160, 4988330, -2633360, -2778070, 4780480, -3168950, -2638880, 4590270, -3544250, -2695100, 4560790, -3540030, -2778070, 4780480, -3168950, -2695100, 4560790, -3540030, -2820620, 4758400, -3164630, -3081250, 5157380, -2134760, -2948850, 5000360, -2633360, -2969160, 4988330, -2633360, -2653590, 5163110, -2633360, -2623540, 5178450, -2633360, -2511780, 4908230, -3195640, -2653590, 5163110, -2633360, -2511780, 4908230, -3195640, -2525140, 4902230, -3194320, -2397860, 4646570, -3640180, -2525140, 4902230, -3194320, -2511780, 4908230, -3195640, -2726580, 5313100, -2232440, -2683020, 5331810, -2240530, -2623540, 5178450, -2633360, -2726580, 5313100, -2232440, -2623540, 5178450, -2633360, -2653590, 5163110, -2633360, -2671780, 5153730, -2633360, -2653590, 5163110, -2633360, -2525140, 4902230, -3194320, -2671780, 5153730, -2633360, -2525140, 4902230, -3194320, -2533140, 4898630, -3193520, -2533140, 4898630, -3193520, -2525140, 4902230, -3194320, -2397860, 4646570, -3640180, -2749920, 5295620, -2245210, -2726580, 5313100, -2232440, -2653590, 5163110, -2633360, -2749920, 5295620, -2245210, -2653590, 5163110, -2633360, -2671780, 5153730, -2633360, -2671780, 5153730, -2633360, -2533140, 4898630, -3193520, -2575480, 4879260, -3189320, -2671780, 5153730, -2633360, -2575480, 4879260, -3189320, -2689130, 5144700, -2633360, -2533140, 4898630, -3193520, -2397860, 4646570, -3640180, -2455620, 4613480, -3643740, -2533140, 4898630, -3193520, -2455620, 4613480, -3643740, -2575480, 4879260, -3189320, -2689130, 5144700, -2633360, -2749920, 5295620, -2245210, -2671780, 5153730, -2633360, -2740620, 5117450, -2633360, -2689130, 5144700, -2633360, -2575480, 4879260, -3189320, -2740620, 5117450, -2633360, -2575480, 4879260, -3189320, -2598740, 4868440, -3187010, -2598740, 4868440, -3187010, -2575480, 4879260, -3189320, -2455620, 4613480, -3643740, -2829340, 5270070, -2206580, -2749920, 5295620, -2245210, -2689130, 5144700, -2633360, -2829340, 5270070, -2206580, -2689130, 5144700, -2633360, -2740620, 5117450, -2633360, -2740620, 5117450, -2633360, -2598740, 4868440, -3187010, -2627010, 4855110, -3184180, -2740620, 5117450, -2633360, -2627010, 4855110, -3184180, -2753030, 5110790, -2633360, -2598740, 4868440, -3187010, -2455620, 4613480, -3643740, -2503890, 4610440, -3614820, -2598740, 4868440, -3187010, -2503890, 4610440, -3614820, -2627010, 4855110, -3184180, -2753030, 5110790, -2633360, -2829340, 5270070, -2206580, -2740620, 5117450, -2633360, -2791130, 5090080, -2633360, -2753030, 5110790, -2633360, -2627010, 4855110, -3184180, -2791130, 5090080, -2633360, -2627010, 4855110, -3184180, -2643900, 4847050, -3182490, -2643900, 4847050, -3182490, -2627010, 4855110, -3184180, -2503890, 4610440, -3614820, -2886980, 5243590, -2195060, -2829340, 5270070, -2206580, -2753030, 5110790, -2633360, -2886980, 5243590, -2195060, -2753030, 5110790, -2633360, -2791130, 5090080, -2633360, -2791130, 5090080, -2633360, -2643900, 4847050, -3182490, -2673800, 4832610, -3179490, -2791130, 5090080, -2633360, -2673800, 4832610, -3179490, -2804440, 5082750, -2633360, -2643900, 4847050, -3182490, -2503890, 4610440, -3614820, -2552750, 4603950, -3589010, -2643900, 4847050, -3182490, -2552750, 4603950, -3589010, -2673800, 4832610, -3179490, -2804440, 5082750, -2633360, -2886980, 5243590, -2195060, -2791130, 5090080, -2633360, -2607260, 5186660, -2633360, -2555350, 5212440, -2633360, -2449690, 4935510, -3201760, -2607260, 5186660, -2633360, -2449690, 4935510, -3201760, -2472390, 4925640, -3199530, -2472390, 4925640, -3199530, -2449690, 4935510, -3201760, -2343300, 4674360, -3640150, -2683020, 5331810, -2240530, -2605260, 5354130, -2278490, -2555350, 5212440, -2633360, -2683020, 5331810, -2240530, -2555350, 5212440, -2633360, -2607260, 5186660, -2633360, -2607260, 5186660, -2633360, -2472390, 4925640, -3199530, -2511780, 4908230, -3195640, -2607260, 5186660, -2633360, -2511780, 4908230, -3195640, -2623540, 5178450, -2633360, -2472390, 4925640, -3199530, -2343300, 4674360, -3640150, -2397860, 4646570, -3640180, -2472390, 4925640, -3199530, -2397860, 4646570, -3640180, -2511780, 4908230, -3195640, -2623540, 5178450, -2633360, -2683020, 5331810, -2240530, -2607260, 5186660, -2633360, -3830540, 4361910, -2633360, -3813620, 4376720, -2633360, -3680450, 4199410, -3071860, -3830540, 4361910, -2633360, -3680450, 4199410, -3071860, -3686640, 4194500, -3071150, -3594560, 4087860, -3312890, -3686640, 4194500, -3071150, -3680450, 4199410, -3071860, -4109080, 4689960, -1337260, -4053890, 4726750, -1375390, -4052190, 4723940, -1389890, -4109080, 4689960, -1337260, -4052190, 4723940, -1389890, -4102560, 4682030, -1383960, -4102560, 4682030, -1383960, -4052190, 4723940, -1389890, -3813620, 4376720, -2633360, -4102560, 4682030, -1383960, -3813620, 4376720, -2633360, -3830540, 4361910, -2633360, -3844610, 4349520, -2633360, -3830540, 4361910, -2633360, -3686640, 4194500, -3071150, -3844610, 4349520, -2633360, -3686640, 4194500, -3071150, -3691760, 4190430, -3070550, -3691760, 4190430, -3070550, -3686640, 4194500, -3071150, -3594560, 4087860, -3312890, -4148970, 4650980, -1350120, -4109080, 4689960, -1337260, -4102560, 4682030, -1383960, -4148970, 4650980, -1350120, -4102560, 4682030, -1383960, -4144240, 4646650, -1379030, -4144240, 4646650, -1379030, -4102560, 4682030, -1383960, -3830540, 4361910, -2633360, -4144240, 4646650, -1379030, -3830540, 4361910, -2633360, -3844610, 4349520, -2633360, -3844610, 4349520, -2633360, -3691760, 4190430, -3070550, -3754110, 4140070, -3063310, -3844610, 4349520, -2633360, -3754110, 4140070, -3063310, -3890320, 4308680, -2633360, -3691760, 4190430, -3070550, -3594560, 4087860, -3312890, -3643580, 4005930, -3358800, -3691760, 4190430, -3070550, -3643580, 4005930, -3358800, -3754110, 4140070, -3063310, -4145390, 4645660, -1378900, -4148970, 4650980, -1350120, -4144240, 4646650, -1379030, -4144240, 4646650, -1379030, -3844610, 4349520, -2633360, -3890320, 4308680, -2633360, -4144240, 4646650, -1379030, -3890320, 4308680, -2633360, -4145390, 4645660, -1378900, -3914100, 4287090, -2633360, -3890320, 4308680, -2633360, -3754110, 4140070, -3063310, -3914100, 4287090, -2633360, -3754110, 4140070, -3063310, -3764070, 4131880, -3062150, -3764070, 4131880, -3062150, -3754110, 4140070, -3063310, -3643580, 4005930, -3358800, -4219690, 4592900, -1329740, -4148970, 4650980, -1350120, -4145390, 4645660, -1378900, -4219690, 4592900, -1329740, -4145390, 4645660, -1378900, -4213240, 4586680, -1370770, -4213240, 4586680, -1370770, -4145390, 4645660, -1378900, -3890320, 4308680, -2633360, -4213240, 4586680, -1370770, -3890320, 4308680, -2633360, -3914100, 4287090, -2633360, -3914100, 4287090, -2633360, -3764070, 4131880, -3062150, -3808450, 4094940, -3056930, -3914100, 4287090, -2633360, -3808450, 4094940, -3056930, -3946830, 4256970, -2633360, -3764070, 4131880, -3062150, -3643580, 4005930, -3358800, -3691310, 3959690, -3361480, -3764070, 4131880, -3062150, -3691310, 3959690, -3361480, -3808450, 4094940, -3056930, -4214300, 4585740, -1370630, -4219690, 4592900, -1329740, -4213240, 4586680, -1370770, -4213240, 4586680, -1370770, -3914100, 4287090, -2633360, -3946830, 4256970, -2633360, -4213240, 4586680, -1370770, -3946830, 4256970, -2633360, -4214300, 4585740, -1370630, -3959150, 4245520, -2633360, -3946830, 4256970, -2633360, -3808450, 4094940, -3056930, -3959150, 4245520, -2633360, -3808450, 4094940, -3056930, -3813760, 4090470, -3056300, -3813760, 4090470, -3056300, -3808450, 4094940, -3056930, -3691310, 3959690, -3361480, -4266570, 4572130, -1249850, -4219690, 4592900, -1329740, -4214300, 4585740, -1370630, -4266570, 4572130, -1249850, -4214300, 4585740, -1370630, -4249640, 4554300, -1366370, -4249640, 4554300, -1366370, -4214300, 4585740, -1370630, -3946830, 4256970, -2633360, -4249640, 4554300, -1366370, -3946830, 4256970, -2633360, -3959150, 4245520, -2633360, -3959150, 4245520, -2633360, -3813760, 4090470, -3056300, -3891540, 4023620, -3047040, -3959150, 4245520, -2633360, -3891540, 4023620, -3047040, -4017750, 4190110, -2633360, -3813760, 4090470, -3056300, -3691310, 3959690, -3361480, -3753970, 3850320, -3418280, -3813760, 4090470, -3056300, -3753970, 3850320, -3418280, -3891540, 4023620, -3047040, -4254890, 4549580, -1365730, -4266570, 4572130, -1249850, -4249640, 4554300, -1366370, -4249640, 4554300, -1366370, -3959150, 4245520, -2633360, -4017750, 4190110, -2633360, -4249640, 4554300, -1366370, -4017750, 4190110, -2633360, -4254890, 4549580, -1365730, -4032130, 4176270, -2633360, -4017750, 4190110, -2633360, -3891540, 4023620, -3047040, -4032130, 4176270, -2633360, -3891540, 4023620, -3047040, -3898450, 4017560, -3046210, -3753970, 3850320, -3418280, -3898450, 4017560, -3046210, -3891540, 4023620, -3047040, -4302480, 4525790, -1294290, -4266570, 4572130, -1249850, -4254890, 4549580, -1365730, -4302480, 4525790, -1294290, -4254890, 4549580, -1365730, -4294300, 4513870, -1360920, -4294300, 4513870, -1360920, -4254890, 4549580, -1365730, -4017750, 4190110, -2633360, -4294300, 4513870, -1360920, -4017750, 4190110, -2633360, -4032130, 4176270, -2633360, -4055900, 4153190, -2633360, -4032130, 4176270, -2633360, -3898450, 4017560, -3046210, -4055900, 4153190, -2633360, -3898450, 4017560, -3046210, -3910120, 4007270, -3044810, -3910120, 4007270, -3044810, -3898450, 4017560, -3046210, -3753970, 3850320, -3418280, -4364440, 4457900, -1321990, -4302480, 4525790, -1294290, -4294300, 4513870, -1360920, -4364440, 4457900, -1321990, -4294300, 4513870, -1360920, -4359610, 4453290, -1352880, -4359610, 4453290, -1352880, -4294300, 4513870, -1360920, -4032130, 4176270, -2633360, -4359610, 4453290, -1352880, -4032130, 4176270, -2633360, -4055900, 4153190, -2633360, -4053890, 4726750, -1375390, -4042540, 4731870, -1391010, -4047830, 4727520, -1390390, -4042540, 4731870, -1391010, -4008920, 4746610, -1436990, -4017650, 4730920, -1463900, -4042540, 4731870, -1391010, -4017650, 4730920, -1463900, -4047830, 4727520, -1390390, -3813620, 4376720, -2633360, -3804520, 4384630, -2633360, -3677230, 4201950, -3072230, -3813620, 4376720, -2633360, -3677230, 4201950, -3072230, -3680450, 4199410, -3071860, -3594560, 4087860, -3312890, -3680450, 4199410, -3071860, -3677230, 4201950, -3072230, -4052190, 4723940, -1389890, -4053890, 4726750, -1375390, -4047830, 4727520, -1390390, -3804520, 4384630, -2633360, -3813620, 4376720, -2633360, -4052190, 4723940, -1389890, -3804520, 4384630, -2633360, -4052190, 4723940, -1389890, -4047830, 4727520, -1390390, -3804520, 4384630, -2633360, -4047830, 4727520, -1390390, -4017650, 4730920, -1463900, -3804520, 4384630, -2633360, -3790650, 4396620, -2633360, -3672250, 4205880, -3072810, -3804520, 4384630, -2633360, -3672250, 4205880, -3072810, -3677230, 4201950, -3072230, -3594560, 4087860, -3312890, -3677230, 4201950, -3072230, -3672250, 4205880, -3072810, -4017650, 4730920, -1463900, -3976050, 4757160, -1492020, -3790650, 4396620, -2633360, -4017650, 4730920, -1463900, -3790650, 4396620, -2633360, -3804520, 4384630, -2633360, -3790650, 4396620, -2633360, -3778510, 4407060, -2633360, -3667890, 4209320, -3073300, -3790650, 4396620, -2633360, -3667890, 4209320, -3073300, -3672250, 4205880, -3072810, -3594560, 4087860, -3312890, -3672250, 4205880, -3072810, -3667890, 4209320, -3073300, -3976050, 4757160, -1492020, -3930220, 4747270, -1636870, -3778510, 4407060, -2633360, -3976050, 4757160, -1492020, -3778510, 4407060, -2633360, -3790650, 4396620, -2633360, -3976050, 4757160, -1492020, -3922490, 4773620, -1578100, -3930220, 4747270, -1636870, -3597250, 4556210, -2633360, -3448750, 4373140, -3098020, -3535810, 4310080, -3088310, -3597250, 4556210, -2633360, -3535810, 4310080, -3088310, -3656420, 4508870, -2633360, -3448750, 4373140, -3098020, -3353010, 4254650, -3355590, -3461620, 4193910, -3321830, -3448750, 4373140, -3098020, -3461620, 4193910, -3321830, -3535810, 4310080, -3088310, -3656420, 4508870, -2633360, -3826570, 4834860, -1626120, -3597250, 4556210, -2633360, -3677160, 4491970, -2633360, -3656420, 4508870, -2633360, -3535810, 4310080, -3088310, -3677160, 4491970, -2633360, -3535810, 4310080, -3088310, -3542930, 4304800, -3087500, -3461620, 4193910, -3321830, -3542930, 4304800, -3087500, -3535810, 4310080, -3088310, -3879050, 4792620, -1626840, -3826570, 4834860, -1626120, -3656420, 4508870, -2633360, -3879050, 4792620, -1626840, -3656420, 4508870, -2633360, -3677160, 4491970, -2633360, -3698130, 4474720, -2633360, -3677160, 4491970, -2633360, -3542930, 4304800, -3087500, -3698130, 4474720, -2633360, -3542930, 4304800, -3087500, -3550200, 4299400, -3086690, -3550200, 4299400, -3086690, -3542930, 4304800, -3087500, -3461620, 4193910, -3321830, -3930220, 4747270, -1636870, -3879050, 4792620, -1626840, -3677160, 4491970, -2633360, -3930220, 4747270, -1636870, -3677160, 4491970, -2633360, -3698130, 4474720, -2633360, -3698130, 4474720, -2633360, -3550200, 4299400, -3086690, -3667890, 4209320, -3073300, -3698130, 4474720, -2633360, -3667890, 4209320, -3073300, -3778510, 4407060, -2633360, -3550200, 4299400, -3086690, -3461620, 4193910, -3321830, -3594560, 4087860, -3312890, -3550200, 4299400, -3086690, -3594560, 4087860, -3312890, -3667890, 4209320, -3073300, -3778510, 4407060, -2633360, -3930220, 4747270, -1636870, -3698130, 4474720, -2633360, -3500640, 4630860, -2633360, -3484130, 4643290, -2633360, -3349620, 4441870, -3108910, -3500640, 4630860, -2633360, -3349620, 4441870, -3108910, -3355820, 4437670, -3108240, -3255980, 4304710, -3386940, -3355820, 4437670, -3108240, -3349620, 4441870, -3108910, -3733780, 4943040, -1513440, -3689840, 4971460, -1527910, -3484130, 4643290, -2633360, -3733780, 4943040, -1513440, -3484130, 4643290, -2633360, -3500640, 4630860, -2633360, -3526210, 4611420, -2633360, -3500640, 4630860, -2633360, -3355820, 4437670, -3108240, -3526210, 4611420, -2633360, -3355820, 4437670, -3108240, -3365460, 4431100, -3107180, -3365460, 4431100, -3107180, -3355820, 4437670, -3108240, -3255980, 4304710, -3386940, -3789670, 4884730, -1562690, -3733780, 4943040, -1513440, -3500640, 4630860, -2633360, -3789670, 4884730, -1562690, -3500640, 4630860, -2633360, -3526210, 4611420, -2633360, -3526210, 4611420, -2633360, -3365460, 4431100, -3107180, -3441920, 4377980, -3098770, -3526210, 4611420, -2633360, -3441920, 4377980, -3098770, -3578610, 4570870, -2633360, -3365460, 4431100, -3107180, -3255980, 4304710, -3386940, -3353010, 4254650, -3355590, -3365460, 4431100, -3107180, -3353010, 4254650, -3355590, -3441920, 4377980, -3098770, -3578610, 4570870, -2633360, -3789670, 4884730, -1562690, -3526210, 4611420, -2633360, -3597250, 4556210, -2633360, -3578610, 4570870, -2633360, -3441920, 4377980, -3098770, -3597250, 4556210, -2633360, -3441920, 4377980, -3098770, -3448750, 4373140, -3098020, -3448750, 4373140, -3098020, -3441920, 4377980, -3098770, -3353010, 4254650, -3355590, -3826570, 4834860, -1626120, -3789670, 4884730, -1562690, -3578610, 4570870, -2633360, -3826570, 4834860, -1626120, -3578610, 4570870, -2633360, -3597250, 4556210, -2633360, -3339960, 4748050, -2633360, -3193690, 4543660, -3125740, -3266560, 4497030, -3117920, -3339960, 4748050, -2633360, -3266560, 4497030, -3117920, -3389080, 4713110, -2633360, -3193690, 4543660, -3125740, -3087390, 4394710, -3428700, -3186170, 4361490, -3380720, -3193690, 4543660, -3125740, -3186170, 4361490, -3380720, -3266560, 4497030, -3117920, -3389080, 4713110, -2633360, -3554400, 5044850, -1605920, -3339960, 4748050, -2633360, -3407320, 4699940, -2633360, -3389080, 4713110, -2633360, -3266560, 4497030, -3117920, -3407320, 4699940, -2633360, -3266560, 4497030, -3117920, -3273070, 4492780, -3117220, -3186170, 4361490, -3380720, -3273070, 4492780, -3117220, -3266560, 4497030, -3117920, -3601320, 5017310, -1587680, -3554400, 5044850, -1605920, -3389080, 4713110, -2633360, -3601320, 5017310, -1587680, -3389080, 4713110, -2633360, -3407320, 4699940, -2633360, -3408140, 4699350, -2633360, -3407320, 4699940, -2633360, -3273070, 4492780, -3117220, -3408140, 4699350, -2633360, -3273070, 4492780, -3117220, -3273320, 4492620, -3117190, -3186170, 4361490, -3380720, -3273320, 4492620, -3117190, -3273070, 4492780, -3117220, -3607200, 5022540, -1557740, -3601320, 5017310, -1587680, -3407320, 4699940, -2633360, -3607200, 5022540, -1557740, -3407320, 4699940, -2633360, -3408140, 4699350, -2633360, -3423540, 4688140, -2633360, -3408140, 4699350, -2633360, -3273320, 4492620, -3117190, -3423540, 4688140, -2633360, -3273320, 4492620, -3117190, -3278840, 4489e3, -3116600, -3186170, 4361490, -3380720, -3278840, 4489e3, -3116600, -3273320, 4492620, -3117190, -3643700, 4992180, -1570240, -3607200, 5022540, -1557740, -3408140, 4699350, -2633360, -3643700, 4992180, -1570240, -3408140, 4699350, -2633360, -3423540, 4688140, -2633360, -3424110, 4687720, -2633360, -3423540, 4688140, -2633360, -3278840, 4489e3, -3116600, -3424110, 4687720, -2633360, -3278840, 4489e3, -3116600, -3279090, 4488850, -3116570, -3186170, 4361490, -3380720, -3279090, 4488850, -3116570, -3278840, 4489e3, -3116600, -3649290, 4996550, -1543290, -3643700, 4992180, -1570240, -3423540, 4688140, -2633360, -3649290, 4996550, -1543290, -3423540, 4688140, -2633360, -3424110, 4687720, -2633360, -3439230, 4676640, -2633360, -3424110, 4687720, -2633360, -3279090, 4488850, -3116570, -3439230, 4676640, -2633360, -3279090, 4488850, -3116570, -3284530, 4485280, -3115980, -3284530, 4485280, -3115980, -3279090, 4488850, -3116570, -3186170, 4361490, -3380720, -3689840, 4971460, -1527910, -3649290, 4996550, -1543290, -3424110, 4687720, -2633360, -3689840, 4971460, -1527910, -3424110, 4687720, -2633360, -3439230, 4676640, -2633360, -3439230, 4676640, -2633360, -3284530, 4485280, -3115980, -3349620, 4441870, -3108910, -3439230, 4676640, -2633360, -3349620, 4441870, -3108910, -3484130, 4643290, -2633360, -3284530, 4485280, -3115980, -3186170, 4361490, -3380720, -3255980, 4304710, -3386940, -3284530, 4485280, -3115980, -3255980, 4304710, -3386940, -3349620, 4441870, -3108910, -3484130, 4643290, -2633360, -3689840, 4971460, -1527910, -3439230, 4676640, -2633360, -3308980, 4769690, -2633360, -3302560, 4774140, -2633360, -3179300, 4552680, -3127270, -3308980, 4769690, -2633360, -3179300, 4552680, -3127270, -3181690, 4551190, -3127010, -3087390, 4394710, -3428700, -3181690, 4551190, -3127010, -3179300, 4552680, -3127270, -3470320, 5072070, -1700630, -3446490, 5060330, -1781580, -3302560, 4774140, -2633360, -3470320, 5072070, -1700630, -3302560, 4774140, -2633360, -3308980, 4769690, -2633360, -3330750, 4754510, -2633360, -3308980, 4769690, -2633360, -3181690, 4551190, -3127010, -3330750, 4754510, -2633360, -3181690, 4551190, -3127010, -3190080, 4545930, -3126120, -3087390, 4394710, -3428700, -3190080, 4545930, -3126120, -3181690, 4551190, -3127010, -3526730, 5050560, -1648130, -3470320, 5072070, -1700630, -3308980, 4769690, -2633360, -3526730, 5050560, -1648130, -3308980, 4769690, -2633360, -3330750, 4754510, -2633360, -3339960, 4748050, -2633360, -3330750, 4754510, -2633360, -3190080, 4545930, -3126120, -3339960, 4748050, -2633360, -3190080, 4545930, -3126120, -3193690, 4543660, -3125740, -3193690, 4543660, -3125740, -3190080, 4545930, -3126120, -3087390, 4394710, -3428700, -3554400, 5044850, -1605920, -3526730, 5050560, -1648130, -3330750, 4754510, -2633360, -3554400, 5044850, -1605920, -3330750, 4754510, -2633360, -3339960, 4748050, -2633360, -3398040, 5064640, -1860130, -3411170, 5092270, -1758560, -3374860, 5098280, -1810080, -3446490, 5060330, -1781580, -3411170, 5092270, -1758560, -3398040, 5064640, -1860130, -3866130, 3515570, -3644840, -3896880, 3570330, -3558420, -3860780, 3556150, -3611220, -3943320, 3564310, -3513320, -3896880, 3570330, -3558420, -3866130, 3515570, -3644840, -3928610, 3511600, -3581740, -3943320, 3564310, -3513320, -3866130, 3515570, -3644840, -4321690, 3875860, -2633360, -4175400, 3756900, -3011850, -4190580, 3741550, -3009900, -4321690, 3875860, -2633360, -4190580, 3741550, -3009900, -4331690, 3864680, -2633360, -4175400, 3756900, -3011850, -3943320, 3564310, -3513320, -3928610, 3511600, -3581740, -4175400, 3756900, -3011850, -3928610, 3511600, -3581740, -4190580, 3741550, -3009900, -4560220, 4062580, -1832460, -4321690, 3875860, -2633360, -4331690, 3864680, -2633360, -4331690, 3864680, -2633360, -4190580, 3741550, -3009900, -4201240, 3730690, -3008520, -4331690, 3864680, -2633360, -4201240, 3730690, -3008520, -4338700, 3856810, -2633360, -4190580, 3741550, -3009900, -3928610, 3511600, -3581740, -3908200, 3463890, -3649430, -4190580, 3741550, -3009900, -3908200, 3463890, -3649430, -4201240, 3730690, -3008520, -4338700, 3856810, -2633360, -4560220, 4062580, -1832460, -4331690, 3864680, -2633360, -4349650, 3844460, -2633360, -4338700, 3856810, -2633360, -4201240, 3730690, -3008520, -4349650, 3844460, -2633360, -4201240, 3730690, -3008520, -4208440, 3723310, -3007600, -4208440, 3723310, -3007600, -4201240, 3730690, -3008520, -3908200, 3463890, -3649430, -4580180, 4040100, -1832360, -4560220, 4062580, -1832460, -4338700, 3856810, -2633360, -4580180, 4040100, -1832360, -4338700, 3856810, -2633360, -4349650, 3844460, -2633360, -4349650, 3844460, -2633360, -4208440, 3723310, -3007600, -4234890, 3696020, -3004160, -4349650, 3844460, -2633360, -4234890, 3696020, -3004160, -4367120, 3824600, -2633360, -4208440, 3723310, -3007600, -3908200, 3463890, -3649430, -3916860, 3394930, -3704170, -4208440, 3723310, -3007600, -3916860, 3394930, -3704170, -4234890, 3696020, -3004160, -4367120, 3824600, -2633360, -4580180, 4040100, -1832360, -4349650, 3844460, -2633360, -4387680, 3800990, -2633360, -4367120, 3824600, -2633360, -4234890, 3696020, -3004160, -4387680, 3800990, -2633360, -4234890, 3696020, -3004160, -4248890, 3681410, -3002340, -4248890, 3681410, -3002340, -4234890, 3696020, -3004160, -3916860, 3394930, -3704170, -4610700, 3992640, -1859470, -4580180, 4040100, -1832360, -4367120, 3824600, -2633360, -4610700, 3992640, -1859470, -4367120, 3824600, -2633360, -4387680, 3800990, -2633360, -4387680, 3800990, -2633360, -4248890, 3681410, -3002340, -4268380, 3660900, -2999780, -4387680, 3800990, -2633360, -4268380, 3660900, -2999780, -4400460, 3786190, -2633360, -4248890, 3681410, -3002340, -3916860, 3394930, -3704170, -3925700, 3344110, -3740600, -4248890, 3681410, -3002340, -3925700, 3344110, -3740600, -4268380, 3660900, -2999780, -4400460, 3786190, -2633360, -4610700, 3992640, -1859470, -4387680, 3800990, -2633360, -4406330, 3779350, -2633360, -4400460, 3786190, -2633360, -4268380, 3660900, -2999780, -4406330, 3779350, -2633360, -4268380, 3660900, -2999780, -4272500, 3656550, -2999230, -3925700, 3344110, -3740600, -4272500, 3656550, -2999230, -4268380, 3660900, -2999780, -4613600, 3973790, -1892120, -4610700, 3992640, -1859470, -4400460, 3786190, -2633360, -4613600, 3973790, -1892120, -4400460, 3786190, -2633360, -4406330, 3779350, -2633360, -4445470, 3733240, -2633360, -4406330, 3779350, -2633360, -4272500, 3656550, -2999230, -4445470, 3733240, -2633360, -4272500, 3656550, -2999230, -4299920, 3627280, -2995610, -4299920, 3627280, -2995610, -4272500, 3656550, -2999230, -3925700, 3344110, -3740600, -4670430, 3889190, -1927920, -4613600, 3973790, -1892120, -4406330, 3779350, -2633360, -4670430, 3889190, -1927920, -4406330, 3779350, -2633360, -4445470, 3733240, -2633360, -4727790, 3368570, -2633360, -4706e3, 3398950, -2633360, -4581740, 3299720, -2956560, -4727790, 3368570, -2633360, -4581740, 3299720, -2956560, -4598880, 3278050, -2954070, -4598880, 3278050, -2954070, -4581740, 3299720, -2956560, -4091520, 2919960, -3912900, -5039540, 3586180, -1551350, -4990680, 3636330, -1591770, -4706e3, 3398950, -2633360, -5039540, 3586180, -1551350, -4706e3, 3398950, -2633360, -4727790, 3368570, -2633360, -4684070, 3429100, -2633360, -4551620, 3337260, -2960920, -4581740, 3299720, -2956560, -4684070, 3429100, -2633360, -4581740, 3299720, -2956560, -4706e3, 3398950, -2633360, -4551620, 3337260, -2960920, -4006160, 2952510, -3975860, -4091520, 2919960, -3912900, -4551620, 3337260, -2960920, -4091520, 2919960, -3912900, -4581740, 3299720, -2956560, -4706e3, 3398950, -2633360, -4990680, 3636330, -1591770, -4684070, 3429100, -2633360, -4684070, 3429100, -2633360, -4671470, 3446250, -2633360, -4541550, 3349660, -2962370, -4684070, 3429100, -2633360, -4541550, 3349660, -2962370, -4551620, 3337260, -2960920, -4551620, 3337260, -2960920, -4541550, 3349660, -2962370, -4006160, 2952510, -3975860, -4990680, 3636330, -1591770, -4984810, 3680230, -1507600, -4671470, 3446250, -2633360, -4990680, 3636330, -1591770, -4671470, 3446250, -2633360, -4684070, 3429100, -2633360, -4671470, 3446250, -2633360, -4670210, 3447960, -2633360, -4540550, 3350890, -2962500, -4671470, 3446250, -2633360, -4540550, 3350890, -2962500, -4541550, 3349660, -2962370, -4006160, 2952510, -3975860, -4541550, 3349660, -2962370, -4540550, 3350890, -2962500, -4984810, 3680230, -1507600, -5001260, 3697770, -1407550, -4670210, 3447960, -2633360, -4984810, 3680230, -1507600, -4670210, 3447960, -2633360, -4671470, 3446250, -2633360, -4994660, 3682780, -1468530, -5001260, 3697770, -1407550, -4984810, 3680230, -1507600, -4622230, 3512020, -2633360, -4489880, 3412200, -2969690, -4522820, 3372550, -2965030, -4622230, 3512020, -2633360, -4522820, 3372550, -2965030, -4647790, 3478130, -2633360, -4489880, 3412200, -2969690, -3976100, 3024050, -3952360, -4006160, 2952510, -3975860, -4489880, 3412200, -2969690, -4006160, 2952510, -3975860, -4522820, 3372550, -2965030, -4978540, 3777680, -1270060, -4984780, 3784070, -1226090, -4977720, 3778710, -1270190, -4977720, 3778710, -1270190, -4622230, 3512020, -2633360, -4647790, 3478130, -2633360, -4977720, 3778710, -1270190, -4647790, 3478130, -2633360, -4978540, 3777680, -1270060, -4649430, 3475940, -2633360, -4647790, 3478130, -2633360, -4522820, 3372550, -2965030, -4649430, 3475940, -2633360, -4522820, 3372550, -2965030, -4524070, 3371030, -2964860, -4006160, 2952510, -3975860, -4524070, 3371030, -2964860, -4522820, 3372550, -2965030, -4980760, 3774850, -1269730, -4984780, 3784070, -1226090, -4978540, 3777680, -1270060, -4647790, 3478130, -2633360, -4649430, 3475940, -2633360, -4978400, 3769640, -1294100, -4647790, 3478130, -2633360, -4978400, 3769640, -1294100, -4980760, 3774850, -1269730, -4647790, 3478130, -2633360, -4980760, 3774850, -1269730, -4978540, 3777680, -1270060, -4657300, 3465380, -2633360, -4649430, 3475940, -2633360, -4524070, 3371030, -2964860, -4657300, 3465380, -2633360, -4524070, 3371030, -2964860, -4530320, 3363410, -2963960, -4006160, 2952510, -3975860, -4530320, 3363410, -2963960, -4524070, 3371030, -2964860, -4992540, 3746320, -1307190, -4978400, 3769640, -1294100, -4649430, 3475940, -2633360, -4992540, 3746320, -1307190, -4649430, 3475940, -2633360, -4657300, 3465380, -2633360, -4658450, 3463830, -2633360, -4657300, 3465380, -2633360, -4530320, 3363410, -2963960, -4658450, 3463830, -2633360, -4530320, 3363410, -2963960, -4531260, 3362260, -2963840, -4006160, 2952510, -3975860, -4531260, 3362260, -2963840, -4530320, 3363410, -2963960, -4987540, 3736730, -1352620, -4992540, 3746320, -1307190, -4657300, 3465380, -2633360, -4987540, 3736730, -1352620, -4657300, 3465380, -2633360, -4658450, 3463830, -2633360, -4670210, 3447960, -2633360, -4658450, 3463830, -2633360, -4531260, 3362260, -2963840, -4670210, 3447960, -2633360, -4531260, 3362260, -2963840, -4540550, 3350890, -2962500, -4006160, 2952510, -3975860, -4540550, 3350890, -2962500, -4531260, 3362260, -2963840, -5001260, 3697770, -1407550, -4987540, 3736730, -1352620, -4658450, 3463830, -2633360, -5001260, 3697770, -1407550, -4658450, 3463830, -2633360, -4670210, 3447960, -2633360, -4584510, 3561110, -2633360, -4583710, 3562150, -2633360, -4450960, 3458120, -2975130, -4584510, 3561110, -2633360, -4450960, 3458120, -2975130, -4451600, 3457370, -2975040, -3954610, 3069950, -3938600, -4451600, 3457370, -2975040, -4450960, 3458120, -2975130, -4943260, 3842130, -1213640, -4936680, 3840610, -1244600, -4931580, 3836510, -1276850, -4943260, 3842130, -1213640, -4931580, 3836510, -1276850, -4933300, 3834390, -1276600, -4933300, 3834390, -1276600, -4931580, 3836510, -1276850, -4583710, 3562150, -2633360, -4933300, 3834390, -1276600, -4583710, 3562150, -2633360, -4584510, 3561110, -2633360, -4596050, 3546210, -2633360, -4584510, 3561110, -2633360, -4451600, 3457370, -2975040, -4596050, 3546210, -2633360, -4451600, 3457370, -2975040, -4460550, 3446890, -2973790, -4460550, 3446890, -2973790, -4451600, 3457370, -2975040, -3954610, 3069950, -3938600, -4974230, 3814790, -1172960, -4943260, 3842130, -1213640, -4933300, 3834390, -1276600, -4974230, 3814790, -1172960, -4933300, 3834390, -1276600, -4957870, 3803760, -1273060, -4957870, 3803760, -1273060, -4933300, 3834390, -1276600, -4584510, 3561110, -2633360, -4957870, 3803760, -1273060, -4584510, 3561110, -2633360, -4596050, 3546210, -2633360, -4596050, 3546210, -2633360, -4460550, 3446890, -2973790, -4483030, 3420350, -2970650, -4596050, 3546210, -2633360, -4483030, 3420350, -2970650, -4613510, 3523470, -2633360, -4460550, 3446890, -2973790, -3954610, 3069950, -3938600, -3976100, 3024050, -3952360, -4460550, 3446890, -2973790, -3976100, 3024050, -3952360, -4483030, 3420350, -2970650, -4959160, 3802140, -1272880, -4974230, 3814790, -1172960, -4957870, 3803760, -1273060, -4957870, 3803760, -1273060, -4596050, 3546210, -2633360, -4613510, 3523470, -2633360, -4957870, 3803760, -1273060, -4613510, 3523470, -2633360, -4959160, 3802140, -1272880, -4622230, 3512020, -2633360, -4613510, 3523470, -2633360, -4483030, 3420350, -2970650, -4622230, 3512020, -2633360, -4483030, 3420350, -2970650, -4489880, 3412200, -2969690, -4489880, 3412200, -2969690, -4483030, 3420350, -2970650, -3976100, 3024050, -3952360, -4984780, 3784070, -1226090, -4974230, 3814790, -1172960, -4959160, 3802140, -1272880, -4984780, 3784070, -1226090, -4959160, 3802140, -1272880, -4977720, 3778710, -1270190, -4977720, 3778710, -1270190, -4959160, 3802140, -1272880, -4613510, 3523470, -2633360, -4977720, 3778710, -1270190, -4613510, 3523470, -2633360, -4622230, 3512020, -2633360, -4835060, 3818230, -1644900, -4875730, 3857390, -1419440, -4847660, 3837250, -1561990, -4892560, 3844120, -1397530, -4875730, 3857390, -1419440, -4835060, 3818230, -1644900, -4574300, 3574220, -2633360, -4567990, 3582280, -2633360, -4438890, 3472160, -2976800, -4574300, 3574220, -2633360, -4438890, 3472160, -2976800, -4443710, 3466560, -2976120, -3954610, 3069950, -3938600, -4443710, 3466560, -2976120, -4438890, 3472160, -2976800, -4892560, 3844120, -1397530, -4835060, 3818230, -1644900, -4567990, 3582280, -2633360, -4892560, 3844120, -1397530, -4567990, 3582280, -2633360, -4574300, 3574220, -2633360, -4577480, 3570150, -2633360, -4574300, 3574220, -2633360, -4443710, 3466560, -2976120, -4577480, 3570150, -2633360, -4443710, 3466560, -2976120, -4446150, 3463720, -2975790, -3954610, 3069950, -3938600, -4446150, 3463720, -2975790, -4443710, 3466560, -2976120, -4914360, 3849340, -1304140, -4892560, 3844120, -1397530, -4574300, 3574220, -2633360, -4914360, 3849340, -1304140, -4574300, 3574220, -2633360, -4577480, 3570150, -2633360, -4583710, 3562150, -2633360, -4577480, 3570150, -2633360, -4446150, 3463720, -2975790, -4583710, 3562150, -2633360, -4446150, 3463720, -2975790, -4450960, 3458120, -2975130, -3954610, 3069950, -3938600, -4450960, 3458120, -2975130, -4446150, 3463720, -2975790, -4931580, 3836510, -1276850, -4936680, 3840610, -1244600, -4924240, 3845580, -1277900, -4577480, 3570150, -2633360, -4583710, 3562150, -2633360, -4931580, 3836510, -1276850, -4577480, 3570150, -2633360, -4931580, 3836510, -1276850, -4924240, 3845580, -1277900, -4577480, 3570150, -2633360, -4924240, 3845580, -1277900, -4914360, 3849340, -1304140, -4498190, 3669550, -2633360, -4359810, 3561860, -2987600, -4392370, 3525380, -2983190, -4498190, 3669550, -2633360, -4392370, 3525380, -2983190, -4519440, 3643340, -2633360, -4359810, 3561860, -2987600, -3889880, 3190750, -3907130, -3927680, 3112260, -3932370, -4359810, 3561860, -2987600, -3927680, 3112260, -3932370, -4392370, 3525380, -2983190, -4519440, 3643340, -2633360, -4723760, 3842320, -1891860, -4498190, 3669550, -2633360, -4528140, 3632530, -2633360, -4519440, 3643340, -2633360, -4392370, 3525380, -2983190, -4528140, 3632530, -2633360, -4392370, 3525380, -2983190, -4399020, 3517860, -2982280, -3927680, 3112260, -3932370, -4399020, 3517860, -2982280, -4392370, 3525380, -2983190, -4750480, 3837120, -1835050, -4723760, 3842320, -1891860, -4519440, 3643340, -2633360, -4750480, 3837120, -1835050, -4519440, 3643340, -2633360, -4528140, 3632530, -2633360, -4536690, 3621850, -2633360, -4528140, 3632530, -2633360, -4399020, 3517860, -2982280, -4536690, 3621850, -2633360, -4399020, 3517860, -2982280, -4405530, 3510470, -2981390, -3927680, 3112260, -3932370, -4405530, 3510470, -2981390, -4399020, 3517860, -2982280, -4774980, 3829040, -1788060, -4750480, 3837120, -1835050, -4528140, 3632530, -2633360, -4774980, 3829040, -1788060, -4528140, 3632530, -2633360, -4536690, 3621850, -2633360, -4541800, 3615430, -2633360, -4536690, 3621850, -2633360, -4405530, 3510470, -2981390, -4541800, 3615430, -2633360, -4405530, 3510470, -2981390, -4409420, 3506030, -2980850, -3927680, 3112260, -3932370, -4409420, 3506030, -2980850, -4405530, 3510470, -2981390, -4796420, 3829200, -1729760, -4774980, 3829040, -1788060, -4536690, 3621850, -2633360, -4796420, 3829200, -1729760, -4536690, 3621850, -2633360, -4541800, 3615430, -2633360, -4553390, 3600830, -2633360, -4541800, 3615430, -2633360, -4409420, 3506030, -2980850, -4553390, 3600830, -2633360, -4409420, 3506030, -2980850, -4418370, 3495810, -2979630, -4418370, 3495810, -2979630, -4409420, 3506030, -2980850, -3927680, 3112260, -3932370, -4835060, 3818230, -1644900, -4796420, 3829200, -1729760, -4541800, 3615430, -2633360, -4835060, 3818230, -1644900, -4541800, 3615430, -2633360, -4553390, 3600830, -2633360, -4553390, 3600830, -2633360, -4418370, 3495810, -2979630, -4438890, 3472160, -2976800, -4553390, 3600830, -2633360, -4438890, 3472160, -2976800, -4567990, 3582280, -2633360, -4418370, 3495810, -2979630, -3927680, 3112260, -3932370, -3954610, 3069950, -3938600, -4418370, 3495810, -2979630, -3954610, 3069950, -3938600, -4438890, 3472160, -2976800, -4567990, 3582280, -2633360, -4835060, 3818230, -1644900, -4553390, 3600830, -2633360, -4498190, 3669550, -2633360, -4470200, 3703590, -2633360, -4338740, 3585110, -2990440, -4498190, 3669550, -2633360, -4338740, 3585110, -2990440, -4359810, 3561860, -2987600, -4359810, 3561860, -2987600, -4338740, 3585110, -2990440, -3889880, 3190750, -3907130, -4723760, 3842320, -1891860, -4670430, 3889190, -1927920, -4470200, 3703590, -2633360, -4723760, 3842320, -1891860, -4470200, 3703590, -2633360, -4498190, 3669550, -2633360, -4455950, 3720730, -2633360, -4316410, 3609470, -2993420, -4338740, 3585110, -2990440, -4455950, 3720730, -2633360, -4338740, 3585110, -2990440, -4470200, 3703590, -2633360, -4316410, 3609470, -2993420, -3885660, 3261380, -3853010, -3889880, 3190750, -3907130, -4316410, 3609470, -2993420, -3889880, 3190750, -3907130, -4338740, 3585110, -2990440, -4470200, 3703590, -2633360, -4670430, 3889190, -1927920, -4455950, 3720730, -2633360, -4451400, 3726170, -2633360, -4309210, 3617270, -2994380, -4316410, 3609470, -2993420, -4451400, 3726170, -2633360, -4316410, 3609470, -2993420, -4455950, 3720730, -2633360, -4309210, 3617270, -2994380, -3913860, 3306650, -3785730, -3885660, 3261380, -3853010, -4309210, 3617270, -2994380, -3885660, 3261380, -3853010, -4316410, 3609470, -2993420, -4670430, 3889190, -1927920, -4451400, 3726170, -2633360, -4455950, 3720730, -2633360, -4445470, 3733240, -2633360, -4299920, 3627280, -2995610, -4309210, 3617270, -2994380, -4445470, 3733240, -2633360, -4309210, 3617270, -2994380, -4451400, 3726170, -2633360, -4299920, 3627280, -2995610, -3925700, 3344110, -3740600, -3913860, 3306650, -3785730, -4299920, 3627280, -2995610, -3913860, 3306650, -3785730, -4309210, 3617270, -2994380, -4670430, 3889190, -1927920, -4445470, 3733240, -2633360, -4451400, 3726170, -2633360, -4247800, 3956700, -2633360, -4105480, 3826140, -3020740, -4147160, 3785160, -3015460, -4247800, 3956700, -2633360, -4147160, 3785160, -3015460, -4276210, 3925980, -2633360, -4105480, 3826140, -3020740, -3882230, 3620620, -3523680, -3971720, 3600070, -3444650, -4105480, 3826140, -3020740, -3971720, 3600070, -3444650, -4147160, 3785160, -3015460, -4276210, 3925980, -2633360, -4492730, 4180020, -1732980, -4247800, 3956700, -2633360, -4293300, 3907290, -2633360, -4276210, 3925980, -2633360, -4147160, 3785160, -3015460, -4293300, 3907290, -2633360, -4147160, 3785160, -3015460, -4156550, 3775810, -3014260, -3971720, 3600070, -3444650, -4156550, 3775810, -3014260, -4147160, 3785160, -3015460, -4522350, 4132360, -1769600, -4492730, 4180020, -1732980, -4276210, 3925980, -2633360, -4522350, 4132360, -1769600, -4276210, 3925980, -2633360, -4293300, 3907290, -2633360, -4318510, 3879400, -2633360, -4293300, 3907290, -2633360, -4156550, 3775810, -3014260, -4318510, 3879400, -2633360, -4156550, 3775810, -3014260, -4170480, 3761850, -3012480, -4170480, 3761850, -3012480, -4156550, 3775810, -3014260, -3971720, 3600070, -3444650, -4560220, 4062580, -1832460, -4522350, 4132360, -1769600, -4293300, 3907290, -2633360, -4560220, 4062580, -1832460, -4293300, 3907290, -2633360, -4318510, 3879400, -2633360, -4318510, 3879400, -2633360, -4170480, 3761850, -3012480, -4175400, 3756900, -3011850, -4318510, 3879400, -2633360, -4175400, 3756900, -3011850, -4321690, 3875860, -2633360, -4170480, 3761850, -3012480, -3971720, 3600070, -3444650, -3943320, 3564310, -3513320, -4170480, 3761850, -3012480, -3943320, 3564310, -3513320, -4175400, 3756900, -3011850, -4560220, 4062580, -1832460, -4318510, 3879400, -2633360, -4321690, 3875860, -2633360, -4157150, 4051840, -2633360, -4154820, 4054230, -2633360, -4020020, 3907530, -3031390, -4157150, 4051840, -2633360, -4020020, 3907530, -3031390, -4021460, 3906190, -3031220, -3766780, 3638930, -3627870, -4021460, 3906190, -3031220, -4020020, 3907530, -3031390, -4395230, 4319180, -1639850, -4395580, 4330240, -1609660, -4154820, 4054230, -2633360, -4395230, 4319180, -1639850, -4154820, 4054230, -2633360, -4157150, 4051840, -2633360, -4186600, 4021400, -2633360, -4157150, 4051840, -2633360, -4021460, 3906190, -3031220, -4186600, 4021400, -2633360, -4021460, 3906190, -3031220, -4039830, 3888970, -3028950, -4039830, 3888970, -3028950, -4021460, 3906190, -3031220, -3766780, 3638930, -3627870, -4443090, 4246650, -1698840, -4395230, 4319180, -1639850, -4157150, 4051840, -2633360, -4443090, 4246650, -1698840, -4157150, 4051840, -2633360, -4186600, 4021400, -2633360, -4186600, 4021400, -2633360, -4039830, 3888970, -3028950, -4058270, 3871530, -3026650, -4186600, 4021400, -2633360, -4058270, 3871530, -3026650, -4199140, 4008300, -2633360, -4039830, 3888970, -3028950, -3766780, 3638930, -3627870, -3827180, 3648150, -3555160, -4039830, 3888970, -3028950, -3827180, 3648150, -3555160, -4058270, 3871530, -3026650, -4199140, 4008300, -2633360, -4443090, 4246650, -1698840, -4186600, 4021400, -2633360, -4227230, 3978670, -2633360, -4199140, 4008300, -2633360, -4058270, 3871530, -3026650, -4227230, 3978670, -2633360, -4058270, 3871530, -3026650, -4075e3, 3855560, -3024570, -4075e3, 3855560, -3024570, -4058270, 3871530, -3026650, -3827180, 3648150, -3555160, -4492730, 4180020, -1732980, -4443090, 4246650, -1698840, -4199140, 4008300, -2633360, -4492730, 4180020, -1732980, -4199140, 4008300, -2633360, -4227230, 3978670, -2633360, -4227230, 3978670, -2633360, -4075e3, 3855560, -3024570, -4105480, 3826140, -3020740, -4227230, 3978670, -2633360, -4105480, 3826140, -3020740, -4247800, 3956700, -2633360, -4075e3, 3855560, -3024570, -3827180, 3648150, -3555160, -3882230, 3620620, -3523680, -4075e3, 3855560, -3024570, -3882230, 3620620, -3523680, -4105480, 3826140, -3020740, -4492730, 4180020, -1732980, -4227230, 3978670, -2633360, -4247800, 3956700, -2633360, -3766780, 3638930, -3627870, -3760770, 3729520, -3541660, -3735260, 3708240, -3590340, -4123770, 4085800, -2633360, -3979790, 3944660, -3036350, -4018800, 3908660, -3031550, -4123770, 4085800, -2633360, -4018800, 3908660, -3031550, -4152830, 4056260, -2633360, -3979790, 3944660, -3036350, -3760770, 3729520, -3541660, -3766780, 3638930, -3627870, -3979790, 3944660, -3036350, -3766780, 3638930, -3627870, -4018800, 3908660, -3031550, -4152830, 4056260, -2633360, -4430890, 4385040, -1344290, -4123770, 4085800, -2633360, -4154820, 4054230, -2633360, -4152830, 4056260, -2633360, -4018800, 3908660, -3031550, -4154820, 4054230, -2633360, -4018800, 3908660, -3031550, -4020020, 3907530, -3031390, -3766780, 3638930, -3627870, -4020020, 3907530, -3031390, -4018800, 3908660, -3031550, -4395580, 4330240, -1609660, -4430890, 4385040, -1344290, -4152830, 4056260, -2633360, -4395580, 4330240, -1609660, -4152830, 4056260, -2633360, -4154820, 4054230, -2633360, -4480200, 4344190, -1313320, -4431560, 4384480, -1343890, -4473360, 4343470, -1338600, -4431560, 4384480, -1343890, -4430890, 4385040, -1344290, -4395580, 4330240, -1609660, -4431560, 4384480, -1343890, -4395580, 4330240, -1609660, -4473360, 4343470, -1338600, -4480200, 4344190, -1313320, -4473360, 4343470, -1338600, -4475600, 4341250, -1338320, -4473360, 4343470, -1338600, -4395580, 4330240, -1609660, -4432060, 4312400, -1557020, -4473360, 4343470, -1338600, -4432060, 4312400, -1557020, -4475600, 4341250, -1338320, -4477380, 4339490, -1338100, -4480200, 4344190, -1313320, -4475600, 4341250, -1338320, -4475600, 4341250, -1338320, -4432060, 4312400, -1557020, -4462470, 4315080, -1460360, -4475600, 4341250, -1338320, -4462470, 4315080, -1460360, -4477380, 4339490, -1338100, -4463750, 4298860, -1503370, -4462470, 4315080, -1460360, -4432060, 4312400, -1557020, -4541510, 4274910, -1329880, -4527860, 4297980, -1301950, -4527170, 4289520, -1331730, -4541510, 4274910, -1329880, -4527170, 4289520, -1331730, -4524550, 4265960, -1413240, -4541510, 4274910, -1329880, -4524550, 4265960, -1413240, -4553830, 4253660, -1355470, -4527170, 4289520, -1331730, -4527860, 4297980, -1301950, -4520440, 4296340, -1332590, -4520440, 4296340, -1332590, -4488840, 4288880, -1456780, -4524550, 4265960, -1413240, -4520440, 4296340, -1332590, -4524550, 4265960, -1413240, -4527170, 4289520, -1331730, -4527860, 4297980, -1301950, -4507090, 4313390, -1322740, -4505570, 4311340, -1334490, -4527860, 4297980, -1301950, -4505570, 4311340, -1334490, -4520440, 4296340, -1332590, -4520440, 4296340, -1332590, -4505570, 4311340, -1334490, -4488840, 4288880, -1456780, -4505570, 4311340, -1334490, -4507090, 4313390, -1322740, -4503260, 4313650, -1334790, -4503260, 4313650, -1334790, -4462470, 4315080, -1460360, -4488840, 4288880, -1456780, -4503260, 4313650, -1334790, -4488840, 4288880, -1456780, -4505570, 4311340, -1334490, -4507090, 4313390, -1322740, -4480200, 4344190, -1313320, -4477380, 4339490, -1338100, -4507090, 4313390, -1322740, -4477380, 4339490, -1338100, -4503260, 4313650, -1334790, -4503260, 4313650, -1334790, -4477380, 4339490, -1338100, -4462470, 4315080, -1460360, -4055900, 4153190, -2633360, -3910120, 4007270, -3044810, -3929810, 3989800, -3042430, -4055900, 4153190, -2633360, -3929810, 3989800, -3042430, -4070520, 4138860, -2633360, -3910120, 4007270, -3044810, -3753970, 3850320, -3418280, -3751050, 3802060, -3474660, -3910120, 4007270, -3044810, -3751050, 3802060, -3474660, -3929810, 3989800, -3042430, -4360010, 4452920, -1352830, -4364440, 4457900, -1321990, -4359610, 4453290, -1352880, -4359610, 4453290, -1352880, -4055900, 4153190, -2633360, -4070520, 4138860, -2633360, -4359610, 4453290, -1352880, -4070520, 4138860, -2633360, -4360010, 4452920, -1352830, -4078960, 4130540, -2633360, -4070520, 4138860, -2633360, -3929810, 3989800, -3042430, -4078960, 4130540, -2633360, -3929810, 3989800, -3042430, -3934260, 3985820, -3041880, -3934260, 3985820, -3041880, -3929810, 3989800, -3042430, -3751050, 3802060, -3474660, -4388270, 4437720, -1311040, -4364440, 4457900, -1321990, -4360010, 4452920, -1352830, -4388270, 4437720, -1311040, -4360010, 4452920, -1352830, -4382300, 4431830, -1350060, -4382300, 4431830, -1350060, -4360010, 4452920, -1352830, -4070520, 4138860, -2633360, -4382300, 4431830, -1350060, -4070520, 4138860, -2633360, -4078960, 4130540, -2633360, -4078960, 4130540, -2633360, -3934260, 3985820, -3041880, -3968940, 3954560, -3037670, -4078960, 4130540, -2633360, -3968940, 3954560, -3037670, -4104830, 4104830, -2633360, -3934260, 3985820, -3041880, -3751050, 3802060, -3474660, -3760770, 3729520, -3541660, -3934260, 3985820, -3041880, -3760770, 3729520, -3541660, -3968940, 3954560, -3037670, -4383090, 4431080, -1349960, -4388270, 4437720, -1311040, -4382300, 4431830, -1350060, -4382300, 4431830, -1350060, -4078960, 4130540, -2633360, -4104830, 4104830, -2633360, -4382300, 4431830, -1350060, -4104830, 4104830, -2633360, -4383090, 4431080, -1349960, -4123770, 4085800, -2633360, -4104830, 4104830, -2633360, -3968940, 3954560, -3037670, -4123770, 4085800, -2633360, -3968940, 3954560, -3037670, -3979790, 3944660, -3036350, -3979790, 3944660, -3036350, -3968940, 3954560, -3037670, -3760770, 3729520, -3541660, -4430550, 4385460, -1344020, -4388270, 4437720, -1311040, -4383090, 4431080, -1349960, -4430550, 4385460, -1344020, -4383090, 4431080, -1349960, -4104830, 4104830, -2633360, -4430550, 4385460, -1344020, -4104830, 4104830, -2633360, -4123770, 4085800, -2633360, -4430550, 4385460, -1344020, -4123770, 4085800, -2633360, -4430890, 4385040, -1344290, -4226100, 4602780, -1274410, -4216980, 4625150, -1222960, -4171770, 4661780, -1238720, -4266570, 4572130, -1249850, -4216980, 4625150, -1222960, -4226100, 4602780, -1274410, -4266570, 4572130, -1249850, -4226100, 4602780, -1274410, -4219690, 4592900, -1329740, -2480770, 5248340, -2633360, -2433770, 5270300, -2633360, -2352380, 5035510, -3118500, -2552290, 5360610, -2322500, -2470360, 5383820, -2356900, -2433770, 5270300, -2633360, -2552290, 5360610, -2322500, -2433770, 5270300, -2633360, -2480770, 5248340, -2633360, -2420790, 5276270, -2633360, -2331990, 5083660, -3055490, -2352380, 5035510, -3118500, -2420790, 5276270, -2633360, -2352380, 5035510, -3118500, -2433770, 5270300, -2633360, -2433770, 5270300, -2633360, -2470360, 5383820, -2356900, -2420790, 5276270, -2633360, -2419780, 5276740, -2633360, -2336280, 5098870, -3026910, -2331990, 5083660, -3055490, -2419780, 5276740, -2633360, -2331990, 5083660, -3055490, -2420790, 5276270, -2633360, -2470360, 5383820, -2356900, -2419780, 5276740, -2633360, -2420790, 5276270, -2633360, -2323830, 5312720, -2647310, -2324630, 5319340, -2633360, -2316450, 5322910, -2633360, -2328340, 5354300, -2558680, -2307860, 5334670, -2617160, -2316450, 5322910, -2633360, -2328340, 5354300, -2558680, -2316450, 5322910, -2633360, -2324630, 5319340, -2633360, -2327320, 5318160, -2633360, -2324630, 5319340, -2633360, -2323830, 5312720, -2647310, -2351880, 5355960, -2533710, -2328340, 5354300, -2558680, -2324630, 5319340, -2633360, -2351880, 5355960, -2533710, -2324630, 5319340, -2633360, -2327320, 5318160, -2633360, -2327320, 5318160, -2633360, -2323830, 5312720, -2647310, -2326830, 5295400, -2678960, -2327320, 5318160, -2633360, -2326830, 5295400, -2678960, -2334930, 5314830, -2633360, -2334930, 5314830, -2633360, -2351880, 5355960, -2533710, -2327320, 5318160, -2633360, -2337990, 5313480, -2633360, -2334930, 5314830, -2633360, -2326830, 5295400, -2678960, -2373450, 5370410, -2482830, -2351880, 5355960, -2533710, -2334930, 5314830, -2633360, -2373450, 5370410, -2482830, -2334930, 5314830, -2633360, -2337990, 5313480, -2633360, -2337990, 5313480, -2633360, -2326830, 5295400, -2678960, -2357150, 5240990, -2757760, -2337990, 5313480, -2633360, -2357150, 5240990, -2757760, -2365500, 5301290, -2633360, -2365500, 5301290, -2633360, -2373450, 5370410, -2482830, -2337990, 5313480, -2633360, -2357150, 5240990, -2757760, -2379280, 5295120, -2633360, -2365500, 5301290, -2633360, -2424710, 5407850, -2349330, -2373450, 5370410, -2482830, -2365500, 5301290, -2633360, -2424710, 5407850, -2349330, -2365500, 5301290, -2633360, -2379280, 5295120, -2633360, -2381500, 5294130, -2633360, -2379280, 5295120, -2633360, -2357150, 5240990, -2757760, -2418750, 5375690, -2427450, -2424710, 5407850, -2349330, -2379280, 5295120, -2633360, -2418750, 5375690, -2427450, -2379280, 5295120, -2633360, -2381500, 5294130, -2633360, -2424710, 5407850, -2349330, -2373600, 5397730, -2423150, -2373450, 5370410, -2482830, -2351280, 4863410, -3379700, -2322850, 4831060, -3444690, -2316450, 4810010, -3478070, -3751050, 3802060, -3474660, -3753970, 3850320, -3418280, -3731680, 3852680, -3439820, -4875730, 3857390, -1419440, -4851860, 3856580, -1500550, -4847660, 3837250, -1561990, -4835060, 3818230, -1644900, -4847660, 3837250, -1561990, -4836500, 3838450, -1593170, -4914360, 3849340, -1304140, -4888380, 3862410, -1361470, -4892560, 3844120, -1397530, -3916860, 3394930, -3704170, -3908200, 3463890, -3649430, -3865120, 3465410, -3693300, -5071150, 3501620, -1638500, -5050660, 3550320, -1596720, -5054270, 3503400, -1685820, -3866130, 3515570, -3644840, -3860780, 3556150, -3611220, -3802500, 3567160, -3661500, -2273750, 4753340, -3581900, -2250970, 4816460, -3511740, -2234120, 4785190, -3564500, -5114180, 2590530, -2786150, -5072100, 2572890, -2877300, -5073090, 2571160, -2877110, -5114180, 2590530, -2786150, -5073090, 2571160, -2877110, -5090330, 2575550, -2842750, -5073090, 2571160, -2877110, -5072100, 2572890, -2877300, -5059510, 2567610, -2903880, 4138660, 1228620, 4679210, 4125720, 1209620, 4695460, 4196120, 1219270, 4630560, 4037010, 1195760, 4774900, 4196120, 1219270, 4630560, 4125720, 1209620, 4695460, 4113470, 1250070, 4695610, 4037010, 1195760, 4774900, 4125720, 1209620, 4695460, 4113470, 1250070, 4695610, 4054200, 1230210, 4751690, 4037010, 1195760, 4774900, 4079560, 1245670, 4726050, 4054200, 1230210, 4751690, 4113470, 1250070, 4695610, 4270370, 1049420, 4604390, 4084960, 987947, 4781590, 4128430, 971614, 4747710, 4097870, 1047500, 4757970, 4084960, 987947, 4781590, 4270370, 1049420, 4604390, 4260840, 1112450, 4598460, 4097870, 1047500, 4757970, 4270370, 1049420, 4604390, 4054330, 1078880, 4787960, 4097870, 1047500, 4757970, 4260840, 1112450, 4598460, 4233200, 1145150, 4615810, 4054330, 1078880, 4787960, 4260840, 1112450, 4598460, 4041580, 1102120, 4793410, 4054330, 1078880, 4787960, 4233200, 1145150, 4615810, 4213300, 1209070, 4617710, 4041580, 1102120, 4793410, 4233200, 1145150, 4615810, 4050850, 1163830, 4771090, 4041580, 1102120, 4793410, 4213300, 1209070, 4617710, 4196120, 1219270, 4630560, 4050850, 1163830, 4771090, 4213300, 1209070, 4617710, 4037010, 1195760, 4774900, 4050850, 1163830, 4771090, 4196120, 1219270, 4630560, 4270370, 1049420, 4604390, 4198750, 940133, 4692430, 4274840, 938046, 4624110, 4270370, 1049420, 4604390, 4209950, 966730, 4677060, 4198750, 940133, 4692430, 4270370, 1049420, 4604390, 4194790, 970440, 4689820, 4209950, 966730, 4677060, 4270370, 1049420, 4604390, 4128430, 971614, 4747710, 4194790, 970440, 4689820, 4250840, 915424, 4650500, 4229400, 854824, 4681280, 4279870, 844705, 4637340, 4250840, 915424, 4650500, 4204e3, 904438, 4694720, 4229400, 854824, 4681280, 4198750, 940133, 4692430, 4204e3, 904438, 4694720, 4250840, 915424, 4650500, 4198750, 940133, 4692430, 4250840, 915424, 4650500, 4274840, 938046, 4624110, 4298720, 752756, 4635750, 4246160, 740773, 4685520, 4268300, 724453, 4668030, 4261820, 782351, 4664640, 4246160, 740773, 4685520, 4298720, 752756, 4635750, 4294020, 791408, 4633680, 4261820, 782351, 4664640, 4298720, 752756, 4635750, 4238620, 788987, 4684480, 4261820, 782351, 4664640, 4294020, 791408, 4633680, 4296720, 838980, 4622870, 4238620, 788987, 4684480, 4294020, 791408, 4633680, 4229400, 854824, 4681280, 4238620, 788987, 4684480, 4296720, 838980, 4622870, 4229400, 854824, 4681280, 4296720, 838980, 4622870, 4279870, 844705, 4637340, 4246160, 740773, 4685520, 4254460, 719147, 4681380, 4268300, 724453, 4668030, 4128430, 971614, 4747710, 4144730, 948059, 4738330, 4194790, 970440, 4689820, 4042350, 1232810, 4761040, 4037010, 1195760, 4774900, 4054200, 1230210, 4751690, 4298720, 752756, 4635750, 4268300, 724453, 4668030, 4289920, 716346, 4649550, 3487620, 3543790, 3981450, 3472630, 3472870, 4055830, 3495840, 3490070, 4021220, 3487620, 3543790, 3981450, 3467990, 3504270, 4032890, 3472630, 3472870, 4055830, 3440750, 3530800, 4033080, 3467990, 3504270, 4032890, 3487620, 3543790, 3981450, 3440750, 3530800, 4033080, 3487620, 3543790, 3981450, 3448620, 3538310, 4019840, 3451350, 3591950, 3969950, 3448620, 3538310, 4019840, 3487620, 3543790, 3981450, 3143180, 3695700, 4126510, 3212070, 3746960, 4026690, 3164900, 3714690, 4092950, 3143180, 3695700, 4126510, 3239370, 3755920, 3996560, 3212070, 3746960, 4026690, 3142840, 3663950, 4154800, 3158720, 3650270, 4154800, 3239370, 3755920, 3996560, 3142840, 3663950, 4154800, 3239370, 3755920, 3996560, 3143180, 3695700, 4126510, 3142840, 3663950, 4154800, 3142080, 3628630, 4186030, 3158720, 3650270, 4154800, 3162360, 3647110, 4154800, 3274070, 3747390, 3976380, 3239370, 3755920, 3996560, 3162360, 3647110, 4154800, 3239370, 3755920, 3996560, 3158720, 3650270, 4154800, 3158720, 3650270, 4154800, 3142080, 3628630, 4186030, 3162360, 3647110, 4154800, 3163670, 3645970, 4154800, 3313490, 3762970, 3929050, 3274070, 3747390, 3976380, 3163670, 3645970, 4154800, 3274070, 3747390, 3976380, 3162360, 3647110, 4154800, 3142080, 3628630, 4186030, 3163670, 3645970, 4154800, 3162360, 3647110, 4154800, 3294860, 3774740, 3933390, 3274070, 3747390, 3976380, 3313490, 3762970, 3929050, 3107500, 3755360, 4099770, 3143180, 3695700, 4126510, 3164900, 3714690, 4092950, 3107500, 3755360, 4099770, 3115190, 3723720, 4122570, 3143180, 3695700, 4126510, 3163670, 3645970, 4154800, 3192470, 3620780, 4154800, 3313490, 3762970, 3929050, 3142080, 3628630, 4186030, 3149590, 3570550, 4229810, 3192470, 3620780, 4154800, 3142080, 3628630, 4186030, 3192470, 3620780, 4154800, 3163670, 3645970, 4154800, 3198430, 3615520, 4154800, 3284720, 3693880, 4017180, 3313490, 3762970, 3929050, 3198430, 3615520, 4154800, 3313490, 3762970, 3929050, 3192470, 3620780, 4154800, 3192470, 3620780, 4154800, 3149590, 3570550, 4229810, 3198430, 3615520, 4154800, 3206640, 3608240, 4154800, 3289890, 3661510, 4042340, 3284720, 3693880, 4017180, 3206640, 3608240, 4154800, 3284720, 3693880, 4017180, 3198430, 3615520, 4154800, 3149590, 3570550, 4229810, 3206640, 3608240, 4154800, 3198430, 3615520, 4154800, 3206640, 3608240, 4154800, 3229590, 3587710, 4154800, 3289890, 3661510, 4042340, 3149590, 3570550, 4229810, 3206530, 3559620, 4196330, 3229590, 3587710, 4154800, 3149590, 3570550, 4229810, 3229590, 3587710, 4154800, 3206640, 3608240, 4154800, 3322840, 3501530, 4154800, 3395120, 3575650, 4032240, 3427170, 3612210, 3972490, 3322840, 3501530, 4154800, 3427170, 3612210, 3972490, 3322710, 3501640, 4154800, 3322710, 3501640, 4154800, 3314950, 3493420, 4167820, 3322840, 3501530, 4154800, 3325820, 3498700, 4154800, 3415e3, 3540600, 4046260, 3395120, 3575650, 4032240, 3325820, 3498700, 4154800, 3395120, 3575650, 4032240, 3322840, 3501530, 4154800, 3314950, 3493420, 4167820, 3325820, 3498700, 4154800, 3322840, 3501530, 4154800, 3325820, 3498700, 4154800, 3354900, 3470820, 4154800, 3415e3, 3540600, 4046260, 3314950, 3493420, 4167820, 3344640, 3458960, 4172800, 3354900, 3470820, 4154800, 3314950, 3493420, 4167820, 3354900, 3470820, 4154800, 3325820, 3498700, 4154800, 3356540, 3469230, 4154800, 3394520, 3501880, 4096540, 3415e3, 3540600, 4046260, 3356540, 3469230, 4154800, 3415e3, 3540600, 4046260, 3354900, 3470820, 4154800, 3354900, 3470820, 4154800, 3344640, 3458960, 4172800, 3356540, 3469230, 4154800, 3372280, 3453930, 4154800, 3384730, 3451590, 4146670, 3394520, 3501880, 4096540, 3372280, 3453930, 4154800, 3394520, 3501880, 4096540, 3356540, 3469230, 4154800, 3344640, 3458960, 4172800, 3372280, 3453930, 4154800, 3356540, 3469230, 4154800, 3394520, 3501880, 4096540, 3384730, 3451590, 4146670, 3409580, 3452610, 4125550, 3317290, 3643750, 4036020, 3265570, 3555e3, 4154800, 3287120, 3535080, 4154800, 3253730, 3535100, 4180810, 3265220, 3463280, 4231310, 3287120, 3535080, 4154800, 3253730, 3535100, 4180810, 3287120, 3535080, 4154800, 3265570, 3555e3, 4154800, 3242760, 3575810, 4154800, 3265570, 3555e3, 4154800, 3317290, 3643750, 4036020, 3229690, 3563820, 4175100, 3253730, 3535100, 4180810, 3265570, 3555e3, 4154800, 3229690, 3563820, 4175100, 3265570, 3555e3, 4154800, 3242760, 3575810, 4154800, 3242760, 3575810, 4154800, 3317290, 3643750, 4036020, 3289890, 3661510, 4042340, 3242760, 3575810, 4154800, 3289890, 3661510, 4042340, 3239200, 3579040, 4154800, 3239200, 3579040, 4154800, 3229690, 3563820, 4175100, 3242760, 3575810, 4154800, 3289890, 3661510, 4042340, 3229590, 3587710, 4154800, 3239200, 3579040, 4154800, 3206530, 3559620, 4196330, 3229690, 3563820, 4175100, 3239200, 3579040, 4154800, 3206530, 3559620, 4196330, 3239200, 3579040, 4154800, 3229590, 3587710, 4154800, 3300740, 3495070, 4177630, 3280460, 3445410, 4234090, 3303100, 3437880, 4222670, 3265220, 3463280, 4231310, 3280460, 3445410, 4234090, 3300740, 3495070, 4177630, 3317290, 3643750, 4036020, 3287120, 3535080, 4154800, 3303930, 3519370, 4154800, 3265220, 3463280, 4231310, 3300740, 3495070, 4177630, 3303930, 3519370, 4154800, 3265220, 3463280, 4231310, 3303930, 3519370, 4154800, 3287120, 3535080, 4154800, 3315310, 3508660, 4154800, 3427170, 3612210, 3972490, 3317290, 3643750, 4036020, 3315310, 3508660, 4154800, 3317290, 3643750, 4036020, 3303930, 3519370, 4154800, 3303930, 3519370, 4154800, 3300740, 3495070, 4177630, 3315310, 3508660, 4154800, 3315310, 3508660, 4154800, 3322710, 3501640, 4154800, 3427170, 3612210, 3972490, 3300740, 3495070, 4177630, 3314950, 3493420, 4167820, 3322710, 3501640, 4154800, 3300740, 3495070, 4177630, 3322710, 3501640, 4154800, 3315310, 3508660, 4154800, 3372280, 3453930, 4154800, 3383130, 3443300, 4154800, 3384730, 3451590, 4146670, 3344640, 3458960, 4172800, 3374510, 3400210, 4196810, 3383130, 3443300, 4154800, 3344640, 3458960, 4172800, 3383130, 3443300, 4154800, 3372280, 3453930, 4154800, 3384730, 3451590, 4146670, 3383130, 3443300, 4154800, 3392600, 3433980, 4154800, 3374510, 3400210, 4196810, 3398730, 3420090, 4161200, 3392600, 3433980, 4154800, 3374510, 3400210, 4196810, 3392600, 3433980, 4154800, 3383130, 3443300, 4154800, 3374510, 3400210, 4196810, 3397490, 3394230, 4183180, 3398730, 3420090, 4161200, 3415e3, 3540600, 4046260, 3394520, 3501880, 4096540, 3427630, 3501400, 4069470, 3472630, 3472870, 4055830, 3486580, 3461590, 4053520, 3495840, 3490070, 4021220, 3313490, 3762970, 3929050, 3284720, 3693880, 4017180, 3330030, 3699760, 3974520, 5471920, 3255750, -371247, 5474180, 3255890, -335360, 5487470, 3235940, -310330, 5471920, 3255750, -371247, 5487470, 3235940, -310330, 5484690, 3231450, -394342, 5487470, 3235940, -310330, 5492450, 3231390, -266833, 5484690, 3231450, -394342, 5484690, 3231450, -394342, 5492450, 3231390, -266833, 5503190, 3192180, -451888, 5492450, 3231390, -266833, 5522440, 3180470, -259611, 5503190, 3192180, -451888, 5503190, 3192180, -451888, 5522440, 3180470, -259611, 5520700, 3155790, -491834, 5522440, 3180470, -259611, 5536850, 3149480, -322504, 5520700, 3155790, -491834, 5520700, 3155790, -491834, 5536850, 3149480, -322504, 5542970, 3115660, -497081, 5536850, 3149480, -322504, 5554330, 3113940, -364025, 5542970, 3115660, -497081, 5536850, 3149480, -322504, 5570300, 3090830, -313823, 5554330, 3113940, -364025, 4127490, 410090, 4828990, 3965830, 345151, 4966630, 4094700, 343786, 4861740, 4127490, 410090, 4828990, 3999580, 392654, 4936160, 3965830, 345151, 4966630, 4079300, 413096, 4869240, 3999580, 392654, 4936160, 4127490, 410090, 4828990, 4015680, 433170, 4919770, 3999580, 392654, 4936160, 4079300, 413096, 4869240, 4015680, 433170, 4919770, 4079300, 413096, 4869240, 4074170, 431309, 4871940, 4067490, 255062, 4889780, 3985380, 230840, 4957660, 4034980, 220169, 4918130, 3988910, 282225, 4952200, 3985380, 230840, 4957660, 4067490, 255062, 4889780, 4104230, 307592, 4856170, 3988910, 282225, 4952200, 4067490, 255062, 4889780, 3965830, 345151, 4966630, 3988910, 282225, 4952200, 4104230, 307592, 4856170, 3965830, 345151, 4966630, 4104230, 307592, 4856170, 4094700, 343786, 4861740, 3985380, 230840, 4957660, 4005320, 175827, 4943920, 4035230, 187362, 4919290, 3985380, 230840, 4957660, 4035230, 187362, 4919290, 4034980, 220169, 4918130, 6310200, 208392, 901688, 6338410, 206417, 677891, 6333380, 297755, 690716, 6310200, 208392, 901688, 6333380, 297755, 690716, 6308010, 266777, 901688, 6304680, 263272, 925479, 6244230, 211069, 1278550, 6307460, 208546, 920530, 6307460, 208546, 920530, 6310200, 208392, 901688, 6308010, 266777, 901688, 6307460, 208546, 920530, 6308010, 266777, 901688, 6304680, 263272, 925479, 6333380, 297755, 690716, 6307590, 276483, 901688, 6308010, 266777, 901688, 6236620, 234624, 1310930, 6244230, 211069, 1278550, 6304680, 263272, 925479, 6236620, 234624, 1310930, 6304680, 263272, 925479, 6304080, 273971, 926446, 6304080, 273971, 926446, 6304680, 263272, 925479, 6308010, 266777, 901688, 6304080, 273971, 926446, 6308010, 266777, 901688, 6307590, 276483, 901688, 6333380, 297755, 690716, 6307010, 289359, 901688, 6307590, 276483, 901688, 6228360, 270864, 1342610, 6236620, 234624, 1310930, 6304080, 273971, 926446, 6228360, 270864, 1342610, 6304080, 273971, 926446, 6303250, 288302, 927742, 6303250, 288302, 927742, 6304080, 273971, 926446, 6307590, 276483, 901688, 6303250, 288302, 927742, 6307590, 276483, 901688, 6307010, 289359, 901688, 6306540, 299521, 901688, 6307010, 289359, 901688, 6333380, 297755, 690716, 6301300, 299784, 937255, 6228360, 270864, 1342610, 6303250, 288302, 927742, 6301300, 299784, 937255, 6303250, 288302, 927742, 6302570, 299723, 928775, 6302570, 299723, 928775, 6303250, 288302, 927742, 6307010, 289359, 901688, 6302570, 299723, 928775, 6307010, 289359, 901688, 6306540, 299521, 901688, 6306540, 299521, 901688, 6333380, 297755, 690716, 6311180, 303044, 867620, 6306540, 299521, 901688, 6311180, 303044, 867620, 6306440, 301453, 901688, 6302540, 300181, 928817, 6301300, 299784, 937255, 6302570, 299723, 928775, 6302570, 299723, 928775, 6306540, 299521, 901688, 6306440, 301453, 901688, 6302570, 299723, 928775, 6306440, 301453, 901688, 6302540, 300181, 928817, 6253490, 415040, 1180190, 6242540, 389709, 1244590, 6263e3, 394042, 1136420, 6263e3, 394042, 1136420, 6242540, 389709, 1244590, 6282320, 353474, 1039650, 6234960, 393492, 1280610, 6282320, 353474, 1039650, 6242540, 389709, 1244590, 6234960, 393492, 1280610, 6289600, 319972, 1006190, 6282320, 353474, 1039650, 6234960, 393492, 1280610, 6226490, 309825, 1342880, 6289600, 319972, 1006190, 6289600, 319972, 1006190, 6226490, 309825, 1342880, 6301300, 299784, 937255, 6226490, 309825, 1342880, 6228360, 270864, 1342610, 6301300, 299784, 937255, 6277360, 118098, 1119370, 6261e3, 98307.9, 1208710, 6272050, 84551.1, 1151490, 6257900, 135834, 1221e3, 6261e3, 98307.9, 1208710, 6277360, 118098, 1119370, 6283250, 156309, 1081220, 6257900, 135834, 1221e3, 6277360, 118098, 1119370, 6247880, 157843, 1268420, 6257900, 135834, 1221e3, 6283250, 156309, 1081220, 6292180, 160705, 1027700, 6247880, 157843, 1268420, 6283250, 156309, 1081220, 6244230, 211069, 1278550, 6247880, 157843, 1268420, 6292180, 160705, 1027700, 6244230, 211069, 1278550, 6292180, 160705, 1027700, 6295230, 182932, 1005210, 6310200, 208392, 901688, 6310770, 190399, 901688, 6338410, 206417, 677891, 6244230, 211069, 1278550, 6295230, 182932, 1005210, 6308330, 189170, 918778, 6244230, 211069, 1278550, 6308330, 189170, 918778, 6307460, 208546, 920530, 6307460, 208546, 920530, 6308330, 189170, 918778, 6310770, 190399, 901688, 6307460, 208546, 920530, 6310770, 190399, 901688, 6310200, 208392, 901688, 6311040, 181322, 901688, 6330620, 178926, 753695, 6338410, 206417, 677891, 6311040, 181322, 901688, 6338410, 206417, 677891, 6310770, 190399, 901688, 6308330, 189170, 918778, 6295230, 182932, 1005210, 6308650, 181581, 918093, 6308650, 181581, 918093, 6311040, 181322, 901688, 6310770, 190399, 901688, 6308650, 181581, 918093, 6310770, 190399, 901688, 6308330, 189170, 918778, 6267530, 405900, 1107130, 6263e3, 394042, 1136420, 6282320, 353474, 1039650, 6220430, 236476, 1384950, 6244230, 211069, 1278550, 6236620, 234624, 1310930, 6220430, 236476, 1384950, 6247880, 157843, 1268420, 6244230, 211069, 1278550, 6220430, 236476, 1384950, 6218390, 111159, 1409430, 6247880, 157843, 1268420, 6247880, 157843, 1268420, 6218390, 111159, 1409430, 6257900, 135834, 1221e3, 6257900, 135834, 1221e3, 6218390, 111159, 1409430, 6261e3, 98307.9, 1208710, 6261e3, 98307.9, 1208710, 6177740, 31877.4, 1580620, 6261320, 2601.15, 1211040, 6261e3, 98307.9, 1208710, 6190020, 46448.7, 1531770, 6177740, 31877.4, 1580620, 6206330, 107578, 1461570, 6190020, 46448.7, 1531770, 6261e3, 98307.9, 1208710, 6218390, 111159, 1409430, 6206330, 107578, 1461570, 6261e3, 98307.9, 1208710, 6164300, -427237e-9, 1632210, 6164280, -28646, 1632010, 6170790, 147483e-9, 1607670, 6164300, -427237e-9, 1632210, 6170790, 147483e-9, 1607670, 6177740, 31877.4, 1580620, 6164300, -427237e-9, 1632210, 6177740, 31877.4, 1580620, 6164090, 40332.8, 1632500, 6170790, 138938e-9, 1607670, 6164280, -28646, 1632010, 6254450, -232265e-10, 1245820, 6170790, 138938e-9, 1607670, 6254450, -232265e-10, 1245820, 6261320, 2601.15, 1211040, 6170790, 138938e-9, 1607670, 6261320, 2601.15, 1211040, 6177740, 31877.4, 1580620, 6164280, -28646, 1632010, 6259450, -47928.2, 1219680, 6261230, 562283e-10, 1211480, 6164280, -28646, 1632010, 6261230, 562283e-10, 1211480, 6254450, 420014e-11, 1245820, 6261320, 2601.15, 1211040, 6254450, 420014e-11, 1245820, 6261230, 562283e-10, 1211480, 6164280, -28646, 1632010, 6158600, -55449.5, 1652520, 6259450, -47928.2, 1219680, 6260130, -131498, 1210070, 6170870, -215604, 1592920, 6178720, -236479, 1559420, 6161870, -114695, 1637300, 6170870, -215604, 1592920, 6260130, -131498, 1210070, 6262490, -83246, 1202150, 6161870, -114695, 1637300, 6260130, -131498, 1210070, 6158600, -55449.5, 1652520, 6161870, -114695, 1637300, 6262490, -83246, 1202150, 6259450, -47928.2, 1219680, 6158600, -55449.5, 1652520, 6262490, -83246, 1202150, 6269340, -436245, 1085250, 6188590, -433442, 1476290, 6192660, -463500, 1450010, 6195480, -381406, 1461780, 6188590, -433442, 1476290, 6269340, -436245, 1085250, 6271980, -384918, 1089390, 6195480, -381406, 1461780, 6269340, -436245, 1085250, 6192870, -335796, 1483690, 6195480, -381406, 1461780, 6271980, -384918, 1089390, 6265740, -324415, 1143280, 6192870, -335796, 1483690, 6271980, -384918, 1089390, 6265740, -324415, 1143280, 6186950, -320746, 1511310, 6192870, -335796, 1483690, 6254260, -321250, 1204960, 6186950, -320746, 1511310, 6265740, -324415, 1143280, 6178720, -236479, 1559420, 6186950, -320746, 1511310, 6254260, -321250, 1204960, 6260130, -131498, 1210070, 6178720, -236479, 1559420, 6254260, -321250, 1204960, 6271250, -474868, 1057830, 6208320, -480666, 1376060, 6263400, -523738, 1080850, 6208320, -480666, 1376060, 6255460, -542293, 1116880, 6263400, -523738, 1080850, 6208320, -480666, 1376060, 6227950, -566551, 1249710, 6255460, -542293, 1116880, 6255460, -542293, 1116880, 6227950, -566551, 1249710, 6246730, -590967, 1140610, 6227950, -566551, 1249710, 6234220, -597054, 1203720, 6246730, -590967, 1140610, 6192660, -463500, 1450010, 6208320, -480666, 1376060, 6271250, -474868, 1057830, 6269340, -436245, 1085250, 6192660, -463500, 1450010, 6271250, -474868, 1057830, 6208320, -480666, 1376060, 6220250, -568379, 1286430, 6227950, -566551, 1249710, 6280960, -310212, 1061280, 6265740, -324415, 1143280, 6271980, -384918, 1089390, -163476, 5802810, 2633360, -149241, 5824760, 2585630, -194632, 5820800, 2591470, -163476, 5802810, 2633360, -194632, 5820800, 2591470, -189229, 5802020, 2633360, -189229, 5802020, 2633360, -181423, 5774240, 2693860, -163476, 5802810, 2633360, -158544, 5802940, 2633360, -118370, 5850900, 2527950, -149241, 5824760, 2585630, -158544, 5802940, 2633360, -149241, 5824760, 2585630, -163476, 5802810, 2633360, -181423, 5774240, 2693860, -158544, 5802940, 2633360, -163476, 5802810, 2633360, -158544, 5802940, 2633360, -98841.7, 5804270, 2633360, -118370, 5850900, 2527950, -181423, 5774240, 2693860, -87950.8, 5777120, 2692380, -98841.7, 5804270, 2633360, -181423, 5774240, 2693860, -98841.7, 5804270, 2633360, -158544, 5802940, 2633360, -78752.3, 5804580, 2633360, -50923.8, 5882290, 2456830, -118370, 5850900, 2527950, -78752.3, 5804580, 2633360, -118370, 5850900, 2527950, -98841.7, 5804270, 2633360, -98841.7, 5804270, 2633360, -87950.8, 5777120, 2692380, -78752.3, 5804580, 2633360, -77557.4, 5804590, 2633360, -28223.2, 5923180, 2357610, -50923.8, 5882290, 2456830, -77557.4, 5804590, 2633360, -50923.8, 5882290, 2456830, -78752.3, 5804580, 2633360, -87950.8, 5777120, 2692380, -77557.4, 5804590, 2633360, -78752.3, 5804580, 2633360, -60445.5, 5899740, 2414690, -50923.8, 5882290, 2456830, -28223.2, 5923180, 2357610, -145520, 5882430, 2452740, -118370, 5850900, 2527950, -50923.8, 5882290, 2456830, -174948, 5872140, 2475220, -118370, 5850900, 2527950, -145520, 5882430, 2452740, -189200, 5905840, 2393180, -174948, 5872140, 2475220, -145520, 5882430, 2452740, -190781, 5843630, 2540210, -174948, 5872140, 2475220, -189200, 5905840, 2393180, -209518, 5925080, 2343750, -190781, 5843630, 2540210, -189200, 5905840, 2393180, -218933, 5842500, 2540540, -190781, 5843630, 2540210, -209518, 5925080, 2343750, -218933, 5842500, 2540540, -209518, 5925080, 2343750, -216234, 5945480, 2291250, -238634, 5933200, 2320470, -218933, 5842500, 2540540, -216234, 5945480, 2291250, -246730, 5964920, 2237340, -238634, 5933200, 2320470, -216234, 5945480, 2291250, -77557.4, 5804590, 2633360, 506.059, 5805110, 2633360, -28223.2, 5923180, 2357610, -87950.8, 5777120, 2692380, 7987.51, 5771310, 2706130, 506.059, 5805110, 2633360, -87950.8, 5777120, 2692380, 506.059, 5805110, 2633360, -77557.4, 5804590, 2633360, 9696.22, 5805100, 2633360, 15742.5, 5914840, 2378430, -28223.2, 5923180, 2357610, 9696.22, 5805100, 2633360, -28223.2, 5923180, 2357610, 506.059, 5805110, 2633360, 506.059, 5805110, 2633360, 7987.51, 5771310, 2706130, 9696.22, 5805100, 2633360, 9696.22, 5805100, 2633360, 16423.6, 5805090, 2633360, 15742.5, 5914840, 2378430, 7987.51, 5771310, 2706130, 16774.7, 5737990, 2775590, 16423.6, 5805090, 2633360, 7987.51, 5771310, 2706130, 16423.6, 5805090, 2633360, 9696.22, 5805100, 2633360, 21540, 5805070, 2633360, 30802.1, 5922310, 2359730, 15742.5, 5914840, 2378430, 21540, 5805070, 2633360, 15742.5, 5914840, 2378430, 16423.6, 5805090, 2633360, 16423.6, 5805090, 2633360, 16774.7, 5737990, 2775590, 21540, 5805070, 2633360, 31854, 5805020, 2633360, 60018.6, 5917580, 2370940, 30802.1, 5922310, 2359730, 31854, 5805020, 2633360, 30802.1, 5922310, 2359730, 21540, 5805070, 2633360, 16774.7, 5737990, 2775590, 31854, 5805020, 2633360, 21540, 5805070, 2633360, 115300, 5878200, 2464390, 132036, 5817870, 2601910, 150002, 5844520, 2540900, 124430, 5803780, 2633360, 132036, 5817870, 2601910, 115300, 5878200, 2464390, 124430, 5803780, 2633360, 115300, 5878200, 2464390, 109893, 5804070, 2633360, 107639, 5771790, 2703020, 124430, 5803780, 2633360, 109893, 5804070, 2633360, 109893, 5804070, 2633360, 115300, 5878200, 2464390, 99913.9, 5913330, 2380130, 109893, 5804070, 2633360, 99913.9, 5913330, 2380130, 106034, 5804140, 2633360, 106034, 5804140, 2633360, 107639, 5771790, 2703020, 109893, 5804070, 2633360, 77485.8, 5804590, 2633360, 106034, 5804140, 2633360, 99913.9, 5913330, 2380130, 64556.2, 5735260, 2780500, 107639, 5771790, 2703020, 106034, 5804140, 2633360, 64556.2, 5735260, 2780500, 106034, 5804140, 2633360, 77485.8, 5804590, 2633360, 77485.8, 5804590, 2633360, 99913.9, 5913330, 2380130, 60018.6, 5917580, 2370940, 77485.8, 5804590, 2633360, 60018.6, 5917580, 2370940, 62998.5, 5804770, 2633360, 62998.5, 5804770, 2633360, 64556.2, 5735260, 2780500, 77485.8, 5804590, 2633360, 31854, 5805020, 2633360, 62998.5, 5804770, 2633360, 60018.6, 5917580, 2370940, 16774.7, 5737990, 2775590, 64556.2, 5735260, 2780500, 62998.5, 5804770, 2633360, 16774.7, 5737990, 2775590, 62998.5, 5804770, 2633360, 31854, 5805020, 2633360, 107639, 5771790, 2703020, 143305, 5712670, 2823440, 179552, 5744730, 2755950, 64556.2, 5735260, 2780500, 143305, 5712670, 2823440, 107639, 5771790, 2703020, -275809, 5908340, 2378640, -218933, 5842500, 2540540, -238634, 5933200, 2320470, -275809, 5908340, 2378640, -238634, 5933200, 2320470, -275063, 5937750, 2304850, 191345, 5801960, 2633360, 194117, 5803880, 2628950, 132036, 5817870, 2601910, 191345, 5801960, 2633360, 132036, 5817870, 2601910, 151362, 5803140, 2633360, 151362, 5803140, 2633360, 171129, 5787740, 2665620, 191345, 5801960, 2633360, 124430, 5803780, 2633360, 151362, 5803140, 2633360, 132036, 5817870, 2601910, 107639, 5771790, 2703020, 171129, 5787740, 2665620, 151362, 5803140, 2633360, 107639, 5771790, 2703020, 151362, 5803140, 2633360, 124430, 5803780, 2633360, -216892, 5801060, 2633360, -189229, 5802020, 2633360, -194632, 5820800, 2591470, -239854, 5780130, 2676740, -181423, 5774240, 2693860, -189229, 5802020, 2633360, -239854, 5780130, 2676740, -189229, 5802020, 2633360, -216892, 5801060, 2633360, 4194210, 2015890, 4347190, 4167050, 1993770, 4383120, 4201290, 2003850, 4345930, 4201290, 2003850, 4345930, 4346400, 2045e3, 4182040, 4307210, 2110650, 4189920, 4201290, 2003850, 4345930, 4307210, 2110650, 4189920, 4194210, 2015890, 4347190, 4132010, 2021140, 4403570, 4167050, 1993770, 4383120, 4194210, 2015890, 4347190, 4132010, 2021140, 4403570, 4194210, 2015890, 4347190, 4177340, 2044250, 4350170, 4307210, 2110650, 4189920, 4177340, 2044250, 4350170, 4194210, 2015890, 4347190, 4177100, 2044660, 4350210, 4132010, 2021140, 4403570, 4177340, 2044250, 4350170, 4177100, 2044660, 4350210, 4177340, 2044250, 4350170, 4307210, 2110650, 4189920, 4177100, 2044660, 4350210, 4307210, 2110650, 4189920, 4273850, 2095310, 4231300, 4073640, 2097380, 4422140, 4132010, 2021140, 4403570, 4177100, 2044660, 4350210, 4073640, 2097380, 4422140, 4177100, 2044660, 4350210, 4144690, 2097860, 4355830, 4144690, 2097860, 4355830, 4177100, 2044660, 4350210, 4273850, 2095310, 4231300, 4073640, 2097380, 4422140, 4144690, 2097860, 4355830, 4129450, 2122320, 4358440, 4144690, 2097860, 4355830, 4273850, 2095310, 4231300, 4215120, 2160300, 4257270, 4144690, 2097860, 4355830, 4215120, 2160300, 4257270, 4129450, 2122320, 4358440, 4118620, 2139520, 4360270, 4073640, 2097380, 4422140, 4129450, 2122320, 4358440, 4129450, 2122320, 4358440, 4215120, 2160300, 4257270, 4165720, 2184630, 4293090, 4129450, 2122320, 4358440, 4165720, 2184630, 4293090, 4118620, 2139520, 4360270, 4190990, 2228080, 4246220, 4165720, 2184630, 4293090, 4215120, 2160300, 4257270, 4286240, 1818170, 4344630, 4244390, 1796810, 4393990, 4224060, 1763260, 4426830, 4226970, 1823240, 4399850, 4244390, 1796810, 4393990, 4286240, 1818170, 4344630, 4226970, 1823240, 4399850, 4286240, 1818170, 4344630, 4298170, 1829980, 4327960, 4226970, 1823240, 4399850, 4298170, 1829980, 4327960, 4283190, 1858060, 4330830, 4393620, 1927940, 4188270, 4283190, 1858060, 4330830, 4298170, 1829980, 4327960, 4213080, 1884660, 4387350, 4226970, 1823240, 4399850, 4283190, 1858060, 4330830, 4213080, 1884660, 4387350, 4283190, 1858060, 4330830, 4262090, 1896830, 4334820, 4262090, 1896830, 4334820, 4283190, 1858060, 4330830, 4393620, 1927940, 4188270, 4253230, 1912840, 4336470, 4213080, 1884660, 4387350, 4262090, 1896830, 4334820, 4262090, 1896830, 4334820, 4393620, 1927940, 4188270, 4347870, 1980760, 4211150, 4262090, 1896830, 4334820, 4347870, 1980760, 4211150, 4253230, 1912840, 4336470, 4167050, 1993770, 4383120, 4213080, 1884660, 4387350, 4253230, 1912840, 4336470, 4167050, 1993770, 4383120, 4253230, 1912840, 4336470, 4208450, 1991590, 4344650, 4208450, 1991590, 4344650, 4253230, 1912840, 4336470, 4347870, 1980760, 4211150, 4167050, 1993770, 4383120, 4208450, 1991590, 4344650, 4201290, 2003850, 4345930, 4208450, 1991590, 4344650, 4347870, 1980760, 4211150, 4346400, 2045e3, 4182040, 4208450, 1991590, 4344650, 4346400, 2045e3, 4182040, 4201290, 2003850, 4345930, 4298170, 1829980, 4327960, 4286240, 1818170, 4344630, 4301230, 1824190, 4327370, 4301230, 1824190, 4327370, 4416190, 1870230, 4190680, 4393620, 1927940, 4188270, 4301230, 1824190, 4327370, 4393620, 1927940, 4188270, 4298170, 1829980, 4327960, 4286240, 1818170, 4344630, 4301800, 1823130, 4327260, 4301230, 1824190, 4327370, 4301800, 1823130, 4327260, 4373510, 1845770, 4245550, 4416190, 1870230, 4190680, 4301800, 1823130, 4327260, 4416190, 1870230, 4190680, 4301230, 1824190, 4327370, 4286240, 1818170, 4344630, 4312160, 1803350, 4325240, 4301800, 1823130, 4327260, 4312160, 1803350, 4325240, 4320140, 1798720, 4319250, 4373510, 1845770, 4245550, 4312160, 1803350, 4325240, 4373510, 1845770, 4245550, 4301800, 1823130, 4327260, 4373510, 1845770, 4245550, 4320140, 1798720, 4319250, 4352410, 1806830, 4283550, 4320140, 1798720, 4319250, 4347570, 1795190, 4293290, 4352410, 1806830, 4283550, 4056130, 2207630, 4384660, 4071450, 2162100, 4393080, 4093790, 2178300, 4364420, 4056130, 2207630, 4384660, 4093790, 2178300, 4364420, 4082490, 2195650, 4366290, 4082490, 2195650, 4366290, 4093790, 2178300, 4364420, 4103930, 2185690, 4351270, 4093790, 2178300, 4364420, 4071450, 2162100, 4393080, 4099770, 2169030, 4363430, 4099770, 2169030, 4363430, 4165720, 2184630, 4293090, 4103930, 2185690, 4351270, 4099770, 2169030, 4363430, 4103930, 2185690, 4351270, 4093790, 2178300, 4364420, 4071450, 2162100, 4393080, 4073640, 2097380, 4422140, 4118620, 2139520, 4360270, 4071450, 2162100, 4393080, 4118620, 2139520, 4360270, 4099770, 2169030, 4363430, 4099770, 2169030, 4363430, 4118620, 2139520, 4360270, 4165720, 2184630, 4293090, 4224060, 1763260, 4426830, 4247830, 1751730, 4408740, 4271050, 1769140, 4379460, 4286240, 1818170, 4344630, 4224060, 1763260, 4426830, 4271050, 1769140, 4379460, 4373510, 1845770, 4245550, 4352410, 1806830, 4283550, 4367350, 1798350, 4271980, 1206040, -5690590, 2607200, 1199210, -5679890, 2633360, 1170320, -5685920, 2633360, 1181680, -5651920, 2700170, 1166160, -5685360, 2636400, 1170320, -5685920, 2633360, 1181680, -5651920, 2700170, 1170320, -5685920, 2633360, 1199210, -5679890, 2633360, 1207760, -5678080, 2633360, 1199220, -5679890, 2633360, 1206040, -5690590, 2607200, 1211750, -5647490, 2696130, 1181680, -5651920, 2700170, 1199220, -5679890, 2633360, 1211750, -5647490, 2696130, 1199220, -5679890, 2633360, 1207760, -5678080, 2633360, 1207760, -5678080, 2633360, 1206040, -5690590, 2607200, 1236750, -5710550, 2548910, 1207760, -5678080, 2633360, 1236750, -5710550, 2548910, 1222510, -5674920, 2633360, 1222510, -5674920, 2633360, 1211750, -5647490, 2696130, 1207760, -5678080, 2633360, 1243930, -5670270, 2633360, 1222510, -5674920, 2633360, 1236750, -5710550, 2548910, 1243930, -5670270, 2633360, 1236750, -5710550, 2548910, 1254530, -5677580, 2612640, 1243930, -5670270, 2633360, 1211750, -5647490, 2696130, 1222510, -5674920, 2633360, 1260710, -5703030, 2553960, 1254530, -5677580, 2612640, 1236750, -5710550, 2548910, 1204260, -5579380, 2836670, 1198620, -5567350, 2862410, 1134110, -5579310, 2865370, 1204260, -5579380, 2836670, 1134110, -5579310, 2865370, 1099430, -5609040, 2820810, 1134110, -5579310, 2865370, 1089070, -5592350, 2857460, 1099430, -5609040, 2820810, 1283880, -5561090, 2837670, 1203740, -5561870, 2870830, 1251510, -5571510, 2831720, 1283880, -5561090, 2837670, 1251510, -5571510, 2831720, 1274860, -5598870, 2767030, 1274860, -5598870, 2767030, 1251510, -5571510, 2831720, 1255520, -5596870, 2779800, 1283880, -5561090, 2837670, 1202320, -5556280, 2882160, 1203740, -5561870, 2870830, 4385470, 1512750, 4362520, 4281700, 1474770, 4476350, 4410770, 1493520, 4343730, 4311050, 1494320, 4441790, 4281700, 1474770, 4476350, 4385470, 1512750, 4362520, 4373930, 1524750, 4369880, 4311050, 1494320, 4441790, 4385470, 1512750, 4362520, 4326410, 1540550, 4411170, 4311050, 1494320, 4441790, 4373930, 1524750, 4369880, 4326410, 1540550, 4411170, 4373930, 1524750, 4369880, 4364430, 1541580, 4373450, 4454020, 1495480, 4298980, 4294770, 1384010, 4492670, 4449350, 1417820, 4329820, 4454020, 1495480, 4298980, 4276720, 1435390, 4493760, 4294770, 1384010, 4492670, 4281700, 1474770, 4476350, 4276720, 1435390, 4493760, 4454020, 1495480, 4298980, 4281700, 1474770, 4476350, 4454020, 1495480, 4298980, 4410770, 1493520, 4343730, 4386020, 1277550, 4436070, 4325770, 1237080, 4505680, 4361670, 1230120, 4473080, 4335300, 1269220, 4487670, 4325770, 1237080, 4505680, 4386020, 1277550, 4436070, 4404170, 1300930, 4411380, 4335300, 1269220, 4487670, 4386020, 1277550, 4436070, 4314800, 1280960, 4503950, 4335300, 1269220, 4487670, 4404170, 1300930, 4411380, 4421100, 1344600, 4381460, 4314800, 1280960, 4503950, 4404170, 1300930, 4411380, 4302540, 1315590, 4505680, 4314800, 1280960, 4503950, 4421100, 1344600, 4381460, 4428240, 1379020, 4363630, 4302540, 1315590, 4505680, 4421100, 1344600, 4381460, 4294770, 1384010, 4492670, 4302540, 1315590, 4505680, 4428240, 1379020, 4363630, 4294770, 1384010, 4492670, 4428240, 1379020, 4363630, 4449350, 1417820, 4329820, 4272080, 1501750, 4476570, 4281700, 1474770, 4476350, 4311050, 1494320, 4441790, 3337220, 2068030, 5009760, 3297930, 2024140, 5053220, 3281030, 1995300, 5075500, 3337220, 2068030, 5009760, 3281030, 1995300, 5075500, 3372290, 2020470, 5005710, 3195410, 1949300, 5147e3, 3372290, 2020470, 5005710, 3281030, 1995300, 5075500, 3267220, 2001970, 5081730, 3195410, 1949300, 5147e3, 3281030, 1995300, 5075500, 3195470, 1980610, 5135080, 3195410, 1949300, 5147e3, 3267220, 2001970, 5081730, 3195470, 1980610, 5135080, 3267220, 2001970, 5081730, 3211360, 1985800, 5123230, 3241310, 2049430, 5079420, 3211360, 1985800, 5123230, 3267220, 2001970, 5081730, 3201090, 2031920, 5111640, 3211360, 1985800, 5123230, 3241310, 2049430, 5079420, 3210910, 2060860, 5093980, 3201090, 2031920, 5111640, 3241310, 2049430, 5079420, 3195410, 1949300, 5147e3, 3165580, 1883880, 5189340, 3372290, 2020470, 5005710, 3372290, 2020470, 5005710, 3165580, 1883880, 5189340, 3399660, 2012110, 4990640, 3165580, 1883880, 5189340, 3439690, 2030590, 4955840, 3399660, 2012110, 4990640, 3165580, 1883880, 5189340, 3446450, 2002450, 4962550, 3439690, 2030590, 4955840, 3103760, 1855640, 5236330, 3446450, 2002450, 4962550, 3165580, 1883880, 5189340, 3137440, 1883060, 5206580, 3103760, 1855640, 5236330, 3165580, 1883880, 5189340, 3481190, 1949950, 4959220, 3126240, 1749310, 5259350, 3472270, 1924140, 4975420, 3141810, 1768270, 5243820, 3126240, 1749310, 5259350, 3481190, 1949950, 4959220, 3446450, 2002450, 4962550, 3141810, 1768270, 5243820, 3481190, 1949950, 4959220, 3446450, 2002450, 4962550, 3115960, 1791490, 5251300, 3141810, 1768270, 5243820, 3103760, 1855640, 5236330, 3115960, 1791490, 5251300, 3446450, 2002450, 4962550, 3126240, 1749310, 5259350, 3498120, 1908630, 4963350, 3472270, 1924140, 4975420, 3126240, 1749310, 5259350, 3499490, 1879680, 4973360, 3498120, 1908630, 4963350, 3126240, 1749310, 5259350, 3137430, 1680640, 5274950, 3499490, 1879680, 4973360, 3499490, 1879680, 4973360, 3137430, 1680640, 5274950, 3523440, 1830600, 4974750, 3137430, 1680640, 5274950, 3200080, 1637740, 5250910, 3523440, 1830600, 4974750, 3523440, 1830600, 4974750, 3200080, 1637740, 5250910, 3265190, 1634250, 5212040, 3200080, 1637740, 5250910, 3231130, 1610580, 5240360, 3265190, 1634250, 5212040, 3539640, 1752320, 4991290, 3367190, 1608690, 5155160, 3563790, 1686710, 4996680, 3539640, 1752320, 4991290, 3314540, 1600050, 5191600, 3367190, 1608690, 5155160, 3265190, 1634250, 5212040, 3314540, 1600050, 5191600, 3539640, 1752320, 4991290, 3523440, 1830600, 4974750, 3265190, 1634250, 5212040, 3539640, 1752320, 4991290, 3625190, 1614420, 4976480, 3512130, 1549390, 5076540, 3544650, 1563320, 5049780, 3427980, 1558660, 5130570, 3512130, 1549390, 5076540, 3625190, 1614420, 4976480, 3588030, 1639180, 4995160, 3427980, 1558660, 5130570, 3625190, 1614420, 4976480, 3367190, 1608690, 5155160, 3427980, 1558660, 5130570, 3588030, 1639180, 4995160, 3367190, 1608690, 5155160, 3588030, 1639180, 4995160, 3563790, 1686710, 4996680, 3427980, 1558660, 5130570, 3453230, 1500370, 5131010, 3488470, 1518820, 5101860, 3427980, 1558660, 5130570, 3488470, 1518820, 5101860, 3512130, 1549390, 5076540, 3625190, 1614420, 4976480, 3544650, 1563320, 5049780, 3641640, 1585480, 4973790, 3544650, 1563320, 5049780, 3606480, 1568740, 5004420, 3641640, 1585480, 4973790, 3544650, 1563320, 5049780, 3577400, 1533240, 5035980, 3606480, 1568740, 5004420, 187402, -6097140, 1856650, 180596, -6094240, 1866770, 175532, -6113650, 1803120, 179497, -6047910, 2010940, 175532, -6113650, 1803120, 180596, -6094240, 1866770, 181918, -6077240, 1920880, 179497, -6047910, 2010940, 180596, -6094240, 1866770, 181918, -6077240, 1920880, 180040, -6053030, 1995540, 179497, -6047910, 2010940, 200065, -6052560, 1995050, 180040, -6053030, 1995540, 181918, -6077240, 1920880, 179497, -6047910, 2010940, 159443, -6048940, 2009560, 175532, -6113650, 1803120, 159443, -6048940, 2009560, 155285, -6115290, 1799410, 174055, -6114280, 1801110, 159443, -6048940, 2009560, 174055, -6114280, 1801110, 175532, -6113650, 1803120, 174055, -6114280, 1801110, 155285, -6115290, 1799410, 154784, -6122500, 1774950, 159443, -6048940, 2009560, 138175, -6116160, 1797860, 155285, -6115290, 1799410, 138175, -6116160, 1797860, 135507, -6123940, 1771560, 154784, -6122500, 1774950, 138175, -6116160, 1797860, 154784, -6122500, 1774950, 155285, -6115290, 1799410, 159443, -6048940, 2009560, 122043, -6070660, 1946090, 133502, -6116390, 1797440, 159443, -6048940, 2009560, 133502, -6116390, 1797440, 138175, -6116160, 1797860, 138175, -6116160, 1797860, 133502, -6116390, 1797440, 135507, -6123940, 1771560, 102450, -6117820, 1794640, 90416.4, -6100010, 1854480, 86407.3, -6118500, 1793180, 86407.3, -6118500, 1793180, 82556, -6135500, 1734690, 114519, -6134980, 1734740, 86407.3, -6118500, 1793180, 114519, -6134980, 1734740, 102450, -6117820, 1794640, 90844.2, -6073750, 1938190, 90416.4, -6100010, 1854480, 102450, -6117820, 1794640, 90844.2, -6073750, 1938190, 102450, -6117820, 1794640, 107488, -6117600, 1795080, 114519, -6134980, 1734740, 107488, -6117600, 1795080, 102450, -6117820, 1794640, 102732, -6066990, 1958540, 90844.2, -6073750, 1938190, 107488, -6117600, 1795080, 102732, -6066990, 1958540, 107488, -6117600, 1795080, 111330, -6117430, 1795430, 114519, -6134980, 1734740, 111330, -6117430, 1795430, 107488, -6117600, 1795080, 122043, -6070660, 1946090, 102732, -6066990, 1958540, 111330, -6117430, 1795430, 122043, -6070660, 1946090, 111330, -6117430, 1795430, 116719, -6117180, 1795920, 116719, -6117180, 1795920, 111330, -6117430, 1795430, 114519, -6134980, 1734740, 133502, -6116390, 1797440, 122043, -6070660, 1946090, 116719, -6117180, 1795920, 116719, -6117180, 1795920, 114519, -6134980, 1734740, 135507, -6123940, 1771560, 116719, -6117180, 1795920, 135507, -6123940, 1771560, 133502, -6116390, 1797440, 102732, -6066990, 1958540, 89942.7, -6068760, 1953700, 90844.2, -6073750, 1938190, 200065, -6052560, 1995050, 181918, -6077240, 1920880, 198609, -6062030, 1966460, 191361, -6082120, 1904570, 181918, -6077240, 1920880, 180596, -6094240, 1866770, 3037e3, -5402870, -1500360, 2999580, -5430180, -1477030, 3004330, -5420170, -1503700, 3037e3, -5402870, -1500360, 3004330, -5420170, -1503700, 3029050, -5363220, -1650130, 3037e3, -5402870, -1500360, 3029050, -5363220, -1650130, 3050670, -5392760, -1508920, 3047150, -5376890, -1570960, 3050670, -5392760, -1508920, 3029050, -5363220, -1650130, 3056580, -5348140, -1648350, 3047150, -5376890, -1570960, 3029050, -5363220, -1650130, 3056580, -5348140, -1648350, 3061410, -5359470, -1602230, 3047150, -5376890, -1570960, 2265300, -5799760, -1378080, 2240550, -5800520, -1414590, 2236480, -5759080, -1579560, 2265300, -5799760, -1378080, 2236480, -5759080, -1579560, 2253940, -5752730, -1577880, 2211270, -5597060, -2105700, 2253940, -5752730, -1577880, 2236480, -5759080, -1579560, 2318050, -5816520, -1210580, 2265300, -5799760, -1378080, 2253940, -5752730, -1577880, 2318050, -5816520, -1210580, 2253940, -5752730, -1577880, 2280710, -5742880, -1575310, 2280710, -5742880, -1575310, 2253940, -5752730, -1577880, 2211270, -5597060, -2105700, 2289350, -5739670, -1574470, 2318050, -5816520, -1210580, 2280710, -5742880, -1575310, 2280710, -5742880, -1575310, 2211270, -5597060, -2105700, 2202980, -5513400, -2322400, 2280710, -5742880, -1575310, 2202980, -5513400, -2322400, 2289350, -5739670, -1574470, 2343040, -5813300, -1177730, 2318050, -5816520, -1210580, 2289350, -5739670, -1574470, 2343040, -5813300, -1177730, 2289350, -5739670, -1574470, 2304330, -5734080, -1573020, 2304330, -5734080, -1573020, 2289350, -5739670, -1574470, 2202980, -5513400, -2322400, 2316880, -5729350, -1571810, 2343040, -5813300, -1177730, 2304330, -5734080, -1573020, 2304330, -5734080, -1573020, 2202980, -5513400, -2322400, 2218870, -5444840, -2463760, 2304330, -5734080, -1573020, 2218870, -5444840, -2463760, 2316880, -5729350, -1571810, 2434650, -5784400, -1133650, 2343040, -5813300, -1177730, 2316880, -5729350, -1571810, 2434650, -5784400, -1133650, 2316880, -5729350, -1571810, 2377330, -5706150, -1565970, 2377330, -5706150, -1565970, 2316880, -5729350, -1571810, 2218870, -5444840, -2463760, 2400420, -5697090, -1563730, 2434650, -5784400, -1133650, 2377330, -5706150, -1565970, 2377330, -5706150, -1565970, 2218870, -5444840, -2463760, 2289540, -5421880, -2449770, 2377330, -5706150, -1565970, 2289540, -5421880, -2449770, 2400420, -5697090, -1563730, 2490630, -5768460, -1092770, 2434650, -5784400, -1133650, 2400420, -5697090, -1563730, 2490630, -5768460, -1092770, 2400420, -5697090, -1563730, 2435540, -5683120, -1560310, 2435540, -5683120, -1560310, 2400420, -5697090, -1563730, 2289540, -5421880, -2449770, 2464570, -5671370, -1557490, 2490630, -5768460, -1092770, 2435540, -5683120, -1560310, 2435540, -5683120, -1560310, 2289540, -5421880, -2449770, 2383430, -5422740, -2357190, 2435540, -5683120, -1560310, 2383430, -5422740, -2357190, 2464570, -5671370, -1557490, 2606370, -5704590, -1155920, 2490630, -5768460, -1092770, 2464570, -5671370, -1557490, 2606370, -5704590, -1155920, 2464570, -5671370, -1557490, 2544370, -5638180, -1549680, 2544370, -5638180, -1549680, 2464570, -5671370, -1557490, 2383430, -5422740, -2357190, 2606370, -5704590, -1155920, 2544370, -5638180, -1549680, 2553340, -5634370, -1548800, 2606370, -5704590, -1155920, 2553340, -5634370, -1548800, 2601300, -5682340, -1270440, 2553340, -5634370, -1548800, 2544370, -5638180, -1549680, 2383430, -5422740, -2357190, 2615300, -5691810, -1197700, 2606370, -5704590, -1155920, 2601300, -5682340, -1270440, 3163630, -5099130, -2154e3, 3203080, -5182350, -1881570, 3200090, -5199260, -1839820, 3247380, -5143720, -1911220, 3203080, -5182350, -1881570, 3163630, -5099130, -2154e3, 3247380, -5143720, -1911220, 3163630, -5099130, -2154e3, 3158980, -5088260, -2186070, 3247380, -5143720, -1911220, 3158980, -5088260, -2186070, 3193630, -5100960, -2105160, 3190880, -5077600, -2164580, 3193630, -5100960, -2105160, 3158980, -5088260, -2186070, 3226510, -5099100, -2059350, 3247380, -5143720, -1911220, 3193630, -5100960, -2105160, 3257210, -5112480, -1976710, 3247380, -5143720, -1911220, 3226510, -5099100, -2059350, 3006200, -5216050, -2099180, 3047660, -5312570, -1774190, 3029050, -5363220, -1650130, 3223020, -5206550, -1778570, 3047660, -5312570, -1774190, 3006200, -5216050, -2099180, 3223020, -5206550, -1778570, 3006200, -5216050, -2099180, 3090070, -5166200, -2100660, 3223020, -5206550, -1778570, 3090070, -5166200, -2100660, 3200090, -5199260, -1839820, 3163630, -5099130, -2154e3, 3200090, -5199260, -1839820, 3090070, -5166200, -2100660, 2899180, -5474170, -1514370, 2903590, -5490210, -1446830, 2894800, -5476370, -1514810, 2894800, -5476370, -1514810, 2781100, -5289590, -2221050, 2841100, -5295590, -2129550, 2894800, -5476370, -1514810, 2841100, -5295590, -2129550, 2899180, -5474170, -1514370, 2939660, -5462560, -1478090, 2903590, -5490210, -1446830, 2899180, -5474170, -1514370, 2939660, -5462560, -1478090, 2899180, -5474170, -1514370, 2935570, -5455780, -1510690, 2935570, -5455780, -1510690, 2899180, -5474170, -1514370, 2841100, -5295590, -2129550, 2944030, -5451460, -1509840, 2939660, -5462560, -1478090, 2935570, -5455780, -1510690, 2935570, -5455780, -1510690, 2841100, -5295590, -2129550, 3006200, -5216050, -2099180, 2935570, -5455780, -1510690, 3006200, -5216050, -2099180, 2944030, -5451460, -1509840, 2999580, -5430180, -1477030, 2939660, -5462560, -1478090, 2944030, -5451460, -1509840, 2999580, -5430180, -1477030, 2944030, -5451460, -1509840, 3000640, -5422110, -1504080, 3006200, -5216050, -2099180, 3000640, -5422110, -1504080, 2944030, -5451460, -1509840, 3004330, -5420170, -1503700, 2999580, -5430180, -1477030, 3000640, -5422110, -1504080, 3004330, -5420170, -1503700, 3000640, -5422110, -1504080, 3006200, -5216050, -2099180, 3004330, -5420170, -1503700, 3006200, -5216050, -2099180, 3029050, -5363220, -1650130, 2903590, -5490210, -1446830, 2894690, -5476430, -1514820, 2894800, -5476370, -1514810, 2894690, -5476430, -1514820, 2768950, -5272110, -2276730, 2781100, -5289590, -2221050, 2894690, -5476430, -1514820, 2781100, -5289590, -2221050, 2894800, -5476370, -1514810, 2903590, -5490210, -1446830, 2892180, -5477680, -1515080, 2894690, -5476430, -1514820, 2892180, -5477680, -1515080, 2710200, -5247560, -2399960, 2768950, -5272110, -2276730, 2892180, -5477680, -1515080, 2768950, -5272110, -2276730, 2894690, -5476430, -1514820, 2903590, -5490210, -1446830, 2840880, -5528500, -1425480, 2831520, -5507580, -1521190, 2903590, -5490210, -1446830, 2831520, -5507580, -1521190, 2892180, -5477680, -1515080, 2892180, -5477680, -1515080, 2831520, -5507580, -1521190, 2710200, -5247560, -2399960, 2831520, -5507580, -1521190, 2840880, -5528500, -1425480, 2830010, -5508320, -1521340, 2830010, -5508320, -1521340, 2699480, -5263120, -2378010, 2710200, -5247560, -2399960, 2830010, -5508320, -1521340, 2710200, -5247560, -2399960, 2831520, -5507580, -1521190, 2840880, -5528500, -1425480, 2806990, -5556060, -1385170, 2796800, -5524330, -1524670, 2840880, -5528500, -1425480, 2796800, -5524330, -1524670, 2830010, -5508320, -1521340, 2830010, -5508320, -1521340, 2796800, -5524330, -1524670, 2699480, -5263120, -2378010, 2796800, -5524330, -1524670, 2806990, -5556060, -1385170, 2781320, -5531720, -1526220, 2781320, -5531720, -1526220, 2594960, -5317340, -2373760, 2699480, -5263120, -2378010, 2781320, -5531720, -1526220, 2699480, -5263120, -2378010, 2796800, -5524330, -1524670, 2806990, -5556060, -1385170, 2699580, -5613430, -1367350, 2687680, -5575230, -1535550, 2806990, -5556060, -1385170, 2687680, -5575230, -1535550, 2781320, -5531720, -1526220, 2781320, -5531720, -1526220, 2687680, -5575230, -1535550, 2594960, -5317340, -2373760, 2687680, -5575230, -1535550, 2699580, -5613430, -1367350, 2681470, -5578050, -1536160, 2681470, -5578050, -1536160, 2544010, -5304290, -2456120, 2594960, -5317340, -2373760, 2681470, -5578050, -1536160, 2594960, -5317340, -2373760, 2687680, -5575230, -1535550, 2699580, -5613430, -1367350, 2671910, -5582380, -1537100, 2681470, -5578050, -1536160, 2671910, -5582380, -1537100, 2502360, -5357770, -2382200, 2544010, -5304290, -2456120, 2671910, -5582380, -1537100, 2544010, -5304290, -2456120, 2681470, -5578050, -1536160, 2585610, -5620520, -1545620, 2601300, -5682340, -1270440, 2553340, -5634370, -1548800, 2553340, -5634370, -1548800, 2383430, -5422740, -2357190, 2502360, -5357770, -2382200, 2553340, -5634370, -1548800, 2502360, -5357770, -2382200, 2585610, -5620520, -1545620, 2699580, -5613430, -1367350, 2601300, -5682340, -1270440, 2585610, -5620520, -1545620, 2699580, -5613430, -1367350, 2585610, -5620520, -1545620, 2671910, -5582380, -1537100, 2671910, -5582380, -1537100, 2585610, -5620520, -1545620, 2502360, -5357770, -2382200, 2196200, -5709270, -1799920, 2188890, -5750290, -1674700, 2162340, -5749720, -1710540, 2218980, -5765270, -1581630, 2188890, -5750290, -1674700, 2196200, -5709270, -1799920, 2211270, -5597060, -2105700, 2218980, -5765270, -1581630, 2196200, -5709270, -1799920, 2211270, -5597060, -2105700, 2196200, -5709270, -1799920, 2165460, -5631450, -2061430, 2196200, -5709270, -1799920, 2161430, -5660310, -1985740, 2165460, -5631450, -2061430, 2196200, -5709270, -1799920, 2121010, -5700300, -1914120, 2161430, -5660310, -1985740, 2228160, -5762080, -1580350, 2229170, -5785800, -1490290, 2219030, -5765360, -1581230, 2219030, -5765360, -1581230, 2218980, -5765270, -1581630, 2211270, -5597060, -2105700, 2219030, -5765360, -1581230, 2211270, -5597060, -2105700, 2228160, -5762080, -1580350, 2240550, -5800520, -1414590, 2229170, -5785800, -1490290, 2228160, -5762080, -1580350, 2240550, -5800520, -1414590, 2228160, -5762080, -1580350, 2236480, -5759080, -1579560, 2211270, -5597060, -2105700, 2236480, -5759080, -1579560, 2228160, -5762080, -1580350, 2265300, -5799760, -1378080, 2265520, -5836680, -1212960, 2190210, -5867260, -1203760, 2318050, -5816520, -1210580, 2265520, -5836680, -1212960, 2265300, -5799760, -1378080, 2218980, -5765270, -1581630, 2174680, -5767140, -1635100, 2188890, -5750290, -1674700, 2202980, -5513400, -2322400, 2211270, -5597060, -2105700, 2167260, -5575170, -2206420, 2623050, -5713e3, -1074310, 2490630, -5768460, -1092770, 2606370, -5704590, -1155920, 3483670, -5265560, -901688, 3470670, -5274140, -901688, 3418330, -5181520, -1460520, 3483670, -5265560, -901688, 3418330, -5181520, -1460520, 3426490, -5176370, -1459660, 3265840, -4929160, -2383270, 3426490, -5176370, -1459660, 3418330, -5181520, -1460520, 3514750, -5318150, 21e4, 3492210, -5333140, 206043, 3470670, -5274140, -901688, 3514750, -5318150, 21e4, 3470670, -5274140, -901688, 3483670, -5265560, -901688, 3512660, -5246260, -901688, 3483670, -5265560, -901688, 3426490, -5176370, -1459660, 3512660, -5246260, -901688, 3426490, -5176370, -1459660, 3444770, -5164780, -1457700, 3444770, -5164780, -1457700, 3426490, -5176370, -1459660, 3265840, -4929160, -2383270, 3565220, -5284800, 200955, 3514750, -5318150, 21e4, 3483670, -5265560, -901688, 3565220, -5284800, 200955, 3483670, -5265560, -901688, 3512660, -5246260, -901688, 3512660, -5246260, -901688, 3444770, -5164780, -1457700, 3483570, -5139880, -1453540, 3512660, -5246260, -901688, 3483570, -5139880, -1453540, 3538410, -5228940, -901688, 3444770, -5164780, -1457700, 3265840, -4929160, -2383270, 3317340, -4880960, -2411010, 3444770, -5164780, -1457700, 3317340, -4880960, -2411010, 3483570, -5139880, -1453540, 3538410, -5228940, -901688, 3565220, -5284800, 200955, 3512660, -5246260, -901688, 3543280, -5225640, -901688, 3538410, -5228940, -901688, 3483570, -5139880, -1453540, 3543280, -5225640, -901688, 3483570, -5139880, -1453540, 3486690, -5137860, -1453200, 3317340, -4880960, -2411010, 3486690, -5137860, -1453200, 3483570, -5139880, -1453540, 3573100, -5278560, 223536, 3565220, -5284800, 200955, 3538410, -5228940, -901688, 3573100, -5278560, 223536, 3538410, -5228940, -901688, 3543280, -5225640, -901688, 3560870, -5213670, -901688, 3543280, -5225640, -901688, 3486690, -5137860, -1453200, 3560870, -5213670, -901688, 3486690, -5137860, -1453200, 3497960, -5130540, -1451990, 3497960, -5130540, -1451990, 3486690, -5137860, -1453200, 3317340, -4880960, -2411010, 3603010, -5256120, 267679, 3573100, -5278560, 223536, 3543280, -5225640, -901688, 3603010, -5256120, 267679, 3543280, -5225640, -901688, 3560870, -5213670, -901688, 3603010, -5256120, 267679, 3565670, -5281010, 277494, 3573100, -5278560, 223536, 3315080, -5373300, -901688, 3310200, -5376310, -901688, 3260780, -5277420, -1477180, 3315080, -5373300, -901688, 3260780, -5277420, -1477180, 3262470, -5276430, -1477010, 3223020, -5206550, -1778570, 3262470, -5276430, -1477010, 3260780, -5277420, -1477180, 3338170, -5432390, 161857, 3327960, -5439260, 140207, 3310200, -5376310, -901688, 3338170, -5432390, 161857, 3310200, -5376310, -901688, 3315080, -5373300, -901688, 3328600, -5364930, -901688, 3315080, -5373300, -901688, 3262470, -5276430, -1477010, 3328600, -5364930, -901688, 3262470, -5276430, -1477010, 3267150, -5273670, -1476520, 3267150, -5273670, -1476520, 3262470, -5276430, -1477010, 3223020, -5206550, -1778570, 3368030, -5413780, 166639, 3338170, -5432390, 161857, 3315080, -5373300, -901688, 3368030, -5413780, 166639, 3315080, -5373300, -901688, 3328600, -5364930, -901688, 3328600, -5364930, -901688, 3267150, -5273670, -1476520, 3304800, -5251270, -1472570, 3328600, -5364930, -901688, 3304800, -5251270, -1472570, 3353120, -5349640, -901688, 3267150, -5273670, -1476520, 3223020, -5206550, -1778570, 3247380, -5143720, -1911220, 3267150, -5273670, -1476520, 3247380, -5143720, -1911220, 3304800, -5251270, -1472570, 3353120, -5349640, -901688, 3368030, -5413780, 166639, 3328600, -5364930, -901688, 3373830, -5336610, -901688, 3353120, -5349640, -901688, 3304800, -5251270, -1472570, 3373830, -5336610, -901688, 3304800, -5251270, -1472570, 3313870, -5245830, -1471610, 3313870, -5245830, -1471610, 3304800, -5251270, -1472570, 3247380, -5143720, -1911220, 3410380, -5386570, 186025, 3368030, -5413780, 166639, 3353120, -5349640, -901688, 3410380, -5386570, 186025, 3353120, -5349640, -901688, 3373830, -5336610, -901688, 3373830, -5336610, -901688, 3313870, -5245830, -1471610, 3330680, -5235670, -1469830, 3373830, -5336610, -901688, 3330680, -5235670, -1469830, 3384860, -5329620, -901688, 3313870, -5245830, -1471610, 3247380, -5143720, -1911220, 3257210, -5112480, -1976710, 3313870, -5245830, -1471610, 3257210, -5112480, -1976710, 3330680, -5235670, -1469830, 3384860, -5329620, -901688, 3410380, -5386570, 186025, 3373830, -5336610, -901688, 3399960, -532e4, -901688, 3384860, -5329620, -901688, 3330680, -5235670, -1469830, 3399960, -532e4, -901688, 3330680, -5235670, -1469830, 3337860, -5231310, -1469070, 3337860, -5231310, -1469070, 3330680, -5235670, -1469830, 3257210, -5112480, -1976710, 3440400, -5366340, 215418, 3410380, -5386570, 186025, 3384860, -5329620, -901688, 3440400, -5366340, 215418, 3384860, -5329620, -901688, 3399960, -532e4, -901688, 3399960, -532e4, -901688, 3337860, -5231310, -1469070, 3375850, -5208020, -1465060, 3399960, -532e4, -901688, 3375850, -5208020, -1465060, 3425160, -5303810, -901688, 3337860, -5231310, -1469070, 3257210, -5112480, -1976710, 3226170, -4945440, -2403360, 3337860, -5231310, -1469070, 3226170, -4945440, -2403360, 3375850, -5208020, -1465060, 3425160, -5303810, -901688, 3440400, -5366340, 215418, 3399960, -532e4, -901688, 3454920, -5284470, -901688, 3425160, -5303810, -901688, 3375850, -5208020, -1465060, 3454920, -5284470, -901688, 3375850, -5208020, -1465060, 3394590, -5196380, -1463050, 3394590, -5196380, -1463050, 3375850, -5208020, -1465060, 3226170, -4945440, -2403360, 3492210, -5333140, 206043, 3440400, -5366340, 215418, 3425160, -5303810, -901688, 3492210, -5333140, 206043, 3425160, -5303810, -901688, 3454920, -5284470, -901688, 3454920, -5284470, -901688, 3394590, -5196380, -1463050, 3418330, -5181520, -1460520, 3454920, -5284470, -901688, 3418330, -5181520, -1460520, 3470670, -5274140, -901688, 3394590, -5196380, -1463050, 3226170, -4945440, -2403360, 3265840, -4929160, -2383270, 3394590, -5196380, -1463050, 3265840, -4929160, -2383270, 3418330, -5181520, -1460520, 3470670, -5274140, -901688, 3492210, -5333140, 206043, 3454920, -5284470, -901688, 3226170, -4945440, -2403360, 3173760, -5053670, -2243740, 3138770, -5010850, -2383670, 3226170, -4945440, -2403360, 3190880, -5077600, -2164580, 3173760, -5053670, -2243740, 3226170, -4945440, -2403360, 3226510, -5099100, -2059350, 3190880, -5077600, -2164580, 3226170, -4945440, -2403360, 3257210, -5112480, -1976710, 3226510, -5099100, -2059350, 3373950, -4666090, -2733930, 3360200, -4698490, -2695350, 3328170, -4687580, -2753070, 3373950, -4666090, -2733930, 3387380, -4712900, -2635910, 3360200, -4698490, -2695350, 3388060, -4713850, -2633360, 3387380, -4712900, -2635910, 3373950, -4666090, -2733930, 3388060, -4713850, -2633360, 3373950, -4666090, -2733930, 3392700, -4710510, -2633360, 3392700, -4710510, -2633360, 3402040, -4733220, -2580410, 3388060, -4713850, -2633360, 3401620, -4704070, -2633360, 3392700, -4710510, -2633360, 3373950, -4666090, -2733930, 3696010, -5118750, -901688, 3633680, -5039590, -1437240, 3642260, -5033660, -1436290, 3696010, -5118750, -901688, 3642260, -5033660, -1436290, 3701820, -5114550, -901688, 3633680, -5039590, -1437240, 3402040, -4733220, -2580410, 3392700, -4710510, -2633360, 3633680, -5039590, -1437240, 3392700, -4710510, -2633360, 3401620, -4704070, -2633360, 3633680, -5039590, -1437240, 3401620, -4704070, -2633360, 3642270, -5033650, -1436290, 3738530, -5162320, 232769, 3696010, -5118750, -901688, 3701820, -5114550, -901688, 3401620, -4704070, -2633360, 3373950, -4666090, -2733930, 3398160, -4613920, -2791490, 3401620, -4704070, -2633360, 3398160, -4613920, -2791490, 3440450, -4675750, -2633360, 3701820, -5114550, -901688, 3642260, -5033660, -1436290, 3666340, -5016910, -1433640, 3701820, -5114550, -901688, 3666340, -5016910, -1433640, 3718150, -5102690, -901688, 3642260, -5033660, -1436290, 3401620, -4704070, -2633360, 3440450, -4675750, -2633360, 3642260, -5033660, -1436290, 3440450, -4675750, -2633360, 3666340, -5016910, -1433640, 3718150, -5102690, -901688, 3738530, -5162320, 232769, 3701820, -5114550, -901688, 3606420, -4548960, -2633360, 3596680, -4556670, -2633360, 3457870, -4366660, -3097e3, 3606420, -4548960, -2633360, 3457870, -4366660, -3097e3, 3461280, -4364230, -3096630, 3372780, -4251770, -3339500, 3461280, -4364230, -3096630, 3457870, -4366660, -3097e3, 3919130, -495e4, -901688, 3884480, -4977240, -901688, 3833470, -4895860, -1415e3, 3919130, -495e4, -901688, 3833470, -4895860, -1415e3, 3861190, -4874940, -1411870, 3861190, -4874940, -1411870, 3833470, -4895860, -1415e3, 3596680, -4556670, -2633360, 3861190, -4874940, -1411870, 3596680, -4556670, -2633360, 3606420, -4548960, -2633360, 3949580, -4993200, 385206, 3946380, -4989430, 459177, 3909360, -5025110, 380570, 3884480, -4977240, -901688, 3919130, -495e4, -901688, 3949580, -4993200, 385206, 3884480, -4977240, -901688, 3949580, -4993200, 385206, 3909360, -5025110, 380570, 3884480, -4977240, -901688, 3909360, -5025110, 380570, 3898660, -5035070, 358194, 3611850, -4544650, -2633360, 3606420, -4548960, -2633360, 3461280, -4364230, -3096630, 3611850, -4544650, -2633360, 3461280, -4364230, -3096630, 3463190, -4362860, -3096410, 3463190, -4362860, -3096410, 3461280, -4364230, -3096630, 3372780, -4251770, -3339500, 3938410, -4934680, -901688, 3919130, -495e4, -901688, 3861190, -4874940, -1411870, 3938410, -4934680, -901688, 3861190, -4874940, -1411870, 3876660, -4863160, -1410120, 3876660, -4863160, -1410120, 3861190, -4874940, -1411870, 3606420, -4548960, -2633360, 3876660, -4863160, -1410120, 3606420, -4548960, -2633360, 3611850, -4544650, -2633360, 3975750, -4965580, 464389, 3946380, -4989430, 459177, 3949580, -4993200, 385206, 3975750, -4965580, 464389, 3949580, -4993200, 385206, 3978510, -4969920, 388559, 3978510, -4969920, 388559, 3949580, -4993200, 385206, 3919130, -495e4, -901688, 3978510, -4969920, 388559, 3919130, -495e4, -901688, 3938410, -4934680, -901688, 3611850, -4544650, -2633360, 3463190, -4362860, -3096410, 3528510, -4315460, -3089130, 3611850, -4544650, -2633360, 3528510, -4315460, -3089130, 3668180, -4499300, -2633360, 3463190, -4362860, -3096410, 3372780, -4251770, -3339500, 3466640, -4234940, -3264420, 3463190, -4362860, -3096410, 3466640, -4234940, -3264420, 3528510, -4315460, -3089130, 3938410, -4934680, -901688, 3876660, -4863160, -1410120, 3913040, -4835150, -1405960, 3938410, -4934680, -901688, 3913040, -4835150, -1405960, 3964840, -4913470, -901688, 3876660, -4863160, -1410120, 3611850, -4544650, -2633360, 3668180, -4499300, -2633360, 3876660, -4863160, -1410120, 3668180, -4499300, -2633360, 3913040, -4835150, -1405960, 3979980, -4968730, 388730, 3975750, -4965580, 464389, 3978510, -4969920, 388559, 3978510, -4969920, 388559, 3938410, -4934680, -901688, 3964840, -4913470, -901688, 3978510, -4969920, 388559, 3964840, -4913470, -901688, 3979980, -4968730, 388730, 3671650, -4496470, -2633360, 3668180, -4499300, -2633360, 3528510, -4315460, -3089130, 3671650, -4496470, -2633360, 3528510, -4315460, -3089130, 3529490, -4314740, -3089020, 3466640, -4234940, -3264420, 3529490, -4314740, -3089020, 3528510, -4315460, -3089130, 3978240, -4902630, -901688, 3964840, -4913470, -901688, 3913040, -4835150, -1405960, 3978240, -4902630, -901688, 3913040, -4835150, -1405960, 3923710, -4826850, -1404740, 3923710, -4826850, -1404740, 3913040, -4835150, -1405960, 3668180, -4499300, -2633360, 3923710, -4826850, -1404740, 3668180, -4499300, -2633360, 3671650, -4496470, -2633360, 3999770, -4951630, 403373, 3975750, -4965580, 464389, 3979980, -4968730, 388730, 3999770, -4951630, 403373, 3979980, -4968730, 388730, 4000360, -4952150, 391103, 4000360, -4952150, 391103, 3979980, -4968730, 388730, 3964840, -4913470, -901688, 4000360, -4952150, 391103, 3964840, -4913470, -901688, 3978240, -4902630, -901688, 3677050, -4492060, -2633360, 3671650, -4496470, -2633360, 3529490, -4314740, -3089020, 3677050, -4492060, -2633360, 3529490, -4314740, -3089020, 3531020, -4313610, -3088850, 3466640, -4234940, -3264420, 3531020, -4313610, -3088850, 3529490, -4314740, -3089020, 3999060, -4885650, -901688, 3978240, -4902630, -901688, 3923710, -4826850, -1404740, 3999060, -4885650, -901688, 3923710, -4826850, -1404740, 3940330, -4813850, -1402850, 3940330, -4813850, -1402850, 3923710, -4826850, -1404740, 3671650, -4496470, -2633360, 3940330, -4813850, -1402850, 3671650, -4496470, -2633360, 3677050, -4492060, -2633360, 4001280, -4951390, 391210, 3999770, -4951630, 403373, 4000360, -4952150, 391103, 3978240, -4902630, -901688, 3999060, -4885650, -901688, 4039820, -4935570, 24656.2, 3978240, -4902630, -901688, 4039820, -4935570, 24656.2, 4001280, -4951390, 391210, 3978240, -4902630, -901688, 4001280, -4951390, 391210, 4000360, -4952150, 391103, 4003240, -4949790, 391438, 3999770, -4951630, 403373, 4001280, -4951390, 391210, 4003240, -4949790, 391438, 4001280, -4951390, 391210, 4039820, -4935570, 24656.2, 4003240, -4949790, 391438, 4039820, -4935570, 24656.2, 4054010, -4919460, 210226, 4103620, -4881340, 115675, 4054010, -4919460, 210226, 4039820, -4935570, 24656.2, 4103620, -4881340, 115675, 4100120, -4881850, 191981, 4054010, -4919460, 210226, 3310810, -4467920, -3113130, 3373090, -4583300, -2870660, 3290070, -4481640, -3115380, 3290070, -4481640, -3115380, 3196850, -4366020, -3364870, 3216550, -4301160, -3428590, 3290070, -4481640, -3115380, 3216550, -4301160, -3428590, 3310810, -4467920, -3113130, 3398160, -4613920, -2791490, 3373090, -4583300, -2870660, 3310810, -4467920, -3113130, 3398160, -4613920, -2791490, 3310810, -4467920, -3113130, 3314070, -4465740, -3112790, 3216550, -4301160, -3428590, 3314070, -4465740, -3112790, 3310810, -4467920, -3113130, 3314070, -4465740, -3112790, 3328460, -4456130, -3111220, 3470080, -4653800, -2633360, 3314070, -4465740, -3112790, 3470080, -4653800, -2633360, 3442880, -4673960, -2633360, 3314070, -4465740, -3112790, 3442880, -4673960, -2633360, 3398160, -4613920, -2791490, 3216550, -4301160, -3428590, 3328460, -4456130, -3111220, 3314070, -4465740, -3112790, 3748230, -5080640, -901688, 3688200, -5001560, -1431240, 3705120, -4989580, -1429360, 3748230, -5080640, -901688, 3705120, -4989580, -1429360, 3759810, -5072070, -901688, 3688200, -5001560, -1431240, 3442880, -4673960, -2633360, 3470080, -4653800, -2633360, 3688200, -5001560, -1431240, 3470080, -4653800, -2633360, 3705120, -4989580, -1429360, 3759810, -5072070, -901688, 3785830, -5126500, 258110, 3748230, -5080640, -901688, 3472630, -4651890, -2633360, 3470080, -4653800, -2633360, 3328460, -4456130, -3111220, 3472630, -4651890, -2633360, 3328460, -4456130, -3111220, 3329490, -4455440, -3111110, 3216550, -4301160, -3428590, 3329490, -4455440, -3111110, 3328460, -4456130, -3111220, 3768160, -5065880, -901688, 3759810, -5072070, -901688, 3705120, -4989580, -1429360, 3768160, -5065880, -901688, 3705120, -4989580, -1429360, 3711800, -4984820, -1428620, 3711800, -4984820, -1428620, 3705120, -4989580, -1429360, 3470080, -4653800, -2633360, 3711800, -4984820, -1428620, 3470080, -4653800, -2633360, 3472630, -4651890, -2633360, 3798730, -5118440, 227004, 3785830, -5126500, 258110, 3759810, -5072070, -901688, 3798730, -5118440, 227004, 3759810, -5072070, -901688, 3768160, -5065880, -901688, 3481760, -4645070, -2633360, 3472630, -4651890, -2633360, 3329490, -4455440, -3111110, 3481760, -4645070, -2633360, 3329490, -4455440, -3111110, 3333200, -4452940, -3110700, 3333200, -4452940, -3110700, 3329490, -4455440, -3111110, 3216550, -4301160, -3428590, 3797930, -5043590, -901688, 3768160, -5065880, -901688, 3711800, -4984820, -1428620, 3797930, -5043590, -901688, 3711800, -4984820, -1428620, 3735710, -4967700, -1425970, 3735710, -4967700, -1425970, 3711800, -4984820, -1428620, 3472630, -4651890, -2633360, 3735710, -4967700, -1425970, 3472630, -4651890, -2633360, 3481760, -4645070, -2633360, 3841190, -5086290, 234902, 3798730, -5118440, 227004, 3768160, -5065880, -901688, 3841190, -5086290, 234902, 3768160, -5065880, -901688, 3797930, -5043590, -901688, 3481760, -4645070, -2633360, 3333200, -4452940, -3110700, 3369160, -4428570, -3106780, 3481760, -4645070, -2633360, 3369160, -4428570, -3106780, 3512360, -4621970, -2633360, 3333200, -4452940, -3110700, 3216550, -4301160, -3428590, 3236640, -4250560, -3472220, 3333200, -4452940, -3110700, 3236640, -4250560, -3472220, 3369160, -4428570, -3106780, 3797930, -5043590, -901688, 3735710, -4967700, -1425970, 3754580, -4954060, -1423860, 3797930, -5043590, -901688, 3754580, -4954060, -1423860, 3810790, -5033890, -901688, 3735710, -4967700, -1425970, 3481760, -4645070, -2633360, 3512360, -4621970, -2633360, 3735710, -4967700, -1425970, 3512360, -4621970, -2633360, 3754580, -4954060, -1423860, 3810790, -5033890, -901688, 3841190, -5086290, 234902, 3797930, -5043590, -901688, 3236640, -4250560, -3472220, 3216550, -4301160, -3428590, 3166470, -4259570, -3525120, 3216550, -4301160, -3428590, 3166390, -4302730, -3472730, 3166470, -4259570, -3525120, 3373090, -4583300, -2870660, 3289160, -4609650, -2924990, 3252070, -4506430, -3119490, 3373090, -4583300, -2870660, 3252070, -4506430, -3119490, 3290070, -4481640, -3115380, 3290070, -4481640, -3115380, 3252070, -4506430, -3119490, 3196850, -4366020, -3364870, 3252070, -4506430, -3119490, 3289160, -4609650, -2924990, 3223630, -4524700, -3122530, 3223630, -4524700, -3122530, 3155480, -4435680, -3312770, 3196850, -4366020, -3364870, 3223630, -4524700, -3122530, 3196850, -4366020, -3364870, 3252070, -4506430, -3119490, 3289160, -4609650, -2924990, 3222930, -4630680, -2964940, 3194080, -4543420, -3125700, 3289160, -4609650, -2924990, 3194080, -4543420, -3125700, 3223630, -4524700, -3122530, 3223630, -4524700, -3122530, 3194080, -4543420, -3125700, 3155480, -4435680, -3312770, 3194080, -4543420, -3125700, 3222930, -4630680, -2964940, 3151130, -4570160, -3130270, 3151130, -4570160, -3130270, 3096080, -4521960, -3252e3, 3155480, -4435680, -3312770, 3151130, -4570160, -3130270, 3155480, -4435680, -3312770, 3194080, -4543420, -3125700, 3222930, -4630680, -2964940, 3133480, -4581e3, -3132140, 3151130, -4570160, -3130270, 3133480, -4581e3, -3132140, 3065750, -4540580, -3254780, 3096080, -4521960, -3252e3, 3133480, -4581e3, -3132140, 3096080, -4521960, -3252e3, 3151130, -4570160, -3130270, 3222930, -4630680, -2964940, 3102720, -4650740, -3059620, 3088780, -4608020, -3136860, 3222930, -4630680, -2964940, 3088780, -4608020, -3136860, 3133480, -4581e3, -3132140, 3133480, -4581e3, -3132140, 3088780, -4608020, -3136860, 3065750, -4540580, -3254780, 3088780, -4608020, -3136860, 3102720, -4650740, -3059620, 3039590, -4637110, -3142010, 3039590, -4637110, -3142010, 3009530, -4630020, -3180900, 3065750, -4540580, -3254780, 3039590, -4637110, -3142010, 3065750, -4540580, -3254780, 3088780, -4608020, -3136860, 3102720, -4650740, -3059620, 3005600, -4656800, -3145560, 3039590, -4637110, -3142010, 3005600, -4656800, -3145560, 2953700, -4658800, -3191120, 3009530, -4630020, -3180900, 3005600, -4656800, -3145560, 3009530, -4630020, -3180900, 3039590, -4637110, -3142010, 3398160, -4613920, -2791490, 3441870, -4674700, -2633360, 3440450, -4675750, -2633360, 3735730, -5089840, -901688, 3718150, -5102690, -901688, 3666340, -5016910, -1433640, 3735730, -5089840, -901688, 3666340, -5016910, -1433640, 3679100, -5007970, -1432240, 3679100, -5007970, -1432240, 3666340, -5016910, -1433640, 3440450, -4675750, -2633360, 3679100, -5007970, -1432240, 3440450, -4675750, -2633360, 3441870, -4674700, -2633360, 3765670, -5141090, 262728, 3738530, -5162320, 232769, 3718150, -5102690, -901688, 3765670, -5141090, 262728, 3718150, -5102690, -901688, 3735730, -5089840, -901688, 3442880, -4673960, -2633360, 3441870, -4674700, -2633360, 3398160, -4613920, -2791490, 3748230, -5080640, -901688, 3735730, -5089840, -901688, 3679100, -5007970, -1432240, 3748230, -5080640, -901688, 3679100, -5007970, -1432240, 3688200, -5001560, -1431240, 3688200, -5001560, -1431240, 3679100, -5007970, -1432240, 3441870, -4674700, -2633360, 3688200, -5001560, -1431240, 3441870, -4674700, -2633360, 3442880, -4673960, -2633360, 3785830, -5126500, 258110, 3765670, -5141090, 262728, 3735730, -5089840, -901688, 3785830, -5126500, 258110, 3735730, -5089840, -901688, 3748230, -5080640, -901688, 3696010, -5118750, -901688, 3672410, -5135710, -901688, 3617450, -5050740, -1439020, 3696010, -5118750, -901688, 3617450, -5050740, -1439020, 3633680, -5039590, -1437240, 3633680, -5039590, -1437240, 3617450, -5050740, -1439020, 3402040, -4733220, -2580410, 3738530, -5162320, 232769, 3698560, -5189940, 255563, 3672410, -5135710, -901688, 3738530, -5162320, 232769, 3672410, -5135710, -901688, 3696010, -5118750, -901688, 3659520, -5144900, -901688, 3598500, -5063670, -1441080, 3617450, -5050740, -1439020, 3659520, -5144900, -901688, 3617450, -5050740, -1439020, 3672410, -5135710, -901688, 3598500, -5063670, -1441080, 3376960, -4761140, -2562040, 3402040, -4733220, -2580410, 3598500, -5063670, -1441080, 3402040, -4733220, -2580410, 3617450, -5050740, -1439020, 3672410, -5135710, -901688, 3698560, -5189940, 255563, 3659520, -5144900, -901688, 3646100, -5154420, -901688, 3578720, -5077050, -1443240, 3598500, -5063670, -1441080, 3646100, -5154420, -901688, 3598500, -5063670, -1441080, 3659520, -5144900, -901688, 3578720, -5077050, -1443240, 3341560, -4777190, -2578420, 3376960, -4761140, -2562040, 3578720, -5077050, -1443240, 3376960, -4761140, -2562040, 3598500, -5063670, -1441080, 3698560, -5189940, 255563, 3646100, -5154420, -901688, 3659520, -5144900, -901688, 3646100, -5154420, -901688, 3615080, -5176220, -901688, 3557500, -5091280, -1445540, 3646100, -5154420, -901688, 3557500, -5091280, -1445540, 3578720, -5077050, -1443240, 3578720, -5077050, -1443240, 3557500, -5091280, -1445540, 3341560, -4777190, -2578420, 3698560, -5189940, 255563, 3645930, -5225850, 278973, 3615080, -5176220, -901688, 3698560, -5189940, 255563, 3615080, -5176220, -901688, 3646100, -5154420, -901688, 3601460, -5185710, -901688, 3537510, -5104570, -1447720, 3557500, -5091280, -1445540, 3601460, -5185710, -901688, 3557500, -5091280, -1445540, 3615080, -5176220, -901688, 3537510, -5104570, -1447720, 3311540, -4800480, -2573920, 3341560, -4777190, -2578420, 3537510, -5104570, -1447720, 3341560, -4777190, -2578420, 3557500, -5091280, -1445540, 3615080, -5176220, -901688, 3645930, -5225850, 278973, 3601460, -5185710, -901688, 3596950, -5188840, -901688, 3530890, -5108950, -1448430, 3537510, -5104570, -1447720, 3596950, -5188840, -901688, 3537510, -5104570, -1447720, 3601460, -5185710, -901688, 3530890, -5108950, -1448430, 3311470, -4821390, -2534910, 3311540, -4800480, -2573920, 3530890, -5108950, -1448430, 3311540, -4800480, -2573920, 3537510, -5104570, -1447720, 3645930, -5225850, 278973, 3596950, -5188840, -901688, 3601460, -5185710, -901688, 3596950, -5188840, -901688, 3571680, -5206270, -901688, 3513910, -5120120, -1450270, 3596950, -5188840, -901688, 3513910, -5120120, -1450270, 3530890, -5108950, -1448430, 3530890, -5108950, -1448430, 3513910, -5120120, -1450270, 3311470, -4821390, -2534910, 3645930, -5225850, 278973, 3603010, -5256120, 267679, 3571680, -5206270, -901688, 3645930, -5225850, 278973, 3571680, -5206270, -901688, 3596950, -5188840, -901688, 3568170, -5208670, -901688, 3508750, -5123500, -1450820, 3513910, -5120120, -1450270, 3568170, -5208670, -901688, 3513910, -5120120, -1450270, 3571680, -5206270, -901688, 3508750, -5123500, -1450820, 3326130, -4859640, -2441570, 3311470, -4821390, -2534910, 3508750, -5123500, -1450820, 3311470, -4821390, -2534910, 3513910, -5120120, -1450270, 3571680, -5206270, -901688, 3603010, -5256120, 267679, 3568170, -5208670, -901688, 3560870, -5213670, -901688, 3497960, -5130540, -1451990, 3508750, -5123500, -1450820, 3560870, -5213670, -901688, 3508750, -5123500, -1450820, 3568170, -5208670, -901688, 3497960, -5130540, -1451990, 3317340, -4880960, -2411010, 3326130, -4859640, -2441570, 3497960, -5130540, -1451990, 3326130, -4859640, -2441570, 3508750, -5123500, -1450820, 3603010, -5256120, 267679, 3560870, -5213670, -901688, 3568170, -5208670, -901688, 3223020, -5206550, -1778570, 3200090, -5199260, -1839820, 3203080, -5182350, -1881570, 3247380, -5143720, -1911220, 3223020, -5206550, -1778570, 3203080, -5182350, -1881570, 3149160, -5472200, -901688, 3087100, -5375840, -1495220, 3241460, -5288740, -1479210, 3149160, -5472200, -901688, 3241460, -5288740, -1479210, 3253690, -5410690, -901688, 3087100, -5375840, -1495220, 3047660, -5312570, -1774190, 3223020, -5206550, -1778570, 3087100, -5375840, -1495220, 3223020, -5206550, -1778570, 3241460, -5288740, -1479210, 3188150, -5515860, 301734, 3187860, -5515870, 304543, 3187900, -5516e3, 301707, 3187900, -5516e3, 301707, 3149160, -5472200, -901688, 3253690, -5410690, -901688, 3187900, -5516e3, 301707, 3253690, -5410690, -901688, 3188150, -5515860, 301734, 3262370, -5405470, -901688, 3253690, -5410690, -901688, 3241460, -5288740, -1479210, 3262370, -5405470, -901688, 3241460, -5288740, -1479210, 3244410, -5287020, -1478900, 3223020, -5206550, -1778570, 3244410, -5287020, -1478900, 3241460, -5288740, -1479210, 3189120, -5515290, 301835, 3187860, -5515870, 304543, 3188150, -5515860, 301734, 3253690, -5410690, -901688, 3262370, -5405470, -901688, 3213710, -5503680, 248689, 3253690, -5410690, -901688, 3213710, -5503680, 248689, 3189120, -5515290, 301835, 3253690, -5410690, -901688, 3189120, -5515290, 301835, 3188150, -5515860, 301734, 3263880, -5404560, -901688, 3262370, -5405470, -901688, 3244410, -5287020, -1478900, 3263880, -5404560, -901688, 3244410, -5287020, -1478900, 3244910, -5286720, -1478850, 3223020, -5206550, -1778570, 3244910, -5286720, -1478850, 3244410, -5287020, -1478900, 3221580, -5501160, 197553, 3213710, -5503680, 248689, 3262370, -5405470, -901688, 3221580, -5501160, 197553, 3262370, -5405470, -901688, 3263880, -5404560, -901688, 3288990, -5389310, -901688, 3263880, -5404560, -901688, 3244910, -5286720, -1478850, 3288990, -5389310, -901688, 3244910, -5286720, -1478850, 3253490, -5281700, -1477950, 3223020, -5206550, -1778570, 3253490, -5281700, -1477950, 3244910, -5286720, -1478850, 3281170, -5467460, 145691, 3221580, -5501160, 197553, 3263880, -5404560, -901688, 3281170, -5467460, 145691, 3263880, -5404560, -901688, 3288990, -5389310, -901688, 3310200, -5376310, -901688, 3288990, -5389310, -901688, 3253490, -5281700, -1477950, 3310200, -5376310, -901688, 3253490, -5281700, -1477950, 3260780, -5277420, -1477180, 3223020, -5206550, -1778570, 3260780, -5277420, -1477180, 3253490, -5281700, -1477950, 3327960, -5439260, 140207, 3281170, -5467460, 145691, 3288990, -5389310, -901688, 3327960, -5439260, 140207, 3288990, -5389310, -901688, 3310200, -5376310, -901688, 3225840, -5484700, 437400, 3201960, -5494330, 488649, 3200540, -5502480, 398528, 3201960, -5494330, 488649, 3187860, -5515870, 304543, 3200540, -5502480, 398528, 3201960, -5494330, 488649, 3168300, -5512300, 505347, 3187860, -5515870, 304543, 3143450, -5475470, -901688, 3085270, -5376840, -1495400, 3087100, -5375840, -1495220, 3143450, -5475470, -901688, 3087100, -5375840, -1495220, 3149160, -5472200, -901688, 3087100, -5375840, -1495220, 3085270, -5376840, -1495400, 3047660, -5312570, -1774190, 3168300, -5512300, 505347, 3174410, -5523860, 300298, 3187900, -5516e3, 301707, 3168300, -5512300, 505347, 3187900, -5516e3, 301707, 3187860, -5515870, 304543, 3174410, -5523860, 300298, 3143450, -5475470, -901688, 3149160, -5472200, -901688, 3174410, -5523860, 300298, 3149160, -5472200, -901688, 3187900, -5516e3, 301707, 3143450, -5475470, -901688, 3139710, -5477620, -901688, 3084070, -5377490, -1495530, 3143450, -5475470, -901688, 3084070, -5377490, -1495530, 3085270, -5376840, -1495400, 3085270, -5376840, -1495400, 3084070, -5377490, -1495530, 3047660, -5312570, -1774190, 3168300, -5512300, 505347, 3155270, -5512470, 579112, 3165560, -5528980, 299375, 3168300, -5512300, 505347, 3165560, -5528980, 299375, 3174410, -5523860, 300298, 3174410, -5523860, 300298, 3165560, -5528980, 299375, 3139710, -5477620, -901688, 3174410, -5523860, 300298, 3139710, -5477620, -901688, 3143450, -5475470, -901688, 3134040, -5480860, -901688, 3076140, -5381810, -1496350, 3084070, -5377490, -1495530, 3134040, -5480860, -901688, 3084070, -5377490, -1495530, 3139710, -5477620, -901688, 3076140, -5381810, -1496350, 3056580, -5348140, -1648350, 3047660, -5312570, -1774190, 3076140, -5381810, -1496350, 3047660, -5312570, -1774190, 3084070, -5377490, -1495530, 3165560, -5528980, 299375, 3155270, -5512470, 579112, 3164480, -5529610, 299262, 3164480, -5529610, 299262, 3134040, -5480860, -901688, 3139710, -5477620, -901688, 3164480, -5529610, 299262, 3139710, -5477620, -901688, 3165560, -5528980, 299375, 3133140, -5481380, -901688, 3074880, -5382490, -1496480, 3076140, -5381810, -1496350, 3133140, -5481380, -901688, 3076140, -5381810, -1496350, 3134040, -5480860, -901688, 3074880, -5382490, -1496480, 3061410, -5359470, -1602230, 3056580, -5348140, -1648350, 3074880, -5382490, -1496480, 3056580, -5348140, -1648350, 3076140, -5381810, -1496350, 3155270, -5512470, 579112, 3164310, -5529700, 299244, 3164480, -5529610, 299262, 3164310, -5529700, 299244, 3133140, -5481380, -901688, 3134040, -5480860, -901688, 3164310, -5529700, 299244, 3134040, -5480860, -901688, 3164480, -5529610, 299262, 3764240, -4250920, -2895570, 3770180, -4282600, -2841e3, 3716010, -4224120, -2994700, 3834710, -4358240, -2633360, 3716010, -4224120, -2994700, 3770180, -4282600, -2841e3, 3834710, -4358240, -2633360, 3770180, -4282600, -2841e3, 3835990, -4357120, -2633360, 4172630, -4738280, -901688, 4113800, -4672550, -1382630, 4114510, -4671950, -1382540, 4172630, -4738280, -901688, 4114510, -4671950, -1382540, 4173080, -4737880, -901688, 4113800, -4672550, -1382630, 3834710, -4358240, -2633360, 3835990, -4357120, -2633360, 4113800, -4672550, -1382630, 3835990, -4357120, -2633360, 4114510, -4671950, -1382540, 4216180, -4785790, -26039, 4172630, -4738280, -901688, 4173080, -4737880, -901688, 3835990, -4357120, -2633360, 3770180, -4282600, -2841e3, 3805290, -4300420, -2766810, 3835990, -4357120, -2633360, 3805290, -4300420, -2766810, 3846430, -4347900, -2633360, 4173080, -4737880, -901688, 4114510, -4671950, -1382540, 4120300, -4667040, -1381860, 4173080, -4737880, -901688, 4120300, -4667040, -1381860, 4176790, -4734610, -901688, 4114510, -4671950, -1382540, 3835990, -4357120, -2633360, 3846430, -4347900, -2633360, 4114510, -4671950, -1382540, 3846430, -4347900, -2633360, 4120300, -4667040, -1381860, 4176790, -4734610, -901688, 4216180, -4785790, -26039, 4173080, -4737880, -901688, 3805290, -4300420, -2766810, 3846560, -4347790, -2633360, 3846430, -4347900, -2633360, 4178640, -4732980, -901688, 4176790, -4734610, -901688, 4120300, -4667040, -1381860, 4178640, -4732980, -901688, 4120300, -4667040, -1381860, 4121700, -4665860, -1381700, 4121700, -4665860, -1381700, 4120300, -4667040, -1381860, 3846430, -4347900, -2633360, 4121700, -4665860, -1381700, 3846430, -4347900, -2633360, 3846560, -4347790, -2633360, 4218250, -4782060, -136860, 4216180, -4785790, -26039, 4176790, -4734610, -901688, 4218250, -4782060, -136860, 4176790, -4734610, -901688, 4178640, -4732980, -901688, 3849600, -4345100, -2633360, 3846560, -4347790, -2633360, 3805290, -4300420, -2766810, 4222490, -4693900, -901688, 4178640, -4732980, -901688, 4121700, -4665860, -1381700, 4222490, -4693900, -901688, 4121700, -4665860, -1381700, 4154850, -4637550, -1377760, 4154850, -4637550, -1377760, 4121700, -4665860, -1381700, 3846560, -4347790, -2633360, 4154850, -4637550, -1377760, 3846560, -4347790, -2633360, 3849600, -4345100, -2633360, 4282040, -4726580, -64310.9, 4218250, -4782060, -136860, 4178640, -4732980, -901688, 4282040, -4726580, -64310.9, 4178640, -4732980, -901688, 4222490, -4693900, -901688, 4935380, -3937530, -901688, 4878520, -3901260, -1284410, 4893380, -3883310, -1282310, 4935380, -3937530, -901688, 4893380, -3883310, -1282310, 4943600, -3927200, -901688, 4878520, -3901260, -1284410, 4851580, -3883220, -1431620, 4868860, -3862320, -1429510, 4878520, -3901260, -1284410, 4868860, -3862320, -1429510, 4893380, -3883310, -1282310, 4943600, -3927200, -901688, 4981220, -3962300, -408918, 4935380, -3937530, -901688, 4927260, -3947690, -901688, 4863760, -3918960, -1286490, 4878520, -3901260, -1284410, 4927260, -3947690, -901688, 4878520, -3901260, -1284410, 4935380, -3937530, -901688, 4863760, -3918960, -1286490, 4817890, -3894950, -1510790, 4851580, -3883220, -1431620, 4863760, -3918960, -1286490, 4851580, -3883220, -1431620, 4878520, -3901260, -1284410, 4981220, -3962300, -408918, 4927260, -3947690, -901688, 4935380, -3937530, -901688, 4926010, -3949250, -901688, 4861490, -3921670, -1286820, 4863760, -3918960, -1286490, 4926010, -3949250, -901688, 4863760, -3918960, -1286490, 4927260, -3947690, -901688, 4861490, -3921670, -1286820, 4725440, -3848640, -1874880, 4817890, -3894950, -1510790, 4861490, -3921670, -1286820, 4817890, -3894950, -1510790, 4863760, -3918960, -1286490, 4981220, -3962300, -408918, 4926010, -3949250, -901688, 4927260, -3947690, -901688, 4781680, -3855890, -1711290, 4817890, -3894950, -1510790, 4725440, -3848640, -1874880, 5132080, -3677490, -901688, 5110810, -3663980, -1062030, 5152720, -3625180, -990769, 5132080, -3677490, -901688, 5152720, -3625180, -990769, 5157410, -3641870, -901688, 5157410, -3641870, -901688, 5165420, -3697780, -568651, 5132080, -3677490, -901688, 5152720, -3625180, -990769, 5162150, -3635150, -901688, 5157410, -3641870, -901688, 5186070, -3663170, -603384, 5165420, -3697780, -568651, 5157410, -3641870, -901688, 5186070, -3663170, -603384, 5157410, -3641870, -901688, 5162150, -3635150, -901688, 5169020, -3625370, -901688, 5162150, -3635150, -901688, 5152720, -3625180, -990769, 5195400, -3623820, -743388, 5186070, -3663170, -603384, 5162150, -3635150, -901688, 5195400, -3623820, -743388, 5162150, -3635150, -901688, 5169020, -3625370, -901688, 5176130, -3615220, -901688, 5169020, -3625370, -901688, 5152720, -3625180, -990769, 5195400, -3623820, -743388, 5169020, -3625370, -901688, 5176130, -3615220, -901688, 5195400, -3623820, -743388, 5176130, -3615220, -901688, 5199140, -3604080, -809794, 5132080, -3677490, -901688, 5114270, -3702210, -901688, 5110810, -3663980, -1062030, 5165420, -3697780, -568651, 5109980, -3774690, -564235, 5114270, -3702210, -901688, 5165420, -3697780, -568651, 5114270, -3702210, -901688, 5132080, -3677490, -901688, 5058150, -3778530, -901688, 4997080, -3771930, -1213430, 5110810, -3663980, -1062030, 5058150, -3778530, -901688, 5110810, -3663980, -1062030, 5114270, -3702210, -901688, 5114270, -3702210, -901688, 5109980, -3774690, -564235, 5058150, -3778530, -901688, 5058150, -3778530, -901688, 5033810, -3810880, -901688, 4997080, -3771930, -1213430, 5109980, -3774690, -564235, 5060960, -3844720, -532457, 5033810, -3810880, -901688, 5109980, -3774690, -564235, 5033810, -3810880, -901688, 5058150, -3778530, -901688, 4967860, -3791190, -1271620, 4997080, -3771930, -1213430, 5033810, -3810880, -901688, 4967860, -3791190, -1271620, 5033810, -3810880, -901688, 5013390, -3837710, -901688, 4967860, -3791190, -1271620, 5013390, -3837710, -901688, 4947510, -3816720, -1274570, 4967860, -3791190, -1271620, 4947510, -3816720, -1274570, 4934920, -3811890, -1335920, 5033810, -3810880, -901688, 5060960, -3844720, -532457, 5013390, -3837710, -901688, 4994540, -3862210, -901688, 4908120, -3865360, -1280210, 4947510, -3816720, -1274570, 4994540, -3862210, -901688, 4947510, -3816720, -1274570, 5013390, -3837710, -901688, 4908120, -3865360, -1280210, 4868860, -3862320, -1429510, 4934920, -3811890, -1335920, 4908120, -3865360, -1280210, 4934920, -3811890, -1335920, 4947510, -3816720, -1274570, 5060960, -3844720, -532457, 4994540, -3862210, -901688, 5013390, -3837710, -901688, 4924400, -3951260, -901688, 4858540, -3925190, -1287230, 4861490, -3921670, -1286820, 4924400, -3951260, -901688, 4861490, -3921670, -1286820, 4926010, -3949250, -901688, 4858540, -3925190, -1287230, 4701280, -3843470, -1944450, 4725440, -3848640, -1874880, 4858540, -3925190, -1287230, 4725440, -3848640, -1874880, 4861490, -3921670, -1286820, 4981220, -3962300, -408918, 4924400, -3951260, -901688, 4926010, -3949250, -901688, 4918140, -3959050, -901688, 4847060, -3938830, -1288840, 4858540, -3925190, -1287230, 4918140, -3959050, -901688, 4858540, -3925190, -1287230, 4924400, -3951260, -901688, 4847060, -3938830, -1288840, 4669550, -3860730, -1985970, 4701280, -3843470, -1944450, 4847060, -3938830, -1288840, 4701280, -3843470, -1944450, 4858540, -3925190, -1287230, 4981220, -3962300, -408918, 4918140, -3959050, -901688, 4924400, -3951260, -901688, 4916610, -3960940, -901688, 4844270, -3942130, -1289230, 4847060, -3938830, -1288840, 4916610, -3960940, -901688, 4847060, -3938830, -1288840, 4918140, -3959050, -901688, 4844270, -3942130, -1289230, 4620680, -3844460, -2125940, 4669550, -3860730, -1985970, 4844270, -3942130, -1289230, 4669550, -3860730, -1985970, 4847060, -3938830, -1288840, 4981220, -3962300, -408918, 4916610, -3960940, -901688, 4918140, -3959050, -901688, 4916610, -3960940, -901688, 4842940, -4050690, -901688, 4792890, -4002120, -1296370, 4916610, -3960940, -901688, 4792890, -4002120, -1296370, 4844270, -3942130, -1289230, 4844270, -3942130, -1289230, 4792890, -4002120, -1296370, 4620680, -3844460, -2125940, 4981220, -3962300, -408918, 4881360, -4092850, -317555, 4842940, -4050690, -901688, 4981220, -3962300, -408918, 4842940, -4050690, -901688, 4916610, -3960940, -901688, 4821410, -4076280, -901688, 4756070, -4044170, -1301420, 4792890, -4002120, -1296370, 4821410, -4076280, -901688, 4792890, -4002120, -1296370, 4842940, -4050690, -901688, 4756070, -4044170, -1301420, 4514050, -3892950, -2261520, 4620680, -3844460, -2125940, 4756070, -4044170, -1301420, 4620680, -3844460, -2125940, 4792890, -4002120, -1296370, 4842940, -4050690, -901688, 4881360, -4092850, -317555, 4821410, -4076280, -901688, 4818940, -4079200, -901688, 4751820, -4048980, -1301990, 4756070, -4044170, -1301420, 4818940, -4079200, -901688, 4756070, -4044170, -1301420, 4821410, -4076280, -901688, 4751820, -4048980, -1301990, 4470930, -3878960, -2367970, 4514050, -3892950, -2261520, 4751820, -4048980, -1301990, 4514050, -3892950, -2261520, 4756070, -4044170, -1301420, 4881360, -4092850, -317555, 4818940, -4079200, -901688, 4821410, -4076280, -901688, 4818940, -4079200, -901688, 4741290, -4169200, -901688, 4694420, -4112910, -1309750, 4818940, -4079200, -901688, 4694420, -4112910, -1309750, 4751820, -4048980, -1301990, 4751820, -4048980, -1301990, 4694420, -4112910, -1309750, 4470930, -3878960, -2367970, 4881360, -4092850, -317555, 4772830, -4218590, -321859, 4741290, -4169200, -901688, 4881360, -4092850, -317555, 4741290, -4169200, -901688, 4818940, -4079200, -901688, 4725070, -4187580, -901688, 4666370, -4143520, -1313510, 4694420, -4112910, -1309750, 4725070, -4187580, -901688, 4694420, -4112910, -1309750, 4741290, -4169200, -901688, 4666370, -4143520, -1313510, 4402190, -3929680, -2412420, 4470930, -3878960, -2367970, 4666370, -4143520, -1313510, 4470930, -3878960, -2367970, 4694420, -4112910, -1309750, 4741290, -4169200, -901688, 4772830, -4218590, -321859, 4725070, -4187580, -901688, 4720740, -4192460, -901688, 4658820, -4151680, -1314500, 4666370, -4143520, -1313510, 4720740, -4192460, -901688, 4666370, -4143520, -1313510, 4725070, -4187580, -901688, 4658820, -4151680, -1314500, 4367080, -3930520, -2473670, 4402190, -3929680, -2412420, 4658820, -4151680, -1314500, 4402190, -3929680, -2412420, 4666370, -4143520, -1313510, 4772830, -4218590, -321859, 4720740, -4192460, -901688, 4725070, -4187580, -901688, 4495540, -4433080, -901688, 4437940, -4378270, -1343090, 4494880, -4322060, -1335860, 4495540, -4433080, -901688, 4494880, -4322060, -1335860, 4528350, -4399560, -901688, 4437940, -4378270, -1343090, 4168160, -4117230, -2512560, 4291840, -4012680, -2473430, 4437940, -4378270, -1343090, 4291840, -4012680, -2473430, 4494880, -4322060, -1335860, 4528350, -4399560, -901688, 4537860, -4472060, -297482, 4495540, -4433080, -901688, 4593240, -4331770, -901688, 4528350, -4399560, -901688, 4494880, -4322060, -1335860, 4593240, -4331770, -901688, 4494880, -4322060, -1335860, 4542410, -4273990, -1329760, 4291840, -4012680, -2473430, 4542410, -4273990, -1329760, 4494880, -4322060, -1335860, 4628770, -4380090, -263436, 4537860, -4472060, -297482, 4528350, -4399560, -901688, 4628770, -4380090, -263436, 4528350, -4399560, -901688, 4593240, -4331770, -901688, 4699790, -4215930, -901688, 4593240, -4331770, -901688, 4542410, -4273990, -1329760, 4699790, -4215930, -901688, 4542410, -4273990, -1329760, 4622050, -4191040, -1319370, 4622050, -4191040, -1319370, 4542410, -4273990, -1329760, 4291840, -4012680, -2473430, 4772830, -4218590, -321859, 4628770, -4380090, -263436, 4593240, -4331770, -901688, 4772830, -4218590, -321859, 4593240, -4331770, -901688, 4699790, -4215930, -901688, 4699790, -4215930, -901688, 4622050, -4191040, -1319370, 4658820, -4151680, -1314500, 4699790, -4215930, -901688, 4658820, -4151680, -1314500, 4720740, -4192460, -901688, 4622050, -4191040, -1319370, 4291840, -4012680, -2473430, 4367080, -3930520, -2473670, 4622050, -4191040, -1319370, 4367080, -3930520, -2473670, 4658820, -4151680, -1314500, 4772830, -4218590, -321859, 4699790, -4215930, -901688, 4720740, -4192460, -901688, 4552480, -4460860, -236326, 4515800, -4500960, -171562, 4537860, -4472060, -297482, 4495540, -4433080, -901688, 4477860, -4450940, -901688, 4424920, -4390930, -1344720, 4495540, -4433080, -901688, 4424920, -4390930, -1344720, 4437940, -4378270, -1343090, 4437940, -4378270, -1343090, 4424920, -4390930, -1344720, 4168160, -4117230, -2512560, 4537860, -4472060, -297482, 4515800, -4500960, -171562, 4477860, -4450940, -901688, 4537860, -4472060, -297482, 4477860, -4450940, -901688, 4495540, -4433080, -901688, 4461400, -4467440, -901688, 4398110, -4416750, -1348080, 4424920, -4390930, -1344720, 4461400, -4467440, -901688, 4424920, -4390930, -1344720, 4477860, -4450940, -901688, 4398110, -4416750, -1348080, 4103390, -4154140, -2557710, 4168160, -4117230, -2512560, 4398110, -4416750, -1348080, 4168160, -4117230, -2512560, 4424920, -4390930, -1344720, 4477860, -4450940, -901688, 4515800, -4500960, -171562, 4461400, -4467440, -901688, 4435770, -4492890, -901688, 4355970, -4456720, -1353340, 4398110, -4416750, -1348080, 4435770, -4492890, -901688, 4398110, -4416750, -1348080, 4461400, -4467440, -901688, 4355970, -4456720, -1353340, 4012360, -4224030, -2587290, 4103390, -4154140, -2557710, 4355970, -4456720, -1353340, 4103390, -4154140, -2557710, 4398110, -4416750, -1348080, 4515800, -4500960, -171562, 4435770, -4492890, -901688, 4461400, -4467440, -901688, 4435770, -4492890, -901688, 4343070, -4582560, -901688, 4286920, -4520600, -1361830, 4435770, -4492890, -901688, 4286920, -4520600, -1361830, 4355970, -4456720, -1353340, 4355970, -4456720, -1353340, 4286920, -4520600, -1361830, 4012360, -4224030, -2587290, 4515800, -4500960, -171562, 4384450, -4631020, -104049, 4343070, -4582560, -901688, 4515800, -4500960, -171562, 4343070, -4582560, -901688, 4435770, -4492890, -901688, 3849600, -4345100, -2633360, 3805290, -4300420, -2766810, 3900130, -4278530, -2667540, 3849600, -4345100, -2633360, 3900130, -4278530, -2667540, 3910550, -4290320, -2633360, 4222490, -4693900, -901688, 4154850, -4637550, -1377760, 4188030, -4608800, -1373800, 4222490, -4693900, -901688, 4188030, -4608800, -1373800, 4243460, -4674950, -901688, 4154850, -4637550, -1377760, 3849600, -4345100, -2633360, 3910550, -4290320, -2633360, 4154850, -4637550, -1377760, 3910550, -4290320, -2633360, 4188030, -4608800, -1373800, 4243460, -4674950, -901688, 4282040, -4726580, -64310.9, 4222490, -4693900, -901688, 3911880, -4289110, -2633360, 3910550, -4290320, -2633360, 3900130, -4278530, -2667540, 4314440, -4609530, -901688, 4243460, -4674950, -901688, 4188030, -4608800, -1373800, 4314440, -4609530, -901688, 4188030, -4608800, -1373800, 4241090, -4561950, -1367400, 4241090, -4561950, -1367400, 4188030, -4608800, -1373800, 3910550, -4290320, -2633360, 4241090, -4561950, -1367400, 3910550, -4290320, -2633360, 3911880, -4289110, -2633360, 4384450, -4631020, -104049, 4282040, -4726580, -64310.9, 4243460, -4674950, -901688, 4384450, -4631020, -104049, 4243460, -4674950, -901688, 4314440, -4609530, -901688, 3948180, -4255720, -2633360, 3911880, -4289110, -2633360, 3900130, -4278530, -2667540, 4314440, -4609530, -901688, 4241090, -4561950, -1367400, 4286920, -4520600, -1361830, 4314440, -4609530, -901688, 4286920, -4520600, -1361830, 4343070, -4582560, -901688, 4241090, -4561950, -1367400, 3911880, -4289110, -2633360, 3948180, -4255720, -2633360, 4241090, -4561950, -1367400, 3948180, -4255720, -2633360, 4012360, -4224030, -2587290, 4241090, -4561950, -1367400, 4012360, -4224030, -2587290, 4286920, -4520600, -1361830, 4343070, -4582560, -901688, 4384450, -4631020, -104049, 4314440, -4609530, -901688, 3819980, -4371160, -2633360, 3682320, -4219410, -3042260, 3716010, -4224120, -2994700, 3819980, -4371160, -2633360, 3716010, -4224120, -2994700, 3834710, -4358240, -2633360, 4167400, -4742880, -901688, 4105620, -4679450, -1383600, 4113800, -4672550, -1382630, 4167400, -4742880, -901688, 4113800, -4672550, -1382630, 4172630, -4738280, -901688, 4105620, -4679450, -1383600, 3819980, -4371160, -2633360, 3834710, -4358240, -2633360, 4105620, -4679450, -1383600, 3834710, -4358240, -2633360, 4113800, -4672550, -1382630, 4216180, -4785790, -26039, 4167400, -4742880, -901688, 4172630, -4738280, -901688, 3636390, -4233920, -3076920, 3682320, -4219410, -3042260, 3819980, -4371160, -2633360, 3636390, -4233920, -3076920, 3819980, -4371160, -2633360, 3775410, -4409720, -2633360, 3636390, -4233920, -3076920, 3775410, -4409720, -2633360, 3617870, -4248220, -3079030, 3636390, -4233920, -3076920, 3617870, -4248220, -3079030, 3611440, -4241530, -3095640, 4151630, -4756690, -901688, 4080880, -4700180, -1386520, 4105620, -4679450, -1383600, 4151630, -4756690, -901688, 4105620, -4679450, -1383600, 4167400, -4742880, -901688, 4080880, -4700180, -1386520, 3775410, -4409720, -2633360, 3819980, -4371160, -2633360, 4080880, -4700180, -1386520, 3819980, -4371160, -2633360, 4105620, -4679450, -1383600, 4216180, -4785790, -26039, 4151630, -4756690, -901688, 4167400, -4742880, -901688, 3775410, -4409720, -2633360, 3753460, -4428420, -2633360, 3617070, -4248840, -3079120, 3775410, -4409720, -2633360, 3617070, -4248840, -3079120, 3617870, -4248220, -3079030, 3617870, -4248220, -3079030, 3617070, -4248840, -3079120, 3611440, -4241530, -3095640, 4151630, -4756690, -901688, 4044340, -4848240, -901688, 3996280, -4769420, -1396390, 4151630, -4756690, -901688, 3996280, -4769420, -1396390, 4080880, -4700180, -1386520, 4080880, -4700180, -1386520, 3996280, -4769420, -1396390, 3753460, -4428420, -2633360, 4080880, -4700180, -1386520, 3753460, -4428420, -2633360, 3775410, -4409720, -2633360, 4216180, -4785790, -26039, 4066590, -4913600, -8673.94, 4044340, -4848240, -901688, 4216180, -4785790, -26039, 4044340, -4848240, -901688, 4151630, -4756690, -901688, 3682130, -4487900, -2633360, 3532470, -4312540, -3088680, 3617070, -4248840, -3079120, 3682130, -4487900, -2633360, 3617070, -4248840, -3079120, 3753460, -4428420, -2633360, 3532470, -4312540, -3088680, 3466640, -4234940, -3264420, 3611440, -4241530, -3095640, 3532470, -4312540, -3088680, 3611440, -4241530, -3095640, 3617070, -4248840, -3079120, 4018600, -4869600, -901688, 3955970, -4801540, -1401040, 3996280, -4769420, -1396390, 4018600, -4869600, -901688, 3996280, -4769420, -1396390, 4044340, -4848240, -901688, 3955970, -4801540, -1401040, 3682130, -4487900, -2633360, 3753460, -4428420, -2633360, 3955970, -4801540, -1401040, 3753460, -4428420, -2633360, 3996280, -4769420, -1396390, 4044340, -4848240, -901688, 4066590, -4913600, -8673.94, 4018600, -4869600, -901688, 3682130, -4487900, -2633360, 3677050, -4492060, -2633360, 3531020, -4313610, -3088850, 3682130, -4487900, -2633360, 3531020, -4313610, -3088850, 3532470, -4312540, -3088680, 3532470, -4312540, -3088680, 3531020, -4313610, -3088850, 3466640, -4234940, -3264420, 4018600, -4869600, -901688, 3999060, -4885650, -901688, 3940330, -4813850, -1402850, 4018600, -4869600, -901688, 3940330, -4813850, -1402850, 3955970, -4801540, -1401040, 3955970, -4801540, -1401040, 3940330, -4813850, -1402850, 3677050, -4492060, -2633360, 3955970, -4801540, -1401040, 3677050, -4492060, -2633360, 3682130, -4487900, -2633360, 4066590, -4913600, -8673.94, 4039820, -4935570, 24656.2, 3999060, -4885650, -901688, 4066590, -4913600, -8673.94, 3999060, -4885650, -901688, 4018600, -4869600, -901688, 3519890, -4616240, -2633360, 3372500, -4426290, -3106410, 3405620, -4403440, -3102780, 3519890, -4616240, -2633360, 3405620, -4403440, -3102780, 3548170, -4594540, -2633360, 3372500, -4426290, -3106410, 3236640, -4250560, -3472220, 3305270, -4269750, -3383480, 3372500, -4426290, -3106410, 3305270, -4269750, -3383480, 3405620, -4403440, -3102780, 3834490, -5015850, -901688, 3773730, -4940110, -1421720, 3791320, -4927200, -1419750, 3834490, -5015850, -901688, 3791320, -4927200, -1419750, 3846640, -5006540, -901688, 3773730, -4940110, -1421720, 3519890, -4616240, -2633360, 3548170, -4594540, -2633360, 3773730, -4940110, -1421720, 3548170, -4594540, -2633360, 3791320, -4927200, -1419750, 3846640, -5006540, -901688, 3874100, -5059130, 276870, 3834490, -5015850, -901688, 3553620, -4590320, -2633360, 3548170, -4594540, -2633360, 3405620, -4403440, -3102780, 3553620, -4590320, -2633360, 3405620, -4403440, -3102780, 3407700, -4401980, -3102550, 3407700, -4401980, -3102550, 3405620, -4403440, -3102780, 3305270, -4269750, -3383480, 3865190, -4992230, -901688, 3846640, -5006540, -901688, 3791320, -4927200, -1419750, 3865190, -4992230, -901688, 3791320, -4927200, -1419750, 3806200, -4916200, -1418070, 3806200, -4916200, -1418070, 3791320, -4927200, -1419750, 3548170, -4594540, -2633360, 3806200, -4916200, -1418070, 3548170, -4594540, -2633360, 3553620, -4590320, -2633360, 3898660, -5035070, 358194, 3874100, -5059130, 276870, 3846640, -5006540, -901688, 3898660, -5035070, 358194, 3846640, -5006540, -901688, 3865190, -4992230, -901688, 3553620, -4590320, -2633360, 3407700, -4401980, -3102550, 3457870, -4366660, -3097e3, 3553620, -4590320, -2633360, 3457870, -4366660, -3097e3, 3596680, -4556670, -2633360, 3407700, -4401980, -3102550, 3305270, -4269750, -3383480, 3372780, -4251770, -3339500, 3407700, -4401980, -3102550, 3372780, -4251770, -3339500, 3457870, -4366660, -3097e3, 3865190, -4992230, -901688, 3806200, -4916200, -1418070, 3833470, -4895860, -1415e3, 3865190, -4992230, -901688, 3833470, -4895860, -1415e3, 3884480, -4977240, -901688, 3806200, -4916200, -1418070, 3553620, -4590320, -2633360, 3596680, -4556670, -2633360, 3806200, -4916200, -1418070, 3596680, -4556670, -2633360, 3833470, -4895860, -1415e3, 3884480, -4977240, -901688, 3898660, -5035070, 358194, 3865190, -4992230, -901688, 1784560, -6052150, -928241, 1782050, -6056930, -901688, 1773810, -6059350, -901688, 1773070, -6072650, -809551, 1744370, -6078230, -829601, 1773810, -6059350, -901688, 1773070, -6072650, -809551, 1773810, -6059350, -901688, 1782050, -6056930, -901688, 1792100, -6053960, -901688, 1782050, -6056930, -901688, 1784560, -6052150, -928241, 1839700, -6062790, -731497, 1773070, -6072650, -809551, 1782050, -6056930, -901688, 1839700, -6062790, -731497, 1782050, -6056930, -901688, 1792100, -6053960, -901688, 1792100, -6053960, -901688, 1784560, -6052150, -928241, 1840190, -6024790, -994748, 1792100, -6053960, -901688, 1840190, -6024790, -994748, 1840410, -6039450, -901688, 1840410, -6039450, -901688, 1839700, -6062790, -731497, 1792100, -6053960, -901688, 1845700, -6037840, -901688, 1840410, -6039450, -901688, 1840190, -6024790, -994748, 1859250, -6067900, -633794, 1839700, -6062790, -731497, 1840410, -6039450, -901688, 1859250, -6067900, -633794, 1840410, -6039450, -901688, 1845700, -6037840, -901688, 1845700, -6037840, -901688, 1840190, -6024790, -994748, 1885100, -6001790, -1047950, 1845700, -6037840, -901688, 1885100, -6001790, -1047950, 1876970, -6028190, -901688, 1876970, -6028190, -901688, 1859250, -6067900, -633794, 1845700, -6037840, -901688, 1885100, -6001790, -1047950, 1881020, -6026930, -901688, 1876970, -6028190, -901688, 1868400, -6070270, -582424, 1859250, -6067900, -633794, 1876970, -6028190, -901688, 1868400, -6070270, -582424, 1876970, -6028190, -901688, 1881020, -6026930, -901688, 1915180, -6016160, -901688, 1881020, -6026930, -901688, 1885100, -6001790, -1047950, 1991200, -6037920, -507443, 1868400, -6070270, -582424, 1881020, -6026930, -901688, 1991200, -6037920, -507443, 1881020, -6026930, -901688, 1915180, -6016160, -901688, 2259340, -5964190, 66636.5, 2238460, -5971920, 78081.1, 2241530, -5969980, -124125, 2265520, -5836680, -1212960, 2272840, -5890360, -901688, 2265820, -5893060, -901688, 2259340, -5964190, 66636.5, 2241530, -5969980, -124125, 2265820, -5893060, -901688, 2259340, -5964190, 66636.5, 2265820, -5893060, -901688, 2272840, -5890360, -901688, 2265520, -5836680, -1212960, 2265820, -5893060, -901688, 2264220, -5893680, -901688, 2241530, -5969980, -124125, 2238680, -5969850, -172065, 2264220, -5893680, -901688, 2241530, -5969980, -124125, 2264220, -5893680, -901688, 2265820, -5893060, -901688, 2210630, -5913990, -901688, 2190210, -5867260, -1203760, 2265520, -5836680, -1212960, 2210630, -5913990, -901688, 2265520, -5836680, -1212960, 2264220, -5893680, -901688, 2264220, -5893680, -901688, 2238680, -5969850, -172065, 2210630, -5913990, -901688, 2210630, -5913990, -901688, 2192370, -5920780, -901688, 2190210, -5867260, -1203760, 2238680, -5969850, -172065, 2186450, -5972690, -474833, 2192370, -5920780, -901688, 2238680, -5969850, -172065, 2192370, -5920780, -901688, 2210630, -5913990, -901688, 2158620, -5933170, -901688, 2131100, -5885110, -1222470, 2190210, -5867260, -1203760, 2158620, -5933170, -901688, 2190210, -5867260, -1203760, 2192370, -5920780, -901688, 2192370, -5920780, -901688, 2186450, -5972690, -474833, 2158620, -5933170, -901688, 2124800, -5945360, -901688, 2101990, -5929890, -1044670, 2131100, -5885110, -1222470, 2124800, -5945360, -901688, 2131100, -5885110, -1222470, 2158620, -5933170, -901688, 2186450, -5972690, -474833, 2124800, -5945360, -901688, 2158620, -5933170, -901688, 2131100, -5885110, -1222470, 2101990, -5929890, -1044670, 2085120, -5904150, -1209990, 2346580, -5861370, -901688, 2318050, -5816520, -1210580, 2343040, -5813300, -1177730, 2346580, -5861370, -901688, 2343040, -5813300, -1177730, 2363950, -5854390, -901688, 2401810, -5905650, 187116, 2346580, -5861370, -901688, 2363950, -5854390, -901688, 2305710, -5877570, -901688, 2265520, -5836680, -1212960, 2318050, -5816520, -1210580, 2305710, -5877570, -901688, 2318050, -5816520, -1210580, 2346580, -5861370, -901688, 2401810, -5905650, 187116, 2305710, -5877570, -901688, 2346580, -5861370, -901688, 2305710, -5877570, -901688, 2274040, -5889890, -901688, 2265520, -5836680, -1212960, 2401810, -5905650, 187116, 2262650, -5962300, 108985, 2274040, -5889890, -901688, 2401810, -5905650, 187116, 2274040, -5889890, -901688, 2305710, -5877570, -901688, 2265520, -5836680, -1212960, 2274040, -5889890, -901688, 2272840, -5890360, -901688, 2262650, -5962300, 108985, 2259340, -5964190, 66636.5, 2272840, -5890360, -901688, 2262650, -5962300, 108985, 2272840, -5890360, -901688, 2274040, -5889890, -901688, 1947330, -6005830, -901688, 1921600, -5979670, -1106090, 2013310, -5948890, -1108900, 1947330, -6005830, -901688, 2013310, -5948890, -1108900, 2007870, -5985860, -901688, 2007870, -5985860, -901688, 1991200, -6037920, -507443, 1947330, -6005830, -901688, 2037010, -5976010, -901688, 2007870, -5985860, -901688, 2013310, -5948890, -1108900, 2077900, -6010400, -486234, 1991200, -6037920, -507443, 2007870, -5985860, -901688, 2077900, -6010400, -486234, 2007870, -5985860, -901688, 2037010, -5976010, -901688, 2037010, -5976010, -901688, 2013310, -5948890, -1108900, 2101990, -5929890, -1044670, 2037010, -5976010, -901688, 2101990, -5929890, -1044670, 2097480, -5955060, -901688, 2097480, -5955060, -901688, 2077900, -6010400, -486234, 2037010, -5976010, -901688, 2101990, -5929890, -1044670, 2101300, -5953710, -901688, 2097480, -5955060, -901688, 2092370, -6006710, -469657, 2077900, -6010400, -486234, 2097480, -5955060, -901688, 2092370, -6006710, -469657, 2097480, -5955060, -901688, 2101300, -5953710, -901688, 2124800, -5945360, -901688, 2101300, -5953710, -901688, 2101990, -5929890, -1044670, 2186450, -5972690, -474833, 2092370, -6006710, -469657, 2101300, -5953710, -901688, 2186450, -5972690, -474833, 2101300, -5953710, -901688, 2124800, -5945360, -901688, 2615300, -5691810, -1197700, 2623050, -5713e3, -1074310, 2606370, -5704590, -1155920, 2644790, -5732990, -901688, 2623050, -5713e3, -1074310, 2615300, -5691810, -1197700, 2644790, -5732990, -901688, 2615300, -5691810, -1197700, 2651860, -5729720, -901688, 2733970, -5760580, 146910, 2644790, -5732990, -901688, 2651860, -5729720, -901688, 2651860, -5729720, -901688, 2615300, -5691810, -1197700, 2699580, -5613430, -1367350, 2651860, -5729720, -901688, 2699580, -5613430, -1367350, 2727260, -5694220, -901688, 2727260, -5694220, -901688, 2733970, -5760580, 146910, 2651860, -5729720, -901688, 2739920, -5688140, -901688, 2727260, -5694220, -901688, 2699580, -5613430, -1367350, 2775100, -5740390, 165052, 2733970, -5760580, 146910, 2727260, -5694220, -901688, 2775100, -5740390, 165052, 2727260, -5694220, -901688, 2739920, -5688140, -901688, 2739920, -5688140, -901688, 2699580, -5613430, -1367350, 2806990, -5556060, -1385170, 2739920, -5688140, -901688, 2806990, -5556060, -1385170, 2815930, -5650900, -901688, 2815930, -5650900, -901688, 2775100, -5740390, 165052, 2739920, -5688140, -901688, 2806990, -5556060, -1385170, 2820340, -5648700, -901688, 2815930, -5650900, -901688, 2786120, -5733490, 211863, 2775100, -5740390, 165052, 2815930, -5650900, -901688, 2786120, -5733490, 211863, 2815930, -5650900, -901688, 2820340, -5648700, -901688, 2806990, -5556060, -1385170, 2841950, -5637860, -901688, 2820340, -5648700, -901688, 2856880, -5697300, 243304, 2786120, -5733490, 211863, 2820340, -5648700, -901688, 2856880, -5697300, 243304, 2820340, -5648700, -901688, 2841950, -5637860, -901688, 2849780, -5633900, -901688, 2841950, -5637860, -901688, 2806990, -5556060, -1385170, 2880160, -5675440, 416633, 2860340, -5694450, 268019, 2882930, -5682940, 270308, 2841950, -5637860, -901688, 2849780, -5633900, -901688, 2882930, -5682940, 270308, 2841950, -5637860, -901688, 2882930, -5682940, 270308, 2860340, -5694450, 268019, 2841950, -5637860, -901688, 2860340, -5694450, 268019, 2856880, -5697300, 243304, 2880160, -5675440, 416633, 2851200, -5699080, 267093, 2860340, -5694450, 268019, 2851200, -5699080, 267093, 2851080, -5699160, 266525, 2856880, -5697300, 243304, 2851200, -5699080, 267093, 2856880, -5697300, 243304, 2860340, -5694450, 268019, 2880160, -5675440, 416633, 2800300, -5713170, 444210, 2850930, -5699210, 267067, 2880160, -5675440, 416633, 2850930, -5699210, 267067, 2851200, -5699080, 267093, 2851200, -5699080, 267093, 2850930, -5699210, 267067, 2851080, -5699160, 266525, 2800300, -5713170, 444210, 2766330, -5740320, 276019, 2848480, -5700450, 266818, 2800300, -5713170, 444210, 2848480, -5700450, 266818, 2850930, -5699210, 267067, 2851080, -5699160, 266525, 2850930, -5699210, 267067, 2848480, -5700450, 266818, 2800300, -5713170, 444210, 2753050, -5737960, 419573, 2766330, -5740320, 276019, 2766330, -5740320, 276019, 2753050, -5737960, 419573, 2750940, -5743930, 345574, 3155270, -5512470, 579112, 3105340, -5541260, 574244, 3119480, -5536460, 543161, 3116840, -5490670, -901688, 3105860, -5496880, -901688, 3051830, -5394930, -1498840, 3116840, -5490670, -901688, 3051830, -5394930, -1498840, 3052010, -5394830, -1498820, 3052010, -5394830, -1498820, 3051830, -5394930, -1498840, 3050670, -5392760, -1508920, 3155270, -5512470, 579112, 3119480, -5536460, 543161, 3128690, -5550130, 295536, 3155270, -5512470, 579112, 3128690, -5550130, 295536, 3161200, -5531500, 298921, 3161200, -5531500, 298921, 3128690, -5550130, 295536, 3105860, -5496880, -901688, 3161200, -5531500, 298921, 3105860, -5496880, -901688, 3116840, -5490670, -901688, 3105860, -5496880, -901688, 3095080, -5502960, -901688, 3051650, -5395030, -1498850, 3105860, -5496880, -901688, 3051650, -5395030, -1498850, 3051830, -5394930, -1498840, 3050670, -5392760, -1508920, 3051830, -5394930, -1498840, 3051650, -5395030, -1498850, 3119480, -5536460, 543161, 3085770, -5559300, 501103, 3096790, -5568170, 292227, 3119480, -5536460, 543161, 3096790, -5568170, 292227, 3128690, -5550130, 295536, 3128690, -5550130, 295536, 3096790, -5568170, 292227, 3095080, -5502960, -901688, 3128690, -5550130, 295536, 3095080, -5502960, -901688, 3105860, -5496880, -901688, 3037e3, -5402870, -1500360, 3051650, -5395030, -1498850, 3095080, -5502960, -901688, 3037e3, -5402870, -1500360, 3095080, -5502960, -901688, 3056120, -5524690, -901688, 3037e3, -5402870, -1500360, 3056120, -5524690, -901688, 2999580, -5430180, -1477030, 3050670, -5392760, -1508920, 3051650, -5395030, -1498850, 3037e3, -5402870, -1500360, 3096790, -5568170, 292227, 3085770, -5559300, 501103, 3090950, -5571450, 291622, 3090950, -5571450, 291622, 3056120, -5524690, -901688, 3095080, -5502960, -901688, 3090950, -5571450, 291622, 3095080, -5502960, -901688, 3096790, -5568170, 292227, 3013240, -5548200, -901688, 2939660, -5462560, -1478090, 2999580, -5430180, -1477030, 3013240, -5548200, -901688, 2999580, -5430180, -1477030, 3056130, -5524690, -901688, 3085770, -5559300, 501103, 3084500, -5575060, 290953, 3090950, -5571450, 291622, 3084500, -5575060, 290953, 3013240, -5548200, -901688, 3056130, -5524690, -901688, 3084500, -5575060, 290953, 3056130, -5524690, -901688, 3090950, -5571450, 291622, 3013240, -5548200, -901688, 2981080, -5565540, -901688, 2939660, -5462560, -1478090, 3085770, -5559300, 501103, 2978130, -5621250, 459827, 2986400, -5628730, 280856, 3085770, -5559300, 501103, 2986400, -5628730, 280856, 3084500, -5575060, 290953, 3084500, -5575060, 290953, 2986400, -5628730, 280856, 2981080, -5565540, -901688, 3084500, -5575060, 290953, 2981080, -5565540, -901688, 3013240, -5548200, -901688, 2952880, -5580560, -901688, 2903590, -5490210, -1446830, 2939660, -5462560, -1478090, 2952880, -5580560, -901688, 2939660, -5462560, -1478090, 2981080, -5565540, -901688, 2986400, -5628730, 280856, 2978130, -5621250, 459827, 2982670, -5630730, 280474, 2982670, -5630730, 280474, 2952880, -5580560, -901688, 2981080, -5565540, -901688, 2982670, -5630730, 280474, 2981080, -5565540, -901688, 2986400, -5628730, 280856, 2905380, -5605430, -901688, 2840880, -5528500, -1425480, 2903590, -5490210, -1446830, 2905380, -5605430, -901688, 2903590, -5490210, -1446830, 2952880, -5580560, -901688, 2978130, -5621250, 459827, 2976360, -5634100, 279828, 2982670, -5630730, 280474, 2976360, -5634100, 279828, 2905380, -5605430, -901688, 2952880, -5580560, -901688, 2976360, -5634100, 279828, 2952880, -5580560, -901688, 2982670, -5630730, 280474, 2905380, -5605430, -901688, 2885610, -5615640, -901688, 2840880, -5528500, -1425480, 2978130, -5621250, 459827, 2907910, -5659270, 442714, 2912300, -5667800, 273293, 2978130, -5621250, 459827, 2912300, -5667800, 273293, 2976360, -5634100, 279828, 2976360, -5634100, 279828, 2912300, -5667800, 273293, 2885610, -5615640, -901688, 2976360, -5634100, 279828, 2885610, -5615640, -901688, 2905380, -5605430, -901688, 2849780, -5633900, -901688, 2806990, -5556060, -1385170, 2840880, -5528500, -1425480, 2849780, -5633900, -901688, 2840880, -5528500, -1425480, 2877480, -5619800, -901688, 2886020, -5681360, 270622, 2880160, -5675440, 416633, 2882930, -5682940, 270308, 2882930, -5682940, 270308, 2849780, -5633900, -901688, 2877480, -5619800, -901688, 2882930, -5682940, 270308, 2877480, -5619800, -901688, 2886020, -5681360, 270622, 2840880, -5528500, -1425480, 2885610, -5615640, -901688, 2877480, -5619800, -901688, 2907910, -5659270, 442714, 2880160, -5675440, 416633, 2886020, -5681360, 270622, 2907910, -5659270, 442714, 2886020, -5681360, 270622, 2912300, -5667800, 273293, 2912300, -5667800, 273293, 2886020, -5681360, 270622, 2877480, -5619800, -901688, 2912300, -5667800, 273293, 2877480, -5619800, -901688, 2885610, -5615640, -901688, 2753050, -5737960, 419573, 2725810, -5747970, 458322, 2707300, -5757510, 448172, 2800300, -5713170, 444210, 2725810, -5747970, 458322, 2753050, -5737960, 419573, 3116840, -5490670, -901688, 3052010, -5394830, -1498820, 3056890, -5392210, -1498320, 3116840, -5490670, -901688, 3056890, -5392210, -1498320, 3120310, -5488700, -901688, 3052010, -5394830, -1498820, 3050670, -5392760, -1508920, 3047150, -5376890, -1570960, 3052010, -5394830, -1498820, 3047150, -5376890, -1570960, 3056890, -5392210, -1498320, 3155270, -5512470, 579112, 3161200, -5531500, 298921, 3161870, -5531110, 298989, 3161200, -5531500, 298921, 3116840, -5490670, -901688, 3120310, -5488700, -901688, 3161200, -5531500, 298921, 3120310, -5488700, -901688, 3161870, -5531110, 298989, 3120310, -5488700, -901688, 3056890, -5392210, -1498320, 3074880, -5382490, -1496480, 3120310, -5488700, -901688, 3074880, -5382490, -1496480, 3133140, -5481380, -901688, 3056890, -5392210, -1498320, 3047150, -5376890, -1570960, 3061410, -5359470, -1602230, 3056890, -5392210, -1498320, 3061410, -5359470, -1602230, 3074880, -5382490, -1496480, 3155270, -5512470, 579112, 3161870, -5531110, 298989, 3164310, -5529700, 299244, 3161870, -5531110, 298989, 3120310, -5488700, -901688, 3133140, -5481380, -901688, 3161870, -5531110, 298989, 3133140, -5481380, -901688, 3164310, -5529700, 299244, 2508040, -5794120, -901688, 2490630, -5768460, -1092770, 2623050, -5713e3, -1074310, 2508040, -5794120, -901688, 2623050, -5713e3, -1074310, 2619510, -5744590, -901688, 2619510, -5744590, -901688, 2560840, -5840910, 80103.7, 2508040, -5794120, -901688, 2623050, -5713e3, -1074310, 2631260, -5739210, -901688, 2619510, -5744590, -901688, 2639830, -5805540, 87268.5, 2560840, -5840910, 80103.7, 2619510, -5744590, -901688, 2639830, -5805540, 87268.5, 2619510, -5744590, -901688, 2631260, -5739210, -901688, 2623050, -5713e3, -1074310, 2634180, -5737880, -901688, 2631260, -5739210, -901688, 2659200, -5796080, 121103, 2639830, -5805540, 87268.5, 2631260, -5739210, -901688, 2659200, -5796080, 121103, 2631260, -5739210, -901688, 2634180, -5737880, -901688, 2644790, -5732990, -901688, 2634180, -5737880, -901688, 2623050, -5713e3, -1074310, 2733970, -5760580, 146910, 2659200, -5796080, 121103, 2634180, -5737880, -901688, 2733970, -5760580, 146910, 2634180, -5737880, -901688, 2644790, -5732990, -901688, 2434650, -5784400, -1133650, 2447750, -5819850, -901688, 2442930, -5821870, -901688, 2464360, -5879720, 190160, 2435390, -5890540, 225211, 2442930, -5821870, -901688, 2464360, -5879720, 190160, 2442930, -5821870, -901688, 2447750, -5819850, -901688, 2451350, -5818330, -901688, 2447750, -5819850, -901688, 2434650, -5784400, -1133650, 2484990, -5872800, 124953, 2464360, -5879720, 190160, 2447750, -5819850, -901688, 2484990, -5872800, 124953, 2447750, -5819850, -901688, 2451350, -5818330, -901688, 2451350, -5818330, -901688, 2434650, -5784400, -1133650, 2490630, -5768460, -1092770, 2451350, -5818330, -901688, 2490630, -5768460, -1092770, 2496020, -5799310, -901688, 2496020, -5799310, -901688, 2484990, -5872800, 124953, 2451350, -5818330, -901688, 2490630, -5768460, -1092770, 2499070, -5797990, -901688, 2496020, -5799310, -901688, 2504210, -5864320, 138579, 2484990, -5872800, 124953, 2496020, -5799310, -901688, 2504210, -5864320, 138579, 2496020, -5799310, -901688, 2499070, -5797990, -901688, 2508040, -5794120, -901688, 2499070, -5797990, -901688, 2490630, -5768460, -1092770, 2560840, -5840910, 80103.7, 2504210, -5864320, 138579, 2499070, -5797990, -901688, 2560840, -5840910, 80103.7, 2499070, -5797990, -901688, 2508040, -5794120, -901688, 2363950, -5854390, -901688, 2343040, -5813300, -1177730, 2434650, -5784400, -1133650, 2363950, -5854390, -901688, 2434650, -5784400, -1133650, 2436800, -5824440, -901688, 2436800, -5824440, -901688, 2401810, -5905650, 187116, 2363950, -5854390, -901688, 2434650, -5784400, -1133650, 2442930, -5821870, -901688, 2436800, -5824440, -901688, 2435390, -5890540, 225211, 2401810, -5905650, 187116, 2436800, -5824440, -901688, 2435390, -5890540, 225211, 2436800, -5824440, -901688, 2442930, -5821870, -901688, 2401810, -5905650, 187116, 2199600, -5983830, 189586, 2201480, -5984940, 120417, 2401810, -5905650, 187116, 2201480, -5984940, 120417, 2262650, -5962300, 108985, 2225530, -5976950, -60814.1, 2179720, -5993820, 59865.6, 2179270, -5994240, -20473.5, 2238460, -5971920, 78081.1, 2179720, -5993820, 59865.6, 2225530, -5976950, -60814.1, 2241530, -5969980, -124125, 2238460, -5971920, 78081.1, 2225530, -5976950, -60814.1, 1859250, -6067900, -633794, 1831060, -6072320, -672066, 1839700, -6062790, -731497, 2699580, -5613430, -1367350, 2615300, -5691810, -1197700, 2601300, -5682340, -1270440, 1885100, -6001790, -1047950, 1840190, -6024790, -994748, 1815760, -6024230, -1041620, 1915180, -6016160, -901688, 1885100, -6001790, -1047950, 1921600, -5979670, -1106090, 1915180, -6016160, -901688, 1921600, -5979670, -1106090, 1947330, -6005830, -901688, 1991200, -6037920, -507443, 1915180, -6016160, -901688, 1947330, -6005830, -901688, 1839700, -6062790, -731497, 1774580, -6078250, -763198, 1773070, -6072650, -809551, 3047660, -5312570, -1774190, 3056580, -5348140, -1648350, 3029050, -5363220, -1650130, 3178770, -5501580, 553733, 3155270, -5512470, 579112, 3168300, -5512300, 505347, 3519890, -4616240, -2633360, 3512360, -4621970, -2633360, 3369160, -4428570, -3106780, 3519890, -4616240, -2633360, 3369160, -4428570, -3106780, 3372500, -4426290, -3106410, 3372500, -4426290, -3106410, 3369160, -4428570, -3106780, 3236640, -4250560, -3472220, 3834490, -5015850, -901688, 3810790, -5033890, -901688, 3754580, -4954060, -1423860, 3834490, -5015850, -901688, 3754580, -4954060, -1423860, 3773730, -4940110, -1421720, 3773730, -4940110, -1421720, 3754580, -4954060, -1423860, 3512360, -4621970, -2633360, 3773730, -4940110, -1421720, 3512360, -4621970, -2633360, 3519890, -4616240, -2633360, 3874100, -5059130, 276870, 3841190, -5086290, 234902, 3810790, -5033890, -901688, 3874100, -5059130, 276870, 3810790, -5033890, -901688, 3834490, -5015850, -901688, 4994540, -3862210, -901688, 4943600, -3927200, -901688, 4893380, -3883310, -1282310, 4994540, -3862210, -901688, 4893380, -3883310, -1282310, 4908120, -3865360, -1280210, 4908120, -3865360, -1280210, 4893380, -3883310, -1282310, 4868860, -3862320, -1429510, 5060960, -3844720, -532457, 4981220, -3962300, -408918, 4943600, -3927200, -901688, 5060960, -3844720, -532457, 4943600, -3927200, -901688, 4994540, -3862210, -901688, 3190880, -5077600, -2164580, 3158980, -5088260, -2186070, 3173760, -5053670, -2243740, 3226510, -5099100, -2059350, 3193630, -5100960, -2105160, 3190880, -5077600, -2164580, 3573100, -5278560, 223536, 3565670, -5281010, 277494, 3557190, -5288330, 245502, -2654700, 5782370, 442788, -2645460, 5778180, 541168, -2606850, 5799420, 499935, -2728640, 5733320, 601490, -2645460, 5778180, 541168, -2654700, 5782370, 442788, -2728640, 5733320, 601490, -2654700, 5782370, 442788, -2674730, 5770110, 480359, -2728640, 5733320, 601490, -2674730, 5770110, 480359, -2726250, 5739920, 547252, -2726250, 5739920, 547252, -2674730, 5770110, 480359, -2722780, 5747880, 476867, -207913, 5660120, 2922810, -121038, 5695200, 2859300, -202081, 5691410, 2862240, -207913, 5660120, 2922810, -37092.4, 5693e3, 2865940, -121038, 5695200, 2859300, -207913, 5660120, 2922810, 25422, 5700880, 2850480, -37092.4, 5693e3, 2865940, -207913, 5660120, 2922810, 115463, 5680720, 2887990, 25422, 5700880, 2850480, -207913, 5660120, 2922810, 117374, 5670540, 2907730, 115463, 5680720, 2887990, -207913, 5660120, 2922810, 51540, 5633260, 2980690, 117374, 5670540, 2907730, -207913, 5660120, 2922810, -1550.14, 5620220, 3005470, 51540, 5633260, 2980690, -207913, 5660120, 2922810, -71808.4, 5631880, 2982860, -1550.14, 5620220, 3005470, -207913, 5660120, 2922810, -123772, 5632250, 2980480, -71808.4, 5631880, 2982860, -207913, 5660120, 2922810, -167217, 5645080, 2954140, -123772, 5632250, 2980480, 5197920, 2856960, -2337360, 5241520, 2789480, -2321550, 5177680, 2870770, -2365020, 5197920, 2856960, -2337360, 5177680, 2870770, -2365020, 5170680, 2884490, -2363630, 5149590, 2905460, -2383780, 5170680, 2884490, -2363630, 5177680, 2870770, -2365020, 5177680, 2870770, -2365020, 5241520, 2789480, -2321550, 5223050, 2779460, -2374230, 5223050, 2779460, -2374230, 5192260, 2762770, -2459150, 5149590, 2905460, -2383780, 5223050, 2779460, -2374230, 5149590, 2905460, -2383780, 5177680, 2870770, -2365020, 5241520, 2789480, -2321550, 5278220, 2774320, -2256070, 5228580, 2768050, -2375380, 5241520, 2789480, -2321550, 5228580, 2768050, -2375380, 5223050, 2779460, -2374230, 5223050, 2779460, -2374230, 5228580, 2768050, -2375380, 5192260, 2762770, -2459150, 5278220, 2774320, -2256070, 5314880, 2742800, -2208370, 5233910, 2757e3, -2376490, 5278220, 2774320, -2256070, 5233910, 2757e3, -2376490, 5228580, 2768050, -2375380, 5192260, 2762770, -2459150, 5228580, 2768050, -2375380, 5233910, 2757e3, -2376490, 5278220, 2774320, -2256070, 5290540, 2780510, -2219540, 5314880, 2742800, -2208370, 5233910, 2757e3, -2376490, 5314880, 2742800, -2208370, 5259400, 2703310, -2381850, 5259400, 2703310, -2381850, 5205920, 2666230, -2535140, 5192260, 2762770, -2459150, 5259400, 2703310, -2381850, 5192260, 2762770, -2459150, 5233910, 2757e3, -2376490, 5314880, 2742800, -2208370, 5265120, 2691070, -2383070, 5259400, 2703310, -2381850, 5265120, 2691070, -2383070, 5194630, 2622450, -2602620, 5205920, 2666230, -2535140, 5265120, 2691070, -2383070, 5205920, 2666230, -2535140, 5259400, 2703310, -2381850, 5193270, 2594080, -2633360, 5195220, 2590170, -2633360, 5192910, 2587480, -2640490, 5314880, 2742800, -2208370, 5269570, 2681490, -2384030, 5265120, 2691070, -2383070, 5269570, 2681490, -2384030, 5195220, 2590170, -2633360, 5193270, 2594080, -2633360, 5269570, 2681490, -2384030, 5193270, 2594080, -2633360, 5194630, 2622450, -2602620, 5269570, 2681490, -2384030, 5194630, 2622450, -2602620, 5265120, 2691070, -2383080, 5195220, 2590170, -2633360, 5196030, 2588550, -2633360, 5192910, 2587480, -2640490, 5314880, 2742800, -2208370, 5405050, 2655490, -2094e3, 5296710, 2622070, -2389930, 5314880, 2742800, -2208370, 5296710, 2622070, -2389930, 5269570, 2681490, -2384030, 5269570, 2681490, -2384030, 5296710, 2622070, -2389930, 5196030, 2588550, -2633360, 5269570, 2681490, -2384030, 5196030, 2588550, -2633360, 5195220, 2590170, -2633360, 5227590, 2524200, -2633360, 5201560, 2510710, -2696610, 5213920, 2536440, -2648560, 5227590, 2524200, -2633360, 5213920, 2536440, -2648560, 5220290, 2539270, -2633360, 5314930, 2581180, -2393970, 5438320, 2634890, -2033430, 5319020, 2571860, -2394890, 5319020, 2571860, -2394890, 5227590, 2524200, -2633360, 5220290, 2539270, -2633360, 5319020, 2571860, -2394890, 5220290, 2539270, -2633360, 5314930, 2581180, -2393970, 5219910, 2540050, -2633360, 5220290, 2539270, -2633360, 5213920, 2536440, -2648560, 5405050, 2655490, -2094e3, 5438320, 2634890, -2033430, 5314930, 2581180, -2393970, 5405050, 2655490, -2094e3, 5314930, 2581180, -2393970, 5308980, 2594610, -2392650, 5308980, 2594610, -2392650, 5314930, 2581180, -2393970, 5220290, 2539270, -2633360, 5308980, 2594610, -2392650, 5220290, 2539270, -2633360, 5219910, 2540050, -2633360, 5219910, 2540050, -2633360, 5213920, 2536440, -2648560, 5192910, 2587480, -2640490, 5219910, 2540050, -2633360, 5192910, 2587480, -2640490, 5196030, 2588550, -2633360, 5296710, 2622070, -2389930, 5405050, 2655490, -2094e3, 5308980, 2594610, -2392650, 5308980, 2594610, -2392650, 5219910, 2540050, -2633360, 5196030, 2588550, -2633360, 5308980, 2594610, -2392650, 5196030, 2588550, -2633360, 5296710, 2622070, -2389930, 5259770, 2456450, -2633360, 5210080, 2432290, -2751120, 5192660, 2495120, -2727850, 5259770, 2456450, -2633360, 5192660, 2495120, -2727850, 5235460, 2507840, -2633360, 5334710, 2535790, -2398440, 5505990, 2577370, -1922750, 5349810, 2500410, -2401910, 5349810, 2500410, -2401910, 5259770, 2456450, -2633360, 5235460, 2507840, -2633360, 5349810, 2500410, -2401910, 5235460, 2507840, -2633360, 5334710, 2535790, -2398440, 5192660, 2495120, -2727850, 5234540, 2509770, -2633360, 5235460, 2507840, -2633360, 5495600, 2593560, -1930630, 5505990, 2577370, -1922750, 5334710, 2535790, -2398440, 5495600, 2593560, -1930630, 5334710, 2535790, -2398440, 5331730, 2542680, -2397760, 5331730, 2542680, -2397760, 5334710, 2535790, -2398440, 5235460, 2507840, -2633360, 5331730, 2542680, -2397760, 5235460, 2507840, -2633360, 5234540, 2509770, -2633360, 5192660, 2495120, -2727850, 5232490, 2514020, -2633360, 5234540, 2509770, -2633360, 5453220, 2618510, -2014720, 5495600, 2593560, -1930630, 5331730, 2542680, -2397760, 5453220, 2618510, -2014720, 5331730, 2542680, -2397760, 5325110, 2557930, -2396260, 5325110, 2557930, -2396260, 5331730, 2542680, -2397760, 5234540, 2509770, -2633360, 5325110, 2557930, -2396260, 5234540, 2509770, -2633360, 5232490, 2514020, -2633360, 5231270, 2516570, -2633360, 5232490, 2514020, -2633360, 5192660, 2495120, -2727850, 5438320, 2634890, -2033430, 5453220, 2618510, -2014720, 5325110, 2557930, -2396260, 5438320, 2634890, -2033430, 5325110, 2557930, -2396260, 5321100, 2567130, -2395350, 5321100, 2567130, -2395350, 5325110, 2557930, -2396260, 5232490, 2514020, -2633360, 5321100, 2567130, -2395350, 5232490, 2514020, -2633360, 5231270, 2516570, -2633360, 5231270, 2516570, -2633360, 5192660, 2495120, -2727850, 5201560, 2510710, -2696610, 5231270, 2516570, -2633360, 5201560, 2510710, -2696610, 5227590, 2524200, -2633360, 5438320, 2634890, -2033430, 5321100, 2567130, -2395350, 5319020, 2571860, -2394890, 5321100, 2567130, -2395350, 5231270, 2516570, -2633360, 5227590, 2524200, -2633360, 5321100, 2567130, -2395350, 5227590, 2524200, -2633360, 5319020, 2571860, -2394890, 5294450, 2380770, -2633360, 5246270, 2359010, -2746180, 5210080, 2432290, -2751120, 5294450, 2380770, -2633360, 5210080, 2432290, -2751120, 5265320, 2444530, -2633360, 5364880, 2464460, -2405440, 5537350, 2490600, -1946730, 5382840, 2420710, -2409710, 5382840, 2420710, -2409710, 5294450, 2380770, -2633360, 5265320, 2444530, -2633360, 5382840, 2420710, -2409710, 5265320, 2444530, -2633360, 5364880, 2464460, -2405440, 5210080, 2432290, -2751120, 5263380, 2448710, -2633360, 5265320, 2444530, -2633360, 5524150, 2519910, -1946500, 5537350, 2490600, -1946730, 5364880, 2464460, -2405440, 5524150, 2519910, -1946500, 5364880, 2464460, -2405440, 5359660, 2477e3, -2404210, 5359660, 2477e3, -2404210, 5364880, 2464460, -2405440, 5265320, 2444530, -2633360, 5359660, 2477e3, -2404210, 5265320, 2444530, -2633360, 5263380, 2448710, -2633360, 5259770, 2456450, -2633360, 5263380, 2448710, -2633360, 5210080, 2432290, -2751120, 5505990, 2577370, -1922750, 5524150, 2519910, -1946500, 5359660, 2477e3, -2404210, 5505990, 2577370, -1922750, 5359660, 2477e3, -2404210, 5349810, 2500410, -2401910, 5349810, 2500410, -2401910, 5359660, 2477e3, -2404210, 5263380, 2448710, -2633360, 5349810, 2500410, -2401910, 5263380, 2448710, -2633360, 5259770, 2456450, -2633360, 5348730, 2256190, -2633360, 5309320, 2234480, -2729220, 5300210, 2283960, -2706020, 5348730, 2256190, -2633360, 5300210, 2283960, -2706020, 5331650, 2296260, -2633360, 5418740, 2330080, -2418510, 5581460, 2391860, -1944590, 5429620, 2301710, -2421260, 5429620, 2301710, -2421260, 5348730, 2256190, -2633360, 5331650, 2296260, -2633360, 5429620, 2301710, -2421260, 5331650, 2296260, -2633360, 5418740, 2330080, -2418510, 5330090, 2299880, -2633360, 5331650, 2296260, -2633360, 5300210, 2283960, -2706020, 5552410, 2423370, -1987970, 5581460, 2391860, -1944590, 5418740, 2330080, -2418510, 5552410, 2423370, -1987970, 5418740, 2330080, -2418510, 5413030, 2344790, -2417090, 5413030, 2344790, -2417090, 5418740, 2330080, -2418510, 5331650, 2296260, -2633360, 5413030, 2344790, -2417090, 5331650, 2296260, -2633360, 5330090, 2299880, -2633360, 5330090, 2299880, -2633360, 5300210, 2283960, -2706020, 5278e3, 2320570, -2718180, 5330090, 2299880, -2633360, 5278e3, 2320570, -2718180, 5314900, 2334760, -2633360, 5403730, 2368520, -2414790, 5552410, 2423370, -1987970, 5413030, 2344790, -2417090, 5413030, 2344790, -2417090, 5330090, 2299880, -2633360, 5314900, 2334760, -2633360, 5413030, 2344790, -2417090, 5314900, 2334760, -2633360, 5403730, 2368520, -2414790, 5311930, 2341520, -2633360, 5314900, 2334760, -2633360, 5278e3, 2320570, -2718180, 5537350, 2490600, -1946730, 5552410, 2423370, -1987970, 5403730, 2368520, -2414790, 5537350, 2490600, -1946730, 5403730, 2368520, -2414790, 5393840, 2393420, -2412360, 5393830, 2393420, -2412370, 5403730, 2368520, -2414790, 5314900, 2334760, -2633360, 5393830, 2393420, -2412370, 5314900, 2334760, -2633360, 5311930, 2341520, -2633360, 5311930, 2341510, -2633360, 5278e3, 2320570, -2718180, 5246270, 2359010, -2746180, 5311930, 2341510, -2633360, 5246270, 2359010, -2746180, 5294450, 2380770, -2633360, 5537350, 2490600, -1946730, 5393830, 2393420, -2412370, 5382840, 2420710, -2409710, 5393830, 2393420, -2412370, 5311930, 2341510, -2633360, 5294450, 2380770, -2633360, 5393830, 2393420, -2412370, 5294450, 2380770, -2633360, 5382840, 2420710, -2409710, 5355880, 2239170, -2633360, 5297540, 2202930, -2777010, 5309320, 2234480, -2729220, 5355880, 2239170, -2633360, 5309320, 2234480, -2729220, 5348730, 2256190, -2633360, 5581460, 2391860, -1944590, 5434220, 2289560, -2422430, 5429620, 2301710, -2421260, 5434220, 2289560, -2422430, 5355880, 2239170, -2633360, 5348730, 2256190, -2633360, 5434220, 2289560, -2422430, 5348730, 2256190, -2633360, 5429620, 2301710, -2421260, 5369750, 2205690, -2633360, 5301960, 2153550, -2806940, 5297540, 2202930, -2777010, 5369750, 2205690, -2633360, 5297540, 2202930, -2777010, 5355880, 2239170, -2633360, 5581460, 2391860, -1944590, 5443260, 2265520, -2424750, 5434220, 2289560, -2422430, 5443260, 2265520, -2424750, 5369750, 2205690, -2633360, 5355880, 2239170, -2633360, 5443260, 2265520, -2424750, 5355880, 2239170, -2633360, 5434220, 2289560, -2422430, 5369750, 2205690, -2633360, 5382070, 2175470, -2633360, 5301960, 2153550, -2806940, 5581460, 2391860, -1944590, 5632650, 2236380, -1981430, 5468010, 2197860, -2431260, 5581460, 2391860, -1944590, 5468010, 2197860, -2431260, 5443260, 2265520, -2424750, 5443260, 2265520, -2424750, 5468010, 2197860, -2431260, 5382070, 2175470, -2633360, 5443260, 2265520, -2424750, 5382070, 2175470, -2633360, 5369750, 2205690, -2633360, 5396760, 2138750, -2633360, 5300050, 2099070, -2851180, 5301960, 2153550, -2806940, 5396760, 2138750, -2633360, 5301960, 2153550, -2806940, 5382070, 2175470, -2633360, 5468010, 2197860, -2431260, 5632650, 2236380, -1981430, 5477260, 2171910, -2433750, 5477260, 2171910, -2433750, 5396760, 2138750, -2633360, 5382070, 2175470, -2633360, 5477260, 2171910, -2433750, 5382070, 2175470, -2633360, 5468010, 2197860, -2431260, 5396760, 2138750, -2633360, 5403880, 2120700, -2633360, 5300050, 2099070, -2851180, 5632650, 2236380, -1981430, 5660150, 2162600, -1984910, 5489560, 2136790, -2437110, 5632650, 2236380, -1981430, 5489560, 2136790, -2437110, 5477260, 2171910, -2433750, 5477260, 2171910, -2433750, 5489560, 2136790, -2437110, 5403880, 2120700, -2633360, 5477260, 2171910, -2433750, 5403880, 2120700, -2633360, 5396760, 2138750, -2633360, 5423330, 2070450, -2633360, 5321120, 2030830, -2861270, 5300050, 2099070, -2851180, 5423330, 2070450, -2633360, 5300050, 2099070, -2851180, 5403880, 2120700, -2633360, 5489560, 2136790, -2437110, 5660150, 2162600, -1984910, 5501850, 2100940, -2440540, 5501850, 2100940, -2440540, 5423330, 2070450, -2633360, 5403880, 2120700, -2633360, 5501850, 2100940, -2440540, 5403880, 2120700, -2633360, 5489560, 2136790, -2437110, 5423330, 2070450, -2633360, 5423680, 2069550, -2633360, 5321120, 2030830, -2861270, 5660150, 2162600, -1984910, 5535070, 2111550, -2355340, 5502430, 2099250, -2440690, 5660150, 2162600, -1984910, 5502430, 2099250, -2440690, 5501850, 2100940, -2440540, 5501850, 2100940, -2440540, 5502430, 2099250, -2440690, 5423680, 2069550, -2633360, 5501850, 2100940, -2440540, 5423680, 2069550, -2633360, 5423330, 2070450, -2633360, 5426820, 2061300, -2633360, 5369910, 2035400, -2765920, 5321120, 2030830, -2861270, 5426820, 2061300, -2633360, 5321120, 2030830, -2861270, 5423680, 2069550, -2633360, 5502430, 2099250, -2440690, 5535070, 2111550, -2355340, 5503300, 2096650, -2440940, 5503300, 2096650, -2440940, 5426820, 2061300, -2633360, 5423680, 2069550, -2633360, 5503300, 2096650, -2440940, 5423680, 2069550, -2633360, 5502430, 2099250, -2440690, 5446250, 2009400, -2633360, 5433050, 1995280, -2670840, 5369910, 2035400, -2765920, 5446250, 2009400, -2633360, 5369910, 2035400, -2765920, 5426820, 2061300, -2633360, 5535070, 2111550, -2355340, 5508910, 208e4, -2442530, 5503300, 2096650, -2440940, 5508910, 208e4, -2442530, 5446250, 2009400, -2633360, 5426820, 2061300, -2633360, 5508910, 208e4, -2442530, 5426820, 2061300, -2633360, 5503300, 2096650, -2440940, 5456060, 1982600, -2633360, 5458620, 1975530, -2633360, 5448960, 1972040, -2655740, 5535070, 2111550, -2355340, 5569220, 2015540, -2358920, 5534160, 2002860, -2449860, 5535070, 2111550, -2355340, 5534160, 2002860, -2449860, 5511860, 2071180, -2443370, 5511860, 2071180, -2443370, 5534160, 2002860, -2449860, 5458620, 1975530, -2633360, 5511860, 2071180, -2443370, 5458620, 1975530, -2633360, 5456060, 1982600, -2633360, 5456060, 1982600, -2633360, 5448960, 1972040, -2655740, 5433050, 1995280, -2670840, 5456060, 1982600, -2633360, 5433050, 1995280, -2670840, 5446250, 2009400, -2633360, 5535070, 2111550, -2355340, 5511860, 2071180, -2443370, 5508910, 208e4, -2442530, 5511860, 2071180, -2443370, 5456060, 1982600, -2633360, 5446250, 2009400, -2633360, 5511860, 2071180, -2443370, 5446250, 2009400, -2633360, 5508910, 208e4, -2442530, 5321120, 2030830, -2861270, 5369910, 2035400, -2765920, 5345310, 2016250, -2826510, 5894990, 2260810, 901688, 5940550, 2271760, 477545, 5911820, 2347710, 466689, 5894990, 2260810, 901688, 5911820, 2347710, 466689, 5887830, 2279380, 901688, 5887830, 2279380, 901688, 5873750, 2254830, 1043130, 5894990, 2260810, 901688, 5901810, 2242930, 901688, 5962430, 2204470, 518211, 5940550, 2271760, 477545, 5901810, 2242930, 901688, 5940550, 2271760, 477545, 5894990, 2260810, 901688, 5873750, 2254830, 1043130, 5901810, 2242930, 901688, 5894990, 2260810, 901688, 5901810, 2242930, 901688, 5928950, 2170170, 901688, 5962430, 2204470, 518211, 5873750, 2254830, 1043130, 5917730, 2160860, 992551, 5928950, 2170170, 901688, 5873750, 2254830, 1043130, 5928950, 2170170, 901688, 5901810, 2242930, 901688, 5935290, 2152790, 901688, 5990470, 2117550, 555657, 5962430, 2204470, 518211, 5935290, 2152790, 901688, 5962430, 2204470, 518211, 5928950, 2170170, 901688, 5928950, 2170170, 901688, 5917730, 2160860, 992551, 5935290, 2152790, 901688, 5935290, 2152790, 901688, 5963300, 2073910, 901688, 5990470, 2117550, 555657, 5917730, 2160860, 992551, 5952290, 2060470, 999338, 5963300, 2073910, 901688, 5917730, 2160860, 992551, 5963300, 2073910, 901688, 5935290, 2152790, 901688, 5967480, 2061870, 901688, 6012860, 2062450, 520176, 5990470, 2117550, 555657, 5967480, 2061870, 901688, 5990470, 2117550, 555657, 5963300, 2073910, 901688, 5963300, 2073910, 901688, 5952290, 2060470, 999338, 5967480, 2061870, 901688, 5967480, 2061870, 901688, 5972760, 2046510, 901688, 6012860, 2062450, 520176, 5952290, 2060470, 999338, 5965980, 2043890, 950821, 5972760, 2046510, 901688, 5952290, 2060470, 999338, 5972760, 2046510, 901688, 5967480, 2061870, 901688, 5974180, 2042360, 901688, 6030870, 2022940, 464202, 6012860, 2062450, 520176, 5974180, 2042360, 901688, 6012860, 2062450, 520176, 5972760, 2046510, 901688, 5972760, 2046510, 901688, 5965980, 2043890, 950821, 5974180, 2042360, 901688, 5974280, 2042070, 901688, 6038960, 2015110, 387259, 6030870, 2022940, 464202, 5974280, 2042070, 901688, 6030870, 2022940, 464202, 5974180, 2042360, 901688, 5965980, 2043890, 950821, 5974280, 2042070, 901688, 5974180, 2042360, 901688, 6038960, 2015110, 387259, 6010110, 1948730, 869831, 6060830, 1947080, 393418, 5994980, 1980480, 901688, 6010110, 1948730, 869831, 6038960, 2015110, 387259, 5994980, 1980480, 901688, 6038960, 2015110, 387259, 5991180, 1991940, 901688, 5991180, 1991940, 901688, 5989730, 1991310, 912577, 5994980, 1980480, 901688, 5974280, 2042070, 901688, 5991180, 1991940, 901688, 6038960, 2015110, 387259, 5965980, 2043890, 950821, 5989730, 1991310, 912577, 5991180, 1991940, 901688, 5965980, 2043890, 950821, 5991180, 1991940, 901688, 5974280, 2042070, 901688, 6104850, 1812640, 353464, 6061580, 1790480, 852723, 6066450, 1772870, 854864, 6056900, 1817850, 827901, 6061580, 1790480, 852723, 6104850, 1812640, 353464, 6082280, 1874990, 411958, 6056900, 1817850, 827901, 6104850, 1812640, 353464, 6010110, 1948730, 869831, 6056900, 1817850, 827901, 6082280, 1874990, 411958, 6010110, 1948730, 869831, 6082280, 1874990, 411958, 6060830, 1947080, 393418, 6104850, 1812640, 353464, 6066450, 1772870, 854864, 6075750, 1754390, 826669, 6104850, 1812640, 353464, 6075750, 1754390, 826669, 6125890, 1758060, 250679, 6075750, 1754390, 826669, 6127820, 1746410, 282690, 6125890, 1758060, 250679, 6075750, 1754390, 826669, 6126830, 1740960, 333069, 6127820, 1746410, 282690, 6075750, 1754390, 826669, 6138630, 1691480, 368594, 6126830, 1740960, 333069, 6075750, 1754390, 826669, 6101470, 1666830, 818426, 6138630, 1691480, 368594, 6149710, 1597170, 555555, 6137770, 1591520, 687214, 6148360, 1585430, 601933, 6128920, 1616640, 707168, 6137770, 1591520, 687214, 6149710, 1597170, 555555, 6145700, 1641100, 465150, 6128920, 1616640, 707168, 6149710, 1597170, 555555, 6101470, 1666830, 818426, 6128920, 1616640, 707168, 6145700, 1641100, 465150, 6101470, 1666830, 818426, 6145700, 1641100, 465150, 6145940, 1650960, 425548, 6138630, 1691480, 368594, 6101470, 1666830, 818426, 6145940, 1650960, 425548, 5818020, 2452090, 901688, 5858260, 2467580, 520245, 5839280, 2514450, 509174, 5818020, 2452090, 901688, 5839280, 2514450, 509174, 5809140, 2473060, 901688, 5781060, 2444670, 1129180, 5766940, 2431800, 1224460, 5783770, 2438530, 1128570, 5783770, 2438530, 1128570, 5818020, 2452090, 901688, 5809140, 2473060, 901688, 5783770, 2438530, 1128570, 5809140, 2473060, 901688, 5781060, 2444670, 1129180, 5839280, 2514450, 509174, 5806980, 2478110, 901688, 5809140, 2473060, 901688, 5770380, 2446710, 1177990, 5766940, 2431800, 1224460, 5781060, 2444670, 1129180, 5770380, 2446710, 1177990, 5781060, 2444670, 1129180, 5777580, 2452520, 1129950, 5777580, 2452520, 1129950, 5781060, 2444670, 1129180, 5809140, 2473060, 901688, 5777580, 2452520, 1129950, 5809140, 2473060, 901688, 5806980, 2478110, 901688, 5795600, 2504630, 901688, 5806980, 2478110, 901688, 5839280, 2514450, 509174, 5773060, 2462660, 1130950, 5770380, 2446710, 1177990, 5777580, 2452520, 1129950, 5806980, 2478110, 901688, 5795600, 2504630, 901688, 5777930, 2499710, 1020110, 5806980, 2478110, 901688, 5777930, 2499710, 1020110, 5773060, 2462660, 1130950, 5806980, 2478110, 901688, 5773060, 2462660, 1130950, 5777580, 2452520, 1129950, 5761700, 2487980, 1133460, 5770380, 2446710, 1177990, 5773060, 2462660, 1130950, 5761700, 2487980, 1133460, 5773060, 2462660, 1130950, 5777930, 2499710, 1020110, 5761700, 2487980, 1133460, 5777930, 2499710, 1020110, 5756900, 2509660, 1109970, 5763880, 2513050, 1065510, 5756900, 2509660, 1109970, 5777930, 2499710, 1020110, 5882190, 2425080, 445162, 5841400, 2395860, 901688, 5855050, 2362310, 901688, 5796800, 2369300, 1205950, 5825320, 2320980, 1161970, 5831120, 2328290, 1117740, 5796800, 2369300, 1205950, 5831120, 2328290, 1117740, 5810440, 2377160, 1122530, 5810440, 2377160, 1122530, 5831120, 2328290, 1117740, 5855050, 2362310, 901688, 5810440, 2377160, 1122530, 5855050, 2362310, 901688, 5841400, 2395860, 901688, 5825720, 2433740, 901688, 5841400, 2395860, 901688, 5882190, 2425080, 445162, 5766940, 2431800, 1224460, 5796800, 2369300, 1205950, 5810440, 2377160, 1122530, 5766940, 2431800, 1224460, 5810440, 2377160, 1122530, 5786160, 2433100, 1128040, 5786160, 2433100, 1128040, 5810440, 2377160, 1122530, 5841400, 2395860, 901688, 5786160, 2433100, 1128040, 5841400, 2395860, 901688, 5825720, 2433740, 901688, 5825720, 2433740, 901688, 5882190, 2425080, 445162, 5864800, 2453790, 511749, 5825720, 2433740, 901688, 5864800, 2453790, 511749, 5820680, 2445760, 901688, 5766940, 2431800, 1224460, 5786160, 2433100, 1128040, 5784590, 2436660, 1128380, 5786160, 2433100, 1128040, 5825720, 2433740, 901688, 5820680, 2445760, 901688, 5786160, 2433100, 1128040, 5820680, 2445760, 901688, 5784590, 2436660, 1128380, 5820680, 2445760, 901688, 5864800, 2453790, 511749, 5858260, 2467580, 520245, 5820680, 2445760, 901688, 5858260, 2467580, 520245, 5818020, 2452090, 901688, 5766940, 2431800, 1224460, 5784590, 2436660, 1128380, 5783770, 2438530, 1128570, 5784590, 2436660, 1128380, 5820680, 2445760, 901688, 5818020, 2452090, 901688, 5784590, 2436660, 1128380, 5818020, 2452090, 901688, 5783770, 2438530, 1128570, 5866230, 2334400, 901688, 5887830, 2279380, 901688, 5911820, 2347710, 466689, 5825320, 2320980, 1161970, 5845050, 2294710, 1114450, 5833090, 2323580, 1117270, 5845050, 2294710, 1114450, 5873750, 2254830, 1043130, 5887830, 2279380, 901688, 5845050, 2294710, 1114450, 5887830, 2279380, 901688, 5866230, 2334400, 901688, 5845050, 2294710, 1114450, 5866230, 2334400, 901688, 5833090, 2323580, 1117270, 5866230, 2334400, 901688, 5911820, 2347710, 466689, 5882190, 2425080, 445162, 5866230, 2334400, 901688, 5882190, 2425080, 445162, 5855050, 2362310, 901688, 5831120, 2328290, 1117740, 5825320, 2320980, 1161970, 5833090, 2323580, 1117270, 5833090, 2323580, 1117270, 5866230, 2334400, 901688, 5855050, 2362310, 901688, 5833090, 2323580, 1117270, 5855050, 2362310, 901688, 5831120, 2328290, 1117740, 5689920, 2824850, 568802, 5685110, 2799070, 722343, 5700250, 2755190, 769864, 5679180, 2827320, 656398, 5685110, 2799070, 722343, 5689920, 2824850, 568802, 5658150, 2888460, 566267, 5679180, 2827320, 656398, 5689920, 2824850, 568802, 5645720, 2903170, 612852, 5679180, 2827320, 656398, 5658150, 2888460, 566267, 5640470, 2920520, 577951, 5645720, 2903170, 612852, 5658150, 2888460, 566267, 5689920, 2824850, 568802, 5700250, 2755190, 769864, 5725560, 2749440, 580390, 5700250, 2755190, 769864, 5744060, 2712600, 570954, 5725560, 2749440, 580390, 5700250, 2755190, 769864, 5753280, 2698560, 544168, 5744060, 2712600, 570954, 5700250, 2755190, 769864, 5725620, 2685020, 826998, 5753280, 2698560, 544168, 5785060, 2625500, 564166, 5772800, 2556730, 901688, 5783370, 2532730, 901688, 5769290, 2545260, 954695, 5780120, 2508350, 986169, 5783370, 2532730, 901688, 5769290, 2545260, 954695, 5783370, 2532730, 901688, 5772800, 2556730, 901688, 5742200, 2624740, 901688, 5772800, 2556730, 901688, 5785060, 2625500, 564166, 5741410, 2624670, 906874, 5769290, 2545260, 954695, 5772800, 2556730, 901688, 5741410, 2624670, 906874, 5772800, 2556730, 901688, 5742200, 2624740, 901688, 5742200, 2624740, 901688, 5785060, 2625500, 564166, 5768700, 2666120, 540864, 5742200, 2624740, 901688, 5768700, 2666120, 540864, 5741940, 2625310, 901688, 5741940, 2625310, 901688, 5741410, 2624670, 906874, 5742200, 2624740, 901688, 5739140, 2631410, 901688, 5741940, 2625310, 901688, 5768700, 2666120, 540864, 5739140, 2631410, 901688, 5768700, 2666120, 540864, 5721720, 2682060, 862621, 5739140, 2631410, 901688, 5741410, 2624670, 906874, 5741940, 2625310, 901688, 5753280, 2698560, 544168, 5721720, 2682060, 862621, 5768700, 2666120, 540864, 5753280, 2698560, 544168, 5725620, 2685020, 826998, 5721720, 2682060, 862621, 5793050, 2510500, 901688, 5839280, 2514450, 509174, 5785060, 2625500, 564166, 5793050, 2510500, 901688, 5785060, 2625500, 564166, 5783370, 2532730, 901688, 5783370, 2532730, 901688, 5780120, 2508350, 986169, 5793050, 2510500, 901688, 5793050, 2510500, 901688, 5795600, 2504630, 901688, 5839280, 2514450, 509174, 5777930, 2499710, 1020110, 5795600, 2504630, 901688, 5793050, 2510500, 901688, 5777930, 2499710, 1020110, 5793050, 2510500, 901688, 5780120, 2508350, 986169, 5952290, 2060470, 999338, 5963870, 2031660, 989295, 5965980, 2043890, 950821, 6145700, 1641100, 465150, 6149710, 1597170, 555555, 6154660, 1589230, 522722, 2024780, -3952400, 4562790, 1949360, -3938080, 4607500, 1921940, -3965620, 4595460, 2024780, -3952400, 4562790, 2003960, -3922720, 4597240, 1949360, -3938080, 4607500, 2066150, -3887840, 4599320, 2003960, -3922720, 4597240, 2024780, -3952400, 4562790, 2066150, -3887840, 4599320, 2024780, -3952400, 4562790, 2047890, -3934610, 4567830, 1907980, -3914530, 4644490, 1892960, -3949600, 4621050, 1921940, -3965620, 4595460, 1949360, -3938080, 4607500, 1907980, -3914530, 4644490, 1921940, -3965620, 4595460, 1849800, -3724650, 4819680, 1791190, -3700830, 4859730, 1771900, -3718050, 4853700, 1885360, -3677720, 4841730, 1791190, -3700830, 4859730, 1849800, -3724650, 4819680, 1945860, -3705240, 4796920, 1885360, -3677720, 4841730, 1849800, -3724650, 4819680, 1967380, -3674640, 4811550, 1885360, -3677720, 4841730, 1945860, -3705240, 4796920, 1976560, -3687240, 4798220, 1967380, -3674640, 4811550, 1945860, -3705240, 4796920, -2374570, -3518720, 4744370, -2382950, -3351280, 4859210, -2452330, -3418450, 4777770, -2374570, -3518720, 4744370, -2377030, -3404730, 4825070, -2382950, -3351280, 4859210, -2336780, -3474480, 4795120, -2377030, -3404730, 4825070, -2374570, -3518720, 4744370, -2337190, -3529770, 4754630, -2336780, -3474480, 4795120, -2374570, -3518720, 4744370, -2382950, -3351280, 4859210, -2385590, -3313180, 4883820, -2452330, -3418450, 4777770, -2452330, -3418450, 4777770, -2385590, -3313180, 4883820, -2452700, -3381440, 4803670, -2385590, -3313180, 4883820, -2434200, -3266330, 4891330, -2452700, -3381440, 4803670, -2452700, -3381440, 4803670, -2434200, -3266330, 4891330, -2487510, -3319080, 4829020, -2434200, -3266330, 4891330, -2483370, -3291960, 4849540, -2487510, -3319080, 4829020, -2532650, -3234770, 4862430, -2508250, -3169400, 4917440, -2525440, -3181180, 4901120, -2461180, -3229700, 4902070, -2508250, -3169400, 4917440, -2532650, -3234770, 4862430, -2483370, -3291960, 4849540, -2461180, -3229700, 4902070, -2532650, -3234770, 4862430, -2434200, -3266330, 4891330, -2461180, -3229700, 4902070, -2483370, -3291960, 4849540, 2191760, -3561510, 4799710, 2165120, -3636580, 4755610, 2204370, -3639350, 4735540, 2327320, -3628690, 4684960, 2191760, -3561510, 4799710, 2204370, -3639350, 4735540, 2327320, -3628690, 4684960, 2204370, -3639350, 4735540, 2201820, -3703280, 4687250, 2204370, -3639350, 4735540, 2179490, -3688170, 4709390, 2201820, -3703280, 4687250, -2601090, -2783970, 5097970, -2560550, -2728610, 5147840, -2583080, -2746850, 5126980, -2546030, -2758140, 5139360, -2560550, -2728610, 5147840, -2601090, -2783970, 5097970, -2595240, -2827250, 5077230, -2546030, -2758140, 5139360, -2601090, -2783970, 5097970, -2494660, -2795030, 5144580, -2546030, -2758140, 5139360, -2595240, -2827250, 5077230, -2494660, -2795030, 5144580, -2595240, -2827250, 5077230, -2604350, -2874210, 5046310, -2494660, -2795030, 5144580, -2604350, -2874210, 5046310, -2577290, -2857450, 5069510, -2600770, -2931580, 5015270, -2577290, -2857450, 5069510, -2604350, -2874210, 5046310, -2580400, -2949750, 5015140, -2577290, -2857450, 5069510, -2600770, -2931580, 5015270, 520949, -2984780, 5593700, 503625, -2951110, 5612990, 502354, -2958220, 5609380, 518322, -2918520, 5628560, 503625, -2951110, 5612990, 520949, -2984780, 5593700, 545461, -2988870, 5589200, 518322, -2918520, 5628560, 520949, -2984780, 5593700, 539556, -2916870, 5627430, 518322, -2918520, 5628560, 545461, -2988870, 5589200, 556258, -2934310, 5616800, 539556, -2916870, 5627430, 545461, -2988870, 5589200, 723969, -2668050, 5728600, 715592, -2640080, 5742500, 645073, -2590770, 5773020, 734137, -2553480, 5778960, 645073, -2590770, 5773020, 715592, -2640080, 5742500, 796403, -2667790, 5719160, 734137, -2553480, 5778960, 715592, -2640080, 5742500, 796403, -2667790, 5719160, 710714, -2469590, 5817950, 734137, -2553480, 5778960, 736520, -2357620, 5860740, 729410, -2390750, 5848280, 741910, -2383760, 5849550, 729410, -2390750, 5848280, 710714, -2469590, 5817950, 796403, -2667790, 5719160, 729410, -2390750, 5848280, 796403, -2667790, 5719160, 741910, -2383760, 5849550, 591870, -2716840, 5720880, 560156, -2612290, 5772200, 544846, -2691440, 5737430, 645073, -2590770, 5773020, 560156, -2612290, 5772200, 591870, -2716840, 5720880, 723969, -2668050, 5728600, 645073, -2590770, 5773020, 591870, -2716840, 5720880, 904677, -2283430, 5866530, 839329, -2164490, 5920720, 889619, -2293480, 5864920, 904677, -2283430, 5866530, 889619, -2293480, 5864920, 1023820, -2637280, 5697230, 904677, -2283430, 5866530, 1023820, -2637280, 5697230, 963879, -2387480, 5815800, 889619, -2293480, 5864920, 839329, -2164490, 5920720, 888845, -2293990, 5864840, 888845, -2293990, 5864840, 1070160, -2770130, 5625700, 1023820, -2637280, 5697230, 888845, -2293990, 5864840, 1023820, -2637280, 5697230, 889619, -2293480, 5864920, 771754, -1988270, 5990820, 888817, -2294010, 5864840, 888845, -2293990, 5864840, 771754, -1988270, 5990820, 888845, -2293990, 5864840, 839329, -2164490, 5920720, 888845, -2293990, 5864840, 888817, -2294010, 5864840, 1070160, -2770130, 5625700, 771754, -1988270, 5990820, 855090, -2315900, 5861270, 888817, -2294010, 5864840, 855090, -2315900, 5861270, 946996, -2753930, 5655450, 1070160, -2770130, 5625700, 855090, -2315900, 5861270, 1070160, -2770130, 5625700, 888817, -2294010, 5864840, 771754, -1988270, 5990820, 673921, -1979630, 6005370, 803140, -2348110, 5855840, 771754, -1988270, 5990820, 803140, -2348110, 5855840, 855090, -2315900, 5861270, 855090, -2315900, 5861270, 803140, -2348110, 5855840, 946996, -2753930, 5655450, 803140, -2348110, 5855840, 673921, -1979630, 6005370, 786314, -2358140, 5854110, 786314, -2358140, 5854110, 881598, -2695070, 5693990, 946996, -2753930, 5655450, 786314, -2358140, 5854110, 946996, -2753930, 5655450, 803140, -2348110, 5855840, 673921, -1979630, 6005370, 617280, -1927480, 6028230, 767877, -2368940, 5852210, 673921, -1979630, 6005370, 767877, -2368940, 5852210, 786314, -2358140, 5854110, 786314, -2358140, 5854110, 767877, -2368940, 5852210, 881598, -2695070, 5693990, 617280, -1927480, 6028230, 736520, -2357620, 5860740, 746315, -2381280, 585e4, 617280, -1927480, 6028230, 746315, -2381280, 585e4, 767877, -2368940, 5852210, 881598, -2695070, 5693990, 767877, -2368940, 5852210, 746315, -2381280, 585e4, 617280, -1927480, 6028230, 711819, -2317560, 5879620, 736520, -2357620, 5860740, 686046, -2288390, 5893990, 544047, -1926290, 6035610, 611484, -2257380, 5913990, 686046, -2288390, 5893990, 561052, -1969470, 6020200, 544047, -1926290, 6035610, 617280, -1927480, 6028230, 561052, -1969470, 6020200, 686046, -2288390, 5893990, 617280, -1927480, 6028230, 686046, -2288390, 5893990, 711819, -2317560, 5879620, 544047, -1926290, 6035610, 485019, -1889820, 6052030, 611484, -2257380, 5913990, 611484, -2257380, 5913990, 485019, -1889820, 6052030, 542041, -2211560, 5937860, 485019, -1889820, 6052030, 486790, -2157850, 5962200, 542041, -2211560, 5937860, 485019, -1889820, 6052030, 400134, -1854550, 6069010, 486790, -2157850, 5962200, 452323, -2159240, 5964390, 377700, -1902400, 6055720, 415727, -2130230, 5977380, 400134, -1854550, 6069010, 377700, -1902400, 6055720, 452323, -2159240, 5964390, 486790, -2157850, 5962200, 400134, -1854550, 6069010, 452323, -2159240, 5964390, 246947, -1785490, 6097630, 241923, -1786180, 6097630, 334806, -2189370, 5961180, 246947, -1785490, 6097630, 334806, -2189370, 5961180, 310439, -1875230, 6067920, 246947, -1785490, 6097630, 239381, -1774140, 6101220, 241923, -1786180, 6097630, 310439, -1875230, 6067920, 334806, -2189370, 5961180, 316761, -1944750, 6045820, 401449, -2164450, 5966130, 316761, -1944750, 6045820, 334806, -2189370, 5961180, 377700, -1902400, 6055720, 316761, -1944750, 6045820, 401449, -2164450, 5966130, 377700, -1902400, 6055720, 401449, -2164450, 5966130, 415727, -2130230, 5977380, 307046, -1430910, 6187150, 300945, -1405090, 6193330, 259669, -1417570, 6192360, 307046, -1430910, 6187150, 259669, -1417570, 6192360, 250681, -1507900, 6171490, 259669, -1417570, 6192360, 251831, -1393960, 6198e3, 250681, -1507900, 6171490, 142022, -752105, 6310820, 148276, -789950, 6306080, 148709, -789496, 6306120, 148276, -789950, 6306080, 250681, -1507900, 6171490, 251831, -1393960, 6198e3, 148276, -789950, 6306080, 251831, -1393960, 6198e3, 148709, -789496, 6306120, 149689, -788465, 6306230, 142022, -752105, 6310820, 148709, -789496, 6306120, 148709, -789496, 6306120, 251831, -1393960, 6198e3, 279168, -1355520, 6205300, 148709, -789496, 6306120, 279168, -1355520, 6205300, 149689, -788465, 6306230, 180830, -738993, 6311370, 142022, -752105, 6310820, 149689, -788465, 6306230, 180830, -738993, 6311370, 149689, -788465, 6306230, 183140, -750709, 6309930, 183140, -750709, 6309930, 149689, -788465, 6306230, 279168, -1355520, 6205300, 180830, -738993, 6311370, 183140, -750709, 6309930, 183212, -750611, 6309940, 183140, -750709, 6309930, 279168, -1355520, 6205300, 281422, -1311430, 6214600, 183140, -750709, 6309930, 281422, -1311430, 6214600, 183212, -750611, 6309940, 180830, -738993, 6311370, 183212, -750611, 6309940, 183377, -750423, 6309960, 183212, -750611, 6309940, 281422, -1311430, 6214600, 268544, -1154700, 6245980, 183212, -750611, 6309940, 268544, -1154700, 6245980, 183377, -750423, 6309960, 309378, -1273320, 6221150, 268544, -1154700, 6245980, 281422, -1311430, 6214600, 290315, -1183780, 6239600, 268544, -1154700, 6245980, 309378, -1273320, 6221150, 320996, -1231740, 6228880, 290315, -1183780, 6239600, 309378, -1273320, 6221150, 193102, -2182900, 5969760, 141486, -1914960, 6061840, 111158, -1850380, 6082360, 164638, -1826770, 6088240, 141486, -1914960, 6061840, 193102, -2182900, 5969760, 334806, -2189370, 5961180, 164638, -1826770, 6088240, 193102, -2182900, 5969760, 218956, -1789140, 6097630, 164638, -1826770, 6088240, 334806, -2189370, 5961180, 218956, -1789140, 6097630, 334806, -2189370, 5961180, 241923, -1786180, 6097630, 241923, -1786180, 6097630, 239381, -1774140, 6101220, 218956, -1789140, 6097630, 55078.1, -2058990, 6016160, 18256.9, -1856610, 6081450, 4018.16, -2059270, 6016320, 50363.3, -1812330, 6094520, 18256.9, -1856610, 6081450, 55078.1, -2058990, 6016160, 110820, -2157800, 5980900, 50363.3, -1812330, 6094520, 55078.1, -2058990, 6016160, 111158, -1850380, 6082360, 50363.3, -1812330, 6094520, 110820, -2157800, 5980900, 193102, -2182900, 5969760, 111158, -1850380, 6082360, 110820, -2157800, 5980900, 360416, -2964690, 5616820, 342228, -2891690, 5655620, 323612, -2966650, 5618020, 411576, -2883590, 5655140, 342228, -2891690, 5655620, 360416, -2964690, 5616820, 411576, -2883590, 5655140, 360416, -2964690, 5616820, 413217, -2902760, 5645270, 400881, -2728600, 5731770, 342308, -2704940, 5746670, 368170, -2814450, 5692590, 412112, -2775190, 5708720, 400881, -2728600, 5731770, 368170, -2814450, 5692590, 448226, -2827110, 5680640, 412112, -2775190, 5708720, 368170, -2814450, 5692590, 446480, -2761960, 5712520, 412112, -2775190, 5708720, 448226, -2827110, 5680640, 486561, -2788880, 5696260, 446480, -2761960, 5712520, 448226, -2827110, 5680640, 292591, -2831540, 5688530, 257128, -2652900, 5775110, 234789, -2670660, 5767920, 286863, -2676550, 5762860, 257128, -2652900, 5775110, 292591, -2831540, 5688530, 335160, -2773190, 5714690, 286863, -2676550, 5762860, 292591, -2831540, 5688530, 342308, -2704940, 5746670, 286863, -2676550, 5762860, 335160, -2773190, 5714690, 368170, -2814450, 5692590, 342308, -2704940, 5746670, 335160, -2773190, 5714690, 204684, -2832480, 5691880, 188637, -2621300, 5792040, 179141, -2714940, 5749340, 222379, -2626970, 5788300, 188637, -2621300, 5792040, 204684, -2832480, 5691880, 222379, -2626970, 5788300, 204684, -2832480, 5691880, 226205, -2889290, 5662630, 234789, -2670660, 5767920, 222379, -2626970, 5788300, 226205, -2889290, 5662630, 292591, -2831540, 5688530, 234789, -2670660, 5767920, 226205, -2889290, 5662630, 204684, -2832480, 5691880, 178115, -2794320, 5711460, 138103, -2846110, 5687110, 204684, -2832480, 5691880, 179141, -2714940, 5749340, 178115, -2794320, 5711460, 1997390, -3115230, 5177420, 1946980, -3112820, 5197900, 2123760, -3305830, 5007270, 1997390, -3115230, 5177420, 2123760, -3305830, 5007270, 2129790, -3300880, 5007970, 2163320, -3347440, 4962800, 2129790, -3300880, 5007970, 2123760, -3305830, 5007270, 2060570, -3165370, 5122330, 1997390, -3115230, 5177420, 2129790, -3300880, 5007970, 2060570, -3165370, 5122330, 2129790, -3300880, 5007970, 2134890, -3296680, 5008570, 2134890, -3296680, 5008570, 2129790, -3300880, 5007970, 2163320, -3347440, 4962800, 2164980, -3271560, 5012100, 2060570, -3165370, 5122330, 2134890, -3296680, 5008570, 2134890, -3296680, 5008570, 2163320, -3347440, 4962800, 2188150, -3294580, 4987060, 2134890, -3296680, 5008570, 2188150, -3294580, 4987060, 2164980, -3271560, 5012100, 2110040, -3146960, 5113590, 2060570, -3165370, 5122330, 2164980, -3271560, 5012100, 2110040, -3146960, 5113590, 2164980, -3271560, 5012100, 2172690, -3265030, 5013010, 2172690, -3265030, 5013010, 2164980, -3271560, 5012100, 2188150, -3294580, 4987060, 2206950, -3235630, 5017070, 2110040, -3146960, 5113590, 2172690, -3265030, 5013010, 2172690, -3265030, 5013010, 2188150, -3294580, 4987060, 2211140, -3239390, 5012830, 2172690, -3265030, 5013010, 2211140, -3239390, 5012830, 2206950, -3235630, 5017070, 2151030, -3159960, 5088600, 2110040, -3146960, 5113590, 2206950, -3235630, 5017070, 2151030, -3159960, 5088600, 2206950, -3235630, 5017070, 2207760, -3234940, 5017170, 2211140, -3239390, 5012830, 2207760, -3234940, 5017170, 2206950, -3235630, 5017070, 1869470, -3497480, 4978580, 1877030, -3492240, 4979410, 1674530, -3122810, 5285490, 1869470, -3497480, 4978580, 1674530, -3122810, 5285490, 1614300, -3056360, 5342380, 1869470, -3497480, 4978580, 1614300, -3056360, 5342380, 1600510, -3063600, 5342380, 1942740, -3611640, 4868540, 1877030, -3492240, 4979410, 1869470, -3497480, 4978580, 1614300, -3056360, 5342380, 1557010, -2991300, 5395580, 1600510, -3063600, 5342380, 1772250, -3128420, 5250420, 1674530, -3122810, 5285490, 1877030, -3492240, 4979410, 1772250, -3128420, 5250420, 1877030, -3492240, 4979410, 1898390, -3477290, 4981760, 1898390, -3477290, 4981760, 1877030, -3492240, 4979410, 1942740, -3611640, 4868540, 1966740, -3428010, 4989350, 1772250, -3128420, 5250420, 1898390, -3477290, 4981760, 1898390, -3477290, 4981760, 1942740, -3611640, 4868540, 2041520, -3540750, 4880100, 1898390, -3477290, 4981760, 2041520, -3540750, 4880100, 1966740, -3428010, 4989350, 1847660, -3145430, 5214380, 1772250, -3128420, 5250420, 1966740, -3428010, 4989350, 1847660, -3145430, 5214380, 1966740, -3428010, 4989350, 1981850, -3416800, 4991040, 1981850, -3416800, 4991040, 1966740, -3428010, 4989350, 2041520, -3540750, 4880100, 2034150, -3377130, 4996950, 1847660, -3145430, 5214380, 1981850, -3416800, 4991040, 1981850, -3416800, 4991040, 2041520, -3540750, 4880100, 2082150, -3434630, 4938040, 1981850, -3416800, 4991040, 2082150, -3434630, 4938040, 2034150, -3377130, 4996950, 1946980, -3112820, 5197900, 1847660, -3145430, 5214380, 2034150, -3377130, 4996950, 1946980, -3112820, 5197900, 2034150, -3377130, 4996950, 2053020, -3362470, 4999110, 2053020, -3362470, 4999110, 2034150, -3377130, 4996950, 2082150, -3434630, 4938040, 2123760, -3305830, 5007270, 1946980, -3112820, 5197900, 2053020, -3362470, 4999110, 2053020, -3362470, 4999110, 2082150, -3434630, 4938040, 2163320, -3347440, 4962800, 2053020, -3362470, 4999110, 2163320, -3347440, 4962800, 2123760, -3305830, 5007270, 1495470, -3116220, 5342380, 1467860, -3129320, 5342380, 1744080, -3580670, 4965020, 1495470, -3116220, 5342380, 1744080, -3580670, 4965020, 1749020, -3577530, 4965550, 1798680, -3665480, 4883530, 1749020, -3577530, 4965550, 1744080, -3580670, 4965020, 1358260, -2858370, 5519080, 1343960, -2914640, 5493260, 1467860, -3129320, 5342380, 1358260, -2858370, 5519080, 1467860, -3129320, 5342380, 1495470, -3116220, 5342380, 1525060, -3101850, 5342380, 1495470, -3116220, 5342380, 1749020, -3577530, 4965550, 1525060, -3101850, 5342380, 1749020, -3577530, 4965550, 1754400, -3574090, 4966120, 1754400, -3574090, 4966120, 1749020, -3577530, 4965550, 1798680, -3665480, 4883530, 1434980, -2916860, 5469170, 1358260, -2858370, 5519080, 1495470, -3116220, 5342380, 1434980, -2916860, 5469170, 1495470, -3116220, 5342380, 1525060, -3101850, 5342380, 1525060, -3101850, 5342380, 1754400, -3574090, 4966120, 1858370, -3505130, 4977370, 1525060, -3101850, 5342380, 1858370, -3505130, 4977370, 1551860, -3088530, 5342380, 1754400, -3574090, 4966120, 1798680, -3665480, 4883530, 1942740, -3611640, 4868540, 1754400, -3574090, 4966120, 1942740, -3611640, 4868540, 1858370, -3505130, 4977370, 1551860, -3088530, 5342380, 1434980, -2916860, 5469170, 1525060, -3101850, 5342380, 1600510, -3063600, 5342380, 1551860, -3088530, 5342380, 1858370, -3505130, 4977370, 1600510, -3063600, 5342380, 1858370, -3505130, 4977370, 1869470, -3497480, 4978580, 1942740, -3611640, 4868540, 1869470, -3497480, 4978580, 1858370, -3505130, 4977370, 1557010, -2991300, 5395580, 1434980, -2916860, 5469170, 1551860, -3088530, 5342380, 1557010, -2991300, 5395580, 1551860, -3088530, 5342380, 1600510, -3063600, 5342380, 1392840, -3163420, 5342380, 1603500, -3666020, 4950210, 1658600, -3633520, 4955970, 1392840, -3163420, 5342380, 1658600, -3633520, 4955970, 1402910, -3158970, 5342380, 1603500, -3666020, 4950210, 1636820, -3746350, 4879120, 1701800, -3710780, 4884040, 1603500, -3666020, 4950210, 1701800, -3710780, 4884040, 1658600, -3633520, 4955970, 1402910, -3158970, 5342380, 1337770, -3033390, 5430540, 1392840, -3163420, 5342380, 1445600, -3139670, 5342380, 1402910, -3158970, 5342380, 1658600, -3633520, 4955970, 1445600, -3139670, 5342380, 1658600, -3633520, 4955970, 1665450, -3629400, 4956690, 1665450, -3629400, 4956690, 1658600, -3633520, 4955970, 1701800, -3710780, 4884040, 1343960, -2914640, 5493260, 1337770, -3033390, 5430540, 1402910, -3158970, 5342380, 1343960, -2914640, 5493260, 1402910, -3158970, 5342380, 1445600, -3139670, 5342380, 1445600, -3139670, 5342380, 1665450, -3629400, 4956690, 1744080, -3580670, 4965020, 1445600, -3139670, 5342380, 1744080, -3580670, 4965020, 1467860, -3129320, 5342380, 1665450, -3629400, 4956690, 1701800, -3710780, 4884040, 1798680, -3665480, 4883530, 1665450, -3629400, 4956690, 1798680, -3665480, 4883530, 1744080, -3580670, 4965020, 1467860, -3129320, 5342380, 1343960, -2914640, 5493260, 1445600, -3139670, 5342380, 1272640, -3213670, 5342380, 1473670, -3737960, 4936830, 1538590, -3702790, 4943480, 1272640, -3213670, 5342380, 1538590, -3702790, 4943480, 1284340, -3209010, 5342380, 1473670, -3737960, 4936830, 1533670, -3895670, 4795550, 1605510, -3826130, 4827690, 1473670, -3737960, 4936830, 1605510, -3826130, 4827690, 1538590, -3702790, 4943480, 1284340, -3209010, 5342380, 1220620, -3078940, 5432490, 1272640, -3213670, 5342380, 1316880, -3195790, 5342380, 1284340, -3209010, 5342380, 1538590, -3702790, 4943480, 1316880, -3195790, 5342380, 1538590, -3702790, 4943480, 1546090, -3698630, 4944250, 1605510, -3826130, 4827690, 1546090, -3698630, 4944250, 1538590, -3702790, 4943480, 1280740, -3114990, 5398220, 1220620, -3078940, 5432490, 1284340, -3209010, 5342380, 1280740, -3114990, 5398220, 1284340, -3209010, 5342380, 1316880, -3195790, 5342380, 1385520, -3166640, 5342380, 1316880, -3195790, 5342380, 1546090, -3698630, 4944250, 1385520, -3166640, 5342380, 1546090, -3698630, 4944250, 1562310, -3689540, 4945930, 1562310, -3689540, 4945930, 1546090, -3698630, 4944250, 1605510, -3826130, 4827690, 1337770, -3033390, 5430540, 1280740, -3114990, 5398220, 1316880, -3195790, 5342380, 1337770, -3033390, 5430540, 1316880, -3195790, 5342380, 1385520, -3166640, 5342380, 1385520, -3166640, 5342380, 1562310, -3689540, 4945930, 1603500, -3666020, 4950210, 1385520, -3166640, 5342380, 1603500, -3666020, 4950210, 1392840, -3163420, 5342380, 1562310, -3689540, 4945930, 1605510, -3826130, 4827690, 1636820, -3746350, 4879120, 1562310, -3689540, 4945930, 1636820, -3746350, 4879120, 1603500, -3666020, 4950210, 1337770, -3033390, 5430540, 1385520, -3166640, 5342380, 1392840, -3163420, 5342380, 1199230, -3241780, 5342380, 1386620, -3782720, 4928010, 1459780, -3745290, 4935410, 1199230, -3241780, 5342380, 1459780, -3745290, 4935410, 1220250, -3233920, 5342380, 1386620, -3782720, 4928010, 1472850, -4036440, 4697850, 1533670, -3895670, 4795550, 1386620, -3782720, 4928010, 1533670, -3895670, 4795550, 1459780, -3745290, 4935410, 1220250, -3233920, 5342380, 1105920, -2976950, 5512760, 1199230, -3241780, 5342380, 1229920, -3230260, 5342380, 1220250, -3233920, 5342380, 1459780, -3745290, 4935410, 1229920, -3230260, 5342380, 1459780, -3745290, 4935410, 1462320, -3743960, 4935670, 1533670, -3895670, 4795550, 1462320, -3743960, 4935670, 1459780, -3745290, 4935410, 1166110, -3084060, 5441490, 1105920, -2976950, 5512760, 1220250, -3233920, 5342380, 1166110, -3084060, 5441490, 1220250, -3233920, 5342380, 1229920, -3230260, 5342380, 1272640, -3213670, 5342380, 1229920, -3230260, 5342380, 1462320, -3743960, 4935670, 1272640, -3213670, 5342380, 1462320, -3743960, 4935670, 1473670, -3737960, 4936830, 1473670, -3737960, 4936830, 1462320, -3743960, 4935670, 1533670, -3895670, 4795550, 1220620, -3078940, 5432490, 1166110, -3084060, 5441490, 1229920, -3230260, 5342380, 1220620, -3078940, 5432490, 1229920, -3230260, 5342380, 1272640, -3213670, 5342380, 1215920, -2752380, 5604900, 1023820, -2637280, 5697230, 1070160, -2770130, 5625700, 1215920, -2752380, 5604900, 1121590, -2690430, 5654100, 1023820, -2637280, 5697230, 1215920, -2752380, 5604900, 1194290, -2724320, 5623100, 1121590, -2690430, 5654100, 1170340, -2662960, 5657200, 1047970, -2479630, 5762810, 980338, -2443760, 5789790, 1125510, -2496450, 5741030, 1047970, -2479630, 5762810, 1170340, -2662960, 5657200, 1240020, -2660900, 5643400, 1125510, -2496450, 5741030, 1170340, -2662960, 5657200, 1240020, -2660900, 5643400, 1154590, -2512590, 5728290, 1125510, -2496450, 5741030, 1225440, -2588860, 5679730, 1154590, -2512590, 5728290, 1240020, -2660900, 5643400, 1170340, -2662960, 5657200, 980338, -2443760, 5789790, 1023820, -2637280, 5697230, 963879, -2387480, 5815800, 1023820, -2637280, 5697230, 980338, -2443760, 5789790, 365550, -1072570, 6255630, 222574, -720421, 6312180, 331961, -1102480, 6252320, 251967, -718130, 6311340, 222574, -720421, 6312180, 365550, -1072570, 6255630, 365879, -977013, 6271140, 251967, -718130, 6311340, 365550, -1072570, 6255630, 281506, -714645, 6310490, 251967, -718130, 6311340, 365879, -977013, 6271140, 381744, -937305, 6276220, 281506, -714645, 6310490, 365879, -977013, 6271140, 359499, -874700, 6286490, 281506, -714645, 6310490, 381744, -937305, 6276220, 392231, -859889, 6286580, 359499, -874700, 6286490, 381744, -937305, 6276220, 1940240, -4054230, 4510240, 1796720, -3873430, 4722150, 1827300, -4109200, 4507680, 1940240, -4054230, 4510240, 1855760, -3943420, 4641230, 1796720, -3873430, 4722150, 1940240, -4054230, 4510240, 1904450, -3987790, 4583620, 1855760, -3943420, 4641230, 2012380, -3979230, 4545050, 1904450, -3987790, 4583620, 1940240, -4054230, 4510240, 2012380, -3979230, 4545050, 1940240, -4054230, 4510240, 1987800, -4120520, 4429270, 1987800, -4120520, 4429270, 1940240, -4054230, 4510240, 1930200, -4208950, 4371600, 1940240, -4054230, 4510240, 1871970, -4229010, 4377520, 1930200, -4208950, 4371600, 1940240, -4054230, 4510240, 1842720, -4170460, 4445120, 1871970, -4229010, 4377520, 2177300, -3934410, 4508150, 2012380, -3979230, 4545050, 2044660, -4057360, 4461350, 2177300, -3934410, 4508150, 2120800, -3909390, 4556270, 2012380, -3979230, 4545050, 2144310, -3792860, 4642360, 2120800, -3909390, 4556270, 2177300, -3934410, 4508150, 2177830, -3841250, 4587010, 2144310, -3792860, 4642360, 2177300, -3934410, 4508150, 2235570, -3841540, 4559100, 2177830, -3841250, 4587010, 2177300, -3934410, 4508150, 2609130, -3528800, 4612720, 2500770, -3415120, 4755140, 2533670, -3482420, 4688890, 2533740, -3372920, 4767710, 2500770, -3415120, 4755140, 2609130, -3528800, 4612720, 2635100, -3505700, 4615560, 2533740, -3372920, 4767710, 2609130, -3528800, 4612720, 2567820, -3402500, 4728550, 2533740, -3372920, 4767710, 2635100, -3505700, 4615560, 2617320, -3429270, 4682160, 2567820, -3402500, 4728550, 2635100, -3505700, 4615560, 2510600, -3486220, 4698400, 2463200, -3556140, 4671200, 2479740, -3594700, 4633040, 2510600, -3486220, 4698400, 2393440, -3409960, 4813320, 2463200, -3556140, 4671200, 2510600, -3486220, 4698400, 2408850, -3373820, 4830950, 2393440, -3409960, 4813320, 2482660, -3352270, 4808690, 2408850, -3373820, 4830950, 2510600, -3486220, 4698400, 2482660, -3352270, 4808690, 2510600, -3486220, 4698400, 2500770, -3415120, 4755140, 2500770, -3415120, 4755140, 2510600, -3486220, 4698400, 2533670, -3482420, 4688890, 2192260, -3342310, 4953600, 2182500, -3407270, 4913760, 2327320, -3628690, 4684960, 2192260, -3342310, 4953600, 2327320, -3628690, 4684960, 2258310, -3450520, 4849340, 2392230, -3580340, 4689440, 2258310, -3450520, 4849340, 2327320, -3628690, 4684960, 2281440, -3400670, 4873500, 2258310, -3450520, 4849340, 2392230, -3580340, 4689440, 2463200, -3556140, 4671200, 2281440, -3400670, 4873500, 2392230, -3580340, 4689440, 2463200, -3556140, 4671200, 2327340, -3427450, 4833140, 2281440, -3400670, 4873500, 2393440, -3409960, 4813320, 2327340, -3427450, 4833140, 2463200, -3556140, 4671200, 2256330, -3362080, 4911560, 2192260, -3342310, 4953600, 2258310, -3450520, 4849340, 2225790, -3283900, 4977500, 2192260, -3342310, 4953600, 2256330, -3362080, 4911560, 2256780, -3295970, 4955670, 2225790, -3283900, 4977500, 2256330, -3362080, 4911560, 2254480, -3268910, 4974470, 2225790, -3283900, 4977500, 2256780, -3295970, 4955670, 1750980, -4152720, 4498140, 1645140, -4029380, 4646800, 1686560, -4131e3, 4542240, 1663760, -3835980, 4800260, 1645140, -4029380, 4646800, 1750980, -4152720, 4498140, 1827300, -4109200, 4507680, 1663760, -3835980, 4800260, 1750980, -4152720, 4498140, 1759810, -3783630, 4807500, 1663760, -3835980, 4800260, 1827300, -4109200, 4507680, 1759810, -3783630, 4807500, 1827300, -4109200, 4507680, 1796720, -3873430, 4722150, 1835990, -3793020, 4771720, 1759810, -3783630, 4807500, 1796720, -3873430, 4722150, 1605140, -4020150, 4668580, 1547590, -3959150, 4739130, 1562980, -4051600, 4655770, 1663760, -3835980, 4800260, 1547590, -3959150, 4739130, 1605140, -4020150, 4668580, 1663760, -3835980, 4800260, 1605140, -4020150, 4668580, 1645140, -4029380, 4646800, 1547590, -3959150, 4739130, 1531850, -4040510, 4675580, 1562980, -4051600, 4655770, 1547590, -3959150, 4739130, 1498930, -4118280, 4618430, 1531850, -4040510, 4675580, 1547590, -3959150, 4739130, 1472540, -4102550, 4640710, 1498930, -4118280, 4618430, 1498930, -4118280, 4618430, 1472540, -4102550, 4640710, 1498060, -4185070, 4558680, 1472540, -4102550, 4640710, 1484090, -4228420, 4523350, 1498060, -4185070, 4558680, 1103550, -3275580, 5342380, 1289250, -3829630, 4918270, 1302690, -3823350, 4919600, 1103550, -3275580, 5342380, 1302690, -3823350, 4919600, 1108010, -3274080, 5342380, 1289250, -3829630, 4918270, 1434150, -4262720, 4507340, 1456660, -4250890, 4511270, 1289250, -3829630, 4918270, 1456660, -4250890, 4511270, 1302690, -3823350, 4919600, 1108010, -3274080, 5342380, 985890, -2925070, 5562740, 1103550, -3275580, 5342380, 1108140, -3274030, 5342380, 1108010, -3274080, 5342380, 1302690, -3823350, 4919600, 1108140, -3274030, 5342380, 1302690, -3823350, 4919600, 1303050, -3823170, 4919650, 1303050, -3823170, 4919650, 1302690, -3823350, 4919600, 1456660, -4250890, 4511270, 1303050, -3823170, 4919650, 1456660, -4250890, 4511270, 1415890, -4136550, 4628220, 1108140, -3274030, 5342380, 985890, -2925070, 5562740, 1108010, -3274080, 5342380, 1472540, -4102550, 4640710, 1415890, -4136550, 4628220, 1456660, -4250890, 4511270, 1472540, -4102550, 4640710, 1456660, -4250890, 4511270, 1484090, -4228420, 4523350, 1008690, -3306030, 5342380, 1171770, -3881990, 4906680, 1251780, -3846820, 4914560, 1008690, -3306030, 5342380, 1251780, -3846820, 4914560, 1038700, -3296720, 5342380, 1171770, -3881990, 4906680, 1294400, -4327570, 4487930, 1432870, -4283650, 4487990, 1171770, -3881990, 4906680, 1432870, -4283650, 4487990, 1251780, -3846820, 4914560, 1038700, -3296720, 5342380, 879301, -2859720, 5614e3, 1008690, -3306030, 5342380, 1089160, -3280400, 5342380, 1038700, -3296720, 5342380, 1251780, -3846820, 4914560, 1089160, -3280400, 5342380, 1251780, -3846820, 4914560, 1278250, -3834730, 4917180, 1432870, -4283650, 4487990, 1278250, -3834730, 4917180, 1251780, -3846820, 4914560, 958458, -2894230, 5583490, 879301, -2859720, 5614e3, 1038700, -3296720, 5342380, 958458, -2894230, 5583490, 1038700, -3296720, 5342380, 1089160, -3280400, 5342380, 1102180, -3276040, 5342380, 1089160, -3280400, 5342380, 1278250, -3834730, 4917180, 1102180, -3276040, 5342380, 1278250, -3834730, 4917180, 1285130, -3831540, 4917860, 1285130, -3831540, 4917860, 1278250, -3834730, 4917180, 1432870, -4283650, 4487990, 985890, -2925070, 5562740, 958458, -2894230, 5583490, 1089160, -3280400, 5342380, 985890, -2925070, 5562740, 1089160, -3280400, 5342380, 1102180, -3276040, 5342380, 1102180, -3276040, 5342380, 1285130, -3831540, 4917860, 1289250, -3829620, 4918280, 1102180, -3276040, 5342380, 1289250, -3829620, 4918280, 1103550, -3275580, 5342380, 1285130, -3831540, 4917860, 1432870, -4283650, 4487990, 1434150, -4262720, 4507340, 1285130, -3831540, 4917860, 1434150, -4262720, 4507340, 1289250, -3829620, 4918280, 985890, -2925070, 5562740, 1102180, -3276040, 5342380, 1103550, -3275580, 5342380, 910617, -3334370, 5342380, 1066190, -3925250, 4896400, 1134240, -3897770, 4903010, 910617, -3334370, 5342380, 1134240, -3897770, 4903010, 935859, -3327380, 5342380, 1066190, -3925250, 4896400, 1179350, -4360890, 4487390, 1294400, -4327570, 4487930, 1066190, -3925250, 4896400, 1294400, -4327570, 4487930, 1134240, -3897770, 4903010, 935859, -3327380, 5342380, 789090, -2878150, 5617960, 910617, -3334370, 5342380, 970466, -3317450, 5342380, 935859, -3327380, 5342380, 1134240, -3897770, 4903010, 970466, -3317450, 5342380, 1134240, -3897770, 4903010, 1151980, -3890370, 4904740, 1294400, -4327570, 4487930, 1151980, -3890370, 4904740, 1134240, -3897770, 4903010, 823399, -2841540, 5631570, 789090, -2878150, 5617960, 935859, -3327380, 5342380, 823399, -2841540, 5631570, 935859, -3327380, 5342380, 970466, -3317450, 5342380, 1008690, -3306030, 5342380, 970466, -3317450, 5342380, 1151980, -3890370, 4904740, 1008690, -3306030, 5342380, 1151980, -3890370, 4904740, 1171770, -3881990, 4906680, 1171770, -3881990, 4906680, 1151980, -3890370, 4904740, 1294400, -4327570, 4487930, 879301, -2859720, 5614e3, 823399, -2841540, 5631570, 970466, -3317450, 5342380, 879301, -2859720, 5614e3, 970466, -3317450, 5342380, 1008690, -3306030, 5342380, 843039, -3352100, 5342380, 976757, -3959190, 4887780, 1023820, -3941630, 4892300, 843039, -3352100, 5342380, 1023820, -3941630, 4892300, 860299, -3347710, 5342380, 976757, -3959190, 4887780, 1080790, -4458920, 4415780, 1148640, -4384020, 4472900, 976757, -3959190, 4887780, 1148640, -4384020, 4472900, 1023820, -3941630, 4892300, 860299, -3347710, 5342380, 734956, -2882550, 5623020, 843039, -3352100, 5342380, 903230, -3336380, 5342380, 860299, -3347710, 5342380, 1023820, -3941630, 4892300, 903230, -3336380, 5342380, 1023820, -3941630, 4892300, 1045970, -3933130, 4894440, 1045970, -3933130, 4894440, 1023820, -3941630, 4892300, 1148640, -4384020, 4472900, 789090, -2878150, 5617960, 734956, -2882550, 5623020, 860299, -3347710, 5342380, 789090, -2878150, 5617960, 860299, -3347710, 5342380, 903230, -3336380, 5342380, 903230, -3336380, 5342380, 1045970, -3933130, 4894440, 1066190, -3925250, 4896400, 903230, -3336380, 5342380, 1066190, -3925250, 4896400, 910617, -3334370, 5342380, 1045970, -3933130, 4894440, 1148640, -4384020, 4472900, 1179350, -4360890, 4487390, 1045970, -3933130, 4894440, 1179350, -4360890, 4487390, 1066190, -3925250, 4896400, 789090, -2878150, 5617960, 903230, -3336380, 5342380, 910617, -3334370, 5342380, 745464, -3577290, 5210080, 767868, -3808850, 5041070, 825669, -4011120, 4873380, 745464, -3577290, 5210080, 825669, -4011120, 4873380, 849667, -4003320, 4875650, 982065, -4518520, 4378360, 849667, -4003320, 4875650, 825669, -4011120, 4873380, 801700, -3499170, 5254300, 745464, -3577290, 5210080, 849667, -4003320, 4875650, 801700, -3499170, 5254300, 849667, -4003320, 4875650, 892368, -3989020, 4879710, 892368, -3989020, 4879710, 849667, -4003320, 4875650, 982065, -4518520, 4378360, 920855, -3979190, 4882420, 801700, -3499170, 5254300, 892368, -3989020, 4879710, 892368, -3989020, 4879710, 982065, -4518520, 4378360, 1054330, -4502230, 4378330, 892368, -3989020, 4879710, 1054330, -4502230, 4378330, 920855, -3979190, 4882420, 820506, -3428560, 5297470, 801700, -3499170, 5254300, 920855, -3979190, 4882420, 820506, -3428560, 5297470, 920855, -3979190, 4882420, 940747, -3972180, 4884330, 940747, -3972180, 4884330, 920855, -3979190, 4882420, 1054330, -4502230, 4378330, 951215, -3968440, 4885330, 820506, -3428560, 5297470, 940747, -3972180, 4884330, 940747, -3972180, 4884330, 1054330, -4502230, 4378330, 1072460, -4467110, 4409570, 940747, -3972180, 4884330, 1072460, -4467110, 4409570, 951215, -3968440, 4885330, 810847, -3360030, 5342380, 820506, -3428560, 5297470, 951215, -3968440, 4885330, 810847, -3360030, 5342380, 951215, -3968440, 4885330, 971370, -3961160, 4887260, 810847, -3360030, 5342380, 971370, -3961160, 4887260, 841079, -3352590, 5342380, 971370, -3961160, 4887260, 951215, -3968440, 4885330, 1072460, -4467110, 4409570, 734956, -2882550, 5623020, 810847, -3360030, 5342380, 841079, -3352590, 5342380, 841079, -3352590, 5342380, 971370, -3961160, 4887260, 976757, -3959190, 4887780, 841079, -3352590, 5342380, 976757, -3959190, 4887780, 843039, -3352100, 5342380, 971370, -3961160, 4887260, 1072460, -4467110, 4409570, 1080790, -4458920, 4415780, 971370, -3961160, 4887260, 1080790, -4458920, 4415780, 976757, -3959190, 4887780, 734956, -2882550, 5623020, 841079, -3352590, 5342380, 843039, -3352100, 5342380, 800422, -3362530, 5342380, 801189, -3369090, 5338150, 820506, -3428560, 5297470, 800422, -3362530, 5342380, 820506, -3428560, 5297470, 810847, -3360030, 5342380, 734956, -2882550, 5623020, 800422, -3362530, 5342380, 810847, -3360030, 5342380, 800422, -3362530, 5342380, 796384, -3363490, 5342380, 801189, -3369090, 5338150, 734956, -2882550, 5623020, 743638, -3300400, 5388810, 796384, -3363490, 5342380, 734956, -2882550, 5623020, 796384, -3363490, 5342380, 800422, -3362530, 5342380, 734956, -2882550, 5623020, 703983, -3133200, 5492250, 743638, -3300400, 5388810, 734956, -2882550, 5623020, 642525, -2877010, 5637060, 703983, -3133200, 5492250, 642525, -2877010, 5637060, 612221, -2906930, 5625150, 661569, -3052840, 5542210, 703983, -3133200, 5492250, 642525, -2877010, 5637060, 661569, -3052840, 5542210, 387345, -723911, 6303870, 350698, -708961, 6307680, 400716, -750283, 6299970, 400716, -750283, 6299970, 350698, -708961, 6307680, 389200, -809928, 6293350, 350698, -708961, 6307680, 318079, -708660, 6309430, 389200, -809928, 6293350, 389200, -809928, 6293350, 318079, -708660, 6309430, 363493, -846191, 6290140, 318079, -708660, 6309430, 359499, -874700, 6286490, 363493, -846191, 6290140, 184234, -749379, 6310050, 180830, -738993, 6311370, 183377, -750423, 6309960, 183377, -750423, 6309960, 268544, -1154700, 6245980, 325896, -1127620, 6248180, 183377, -750423, 6309960, 325896, -1127620, 6248180, 184234, -749379, 6310050, 187319, -745585, 6310410, 180830, -738993, 6311370, 184234, -749379, 6310050, 187319, -745585, 6310410, 184234, -749379, 6310050, 325896, -1127620, 6248180, 187319, -745585, 6310410, 325896, -1127620, 6248180, 190630, -748899, 6309920, 222574, -720421, 6312180, 190630, -748899, 6309920, 325896, -1127620, 6248180, 222574, -720421, 6312180, 325896, -1127620, 6248180, 331961, -1102480, 6252320, 178114, -1488050, 6178780, 126284, -1092890, 6261470, 110004, -1082670, 6263540, 150313, -1049350, 6268340, 126284, -1092890, 6261470, 178114, -1488050, 6178780, 250681, -1507900, 6171490, 150313, -1049350, 6268340, 178114, -1488050, 6178780, 127430, -810909, 6303890, 120312, -768295, 6309330, 125554, -812725, 6303690, 125554, -812725, 6303690, 150313, -1049350, 6268340, 250681, -1507900, 6171490, 125554, -812725, 6303690, 250681, -1507900, 6171490, 127430, -810909, 6303890, 142022, -752105, 6310820, 120312, -768295, 6309330, 127430, -810909, 6303890, 142022, -752105, 6310820, 127430, -810909, 6303890, 148276, -789950, 6306080, 148276, -789950, 6306080, 127430, -810909, 6303890, 250681, -1507900, 6171490, 120904, -1375380, 6206030, 98398.6, -1217320, 6239130, 83668.9, -1308020, 6221080, 120904, -1375380, 6206030, 101159, -1178740, 6246440, 98398.6, -1217320, 6239130, 110004, -1082670, 6263540, 101159, -1178740, 6246440, 120904, -1375380, 6206030, 178114, -1488050, 6178780, 110004, -1082670, 6263540, 120904, -1375380, 6206030, 178114, -1488050, 6178780, 120904, -1375380, 6206030, 102765, -1512e3, 6174700, 120904, -1375380, 6206030, 62912.4, -1501050, 6177890, 102765, -1512e3, 6174700, 120904, -1375380, 6206030, 54682.9, -1332490, 6216240, 62912.4, -1501050, 6177890, 54682.9, -1332490, 6216240, 40726.4, -1340660, 6214610, 55315.9, -1418870, 6197220, 62912.4, -1501050, 6177890, 54682.9, -1332490, 6216240, 55315.9, -1418870, 6197220, 62912.4, -1501050, 6177890, 55315.9, -1418870, 6197220, 13303.7, -1496620, 6179260, 55315.9, -1418870, 6197220, 9678.96, -1444530, 6191570, 13303.7, -1496620, 6179260, 1185690, -2216130, 5842390, 1121370, -2241750, 5845290, 1207160, -2286020, 5811190, 1207160, -2286020, 5811190, 1121370, -2241750, 5845290, 1188420, -2427830, 5757650, 1034370, -2189680, 5880730, 1024590, -2183520, 5884700, 1030500, -2192680, 5880290, 1034370, -2189680, 5880730, 1030500, -2192680, 5880290, 1188420, -2427830, 5757650, 1034370, -2189680, 5880730, 1188420, -2427830, 5757650, 1121370, -2241750, 5845290, 1030500, -2192680, 5880290, 1024590, -2183520, 5884700, 1028870, -2193930, 5880110, 1028870, -2193930, 5880110, 1117830, -2413540, 5777620, 1188420, -2427830, 5757650, 1028870, -2193930, 5880110, 1188420, -2427830, 5757650, 1030500, -2192680, 5880290, 1024590, -2183520, 5884700, 954625, -2190250, 5893900, 981920, -2229210, 5874900, 1024590, -2183520, 5884700, 981920, -2229210, 5874900, 1028870, -2193930, 5880110, 1028870, -2193930, 5880110, 981920, -2229210, 5874900, 1117830, -2413540, 5777620, 981920, -2229210, 5874900, 954625, -2190250, 5893900, 971367, -2236890, 5873740, 971367, -2236890, 5873740, 1012480, -2353360, 5821410, 1117830, -2413540, 5777620, 971367, -2236890, 5873740, 1117830, -2413540, 5777620, 981920, -2229210, 5874900, 954625, -2190250, 5893900, 958374, -2246230, 5872330, 971367, -2236890, 5873740, 958374, -2246230, 5872330, 963879, -2387480, 5815800, 1012480, -2353360, 5821410, 958374, -2246230, 5872330, 1012480, -2353360, 5821410, 971367, -2236890, 5873740, 889273, -2091850, 5939380, 771754, -1988270, 5990820, 839329, -2164490, 5920720, 889273, -2091850, 5939380, 817814, -2015550, 5975680, 771754, -1988270, 5990820, 1182570, -3247890, 5342380, 1108140, -3274030, 5342380, 1303050, -3823170, 4919650, 1182570, -3247890, 5342380, 1303050, -3823170, 4919650, 1335250, -3807870, 4922860, 1335250, -3807870, 4922860, 1303050, -3823170, 4919650, 1415890, -4136550, 4628220, 1079020, -2899900, 5558660, 985890, -2925070, 5562740, 1108140, -3274030, 5342380, 1079020, -2899900, 5558660, 1108140, -3274030, 5342380, 1182570, -3247890, 5342380, 1182570, -3247890, 5342380, 1335250, -3807870, 4922860, 1336400, -3807320, 4922970, 1182570, -3247890, 5342380, 1336400, -3807320, 4922970, 1185200, -3246930, 5342380, 1336400, -3807320, 4922970, 1335250, -3807870, 4922860, 1415890, -4136550, 4628220, 1079020, -2899900, 5558660, 1182570, -3247890, 5342380, 1185200, -3246930, 5342380, 1079020, -2899900, 5558660, 1185200, -3246930, 5342380, 1105920, -2976950, 5512760, 1185200, -3246930, 5342380, 1336400, -3807320, 4922970, 1386620, -3782720, 4928010, 1185200, -3246930, 5342380, 1386620, -3782720, 4928010, 1199230, -3241780, 5342380, 1336400, -3807320, 4922970, 1415890, -4136550, 4628220, 1472850, -4036440, 4697850, 1336400, -3807320, 4922970, 1472850, -4036440, 4697850, 1386620, -3782720, 4928010, 1105920, -2976950, 5512760, 1185200, -3246930, 5342380, 1199230, -3241780, 5342380, 606559, -2408740, 5854880, 576699, -2295120, 5903020, 543189, -2318030, 5897280, 615278, -2314740, 5891530, 576699, -2295120, 5903020, 606559, -2408740, 5854880, 615278, -2314740, 5891530, 606559, -2408740, 5854880, 626086, -2372320, 5867600, 627103, -2357370, 5873470, 615278, -2314740, 5891530, 626086, -2372320, 5867600, 543189, -2318030, 5897280, 538786, -2378470, 5873730, 560480, -2425180, 5852710, 606559, -2408740, 5854880, 543189, -2318030, 5897280, 560480, -2425180, 5852710, -253105, -2303840, 5922210, -274434, -2185430, 5965680, -303049, -2265990, 5934370, -253105, -2303840, 5922210, -253685, -2206910, 5958740, -274434, -2185430, 5965680, -244292, -2227950, 5951340, -253685, -2206910, 5958740, -253105, -2303840, 5922210, -224496, -2270120, 5936270, -244292, -2227950, 5951340, -253105, -2303840, 5922210, -336895, -2272720, 593e4, -343860, -2191490, 5959900, -382991, -2217880, 5947820, -310602, -2150560, 5976500, -343860, -2191490, 5959900, -336895, -2272720, 593e4, -303049, -2265990, 5934370, -310602, -2150560, 5976500, -336895, -2272720, 593e4, -274434, -2185430, 5965680, -310602, -2150560, 5976500, -303049, -2265990, 5934370, -2396700, -3084250, 5025300, -2124650, -2726380, 5342380, -2127690, -2724e3, 5342380, -1319800, -1680910, 5989290, -1357050, -1714500, 5971530, -1854420, -2362480, 5607900, -1319800, -1680910, 5989290, -1854420, -2362480, 5607900, -1848520, -2365660, 5608500, -1848520, -2365660, 5608500, -1854420, -2362480, 5607900, -2127690, -2724e3, 5342380, -1848520, -2365660, 5608500, -2127690, -2724e3, 5342380, -2124650, -2726380, 5342380, -2115640, -2733370, 5342380, -2124650, -2726380, 5342380, -2396700, -3084250, 5025300, -1306250, -1705600, 5985300, -1319800, -1680910, 5989290, -1848520, -2365660, 5608500, -1306250, -1705600, 5985300, -1848520, -2365660, 5608500, -1831190, -2374930, 5610260, -1831190, -2374930, 5610260, -1848520, -2365660, 5608500, -2124650, -2726380, 5342380, -1831190, -2374930, 5610260, -2124650, -2726380, 5342380, -2115640, -2733370, 5342380, -2115640, -2733370, 5342380, -2396700, -3084250, 5025300, -2453780, -3205240, 4921660, -2115640, -2733370, 5342380, -2453780, -3205240, 4921660, -2101250, -2744450, 5342380, -1822180, -2379690, 5611170, -1306250, -1705600, 5985300, -1831190, -2374930, 5610260, -1831190, -2374930, 5610260, -2115640, -2733370, 5342380, -2101250, -2744450, 5342380, -1831190, -2374930, 5610260, -2101250, -2744450, 5342380, -1822180, -2379690, 5611170, -2073220, -2765690, 5342380, -2101250, -2744450, 5342380, -2453780, -3205240, 4921660, -1310250, -1819640, 5950980, -1306250, -1705600, 5985300, -1822180, -2379690, 5611170, -1310250, -1819640, 5950980, -1822180, -2379690, 5611170, -1773870, -2404520, 5616030, -1773870, -2404520, 5616030, -1822180, -2379690, 5611170, -2101250, -2744450, 5342380, -1773870, -2404520, 5616030, -2101250, -2744450, 5342380, -2073220, -2765690, 5342380, -2073220, -2765690, 5342380, -2453780, -3205240, 4921660, -2372e3, -3310120, 4892450, -2073220, -2765690, 5342380, -2372e3, -3310120, 4892450, -2015630, -2807940, 5342380, -1740180, -2421180, 5619390, -1310250, -1819640, 5950980, -1773870, -2404520, 5616030, -1773870, -2404520, 5616030, -2073220, -2765690, 5342380, -2015630, -2807940, 5342380, -1773870, -2404520, 5616030, -2015630, -2807940, 5342380, -1740180, -2421180, 5619390, -1992820, -2824170, 5342380, -2015630, -2807940, 5342380, -2372e3, -3310120, 4892450, -1227500, -1791040, 5977060, -1310250, -1819640, 5950980, -1740180, -2421180, 5619390, -1227500, -1791040, 5977060, -1740180, -2421180, 5619390, -1702e3, -2439390, 5623180, -1702e3, -2439390, 5623180, -1740180, -2421180, 5619390, -2015630, -2807940, 5342380, -1702e3, -2439390, 5623180, -2015630, -2807940, 5342380, -1992820, -2824170, 5342380, -1992820, -2824170, 5342380, -2372e3, -3310120, 4892450, -2351640, -3369740, 4861690, -1992820, -2824170, 5342380, -2351640, -3369740, 4861690, -1969440, -2840520, 5342380, -1227500, -1791040, 5977060, -1702e3, -2439390, 5623180, -1688150, -2445840, 5624540, -1702e3, -2439390, 5623180, -1992820, -2824170, 5342380, -1969440, -2840520, 5342380, -1702e3, -2439390, 5623180, -1969440, -2840520, 5342380, -1688150, -2445840, 5624540, -1969440, -2840520, 5342380, -2351640, -3369740, 4861690, -2281650, -3516930, 4790740, -1969440, -2840520, 5342380, -2281650, -3516930, 4790740, -1909820, -2880940, 5342380, -1653540, -2461560, 5627940, -1227500, -1791040, 5977060, -1688150, -2445840, 5624540, -1688150, -2445840, 5624540, -1969440, -2840520, 5342380, -1909820, -2880940, 5342380, -1688150, -2445840, 5624540, -1909820, -2880940, 5342380, -1653540, -2461560, 5627940, -2396700, -3084250, 5025300, -2127690, -2724e3, 5342380, -2137850, -2716040, 5342380, -1357050, -1714500, 5971530, -1394690, -1715680, 5962570, -1873740, -2351910, 5605930, -1357050, -1714500, 5971530, -1873740, -2351910, 5605930, -1854420, -2362480, 5607900, -1854420, -2362480, 5607900, -1873740, -2351910, 5605930, -2137850, -2716040, 5342380, -1854420, -2362480, 5607900, -2137850, -2716040, 5342380, -2127690, -2724e3, 5342380, -2181040, -2681480, 5342380, -2441270, -3000770, 5054120, -2396700, -3084250, 5025300, -2181040, -2681480, 5342380, -2396700, -3084250, 5025300, -2137850, -2716040, 5342380, -1873740, -2351910, 5605930, -1394690, -1715680, 5962570, -1900450, -2337e3, 5603190, -1900450, -2337e3, 5603190, -2181040, -2681480, 5342380, -2137850, -2716040, 5342380, -1900450, -2337e3, 5603190, -2137850, -2716040, 5342380, -1873740, -2351910, 5605930, -2187400, -2676290, 5342380, -2404940, -2937740, 5107910, -2441270, -3000770, 5054120, -2187400, -2676290, 5342380, -2441270, -3000770, 5054120, -2181040, -2681480, 5342380, -1394690, -1715680, 5962570, -1904440, -2334740, 5602780, -1900450, -2337e3, 5603190, -1904440, -2334740, 5602780, -2187400, -2676290, 5342380, -2181040, -2681480, 5342380, -1904440, -2334740, 5602780, -2181040, -2681480, 5342380, -1900450, -2337e3, 5603190, -2187400, -2676290, 5342380, -2194590, -2670400, 5342380, -2404940, -2937740, 5107910, -1394690, -1715680, 5962570, -1387360, -1665460, 5978400, -1920440, -2325620, 5601130, -1394690, -1715680, 5962570, -1920440, -2325620, 5601130, -1904440, -2334740, 5602780, -1904440, -2334740, 5602780, -1920440, -2325620, 5601130, -2194590, -2670400, 5342380, -1904440, -2334740, 5602780, -2194590, -2670400, 5342380, -2187400, -2676290, 5342380, -2219700, -2649560, 5342380, -2339130, -2789650, 5219520, -2404940, -2937740, 5107910, -2219700, -2649560, 5342380, -2404940, -2937740, 5107910, -2194590, -2670400, 5342380, -1920440, -2325620, 5601130, -1387360, -1665460, 5978400, -1936600, -2316230, 5599460, -1936600, -2316230, 5599460, -2219700, -2649560, 5342380, -2194590, -2670400, 5342380, -1936600, -2316230, 5599460, -2194590, -2670400, 5342380, -1920440, -2325620, 5601130, -2221230, -2648280, 5342380, -2303240, -2744120, 5259190, -2339130, -2789650, 5219520, -2221230, -2648280, 5342380, -2339130, -2789650, 5219520, -2219700, -2649560, 5342380, -1387360, -1665460, 5978400, -1937570, -2315670, 5599360, -1936600, -2316230, 5599460, -1937570, -2315670, 5599360, -2221230, -2648280, 5342380, -2219700, -2649560, 5342380, -1937570, -2315670, 5599360, -2219700, -2649560, 5342380, -1936600, -2316230, 5599460, -2221230, -2648280, 5342380, -2228480, -2642190, 5342380, -2303240, -2744120, 5259190, -1387360, -1665460, 5978400, -1451640, -1644770, 5968920, -1968920, -2297100, 5596090, -1387360, -1665460, 5978400, -1968920, -2297100, 5596090, -1937570, -2315670, 5599360, -1937570, -2315670, 5599360, -1968920, -2297100, 5596090, -2228480, -2642190, 5342380, -1937570, -2315670, 5599360, -2228480, -2642190, 5342380, -2221230, -2648280, 5342380, -2299040, -2581020, 5342380, -2344450, -2630610, 5298570, -2303240, -2744120, 5259190, -2299040, -2581020, 5342380, -2303240, -2744120, 5259190, -2228480, -2642190, 5342380, -1968920, -2297100, 5596090, -1451640, -1644770, 5968920, -2014680, -2269030, 5591290, -2014680, -2269030, 5591290, -2299040, -2581020, 5342380, -2228480, -2642190, 5342380, -2014680, -2269030, 5591290, -2228480, -2642190, 5342380, -1968920, -2297100, 5596090, -2299040, -2581020, 5342380, -2328660, -2554330, 5342380, -2344450, -2630610, 5298570, -1451640, -1644770, 5968920, -2047040, -2248480, 5587860, -2014680, -2269030, 5591290, -2047040, -2248480, 5587860, -2318600, -251e4, 5367540, -2328660, -2554330, 5342380, -2047040, -2248480, 5587860, -2328660, -2554330, 5342380, -2299040, -2581020, 5342380, -2047040, -2248480, 5587860, -2299040, -2581020, 5342380, -2014680, -2269030, 5591290, -2339130, -2789650, 5219520, -2394690, -2800250, 5188760, -2424010, -2836640, 5155500, -2404940, -2937740, 5107910, -2339130, -2789650, 5219520, -2424010, -2836640, 5155500, -1451640, -1644770, 5968920, -1525440, -1639910, 5951940, -2068750, -2234360, 5585540, -1451640, -1644770, 5968920, -2068750, -2234360, 5585540, -2047040, -2248480, 5587860, -2047040, -2248480, 5587860, -2068750, -2234360, 5585540, -2318600, -251e4, 5367540, -2068750, -2234360, 5585540, -1525440, -1639910, 5951940, -2088530, -2221260, 5583420, -2088530, -2221260, 5583420, -2299340, -2435230, 5409820, -2318600, -251e4, 5367540, -2088530, -2221260, 5583420, -2318600, -251e4, 5367540, -2068750, -2234360, 5585540, -1525440, -1639910, 5951940, -2120190, -2199820, 558e4, -2088530, -2221260, 5583420, -2120190, -2199820, 558e4, -2308e3, -2367500, 5435950, -2299340, -2435230, 5409820, -2120190, -2199820, 558e4, -2299340, -2435230, 5409820, -2088530, -2221260, 5583420, -1525440, -1639910, 5951940, -1558530, -1590680, 5956700, -2136260, -2188720, 5578240, -1525440, -1639910, 5951940, -2136260, -2188720, 5578240, -2120190, -2199820, 558e4, -2120190, -2199820, 558e4, -2136260, -2188720, 5578240, -2308e3, -2367500, 5435950, -2136260, -2188720, 5578240, -1558530, -1590680, 5956700, -2159830, -2172150, 5575660, -2159830, -2172150, 5575660, -2308050, -2312490, 5459400, -2308e3, -2367500, 5435950, -2159830, -2172150, 5575660, -2308e3, -2367500, 5435950, -2136260, -2188720, 5578240, -1558530, -1590680, 5956700, -2180620, -2157230, 5573380, -2159830, -2172150, 5575660, -2180620, -2157230, 5573380, -2293980, -2256180, 5488620, -2308050, -2312490, 5459400, -2180620, -2157230, 5573380, -2308050, -2312490, 5459400, -2159830, -2172150, 5575660, -1558530, -1590680, 5956700, -1615120, -1580200, 5944480, -2189020, -2151140, 5572450, -1558530, -1590680, 5956700, -2189020, -2151140, 5572450, -2180620, -2157230, 5573380, -2180620, -2157230, 5573380, -2189020, -2151140, 5572450, -2293980, -2256180, 5488620, -2189020, -2151140, 5572450, -1615120, -1580200, 5944480, -2225070, -2124470, 5568430, -2225070, -2124470, 5568430, -2355730, -2237070, 5470370, -2293980, -2256180, 5488620, -2225070, -2124470, 5568430, -2293980, -2256180, 5488620, -2189020, -2151140, 5572450, -1615120, -1580200, 5944480, -1670670, -1585190, 5927890, -2231980, -2119250, 5567650, -1615120, -1580200, 5944480, -2231980, -2119250, 5567650, -2225070, -2124470, 5568430, -2225070, -2124470, 5568430, -2231980, -2119250, 5567650, -2355730, -2237070, 5470370, -2231980, -2119250, 5567650, -1670670, -1585190, 5927890, -2264590, -2094240, 5563970, -2264590, -2094240, 5563970, -2432740, -2232940, 5438480, -2355730, -2237070, 5470370, -2264590, -2094240, 5563970, -2355730, -2237070, 5470370, -2231980, -2119250, 5567650, -1670670, -1585190, 5927890, -1692160, -1548080, 5931570, -2274690, -2086340, 5562820, -1670670, -1585190, 5927890, -2274690, -2086340, 5562820, -2264590, -2094240, 5563970, -2264590, -2094240, 5563970, -2274690, -2086340, 5562820, -2432740, -2232940, 5438480, -2274690, -2086340, 5562820, -1692160, -1548080, 5931570, -2306380, -2061130, 5559200, -2306380, -2061130, 5559200, -2420100, -2153120, 5475920, -2432740, -2232940, 5438480, -2306380, -2061130, 5559200, -2432740, -2232940, 5438480, -2274690, -2086340, 5562820, -1692160, -1548080, 5931570, -2334250, -2038380, 5555970, -2306380, -2061130, 5559200, -2334250, -2038380, 5555970, -2414310, -2095850, 5500480, -2420100, -2153120, 5475920, -2334250, -2038380, 5555970, -2420100, -2153120, 5475920, -2306380, -2061130, 5559200, -1723440, -1396310, 5959980, -2021520, -1637460, 5803950, -2386580, -1994150, 5549830, -1723440, -1396310, 5959980, -2386580, -1994150, 5549830, -2384830, -1995660, 5550040, -2429100, -2037320, 5515830, -2384830, -1995660, 5550040, -2386580, -1994150, 5549830, -1696140, -1468150, 5950600, -1723440, -1396310, 5959980, -2384830, -1995660, 5550040, -1696140, -1468150, 5950600, -2384830, -1995660, 5550040, -2379580, -2000180, 5550660, -2379580, -2000180, 5550660, -2384830, -1995660, 5550040, -2429100, -2037320, 5515830, -2341720, -2032180, 5555110, -1696140, -1468150, 5950600, -2379580, -2000180, 5550660, -2379580, -2000180, 5550660, -2429100, -2037320, 5515830, -2414310, -2095850, 5500480, -2379580, -2000180, 5550660, -2414310, -2095850, 5500480, -2341720, -2032180, 5555110, -1692160, -1548080, 5931570, -1696140, -1468150, 5950600, -2341720, -2032180, 5555110, -1692160, -1548080, 5931570, -2341720, -2032180, 5555110, -2334250, -2038380, 5555970, -2334250, -2038380, 5555970, -2341720, -2032180, 5555110, -2414310, -2095850, 5500480, -926796, -2095880, 5932270, -918616, -1958280, 5980040, -964352, -2047500, 5943100, -872048, -1984600, 5978350, -918616, -1958280, 5980040, -926796, -2095880, 5932270, -926347, -2149610, 5913210, -872048, -1984600, 5978350, -926796, -2095880, 5932270, -819655, -1987060, 5984900, -872048, -1984600, 5978350, -926347, -2149610, 5913210, -855561, -2168190, 5917060, -819655, -1987060, 5984900, -926347, -2149610, 5913210, -692894, -1800350, 6059030, -819655, -1987060, 5984900, -855561, -2168190, 5917060, -753792, -2189170, 5923130, -692894, -1800350, 6059030, -855561, -2168190, 5917060, -753792, -2189170, 5923130, -638715, -1762510, 6075970, -692894, -1800350, 6059030, -753792, -2189170, 5923130, -621931, -1805500, 6065150, -638715, -1762510, 6075970, -1001100, -2042780, 5938670, -979090, -1948820, 5973580, -1006770, -1947250, 5969510, -918616, -1958280, 5980040, -979090, -1948820, 5973580, -1001100, -2042780, 5938670, -918616, -1958280, 5980040, -1001100, -2042780, 5938670, -964352, -2047500, 5943100, -477649, -2229360, 5936740, -493603, -2184780, 5951890, -498972, -2263800, 5922040, -498972, -2263800, 5922040, -493603, -2184780, 5951890, -566203, -2231060, 5928370, -493603, -2184780, 5951890, -472607, -2082710, 5989810, -566203, -2231060, 5928370, -416279, -2145370, 5971970, -472607, -2082710, 5989810, -493603, -2184780, 5951890, -416279, -2145370, 5971970, -493603, -2184780, 5951890, -429178, -2189770, 5955030, -566203, -2231060, 5928370, -506063, -1837e3, 6066460, -625180, -2186020, 5939140, -566203, -2231060, 5928370, -512324, -1942500, 6033200, -506063, -1837e3, 6066460, -566203, -2231060, 5928370, -520434, -2017450, 6008030, -512324, -1942500, 6033200, -472607, -2082710, 5989810, -520434, -2017450, 6008030, -566203, -2231060, 5928370, -506063, -1837e3, 6066460, -529670, -1785500, 6079720, -625180, -2186020, 5939140, -625180, -2186020, 5939140, -529670, -1785500, 6079720, -671286, -2178940, 5936730, -529670, -1785500, 6079720, -555390, -1759760, 6084890, -671286, -2178940, 5936730, -671286, -2178940, 5936730, -555390, -1759760, 6084890, -598485, -1876880, 6045940, -555390, -1759760, 6084890, -587289, -1765870, 6080160, -598485, -1876880, 6045940, -671286, -2178940, 5936730, -598485, -1876880, 6045940, -628629, -1913330, 6031540, -671286, -2178940, 5936730, -628629, -1913330, 6031540, -753792, -2189170, 5923130, -628629, -1913330, 6031540, -621931, -1805500, 6065150, -753792, -2189170, 5923130, -692894, -1800350, 6059030, -715854, -1733270, 6075780, -819655, -1987060, 5984900, -819655, -1987060, 5984900, -715854, -1733270, 6075780, -876119, -1935880, 5993600, -715854, -1733270, 6075780, -796070, -1733490, 6065800, -876119, -1935880, 5993600, -876119, -1935880, 5993600, -796070, -1733490, 6065800, -781803, -1662240, 6087420, -760477, -1694750, 6081190, -781803, -1662240, 6087420, -796070, -1733490, 6065800, -781803, -1662240, 6087420, -952270, -1817200, 6018920, -902342, -1840850, 6019430, -876119, -1935880, 5993600, -781803, -1662240, 6087420, -902342, -1840850, 6019430, -876119, -1935880, 5993600, -902342, -1840850, 6019430, -951432, -1909360, 5990650, -902342, -1840850, 6019430, -997396, -1883360, 5991400, -951432, -1909360, 5990650, -902342, -1840850, 6019430, -996194, -1839960, 6004980, -997396, -1883360, 5991400, -952270, -1817200, 6018920, -929591, -1707610, 6054220, -993518, -1763070, 6028290, -952270, -1817200, 6018920, -888950, -1681350, 6067570, -929591, -1707610, 6054220, -781803, -1662240, 6087420, -888950, -1681350, 6067570, -952270, -1817200, 6018920, -502887, -1828210, 6069360, -516063, -1731100, 6096480, -530693, -1742340, 6092050, -478116, -1737920, 6097630, -516063, -1731100, 6096480, -502887, -1828210, 6069360, -478116, -1737920, 6097630, -502887, -1828210, 6069360, -474414, -1738930, 6097630, -474313, -1738560, 6097740, -478116, -1737920, 6097630, -474414, -1738930, 6097630, -474414, -1738930, 6097630, -502887, -1828210, 6069360, -457106, -1767500, 6090780, -474414, -1738930, 6097630, -457106, -1767500, 6090780, -474020, -1739040, 6097630, -474020, -1739040, 6097630, -474313, -1738560, 6097740, -474414, -1738930, 6097630, 372573, -1763560, 6097630, 379033, -1845150, 6073200, 414154, -1839900, 6072510, 372573, -1763560, 6097630, 414154, -1839900, 6072510, 373226, -1763420, 6097630, 373226, -1763420, 6097630, 372433, -1761900, 6098120, 372573, -1763560, 6097630, 374281, -1763200, 6097630, 373226, -1763420, 6097630, 414154, -1839900, 6072510, 374281, -1763200, 6097630, 414154, -1839900, 6072510, 439153, -1806960, 6080580, 374281, -1763200, 6097630, 372433, -1761900, 6098120, 373226, -1763420, 6097630, 448953, -1834910, 6071550, 439153, -1806960, 6080580, 414154, -1839900, 6072510, 335750, -1861510, 6070780, 304364, -1776600, 6097630, 289230, -1779130, 6097630, 299840, -1763980, 6101490, 286162, -1773470, 6099410, 289230, -1779130, 6097630, 299840, -1763980, 6101490, 289230, -1779130, 6097630, 304364, -1776600, 6097630, 371810, -1763720, 6097630, 304364, -1776600, 6097630, 335750, -1861510, 6070780, 372433, -1761900, 6098120, 299840, -1763980, 6101490, 304364, -1776600, 6097630, 372433, -1761900, 6098120, 304364, -1776600, 6097630, 371810, -1763720, 6097630, 371810, -1763720, 6097630, 335750, -1861510, 6070780, 346332, -1866150, 6068770, 371810, -1763720, 6097630, 346332, -1866150, 6068770, 372025, -1763680, 6097630, 372433, -1761900, 6098120, 371810, -1763720, 6097630, 372025, -1763680, 6097630, 372025, -1763680, 6097630, 346332, -1866150, 6068770, 379033, -1845150, 6073200, 372025, -1763680, 6097630, 379033, -1845150, 6073200, 372573, -1763560, 6097630, 372433, -1761900, 6098120, 372025, -1763680, 6097630, 372573, -1763560, 6097630, -298618, -2032120, 6018130, -287114, -1779800, 6097540, -331306, -2018110, 6021110, -287114, -1779800, 6097540, -348629, -1974150, 6034600, -331306, -2018110, 6021110, -287585, -1779400, 6097630, -323001, -1773310, 6097630, -348629, -1974150, 6034600, -287585, -1779400, 6097630, -348629, -1974150, 6034600, -287114, -1779800, 6097540, -287585, -1779400, 6097630, -320026, -1751250, 6104110, -323001, -1773310, 6097630, -324486, -1773040, 6097630, -344567, -1870410, 6067570, -348629, -1974150, 6034600, -324486, -1773040, 6097630, -348629, -1974150, 6034600, -323001, -1773310, 6097630, -323001, -1773310, 6097630, -320026, -1751250, 6104110, -324486, -1773040, 6097630, -339730, -1770180, 6097630, -366508, -1795030, 6088870, -344567, -1870410, 6067570, -339730, -1770180, 6097630, -344567, -1870410, 6067570, -324486, -1773040, 6097630, -320026, -1751250, 6104110, -339730, -1770180, 6097630, -324486, -1773040, 6097630, -27670.7, -1802280, 6097630, -70762.3, -1801100, 6097630, -65536.9, -1872980, 6076140, -15827.9, -1778810, 6104510, -74010.3, -1751220, 6112010, -70762.3, -1801100, 6097630, -15827.9, -1778810, 6104510, -70762.3, -1801100, 6097630, -27670.7, -1802280, 6097630, -84626.1, -1800500, 6097630, -105651, -1891890, 6069760, -65536.9, -1872980, 6076140, -84626.1, -1800500, 6097630, -65536.9, -1872980, 6076140, -70762.3, -1801100, 6097630, -70762.3, -1801100, 6097630, -74010.3, -1751220, 6112010, -84626.1, -1800500, 6097630, -89091.2, -1800280, 6097630, -146968, -1968860, 6044530, -105651, -1891890, 6069760, -89091.2, -1800280, 6097630, -105651, -1891890, 6069760, -84626.1, -1800500, 6097630, -74010.3, -1751220, 6112010, -89091.2, -1800280, 6097630, -84626.1, -1800500, 6097630, -89091.2, -1800280, 6097630, -139797, -1797060, 6097630, -146968, -1968860, 6044530, -74010.3, -1751220, 6112010, -137341, -1743640, 6113070, -139797, -1797060, 6097630, -74010.3, -1751220, 6112010, -139797, -1797060, 6097630, -89091.2, -1800280, 6097630, -185768, -1961600, 6045820, -191217, -1813730, 6091340, -197286, -1866490, 6075290, -181330, -1793340, 6097630, -191217, -1813730, 6091340, -185768, -1961600, 6045820, -181330, -1793340, 6097630, -185768, -1961600, 6045820, -172291, -1794230, 6097630, -172291, -1794230, 6097630, -170310, -1770100, 6104690, -181330, -1793340, 6097630, -148371, -1796370, 6097630, -172291, -1794230, 6097630, -185768, -1961600, 6045820, -137341, -1743640, 6113070, -170310, -1770100, 6104690, -172291, -1794230, 6097630, -137341, -1743640, 6113070, -172291, -1794230, 6097630, -148371, -1796370, 6097630, -148371, -1796370, 6097630, -185768, -1961600, 6045820, -146968, -1968860, 6044530, -148371, -1796370, 6097630, -146968, -1968860, 6044530, -139797, -1797060, 6097630, -139797, -1797060, 6097630, -137341, -1743640, 6113070, -148371, -1796370, 6097630, -1638120, -3859160, 4790560, -1362760, -3176500, 5342380, -1406370, -3157430, 5342380, -968212, -2227050, 5877970, -1028530, -2175370, 5887020, -1206110, -2618410, 5670380, -968212, -2227050, 5877970, -1206110, -2618410, 5670380, -1139190, -2634900, 5676530, -1139190, -2634900, 5676530, -1206110, -2618410, 5670380, -1406370, -3157430, 5342380, -1139190, -2634900, 5676530, -1406370, -3157430, 5342380, -1362760, -3176500, 5342380, -1296550, -3204090, 5342380, -1362760, -3176500, 5342380, -1638120, -3859160, 4790560, -857943, -2258790, 5882960, -968212, -2227050, 5877970, -1139190, -2634900, 5676530, -857943, -2258790, 5882960, -1139190, -2634900, 5676530, -1035900, -2656960, 5685970, -1035900, -2656960, 5685970, -1139190, -2634900, 5676530, -1362760, -3176500, 5342380, -1035900, -2656960, 5685970, -1362760, -3176500, 5342380, -1296550, -3204090, 5342380, -1296550, -3204090, 5342380, -1638120, -3859160, 4790560, -1437340, -3938350, 4790560, -1296550, -3204090, 5342380, -1437340, -3938350, 4790560, -1203650, -3240140, 5342380, -1002620, -2663200, 5688990, -857943, -2258790, 5882960, -1035900, -2656960, 5685970, -1035900, -2656960, 5685970, -1296550, -3204090, 5342380, -1203650, -3240140, 5342380, -1035900, -2656960, 5685970, -1203650, -3240140, 5342380, -1002620, -2663200, 5688990, -1182470, -3247930, 5342380, -1203650, -3240140, 5342380, -1437340, -3938350, 4790560, -818095, -2254310, 5890300, -857943, -2258790, 5882960, -1002620, -2663200, 5688990, -818095, -2254310, 5890300, -1002620, -2663200, 5688990, -969833, -2668940, 5691960, -969833, -2668940, 5691960, -1002620, -2663200, 5688990, -1203650, -3240140, 5342380, -969833, -2668940, 5691960, -1203650, -3240140, 5342380, -1182470, -3247930, 5342380, -1182470, -3247930, 5342380, -1437340, -3938350, 4790560, -1229250, -4008170, 4790560, -1182470, -3247930, 5342380, -1229250, -4008170, 4790560, -1086e3, -3281440, 5342380, -936200, -2674410, 5695010, -818095, -2254310, 5890300, -969833, -2668940, 5691960, -969833, -2668940, 5691960, -1182470, -3247930, 5342380, -1086e3, -3281440, 5342380, -969833, -2668940, 5691960, -1086e3, -3281440, 5342380, -936200, -2674410, 5695010, -1229250, -4008170, 4790560, -1060880, -3289650, 5342380, -1086e3, -3281440, 5342380, -796033, -2327670, 5864900, -818095, -2254310, 5890300, -936200, -2674410, 5695010, -796033, -2327670, 5864900, -936200, -2674410, 5695010, -897852, -2680130, 5698470, -897852, -2680130, 5698470, -936200, -2674410, 5695010, -1086e3, -3281440, 5342380, -897852, -2680130, 5698470, -1086e3, -3281440, 5342380, -1060880, -3289650, 5342380, -1229250, -4008170, 4790560, -1032190, -3298760, 5342380, -1060880, -3289650, 5342380, -735744, -2292680, 5886380, -796033, -2327670, 5864900, -897852, -2680130, 5698470, -735744, -2292680, 5886380, -897852, -2680130, 5698470, -853809, -2686020, 5702440, -853809, -2686020, 5702440, -897852, -2680130, 5698470, -1060880, -3289650, 5342380, -853809, -2686020, 5702440, -1060880, -3289650, 5342380, -1032190, -3298760, 5342380, -1905350, -3734460, 4790560, -1583540, -3072400, 5342380, -1634050, -3045840, 5342380, -1061630, -2030450, 5932420, -1124560, -1952290, 5946950, -1416600, -2554990, 5650720, -1061630, -2030450, 5932420, -1416600, -2554990, 5650720, -1339250, -2580370, 5658e3, -1339250, -2580370, 5658e3, -1416600, -2554990, 5650720, -1634050, -3045840, 5342380, -1339250, -2580370, 5658e3, -1634050, -3045840, 5342380, -1583540, -3072400, 5342380, -1552850, -3088030, 5342380, -1583540, -3072400, 5342380, -1905350, -3734460, 4790560, -1020340, -2071230, 5925610, -1061630, -2030450, 5932420, -1339250, -2580370, 5658e3, -1020340, -2071230, 5925610, -1339250, -2580370, 5658e3, -1291530, -2594820, 5662460, -1291530, -2594820, 5662460, -1339250, -2580370, 5658e3, -1583540, -3072400, 5342380, -1291530, -2594820, 5662460, -1583540, -3072400, 5342380, -1552850, -3088030, 5342380, -1552850, -3088030, 5342380, -1905350, -3734460, 4790560, -1841e3, -3766590, 4790560, -1552850, -3088030, 5342380, -1841e3, -3766590, 4790560, -1521830, -3103430, 5342380, -1277420, -2598920, 5663770, -1020340, -2071230, 5925610, -1291530, -2594820, 5662460, -1291530, -2594820, 5662460, -1552850, -3088030, 5342380, -1521830, -3103430, 5342380, -1291530, -2594820, 5662460, -1521830, -3103430, 5342380, -1277420, -2598920, 5663770, -1500180, -3113950, 5342380, -1521890, -3103400, 5342380, -1841e3, -3766590, 4790560, -1028530, -2175370, 5887020, -1020340, -2071230, 5925610, -1277420, -2598920, 5663770, -1028530, -2175370, 5887020, -1277420, -2598920, 5663770, -1243690, -2608390, 5666900, -1243690, -2608390, 5666900, -1277420, -2598920, 5663770, -1521890, -3103400, 5342380, -1243690, -2608390, 5666900, -1521890, -3103400, 5342380, -1500180, -3113950, 5342380, -1500180, -3113950, 5342380, -1841e3, -3766590, 4790560, -1638120, -3859160, 4790560, -1500180, -3113950, 5342380, -1638120, -3859160, 4790560, -1406370, -3157430, 5342380, -1206110, -2618410, 5670380, -1028530, -2175370, 5887020, -1243690, -2608390, 5666900, -1243690, -2608390, 5666900, -1500180, -3113950, 5342380, -1406370, -3157430, 5342380, -1243690, -2608390, 5666900, -1406370, -3157430, 5342380, -1206110, -2618410, 5670380, -774800, -4120220, 4790560, -659943, -3392900, 5342380, -704711, -3383880, 5342380, -483082, -2384220, 5876230, -545717, -2322850, 5895170, -610232, -2705610, 5724250, -483082, -2384220, 5876230, -610232, -2705610, 5724250, -541683, -2707170, 5730370, -541683, -2707170, 5730370, -610232, -2705610, 5724250, -704711, -3383880, 5342380, -541683, -2707170, 5730370, -704711, -3383880, 5342380, -659943, -3392900, 5342380, -619273, -3400550, 5342380, -659943, -3392900, 5342380, -774800, -4120220, 4790560, -415507, -2380280, 5882940, -483082, -2384220, 5876230, -541683, -2707170, 5730370, -415507, -2380280, 5882940, -541683, -2707170, 5730370, -478886, -2707060, 5735970, -478886, -2707060, 5735970, -541683, -2707170, 5730370, -659943, -3392900, 5342380, -478886, -2707060, 5735970, -659943, -3392900, 5342380, -619273, -3400550, 5342380, -619273, -3400550, 5342380, -774800, -4120220, 4790560, -527528, -4159050, 4790610, -619273, -3400550, 5342380, -527528, -4159050, 4790610, -505208, -3419360, 5342380, -450282, -2706530, 5738520, -415507, -2380280, 5882940, -478886, -2707060, 5735970, -478886, -2707060, 5735970, -619273, -3400550, 5342380, -505208, -3419360, 5342380, -478886, -2707060, 5735970, -505208, -3419360, 5342380, -450282, -2706530, 5738520, -527528, -4159050, 4790610, -466923, -3424800, 5342380, -505208, -3419360, 5342380, -355145, -2392550, 5881920, -415507, -2380280, 5882940, -450282, -2706530, 5738520, -355145, -2392550, 5881920, -450282, -2706530, 5738520, -391852, -2704480, 5743740, -391852, -2704480, 5743740, -450282, -2706530, 5738520, -505208, -3419360, 5342380, -391852, -2704480, 5743740, -505208, -3419360, 5342380, -466923, -3424800, 5342380, -527528, -4159050, 4790610, -446071, -3427580, 5342380, -466923, -3424800, 5342380, -311791, -2315340, 5914970, -355145, -2392550, 5881920, -391856, -2704480, 5743740, -311791, -2315340, 5914970, -391856, -2704480, 5743740, -359846, -2702820, 5746590, -359846, -2702820, 5746590, -391856, -2704480, 5743740, -466923, -3424800, 5342380, -359846, -2702820, 5746590, -466923, -3424800, 5342380, -446071, -3427580, 5342380, -311791, -2315340, 5914970, -350379, -2328150, 5907820, -355145, -2392550, 5881920, -981944, -2082300, 5928200, -1020340, -2071230, 5925610, -1028530, -2175370, 5887020, -953987, -2153e3, 5907620, -981944, -2082300, 5928200, -1028530, -2175370, 5887020, -1871290, -2906120, 5342380, -2273540, -3522430, 4790560, -2096220, -3630760, 4790560, -1871290, -2906120, 5342380, -2096220, -3630760, 4790560, -1783530, -2960790, 5342380, -1550100, -2505330, 5637990, -1189670, -1854240, 5965510, -1598120, -2485600, 5633340, -1598120, -2485600, 5633340, -1871290, -2906120, 5342380, -1783530, -2960790, 5342380, -1598120, -2485600, 5633340, -1783530, -2960790, 5342380, -1550100, -2505330, 5637990, -2096220, -3630760, 4790560, -1758770, -2975570, 5342380, -1783530, -2960790, 5342380, -1153340, -1884140, 5963290, -1189670, -1854240, 5965510, -1550100, -2505330, 5637990, -1153340, -1884140, 5963290, -1550100, -2505330, 5637990, -1512240, -2520180, 5641620, -1512240, -2520180, 5641620, -1550100, -2505330, 5637990, -1783530, -2960790, 5342380, -1512240, -2520180, 5641620, -1783530, -2960790, 5342380, -1758770, -2975570, 5342380, -1727040, -2994090, 5342380, -1758770, -2975570, 5342380, -2096220, -3630760, 4790560, -1124560, -1952290, 5946950, -1153340, -1884140, 5963290, -1512240, -2520180, 5641620, -1124560, -1952290, 5946950, -1512240, -2520180, 5641620, -1463340, -2538460, 5646290, -1463340, -2538460, 5646290, -1512240, -2520180, 5641620, -1758770, -2975570, 5342380, -1463340, -2538460, 5646290, -1758770, -2975570, 5342380, -1727040, -2994090, 5342380, -1727040, -2994090, 5342380, -2096220, -3630760, 4790560, -1905350, -3734460, 4790560, -1727040, -2994090, 5342380, -1905350, -3734460, 4790560, -1634050, -3045840, 5342380, -1416600, -2554990, 5650720, -1124560, -1952290, 5946950, -1463340, -2538460, 5646290, -1463340, -2538460, 5646290, -1727040, -2994090, 5342380, -1634050, -3045840, 5342380, -1463340, -2538460, 5646290, -1634050, -3045840, 5342380, -1416600, -2554990, 5650720, -2281650, -3516930, 4790740, -1908160, -2882040, 5342380, -1909820, -2880940, 5342380, -1268020, -1859550, 5947810, -1227500, -1791040, 5977060, -1653540, -2461560, 5627940, -1268020, -1859550, 5947810, -1653540, -2461560, 5627940, -1650940, -2462710, 5628200, -1650940, -2462710, 5628200, -1653540, -2461560, 5627940, -1909820, -2880940, 5342380, -1650940, -2462710, 5628200, -1909820, -2880940, 5342380, -1908160, -2882040, 5342380, -2281650, -3516930, 4790740, -1882990, -2898550, 5342380, -1908160, -2882040, 5342380, -1218500, -1871960, 5954220, -1268020, -1859550, 5947810, -1650940, -2462710, 5628200, -1218500, -1871960, 5954220, -1650940, -2462710, 5628200, -1612200, -2479630, 5631970, -1612200, -2479630, 5631970, -1650940, -2462710, 5628200, -1908160, -2882040, 5342380, -1612200, -2479630, 5631970, -1908160, -2882040, 5342380, -1882990, -2898550, 5342380, -1875400, -2903470, 5342380, -1882990, -2898550, 5342380, -2281650, -3516930, 4790740, -1189670, -1854240, 5965510, -1218500, -1871960, 5954220, -1612200, -2479630, 5631970, -1189670, -1854240, 5965510, -1612200, -2479630, 5631970, -1600390, -2484650, 5633120, -1600390, -2484650, 5633120, -1612200, -2479630, 5631970, -1882990, -2898550, 5342380, -1600390, -2484650, 5633120, -1882990, -2898550, 5342380, -1875400, -2903470, 5342380, -1875400, -2903470, 5342380, -2281650, -3516930, 4790740, -2273540, -3522430, 4790560, -1875400, -2903470, 5342380, -2273540, -3522430, 4790560, -1871290, -2906120, 5342380, -1189670, -1854240, 5965510, -1600390, -2484650, 5633120, -1598120, -2485600, 5633340, -1600390, -2484650, 5633120, -1875400, -2903470, 5342380, -1871290, -2906120, 5342380, -1600390, -2484650, 5633120, -1871290, -2906120, 5342380, -1598120, -2485600, 5633340, -1133310, -1704470, 6020530, -1129990, -1584190, 6053690, -1168210, -1612100, 6039140, -1133310, -1704470, 6020530, -1066340, -1533870, 6077980, -1129990, -1584190, 6053690, -1007890, -1494370, 6097630, -1066340, -1533870, 6077980, -1133310, -1704470, 6020530, -1007890, -1494370, 6097630, -1133310, -1704470, 6020530, -1006220, -1495490, 6097630, -1006220, -1495490, 6097630, -1003770, -1491510, 6099e3, -1007890, -1494370, 6097630, -957360, -1527230, 6097630, -1006220, -1495490, 6097630, -1133310, -1704470, 6020530, -897212, -1461940, 6122560, -1003770, -1491510, 6099e3, -1006220, -1495490, 6097630, -897212, -1461940, 6122560, -1006220, -1495490, 6097630, -957360, -1527230, 6097630, -957360, -1527230, 6097630, -1133310, -1704470, 6020530, -1142820, -1753620, 6004700, -957360, -1527230, 6097630, -1142820, -1753620, 6004700, -952343, -1530360, 6097630, -897212, -1461940, 6122560, -957360, -1527230, 6097630, -952343, -1530360, 6097630, -933872, -1541700, 6097630, -935136, -1540940, 6097630, -1035290, -1760380, 6022080, -933872, -1541700, 6097630, -1035290, -1760380, 6022080, -1011870, -1720550, 6037450, -933872, -1541700, 6097630, -897212, -1461940, 6122560, -935136, -1540940, 6097630, -906606, -1557890, 6097630, -933872, -1541700, 6097630, -1011870, -1720550, 6037450, -871693, -1503140, 6116310, -897212, -1461940, 6122560, -933872, -1541700, 6097630, -871693, -1503140, 6116310, -933872, -1541700, 6097630, -906606, -1557890, 6097630, -906606, -1557890, 6097630, -1011870, -1720550, 6037450, -938096, -1677150, 6061370, -906606, -1557890, 6097630, -938096, -1677150, 6061370, -895708, -1564180, 6097630, -895708, -1564180, 6097630, -871693, -1503140, 6116310, -906606, -1557890, 6097630, -849132, -1589950, 6097630, -895708, -1564180, 6097630, -938096, -1677150, 6061370, -806604, -1545780, 6114620, -871693, -1503140, 6116310, -895708, -1564180, 6097630, -806604, -1545780, 6114620, -895708, -1564180, 6097630, -849132, -1589950, 6097630, -849132, -1589950, 6097630, -938096, -1677150, 6061370, -831723, -1648820, 6084470, -849132, -1589950, 6097630, -831723, -1648820, 6084470, -821282, -1604510, 6097630, -821282, -1604510, 6097630, -806604, -1545780, 6114620, -849132, -1589950, 6097630, -808627, -1610930, 6097630, -821282, -1604510, 6097630, -831723, -1648820, 6084470, -794177, -1587040, 6105730, -806604, -1545780, 6114620, -821282, -1604510, 6097630, -794177, -1587040, 6105730, -821282, -1604510, 6097630, -808627, -1610930, 6097630, -808627, -1610930, 6097630, -831723, -1648820, 6084470, -783735, -1642320, 6092540, -808627, -1610930, 6097630, -783735, -1642320, 6092540, -787952, -1621140, 6097630, -787952, -1621140, 6097630, -794177, -1587040, 6105730, -808627, -1610930, 6097630, -165351, -1683750, 6129040, -176923, -1605470, 6149550, -197599, -1651990, 6136670, -134121, -1580400, 6157070, -176923, -1605470, 6149550, -165351, -1683750, 6129040, -123221, -1695400, 6126830, -134121, -1580400, 6157070, -165351, -1683750, 6129040, -112652, -1620060, 6147250, -134121, -1580400, 6157070, -123221, -1695400, 6126830, -104484, -1654820, 6138190, -112652, -1620060, 6147250, -123221, -1695400, 6126830, -235044, -1639200, 6138770, -221331, -1467460, 6182280, -283992, -1642650, 6135790, -235044, -1639200, 6138770, -217249, -1453640, 6185670, -221331, -1467460, 6182280, -204607, -1506250, 6173580, -217249, -1453640, 6185670, -235044, -1639200, 6138770, -211238, -1561450, 6159720, -204607, -1506250, 6173580, -235044, -1639200, 6138770, -221331, -1467460, 6182280, -256197, -1455420, 6183770, -283992, -1642650, 6135790, -283992, -1642650, 6135790, -256197, -1455420, 6183770, -299047, -1558350, 6156890, -256197, -1455420, 6183770, -301743, -1484440, 6174870, -299047, -1558350, 6156890, -299047, -1558350, 6156890, -301743, -1484440, 6174870, -345296, -1557270, 6154750, -301743, -1484440, 6174870, -328829, -1475210, 6175700, -345296, -1557270, 6154750, -464974, -1588750, 6138920, -524275, -1516840, 6152230, -563667, -1574260, 6134410, -464974, -1588750, 6138920, -478793, -1489570, 6162520, -524275, -1516840, 6152230, -464974, -1588750, 6138920, -450323, -1479490, 6167060, -478793, -1489570, 6162520, -424474, -1492e3, 6165890, -450323, -1479490, 6167060, -464974, -1588750, 6138920, -434234, -1544320, 6152400, -424474, -1492e3, 6165890, -464974, -1588750, 6138920, -524275, -1516840, 6152230, -489882, -1377190, 6187560, -525693, -1406250, 6178150, -469004, -1397730, 6184600, -489882, -1377190, 6187560, -524275, -1516840, 6152230, -476914, -1449600, 6172120, -469004, -1397730, 6184600, -524275, -1516840, 6152230, -478793, -1489570, 6162520, -476914, -1449600, 6172120, -524275, -1516840, 6152230, -608303, -1521330, 6143440, -588744, -1414990, 6170510, -641793, -1351310, 6179430, -567355, -1492470, 6154350, -588744, -1414990, 6170510, -608303, -1521330, 6143440, -563667, -1574260, 6134410, -567355, -1492470, 6154350, -608303, -1521330, 6143440, -524275, -1516840, 6152230, -567355, -1492470, 6154350, -563667, -1574260, 6134410, -563667, -1574260, 6134410, -608303, -1521330, 6143440, -650045, -1591060, 6121600, -608303, -1521330, 6143440, -693031, -1575480, 6120920, -650045, -1591060, 6121600, -608303, -1521330, 6143440, -682328, -1541870, 6130610, -693031, -1575480, 6120920, -731946, -1480200, 6140020, -677373, -1367790, 6172050, -758872, -1444820, 6145140, -641793, -1351310, 6179430, -677373, -1367790, 6172050, -731946, -1480200, 6140020, -608303, -1521330, 6143440, -641793, -1351310, 6179430, -731946, -1480200, 6140020, 117026, -1715500, 6121390, 101290, -1600690, 6152480, 60156.8, -1593700, 6154820, 143526, -1573920, 6158500, 101290, -1600690, 6152480, 117026, -1715500, 6121390, 200780, -1691040, 6125990, 143526, -1573920, 6158500, 117026, -1715500, 6121390, 198197, -1558700, 6160840, 143526, -1573920, 6158500, 200780, -1691040, 6125990, 240338, -1699080, 6122370, 198197, -1558700, 6160840, 200780, -1691040, 6125990, 243489, -1559970, 6158910, 198197, -1558700, 6160840, 240338, -1699080, 6122370, 280635, -1669460, 6128760, 243489, -1559970, 6158910, 240338, -1699080, 6122370, 279643, -1595300, 6148390, 243489, -1559970, 6158910, 280635, -1669460, 6128760, 293744, -1638120, 6136540, 279643, -1595300, 6148390, 280635, -1669460, 6128760, 7014.72, -1708110, 6124550, 4854.57, -1564370, 6162580, -26060.6, -1539660, 6168710, 22558.8, -1589920, 6156040, 4854.57, -1564370, 6162580, 7014.72, -1708110, 6124550, 55559.4, -1720490, 6120860, 22558.8, -1589920, 6156040, 7014.72, -1708110, 6124550, 60156.8, -1593700, 6154820, 22558.8, -1589920, 6156040, 55559.4, -1720490, 6120860, 117026, -1715500, 6121390, 60156.8, -1593700, 6154820, 55559.4, -1720490, 6120860, -19408.8, -1499030, 6178660, -40989.2, -1462860, 6187160, -26060.6, -1539660, 6168710, 7014.72, -1708110, 6124550, -26060.6, -1539660, 6168710, -40989.2, -1462860, 6187160, 7014.72, -1708110, 6124550, -40989.2, -1462860, 6187160, -70730.3, -1671950, 6134060, -40989.2, -1462860, 6187160, -77962.5, -1612340, 6149800, -70730.3, -1671950, 6134060, -40989.2, -1462860, 6187160, -78680.6, -1558610, 6163530, -77962.5, -1612340, 6149800, -40989.2, -1462860, 6187160, -91239.3, -1460830, 6187110, -78680.6, -1558610, 6163530, -155821, -1491930, 6178450, -166993, -1411950, 6196800, -181794, -1455100, 6186460, -116670, -1423930, 6195220, -166993, -1411950, 6196800, -155821, -1491930, 6178450, -102764, -1509810, 6175240, -116670, -1423930, 6195220, -155821, -1491930, 6178450, -91239.3, -1460830, 6187110, -116670, -1423930, 6195220, -102764, -1509810, 6175240, -78680.6, -1558610, 6163530, -91239.3, -1460830, 6187110, -102764, -1509810, 6175240, -768711, -1336880, 6168150, -752343, -1244320, 6189350, -814432, -1329030, 6164e3, -672967, -1208880, 6205390, -752343, -1244320, 6189350, -768711, -1336880, 6168150, -703121, -1320150, 6179490, -672967, -1208880, 6205390, -768711, -1336880, 6168150, -641065, -1227810, 6205050, -672967, -1208880, 6205390, -703121, -1320150, 6179490, -679094, -1326720, 6180760, -641065, -1227810, 6205050, -703121, -1320150, 6179490, -604429, -1228420, 6208580, -641065, -1227810, 6205050, -679094, -1326720, 6180760, -604429, -1228420, 6208580, -679094, -1326720, 6180760, -644479, -1301940, 6189670, -103804, -1381960, 6204880, -104102, -1345990, 6212730, -148195, -1370910, 6206420, -88920.5, -1367380, 6208320, -104102, -1345990, 6212730, -103804, -1381960, 6204880, -88920.5, -1367380, 6208320, -103804, -1381960, 6204880, -92601.9, -1379620, 6205580, -523653, -1292770, 6202890, -511776, -1221940, 6218120, -542874, -1246500, 6210650, -476413, -1224210, 6220470, -511776, -1221940, 6218120, -523653, -1292770, 6202890, -470498, -1279670, 6209820, -476413, -1224210, 6220470, -523653, -1292770, 6202890, -451959, -1251660, 6216850, -476413, -1224210, 6220470, -470498, -1279670, 6209820, -458326, -1201430, 6226220, -486604, -1173260, 6229430, -492917, -1187540, 6226250, -458326, -1201430, 6226220, -453504, -1151290, 6235980, -486604, -1173260, 6229430, -458326, -1201430, 6226220, -444501, -1160140, 6234990, -453504, -1151290, 6235980, -425502, -1190800, 6230560, -444501, -1160140, 6234990, -458326, -1201430, 6226220, -218388, -1904940, 6062710, -262201, -1853080, 6076930, -235555, -1999160, 6031860, -235555, -1999160, 6031860, -262201, -1853080, 6076930, -298618, -2032120, 6018130, -262201, -1853080, 6076930, -287114, -1779800, 6097540, -298618, -2032120, 6018130, -285765, -1779690, 6097630, -287114, -1779800, 6097540, -262201, -1853080, 6076930, -285765, -1779690, 6097630, -262201, -1853080, 6076930, -234904, -1787120, 6097630, -229828, -1774430, 6101500, -285765, -1779690, 6097630, -234904, -1787120, 6097630, -234904, -1787120, 6097630, -262201, -1853080, 6076930, -225622, -1806260, 6092370, -234904, -1787120, 6097630, -225622, -1806260, 6092370, -228068, -1788e3, 6097630, -228068, -1788e3, 6097630, -229828, -1774430, 6101500, -234904, -1787120, 6097630, -348629, -1974150, 6034600, -408136, -1844030, 6071670, -416158, -1877170, 6061030, -348629, -1974150, 6034600, -344567, -1870410, 6067570, -408136, -1844030, 6071670, 421353, -3619790, 5216970, 442460, -4113970, 4837600, 445647, -4113280, 4837890, 442460, -4113970, 4837600, 448784, -4374230, 4604610, 454578, -4392790, 4586460, 442460, -4113970, 4837600, 454578, -4392790, 4586460, 445647, -4113280, 4837890, 421353, -3619790, 5216970, 434046, -4115790, 4836820, 442460, -4113970, 4837600, 434046, -4115790, 4836820, 434747, -4384020, 4596700, 448784, -4374230, 4604610, 434046, -4115790, 4836820, 448784, -4374230, 4604610, 442460, -4113970, 4837600, 421353, -3619790, 5216970, 423786, -4117970, 4835880, 434046, -4115790, 4836820, 423786, -4117970, 4835880, 417910, -4375140, 4606640, 434747, -4384020, 4596700, 423786, -4117970, 4835880, 434747, -4384020, 4596700, 434046, -4115790, 4836820, 434747, -4384020, 4596700, 417910, -4375140, 4606640, 413988, -4383530, 4599060, 717500, -4676710, 4262830, 615670, -4632740, 4325880, 627760, -4729590, 4218720, 717500, -4676710, 4262830, 633146, -4584940, 4373690, 615670, -4632740, 4325880, 583595, -4080740, 4850670, 523663, -3785970, 5089040, 564764, -4085490, 4848920, 564764, -4085490, 4848920, 633146, -4584940, 4373690, 717500, -4676710, 4262830, 564764, -4085490, 4848920, 717500, -4676710, 4262830, 583595, -4080740, 4850670, 523663, -3785970, 5089040, 559199, -4086870, 4848400, 564764, -4085490, 4848920, 559199, -4086870, 4848400, 608179, -4520650, 4443130, 633146, -4584940, 4373690, 559199, -4086870, 4848400, 633146, -4584940, 4373690, 564764, -4085490, 4848920, 523663, -3785970, 5089040, 491210, -3699280, 5155150, 546365, -4090030, 4847210, 523663, -3785970, 5089040, 546365, -4090030, 4847210, 559199, -4086870, 4848400, 559199, -4086870, 4848400, 546365, -4090030, 4847210, 608179, -4520650, 4443130, 546365, -4090030, 4847210, 491210, -3699280, 5155150, 539122, -4091780, 4846540, 539122, -4091780, 4846540, 582133, -4452300, 4514570, 608179, -4520650, 4443130, 539122, -4091780, 4846540, 608179, -4520650, 4443130, 546365, -4090030, 4847210, 491210, -3699280, 5155150, 421353, -3619790, 5216970, 509810, -4098770, 4843830, 491210, -3699280, 5155150, 509810, -4098770, 4843830, 539122, -4091780, 4846540, 539122, -4091780, 4846540, 509810, -4098770, 4843830, 582133, -4452300, 4514570, 509810, -4098770, 4843830, 421353, -3619790, 5216970, 473326, -4107160, 4840450, 473326, -4107160, 4840450, 504820, -4409940, 4564840, 582133, -4452300, 4514570, 473326, -4107160, 4840450, 582133, -4452300, 4514570, 509810, -4098770, 4843830, 421353, -3619790, 5216970, 466923, -4108590, 4839860, 473326, -4107160, 4840450, 466923, -4108590, 4839860, 492455, -4401500, 4574260, 504820, -4409940, 4564840, 466923, -4108590, 4839860, 504820, -4409940, 4564840, 473326, -4107160, 4840450, 421353, -3619790, 5216970, 445647, -4113280, 4837890, 454996, -4111240, 4838760, 445647, -4113280, 4837890, 454578, -4392790, 4586460, 471347, -4403810, 4574260, 445647, -4113280, 4837890, 471347, -4403810, 4574260, 454996, -4111240, 4838760, 421353, -3619790, 5216970, 454996, -4111240, 4838760, 466923, -4108590, 4839860, 454996, -4111240, 4838760, 471347, -4403810, 4574260, 492455, -4401500, 4574260, 454996, -4111240, 4838760, 492455, -4401500, 4574260, 466923, -4108590, 4839860, 421353, -3619790, 5216970, 412059, -4120440, 4834800, 423786, -4117970, 4835880, 412059, -4120440, 4834800, 399201, -4368900, 4614160, 417910, -4375140, 4606640, 412059, -4120440, 4834800, 417910, -4375140, 4606640, 423786, -4117970, 4835880, 421353, -3619790, 5216970, 405206, -4121870, 4834170, 412059, -4120440, 4834800, 405206, -4121870, 4834170, 389909, -4348360, 4634180, 399201, -4368900, 4614160, 405206, -4121870, 4834170, 399201, -4368900, 4614160, 412059, -4120440, 4834800, 421353, -3619790, 5216970, 316408, -3625170, 5220630, 367179, -4129550, 4830670, 421353, -3619790, 5216970, 367179, -4129550, 4830670, 405206, -4121870, 4834170, 405206, -4121870, 4834170, 367179, -4129550, 4830670, 389909, -4348360, 4634180, 367179, -4129550, 4830670, 316408, -3625170, 5220630, 327670, -4137130, 4827040, 327670, -4137130, 4827040, 328984, -4327260, 4658430, 389909, -4348360, 4634180, 327670, -4137130, 4827040, 389909, -4348360, 4634180, 367179, -4129550, 4830670, 316408, -3625170, 5220630, 246681, -3591830, 5247180, 306748, -4140990, 4825120, 316408, -3625170, 5220630, 306748, -4140990, 4825120, 327670, -4137130, 4827040, 327670, -4137130, 4827040, 306748, -4140990, 4825120, 328984, -4327260, 4658430, 306748, -4140990, 4825120, 246681, -3591830, 5247180, 262997, -4148680, 4821120, 262997, -4148680, 4821120, 266126, -4304280, 4683500, 328984, -4327260, 4658430, 262997, -4148680, 4821120, 328984, -4327260, 4658430, 306748, -4140990, 4825120, 246681, -3591830, 5247180, 166893, -3571030, 5264390, 243040, -4152040, 4819290, 246681, -3591830, 5247180, 243040, -4152040, 4819290, 262997, -4148680, 4821120, 262997, -4148680, 4821120, 243040, -4152040, 4819290, 266126, -4304280, 4683500, 243040, -4152040, 4819290, 166893, -3571030, 5264390, 187494, -4160820, 4814230, 187494, -4160820, 4814230, 191214, -4276400, 4712410, 266126, -4304280, 4683500, 187494, -4160820, 4814230, 266126, -4304280, 4683500, 243040, -4152040, 4819290, 166893, -3571030, 5264390, 120785, -3529120, 5293630, 179064, -4162090, 4813460, 166893, -3571030, 5264390, 179064, -4162090, 4813460, 187494, -4160820, 4814230, 187494, -4160820, 4814230, 179064, -4162090, 4813460, 191214, -4276400, 4712410, 179064, -4162090, 4813460, 120785, -3529120, 5293630, 120917, -4170340, 4808170, 120917, -4170340, 4808170, 120309, -4248930, 4739350, 191214, -4276400, 4712410, 120917, -4170340, 4808170, 191214, -4276400, 4712410, 179064, -4162090, 4813460, 120785, -3529120, 5293630, 58600.9, -3495340, 5316890, 112875, -4171420, 4807430, 120785, -3529120, 5293630, 112875, -4171420, 4807430, 120917, -4170340, 4808170, 120917, -4170340, 4808170, 112875, -4171420, 4807430, 120309, -4248930, 4739350, 112875, -4171420, 4807430, 58600.9, -3495340, 5316890, 55226.7, -4178650, 4802190, 55226.7, -4178650, 4802190, 54237.4, -4273740, 4718350, 120309, -4248930, 4739350, 55226.7, -4178650, 4802190, 120309, -4248930, 4739350, 112875, -4171420, 4807430, 58600.9, -3495340, 5316890, 34385.5, -4181060, 4800300, 55226.7, -4178650, 4802190, 34385.5, -4181060, 4800300, 29844.1, -4274790, 4717620, 54237.4, -4273740, 4718350, 34385.5, -4181060, 4800300, 54237.4, -4273740, 4718350, 55226.7, -4178650, 4802190, -166149, -3452490, 5342380, -188525, -3451340, 5342380, -193202, -4200440, 4779710, -166149, -3452490, 5342380, -193202, -4200440, 4779710, -191958, -4200380, 4779820, -193006, -4234e3, 4750210, -191958, -4200380, 4779820, -193202, -4200440, 4779710, -164118, -3398660, 5376610, -185852, -3308660, 5431400, -188525, -3451340, 5342380, -164118, -3398660, 5376610, -188525, -3451340, 5342380, -166149, -3452490, 5342380, -145430, -3453420, 5342380, -166149, -3452490, 5342380, -191958, -4200380, 4779820, -145430, -3453420, 5342380, -191958, -4200380, 4779820, -190388, -4200280, 4779960, -145430, -3453420, 5342380, -190388, -4200280, 4779960, -139230, -3471060, 5331180, -190388, -4200280, 4779960, -191958, -4200380, 4779820, -193006, -4234e3, 4750210, -145430, -3453420, 5342380, -164118, -3398660, 5376610, -166149, -3452490, 5342380, -124422, -4195920, 4785920, -139230, -3471060, 5331180, -190388, -4200280, 4779960, -190388, -4200280, 4779960, -193006, -4234e3, 4750210, -122038, -4262390, 4727280, -190388, -4200280, 4779960, -122038, -4262390, 4727280, -124422, -4195920, 4785920, -59262.4, -3455970, 5342380, -139230, -3471060, 5331180, -124422, -4195920, 4785920, -59262.4, -3455970, 5342380, -124422, -4195920, 4785920, -115308, -4195230, 4786750, -59262.4, -3455970, 5342380, -115308, -4195230, 4786750, -54213.6, -3456060, 5342380, -115308, -4195230, 4786750, -124422, -4195920, 4785920, -122038, -4262390, 4727280, -54135.7, -3454930, 5343100, -59262.4, -3455970, 5342380, -54213.6, -3456060, 5342380, -54213.6, -3456060, 5342380, -115308, -4195230, 4786750, -61122.3, -4190740, 4791650, -54213.6, -3456060, 5342380, -61122.3, -4190740, 4791650, -54147.3, -3456060, 5342380, -115308, -4195230, 4786750, -122038, -4262390, 4727280, -61613.3, -4252910, 4736910, -115308, -4195230, 4786750, -61613.3, -4252910, 4736910, -61122.3, -4190740, 4791650, -54147.3, -3456060, 5342380, -54135.7, -3454930, 5343100, -54213.6, -3456060, 5342380, -61122.3, -4190740, 4791650, -49104.6, -4189640, 4792740, 58600.9, -3495340, 5316890, -61122.3, -4190740, 4791650, 58600.9, -3495340, 5316890, -51058.9, -3456100, 5342380, -61122.3, -4190740, 4791650, -51058.9, -3456100, 5342380, -54147.3, -3456060, 5342380, -49104.6, -4189640, 4792740, -61122.3, -4190740, 4791650, -61613.3, -4252910, 4736910, -51058.9, -3456100, 5342380, -54135.7, -3454930, 5343100, -54147.3, -3456060, 5342380, 58600.9, -3495340, 5316890, -49104.6, -4189640, 4792740, 34385.5, -4181060, 4800300, -49104.6, -4189640, 4792740, -61613.3, -4252910, 4736910, 29844.1, -4274790, 4717620, -49104.6, -4189640, 4792740, 29844.1, -4274790, 4717620, 34385.5, -4181060, 4800300, -197566, -3450830, 5342380, -266306, -4204e3, 4773110, -193202, -4200440, 4779710, -197566, -3450830, 5342380, -193202, -4200440, 4779710, -188525, -3451340, 5342380, -266306, -4204e3, 4773110, -267572, -4216650, 4761940, -193006, -4234e3, 4750210, -266306, -4204e3, 4773110, -193006, -4234e3, 4750210, -193202, -4200440, 4779710, -188525, -3451340, 5342380, -185852, -3308660, 5431400, -197566, -3450830, 5342380, -203865, -3450460, 5342380, -318166, -4205740, 4768430, -266306, -4204e3, 4773110, -203865, -3450460, 5342380, -266306, -4204e3, 4773110, -197566, -3450830, 5342380, -318166, -4205740, 4768430, -318548, -4207960, 4766450, -267572, -4216650, 4761940, -318166, -4205740, 4768430, -267572, -4216650, 4761940, -266306, -4204e3, 4773110, -185852, -3308660, 5431400, -203865, -3450460, 5342380, -197566, -3450830, 5342380, -206882, -3450280, 5342380, -340231, -4192060, 4778870, -321480, -4205830, 4768130, -206882, -3450280, 5342380, -321480, -4205830, 4768130, -318166, -4205740, 4768430, -206882, -3450280, 5342380, -318166, -4205740, 4768430, -203865, -3450460, 5342380, -318166, -4205740, 4768430, -321480, -4205830, 4768130, -318548, -4207960, 4766450, -185852, -3308660, 5431400, -206882, -3450280, 5342380, -203865, -3450460, 5342380, -206882, -3450280, 5342380, -281848, -3444970, 5342380, -340231, -4192060, 4778870, -185852, -3308660, 5431400, -269348, -3286960, 5441e3, -281848, -3444970, 5342380, -185852, -3308660, 5431400, -281848, -3444970, 5342380, -206882, -3450280, 5342380, -406386, -3432510, 5342380, -446071, -3427580, 5342380, -527528, -4159050, 4790610, -252816, -2357900, 5901040, -311791, -2315340, 5914970, -359846, -2702820, 5746590, -252816, -2357900, 5901040, -359846, -2702820, 5746590, -298567, -2698550, 5752070, -298567, -2698550, 5752070, -359846, -2702820, 5746590, -446071, -3427580, 5342380, -298567, -2698550, 5752070, -446071, -3427580, 5342380, -406386, -3432510, 5342380, -405068, -3432660, 5342380, -406386, -3432510, 5342380, -527528, -4159050, 4790610, -252816, -2357900, 5901040, -298567, -2698550, 5752070, -296528, -2698390, 5752250, -252816, -2357900, 5901040, -296528, -2698390, 5752250, -263485, -2454980, 5861120, -298567, -2698550, 5752070, -406386, -3432510, 5342380, -405068, -3432660, 5342380, -298567, -2698550, 5752070, -405068, -3432660, 5342380, -296528, -2698390, 5752250, -405068, -3432660, 5342380, -527528, -4159050, 4790610, -376991, -4175450, 4790560, -405068, -3432660, 5342380, -376991, -4175450, 4790560, -337071, -3440010, 5342380, -283491, -2697280, 5753420, -263485, -2454980, 5861120, -296528, -2698390, 5752250, -296528, -2698390, 5752250, -405068, -3432660, 5342380, -337071, -3440010, 5342380, -296528, -2698390, 5752250, -337071, -3440010, 5342380, -283491, -2697280, 5753420, -376991, -4175450, 4790560, -319410, -3441690, 5342380, -337071, -3440010, 5342380, -228327, -2375870, 5894880, -263485, -2454980, 5861120, -283491, -2697280, 5753420, -228327, -2375870, 5894880, -283491, -2697280, 5753420, -256408, -2694790, 5755840, -256408, -2694790, 5755840, -283491, -2697280, 5753420, -337071, -3440010, 5342380, -256408, -2694790, 5755840, -337071, -3440010, 5342380, -319410, -3441690, 5342380, -319079, -3441720, 5342380, -319410, -3441690, 5342380, -376991, -4175450, 4790560, -319079, -3441720, 5342380, -376991, -4175450, 4790560, -373865, -4143250, 4818490, -256331, -2694780, 5755850, -228327, -2375870, 5894880, -256408, -2694790, 5755840, -256331, -2694780, 5755850, -256408, -2694790, 5755840, -319410, -3441690, 5342380, -256331, -2694780, 5755850, -319410, -3441690, 5342380, -319079, -3441720, 5342380, -298674, -3443550, 5342380, -319079, -3441720, 5342380, -373865, -4143250, 4818490, -195177, -2381610, 5893760, -228327, -2375870, 5894880, -256331, -2694780, 5755850, -195177, -2381610, 5893760, -256331, -2694780, 5755850, -224195, -2691440, 5758730, -224195, -2691440, 5758730, -256331, -2694780, 5755850, -319079, -3441720, 5342380, -224195, -2691440, 5758730, -319079, -3441720, 5342380, -298674, -3443550, 5342380, -298674, -3443550, 5342380, -373865, -4143250, 4818490, -349347, -4144990, 4818830, -298674, -3443550, 5342380, -349347, -4144990, 4818830, -286922, -3444550, 5342380, -195177, -2381610, 5893760, -224195, -2691440, 5758730, -221565, -2691150, 5758970, -224195, -2691440, 5758730, -298674, -3443550, 5342380, -286922, -3444550, 5342380, -224195, -2691440, 5758730, -286922, -3444550, 5342380, -221565, -2691150, 5758970, -283694, -3444820, 5342380, -286922, -3444550, 5342380, -349347, -4144990, 4818830, -220530, -2691050, 5759060, -195177, -2381610, 5893760, -221565, -2691150, 5758970, -221565, -2691150, 5758970, -286922, -3444550, 5342380, -283694, -3444820, 5342380, -221565, -2691150, 5758970, -283694, -3444820, 5342380, -269348, -3286960, 5441e3, -221565, -2691150, 5758970, -269348, -3286960, 5441e3, -220530, -2691050, 5759060, -283694, -3444820, 5342380, -349347, -4144990, 4818830, -340231, -4192060, 4778870, -283694, -3444820, 5342380, -340231, -4192060, 4778870, -281848, -3444970, 5342380, -281848, -3444970, 5342380, -269348, -3286960, 5441e3, -283694, -3444820, 5342380, -21393.5, -2240400, 5951640, -31937.9, -2663080, 5776050, -30507.7, -2662820, 5776180, -31937.9, -2663080, 5776050, -39070, -2907030, 5657960, -34926.4, -2842360, 5690530, -31937.9, -2663080, 5776050, -34926.4, -2842360, 5690530, -30507.7, -2662820, 5776180, -21393.5, -2240400, 5951640, -65937.1, -2669170, 5772970, -31937.9, -2663080, 5776050, -65937.1, -2669170, 5772970, -98504.6, -2918040, 5651610, -39070, -2907030, 5657960, -65937.1, -2669170, 5772970, -39070, -2907030, 5657960, -31937.9, -2663080, 5776050, -21393.5, -2240400, 5951640, -93203.7, -2217390, 5959510, -98111.8, -2674510, 5770060, -21393.5, -2240400, 5951640, -98111.8, -2674510, 5770060, -65937.1, -2669170, 5772970, -65937.1, -2669170, 5772970, -98111.8, -2674510, 5770060, -98504.6, -2918040, 5651610, -93203.7, -2217390, 5959510, -102892, -2046520, 6019770, -102904, -2675260, 5769640, -93203.7, -2217390, 5959510, -102904, -2675260, 5769640, -98111.8, -2674510, 5770060, -98504.6, -2918040, 5651610, -98111.8, -2674510, 5770060, -102904, -2675260, 5769640, -57489.4, -2167100, 5978310, -102892, -2046520, 6019770, -93203.7, -2217390, 5959510, -168671, -2279e3, 5934730, -180244, -1977180, 6040940, -205299, -2211330, 5958960, -135844, -1997780, 6035360, -180244, -1977180, 6040940, -168671, -2279e3, 5934730, -135844, -1997780, 6035360, -168671, -2279e3, 5934730, -170355, -2684970, 5763560, -135844, -1997780, 6035360, -170355, -2684970, 5763560, -159051, -2683470, 5764580, -165204, -2995210, 5609810, -159051, -2683470, 5764580, -170355, -2684970, 5763560, -170355, -2684970, 5763560, -168671, -2279e3, 5934730, -199187, -2688580, 5760980, -199187, -2688580, 5760980, -230017, -3101480, 5549860, -165204, -2995210, 5609810, -199187, -2688580, 5760980, -165204, -2995210, 5609810, -170355, -2684970, 5763560, -168671, -2279e3, 5934730, -207446, -2689550, 5760230, -199187, -2688580, 5760980, -207446, -2689550, 5760230, -257176, -3176070, 5506610, -230017, -3101480, 5549860, -207446, -2689550, 5760230, -230017, -3101480, 5549860, -199187, -2688580, 5760980, -168671, -2279e3, 5934730, -207523, -2689570, 5760220, -207446, -2689550, 5760230, -207523, -2689570, 5760220, -269348, -3286960, 5441e3, -257176, -3176070, 5506610, -207523, -2689570, 5760220, -257176, -3176070, 5506610, -207446, -2689550, 5760230, -168671, -2279e3, 5934730, -195177, -2381610, 5893760, -220530, -2691050, 5759060, -168671, -2279e3, 5934730, -220530, -2691050, 5759060, -207523, -2689570, 5760220, -207523, -2689570, 5760220, -220530, -2691050, 5759060, -269348, -3286960, 5441e3, -205299, -2211330, 5958960, -229556, -2049380, 6015320, -245530, -2164630, 5974460, -180244, -1977180, 6040940, -229556, -2049380, 6015320, -205299, -2211330, 5958960, -1011040, -3305310, 5342380, -1229250, -4008170, 4790560, -1017650, -4067060, 4790550, -1011040, -3305310, 5342380, -1017650, -4067060, 4790550, -910152, -3334500, 5342380, -785359, -2693750, 5708590, -677424, -2222690, 5919900, -821062, -2689940, 5705380, -821062, -2689940, 5705380, -1011040, -3305310, 5342380, -910152, -3334500, 5342380, -821062, -2689940, 5705380, -910152, -3334500, 5342380, -785359, -2693750, 5708590, -1017650, -4067060, 4790550, -890291, -3339860, 5342380, -910152, -3334500, 5342380, -643432, -2221940, 5923940, -677424, -2222690, 5919900, -785359, -2693750, 5708590, -643432, -2221940, 5923940, -785359, -2693750, 5708590, -755137, -2696600, 5711300, -755137, -2696600, 5711300, -785359, -2693750, 5708590, -910152, -3334500, 5342380, -755137, -2696600, 5711300, -910152, -3334500, 5342380, -890291, -3339860, 5342380, -1017650, -4067060, 4790550, -871040, -3344930, 5342380, -890291, -3339860, 5342380, -618640, -2254710, 5914260, -643432, -2221940, 5923940, -755137, -2696600, 5711300, -618640, -2254710, 5914260, -755137, -2696600, 5711300, -725586, -2699060, 5713950, -725586, -2699060, 5713950, -755137, -2696600, 5711300, -890291, -3339860, 5342380, -725586, -2699060, 5713950, -890291, -3339860, 5342380, -871040, -3344930, 5342380, -1017650, -4067060, 4790550, -846380, -3351250, 5342380, -871040, -3344930, 5342380, -592937, -2319760, 5891840, -618640, -2254710, 5914260, -725586, -2699060, 5713950, -592937, -2319760, 5891840, -725586, -2699060, 5713950, -687619, -2701770, 5717340, -687619, -2701770, 5717340, -725586, -2699060, 5713950, -871040, -3344930, 5342380, -687619, -2701770, 5717340, -871040, -3344930, 5342380, -846380, -3351250, 5342380, -818041, -3358280, 5342380, -846380, -3351250, 5342380, -1017650, -4067060, 4790550, -545717, -2322850, 5895170, -592937, -2319760, 5891840, -687619, -2701770, 5717340, -545717, -2322850, 5895170, -687619, -2701770, 5717340, -643640, -2704230, 5721270, -643640, -2704230, 5721270, -687619, -2701770, 5717340, -846380, -3351250, 5342380, -643640, -2704230, 5721270, -846380, -3351250, 5342380, -818041, -3358280, 5342380, -818041, -3358280, 5342380, -1017650, -4067060, 4790550, -774800, -4120220, 4790560, -818041, -3358280, 5342380, -774800, -4120220, 4790560, -704711, -3383880, 5342380, -610232, -2705610, 5724250, -545717, -2322850, 5895170, -643640, -2704230, 5721270, -643640, -2704230, 5721270, -818041, -3358280, 5342380, -704711, -3383880, 5342380, -643640, -2704230, 5721270, -704711, -3383880, 5342380, -610232, -2705610, 5724250, -735744, -2292680, 5886380, -725972, -2212350, 5918030, -762324, -2237650, 5904020, -677424, -2222690, 5919900, -725972, -2212350, 5918030, -735744, -2292680, 5886380, -1011040, -3305310, 5342380, -1032190, -3298760, 5342380, -1229250, -4008170, 4790560, -677424, -2222690, 5919900, -735744, -2292680, 5886380, -853809, -2686020, 5702440, -677424, -2222690, 5919900, -853809, -2686020, 5702440, -821062, -2689940, 5705380, -821062, -2689940, 5705380, -853809, -2686020, 5702440, -1032190, -3298760, 5342380, -821062, -2689940, 5705380, -1032190, -3298760, 5342380, -1011040, -3305310, 5342380, 370454, -2409480, 5874120, 333044, -2359100, 5896610, 372602, -2459800, 5853230, 372602, -2459800, 5853230, 333044, -2359100, 5896610, 296641, -2542260, 5822460, 333044, -2359100, 5896610, 285534, -2205300, 5957900, 296641, -2542260, 5822460, 344969, -2249240, 5938430, 285534, -2205300, 5957900, 333044, -2359100, 5896610, 355216, -2299920, 5918510, 344969, -2249240, 5938430, 333044, -2359100, 5896610, 236294, -2564400, 5815560, 171790, -2193570, 5966530, 178534, -2307940, 5923320, 226968, -2196620, 5963580, 171790, -2193570, 5966530, 236294, -2564400, 5815560, 296641, -2542260, 5822460, 226968, -2196620, 5963580, 236294, -2564400, 5815560, 285534, -2205300, 5957900, 226968, -2196620, 5963580, 296641, -2542260, 5822460, 236294, -2564400, 5815560, 178534, -2307940, 5923320, 187710, -2537570, 5828990, 178534, -2307940, 5923320, 178016, -2589650, 5806500, 187710, -2537570, 5828990, 178534, -2307940, 5923320, 154900, -2399320, 5887810, 178016, -2589650, 5806500, 154900, -2399320, 5887810, 142544, -2624370, 5791970, 165687, -2618280, 5794100, 154900, -2399320, 5887810, 165687, -2618280, 5794100, 178016, -2589650, 5806500, 165687, -2618280, 5794100, 142544, -2624370, 5791970, 138867, -2677820, 5767710, 154900, -2399320, 5887810, 136879, -2625840, 5791440, 142544, -2624370, 5791970, 136879, -2625840, 5791440, 127292, -2722640, 5747090, 138867, -2677820, 5767710, 136879, -2625840, 5791440, 138867, -2677820, 5767710, 142544, -2624370, 5791970, -5418.53, -2658020, 5778450, -22590.6, -2346880, 5910740, -30116.5, -2662750, 5776210, -30116.5, -2662750, 5776210, -34926.4, -2842360, 5690530, 4183.63, -2800300, 5711310, -30116.5, -2662750, 5776210, 4183.63, -2800300, 5711310, -5418.53, -2658020, 5778450, 31033.4, -2265240, 5942250, -22590.6, -2346880, 5910740, -5418.53, -2658020, 5778450, 31033.4, -2265240, 5942250, -5418.53, -2658020, 5778450, 12934.4, -2654340, 5780120, 12934.4, -2654340, 5780120, -5418.53, -2658020, 5778450, 4183.63, -2800300, 5711310, 60365.2, -2644190, 5784440, 31033.4, -2265240, 5942250, 12934.4, -2654340, 5780120, 12934.4, -2654340, 5780120, 4183.63, -2800300, 5711310, 73957.9, -2792680, 5714540, 12934.4, -2654340, 5780120, 73957.9, -2792680, 5714540, 60365.2, -2644190, 5784440, 70738.9, -2408240, 5885790, 31033.4, -2265240, 5942250, 60365.2, -2644190, 5784440, 70738.9, -2408240, 5885790, 60365.2, -2644190, 5784440, 72985.6, -2641340, 5785590, 72985.6, -2641340, 5785590, 60365.2, -2644190, 5784440, 73957.9, -2792680, 5714540, 109837, -2632610, 5788960, 70738.9, -2408240, 5885790, 72985.6, -2641340, 5785590, 72985.6, -2641340, 5785590, 73957.9, -2792680, 5714540, 127292, -2722640, 5747090, 72985.6, -2641340, 5785590, 127292, -2722640, 5747090, 109837, -2632610, 5788960, 114599, -2476170, 5857040, 70738.9, -2408240, 5885790, 109837, -2632610, 5788960, 114599, -2476170, 5857040, 109837, -2632610, 5788960, 122462, -2629480, 5790120, 127292, -2722640, 5747090, 122462, -2629480, 5790120, 109837, -2632610, 5788960, 154900, -2399320, 5887810, 114599, -2476170, 5857040, 122462, -2629480, 5790120, 154900, -2399320, 5887810, 122462, -2629480, 5790120, 136879, -2625840, 5791440, 136879, -2625840, 5791440, 122462, -2629480, 5790120, 127292, -2722640, 5747090, 586295, -3877020, 5013600, 523663, -3785970, 5089040, 583595, -4080740, 4850670, 586295, -3877020, 5013600, 583595, -4080740, 4850670, 617814, -4071890, 4853860, 717500, -4676710, 4262830, 617814, -4071890, 4853860, 583595, -4080740, 4850670, 701278, -3942100, 4948100, 586295, -3877020, 5013600, 617814, -4071890, 4853860, 701278, -3942100, 4948100, 617814, -4071890, 4853860, 706568, -4047410, 4862150, 706568, -4047410, 4862150, 617814, -4071890, 4853860, 717500, -4676710, 4262830, 701278, -3942100, 4948100, 706568, -4047410, 4862150, 716196, -4044620, 4863060, 706568, -4047410, 4862150, 717500, -4676710, 4262830, 799487, -4651480, 4275740, 706568, -4047410, 4862150, 799487, -4651480, 4275740, 716196, -4044620, 4863060, 727234, -4041390, 4864100, 701278, -3942100, 4948100, 716196, -4044620, 4863060, 716196, -4044620, 4863060, 799487, -4651480, 4275740, 871037, -4553910, 4365250, 716196, -4044620, 4863060, 871037, -4553910, 4365250, 727234, -4041390, 4864100, 898281, -4595300, 4316410, 871037, -4553910, 4365250, 799487, -4651480, 4275740, 898281, -4595300, 4316410, 886740, -4566140, 4349390, 871037, -4553910, 4365250, 898363, -4587470, 4324660, 886740, -4566140, 4349390, 898281, -4595300, 4316410, 577568, -4724230, 4231780, 567931, -4706910, 4252200, 567050, -4714830, 4243600, 582769, -4678750, 4280980, 567931, -4706910, 4252200, 577568, -4724230, 4231780, 607051, -4732290, 4218720, 582769, -4678750, 4280980, 577568, -4724230, 4231780, 615670, -4632740, 4325880, 582769, -4678750, 4280980, 607051, -4732290, 4218720, 615670, -4632740, 4325880, 607051, -4732290, 4218720, 627760, -4729590, 4218720, 777827, -4026180, 4868850, 748856, -3904530, 4970710, 772142, -4027920, 4868320, 772142, -4027920, 4868320, 871037, -4553910, 4365250, 904510, -4534990, 4378030, 772142, -4027920, 4868320, 904510, -4534990, 4378030, 777827, -4026180, 4868850, 767868, -3808850, 5041070, 748856, -3904530, 4970710, 777827, -4026180, 4868850, 767868, -3808850, 5041070, 777827, -4026180, 4868850, 807458, -4016920, 4871660, 807458, -4016920, 4871660, 777827, -4026180, 4868850, 904510, -4534990, 4378030, 825669, -4011120, 4873380, 767868, -3808850, 5041070, 807458, -4016920, 4871660, 807458, -4016920, 4871660, 904510, -4534990, 4378030, 982065, -4518520, 4378360, 807458, -4016920, 4871660, 982065, -4518520, 4378360, 825669, -4011120, 4873380, 745464, -3577290, 5210080, 652773, -3638740, 5180080, 706509, -3677210, 5145980, 745464, -3577290, 5210080, 706509, -3677210, 5145980, 767868, -3808850, 5041070, 55078.1, -2058990, 6016160, 17901.3, -2107770, 5999580, 49344.9, -2144250, 5986560, 110820, -2157800, 5980900, 55078.1, -2058990, 6016160, 49344.9, -2144250, 5986560, -102892, -2046520, 6019770, -135844, -1997780, 6035360, -159051, -2683470, 5764580, -102892, -2046520, 6019770, -159051, -2683470, 5764580, -143450, -2681320, 5765980, -143450, -2681320, 5765980, -159051, -2683470, 5764580, -165204, -2995210, 5609810, -102904, -2675260, 5769640, -102892, -2046520, 6019770, -143450, -2681320, 5765980, -143450, -2681320, 5765980, -165204, -2995210, 5609810, -98504.6, -2918040, 5651610, -143450, -2681320, 5765980, -98504.6, -2918040, 5651610, -102904, -2675260, 5769640, -124451, -1278600, 6226480, -146618, -1237960, 6234150, -134510, -1317290, 6218250, -134510, -1317290, 6218250, -146618, -1237960, 6234150, -171342, -1335720, 6213450, -146618, -1237960, 6234150, -158277, -1229210, 6235590, -171342, -1335720, 6213450, -171342, -1335720, 6213450, -158277, -1229210, 6235590, -186728, -1308040, 6218850, -158277, -1229210, 6235590, -190408, -1266050, 6227370, -186728, -1308040, 6218850, -225182, -1321410, 6214780, -226186, -1274960, 6224380, -233412, -1220690, 6234910, -225182, -1321410, 6214780, -233412, -1220690, 6234910, -260363, -1302510, 6217380, -233412, -1220690, 6234910, -289729, -1259970, 6224790, -260363, -1302510, 6217380, -233412, -1220690, 6234910, -281384, -1169440, 6242690, -289729, -1259970, 6224790, -281384, -1169440, 6242690, -327022, -1185630, 6237450, -308389, -1217850, 6232220, -289729, -1259970, 6224790, -281384, -1169440, 6242690, -308389, -1217850, 6232220, -289729, -1259970, 6224790, -308389, -1217850, 6232220, -337387, -1243850, 6225630, -18346.6, -1306710, 6221890, -40895.9, -971775, 6282400, -64883.7, -1291210, 6224790, -40895.9, -971775, 6282400, -64702.2, -1177490, 6247160, -64883.7, -1291210, 6224790, -40895.9, -971775, 6282400, -75216.1, -1000710, 6277580, -64702.2, -1177490, 6247160, -64702.2, -1177490, 6247160, -75216.1, -1000710, 6277580, -102319, -1175650, 6247e3, -75216.1, -1000710, 6277580, -93821.7, -1006890, 6276340, -102319, -1175650, 6247e3, -102319, -1175650, 6247e3, -93821.7, -1006890, 6276340, -109516, -1039120, 6270870, -109516, -1039120, 6270870, -127799, -1086320, 6262580, -121048, -1137160, 6253740, -102319, -1175650, 6247e3, -109516, -1039120, 6270870, -121048, -1137160, 6253740, -64883.7, -1291210, 6224790, -82946.8, -1205640, 6241610, -86011.6, -1245260, 6233830, -64883.7, -1291210, 6224790, -64702.2, -1177490, 6247160, -82946.8, -1205640, 6241610, -18346.6, -1306710, 6221890, -20394.9, -1031330, 6273070, -40895.9, -971775, 6282400, 10128.2, -1055070, 6269170, -20394.9, -1031330, 6273070, -18346.6, -1306710, 6221890, 21870, -1298790, 6223520, 10128.2, -1055070, 6269170, -18346.6, -1306710, 6221890, 41116.1, -1075170, 6265650, 10128.2, -1055070, 6269170, 21870, -1298790, 6223520, 59695.7, -1215180, 6240030, 41116.1, -1075170, 6265650, 21870, -1298790, 6223520, 59709.2, -1146980, 6252840, 41116.1, -1075170, 6265650, 59695.7, -1215180, 6240030, 86419.5, -1180850, 6246260, 59709.2, -1146980, 6252840, 59695.7, -1215180, 6240030, 83668.9, -1308020, 6221080, 61978.2, -1245850, 6234e3, 45867.8, -1288910, 6225440, 98398.6, -1217320, 6239130, 61978.2, -1245850, 6234e3, 83668.9, -1308020, 6221080, 82431.1, -820061, 6303460, 64211, -815878, 6304200, 71748.5, -859739, 6298330, 82431.1, -820061, 6303460, 71748.5, -859739, 6298330, 85591.1, -848461, 6299680, 107658, -1041780, 6270470, 85591.1, -848461, 6299680, 71748.5, -859739, 6298330, 95457.4, -840101, 6300650, 82431.1, -820061, 6303460, 85591.1, -848461, 6299680, 95457.4, -840101, 6300650, 85591.1, -848461, 6299680, 107658, -1041780, 6270470, 95457.4, -840101, 6300650, 107658, -1041780, 6270470, 101554, -849140, 6299350, 150313, -1049350, 6268340, 101554, -849140, 6299350, 107658, -1041780, 6270470, 111152, -826184, 6302220, 104920, -788440, 6307130, 102549, -833912, 6301360, 102549, -833912, 6301360, 101554, -849140, 6299350, 150313, -1049350, 6268340, 102549, -833912, 6301360, 150313, -1049350, 6268340, 111152, -826184, 6302220, 120312, -768295, 6309330, 104920, -788440, 6307130, 111152, -826184, 6302220, 120312, -768295, 6309330, 111152, -826184, 6302220, 125554, -812725, 6303690, 125554, -812725, 6303690, 111152, -826184, 6302220, 150313, -1049350, 6268340, 64211, -815878, 6304200, 45437.7, -858461, 6298750, 50544.4, -876041, 6296300, 64211, -815878, 6304200, 50544.4, -876041, 6296300, 71748.5, -859739, 6298330, 107658, -1041780, 6270470, 71748.5, -859739, 6298330, 50544.4, -876041, 6296300, 50544.4, -876041, 6296300, 45437.7, -858461, 6298750, 45508.3, -879750, 6295830, 45508.3, -879750, 6295830, 44169.8, -1053420, 6269300, 107658, -1041780, 6270470, 45508.3, -879750, 6295830, 107658, -1041780, 6270470, 50544.4, -876041, 6296300, 45437.7, -858461, 6298750, 16353, -877445, 6296290, 19195.3, -898184, 6293380, 45437.7, -858461, 6298750, 19195.3, -898184, 6293380, 45508.3, -879750, 6295830, 45508.3, -879750, 6295830, 19195.3, -898184, 6293380, 44169.8, -1053420, 6269300, 19195.3, -898184, 6293380, 16353, -877445, 6296290, 15654.7, -900552, 6293050, 15654.7, -900552, 6293050, 11242, -1016880, 6275430, 44169.8, -1053420, 6269300, 15654.7, -900552, 6293050, 44169.8, -1053420, 6269300, 19195.3, -898184, 6293380, 16353, -877445, 6296290, -1537.98, -881191, 6295790, 891.077, -910128, 6291700, 16353, -877445, 6296290, 891.077, -910128, 6291700, 15654.7, -900552, 6293050, 15654.7, -900552, 6293050, 891.077, -910128, 6291700, 11242, -1016880, 6275430, 891.077, -910128, 6291700, -1537.98, -881191, 6295790, -2129.83, -912039, 6291430, -2129.83, -912039, 6291430, -3394.12, -972342, 6282450, 11242, -1016880, 6275430, -2129.83, -912039, 6291430, 11242, -1016880, 6275430, 891.077, -910128, 6291700, -1537.98, -881191, 6295790, -15088.7, -920007, 6290260, -2129.83, -912039, 6291430, -15088.7, -920007, 6290260, -22439.4, -939717, 6287340, -3394.12, -972342, 6282450, -15088.7, -920007, 6290260, -3394.12, -972342, 6282450, -2129.83, -912039, 6291430, 110004, -1082670, 6263540, 57994.3, -1081960, 6264360, 69460.1, -1138040, 6254360, 110004, -1082670, 6263540, 69460.1, -1138040, 6254360, 101159, -1178740, 6246440, -1537.98, -881191, 6295790, -24988.5, -901934, 6292820, -23467.4, -924995, 6289500, -1537.98, -881191, 6295790, -23467.4, -924995, 6289500, -15088.7, -920007, 6290260, -15088.7, -920007, 6290260, -23467.4, -924995, 6289500, -22439.4, -939717, 6287340, -40895.9, -971775, 6282400, -80758.9, -974914, 6281540, -75216.1, -1000710, 6277580, -281384, -1169440, 6242690, -317287, -1144720, 6245530, -327022, -1185630, 6237450, -158277, -1229210, 6235590, -185356, -1221e3, 6236450, -190408, -1266050, 6227370, -21393.5, -2240400, 5951640, -30507.7, -2662820, 5776180, -30116.5, -2662750, 5776210, -21393.5, -2240400, 5951640, -30116.5, -2662750, 5776210, -22590.6, -2346880, 5910740, -30116.5, -2662750, 5776210, -30507.7, -2662820, 5776180, -34926.4, -2842360, 5690530, 18256.9, -1856610, 6081450, -6990.93, -1951970, 6051740, 4018.16, -2059270, 6016320, 80128.7, -1800710, 6097630, 50363.3, -1812330, 6094520, 111158, -1850380, 6082360, 80128.7, -1800710, 6097630, 111158, -1850380, 6082360, 125208, -1798130, 6097630, 129887, -1779820, 6102870, 80128.7, -1800710, 6097630, 125208, -1798130, 6097630, 80599.7, -2331060, 5916450, 31033.4, -2265240, 5942250, 70738.9, -2408240, 5885790, 582133, -4452300, 4514570, 504820, -4409940, 4564840, 496920, -4425120, 4551090, 491171, -3619890, 5210840, 421353, -3619790, 5216970, 491210, -3699280, 5155150, 748856, -3904530, 4970710, 701278, -3942100, 4948100, 727234, -4041390, 4864100, 748856, -3904530, 4970710, 727234, -4041390, 4864100, 772142, -4027920, 4868320, 772142, -4027920, 4868320, 727234, -4041390, 4864100, 871037, -4553910, 4365250, 743638, -3300400, 5388810, 703983, -3133200, 5492250, 659296, -3245440, 5432690, -104102, -1345990, 6212730, -151155, -1339910, 6213070, -148195, -1370910, 6206420, -752343, -1244320, 6189350, -832909, -1289700, 6169850, -814432, -1329030, 6164e3, -283992, -1642650, 6135790, -299047, -1558350, 6156890, -311512, -1620100, 6140420, -897212, -1461940, 6122560, -991454, -1420270, 6117860, -1003770, -1491510, 6099e3, -952343, -1530360, 6097630, -1142820, -1753620, 6004700, -1035290, -1760380, 6022080, -952343, -1530360, 6097630, -1035290, -1760380, 6022080, -935136, -1540940, 6097630, -935136, -1540940, 6097630, -897212, -1461940, 6122560, -952343, -1530360, 6097630, -2453780, -3205240, 4921660, -2396700, -3084250, 5025300, -2437530, -3120690, 4983270, 286926, -1779500, 6097630, 290965, -1811710, 6088010, 335750, -1861510, 6070780, 286926, -1779500, 6097630, 335750, -1861510, 6070780, 289230, -1779130, 6097630, 289230, -1779130, 6097630, 286162, -1773470, 6099410, 286926, -1779500, 6097630, -2386580, -1994150, 5549830, -2021520, -1637460, 5803950, -2422890, -1962230, 5545500, -2422890, -1962230, 5545500, -2461540, -1993450, 5517470, -2429100, -2037320, 5515830, -2422890, -1962230, 5545500, -2429100, -2037320, 5515830, -2386580, -1994150, 5549830, 946996, -2753930, 5655450, 881598, -2695070, 5693990, 873754, -2727210, 5679970, 954625, -2190250, 5893900, 839329, -2164490, 5920720, 904677, -2283430, 5866530, 954625, -2190250, 5893900, 904677, -2283430, 5866530, 958374, -2246230, 5872330, 958374, -2246230, 5872330, 904677, -2283430, 5866530, 963879, -2387480, 5815800, 318079, -708660, 6309430, 281506, -714645, 6310490, 359499, -874700, 6286490, 2327320, -3628690, 4684960, 2182500, -3407270, 4913760, 2191760, -3561510, 4799710, 2331500, -3388750, 4858200, 2281440, -3400670, 4873500, 2327340, -3427450, 4833140, 2463200, -3556140, 4671200, 2440590, -3617990, 4635670, 2479740, -3594700, 4633040, 2609130, -3528800, 4612720, 2533670, -3482420, 4688890, 2559530, -3546120, 4627110, 2012380, -3979230, 4545050, 1987800, -4120520, 4429270, 2044660, -4057360, 4461350, 1639850, -3042720, 5342380, 1614300, -3056360, 5342380, 1674530, -3122810, 5285490, 1639850, -3042720, 5342380, 1674530, -3122810, 5285490, 1668440, -3059700, 5323920, 1639850, -3042720, 5342380, 1557010, -2991300, 5395580, 1614300, -3056360, 5342380, 342228, -2891690, 5655620, 309471, -2941310, 5632030, 323612, -2966650, 5618020, 299683, -1161230, 6243370, 268544, -1154700, 6245980, 290315, -1183780, 6239600, 710714, -2469590, 5817950, 709419, -2522810, 5795380, 734137, -2553480, 5778960, 611484, -2257380, 5913990, 542041, -2211560, 5937860, 523274, -2243150, 5927750, 746315, -2381280, 585e4, 736520, -2357620, 5860740, 741910, -2383760, 5849550, 741910, -2383760, 5849550, 796403, -2667790, 5719160, 881598, -2695070, 5693990, 741910, -2383760, 5849550, 881598, -2695070, 5693990, 746315, -2381280, 585e4, 4294020, 791408, 4633680, 4298720, 752756, 4635750, 4327720, 791429, 4602430, 4327720, 791429, 4602430, 4298720, 752756, 4635750, 4347060, 760469, 4589490, 4298720, 752756, 4635750, 4289920, 716346, 4649550, 4347060, 760469, 4589490, 4347060, 760469, 4589490, 4289920, 716346, 4649550, 4346560, 702657, 4599100, 4254460, 719147, 4681380, 4346560, 702657, 4599100, 4289920, 716346, 4649550, 4254460, 719147, 4681380, 4381170, 691268, 4568100, 4346560, 702657, 4599100, 4254460, 719147, 4681380, 4242310, 635729, 4704270, 4381170, 691268, 4568100, 4381170, 691268, 4568100, 4242310, 635729, 4704270, 4389280, 655195, 4565640, 4242310, 635729, 4704270, 4262240, 623108, 4688020, 4389280, 655195, 4565640, 4389280, 655195, 4565640, 4262240, 623108, 4688020, 4378680, 640079, 4577860, 4262240, 623108, 4688020, 4411600, 600862, 4551680, 4378680, 640079, 4577860, 4375530, 498536, 4598300, 4355640, 460670, 4620920, 4392070, 463377, 4586280, 4304030, 510841, 4663520, 4355640, 460670, 4620920, 4375530, 498536, 4598300, 4407400, 528952, 4564560, 4304030, 510841, 4663520, 4375530, 498536, 4598300, 4286980, 540979, 4675730, 4304030, 510841, 4663520, 4407400, 528952, 4564560, 4420260, 564198, 4547990, 4286980, 540979, 4675730, 4407400, 528952, 4564560, 4270450, 559695, 4688550, 4286980, 540979, 4675730, 4420260, 564198, 4547990, 4411600, 600862, 4551680, 4270450, 559695, 4688550, 4420260, 564198, 4547990, 4262240, 623108, 4688020, 4270450, 559695, 4688550, 4411600, 600862, 4551680, 4286980, 540979, 4675730, 4283660, 505987, 4682640, 4304030, 510841, 4663520, 4268300, 724453, 4668030, 4254460, 719147, 4681380, 4289920, 716346, 4649550, 1250360, -3427540, -5214020, 1300810, -3626550, -5065930, 1259980, -3576260, -5111490, 1371890, -3639370, -5038100, 1300810, -3626550, -5065930, 1250360, -3427540, -5214020, 1283920, -3385670, -5233060, 1371890, -3639370, -5038100, 1250360, -3427540, -5214020, 1413180, -3612330, -5046090, 1371890, -3639370, -5038100, 1283920, -3385670, -5233060, 1413180, -3612330, -5046090, 1283920, -3385670, -5233060, 1316140, -3365300, -5238150, 1340200, -3425650, -5193040, 1413180, -3612330, -5046090, 1316140, -3365300, -5238150, 1343860, -3351180, -5240150, 1340200, -3425650, -5193040, 1316140, -3365300, -5238150, 1403980, -3399970, -5193070, 1340200, -3425650, -5193040, 1343860, -3351180, -5240150, 1404870, -3356970, -5220540, 1403980, -3399970, -5193070, 1343860, -3351180, -5240150, 1438690, -3382770, -5194790, 1403980, -3399970, -5193070, 1404870, -3356970, -5220540, 1081700, -3602130, -5133960, 1069560, -3690610, -5073720, 1021280, -3723590, -5059640, 1141650, -3606410, -5118060, 1069560, -3690610, -5073720, 1081700, -3602130, -5133960, 1130950, -3536040, -5168940, 1141650, -3606410, -5118060, 1081700, -3602130, -5133960, 1214380, -3548480, -5141600, 1141650, -3606410, -5118060, 1130950, -3536040, -5168940, 1191780, -3462310, -5204820, 1214380, -3548480, -5141600, 1130950, -3536040, -5168940, 1259980, -3576260, -5111490, 1214380, -3548480, -5141600, 1191780, -3462310, -5204820, 1250360, -3427540, -5214020, 1259980, -3576260, -5111490, 1191780, -3462310, -5204820, 1099e3, -4153930, -4697760, 1099530, -4156500, -4695380, 1098590, -4154e3, -4697800, 1098590, -4154e3, -4697800, 1021820, -3945360, -4889740, 1041590, -3880930, -4936580, 1098590, -4154e3, -4697800, 1041590, -3880930, -4936580, 1099e3, -4153930, -4697760, 1193230, -4196270, -4637160, 1099530, -4156500, -4695380, 1099e3, -4153930, -4697760, 1193230, -4196270, -4637160, 1099e3, -4153930, -4697760, 1166280, -4142570, -4691610, 1166280, -4142570, -4691610, 1099e3, -4153930, -4697760, 1041590, -3880930, -4936580, 1193230, -4196270, -4637160, 1166280, -4142570, -4691610, 1169170, -4142060, -4691340, 1166280, -4142570, -4691610, 1041590, -3880930, -4936580, 1015980, -3777640, -5020750, 1166280, -4142570, -4691610, 1015980, -3777640, -5020750, 1169170, -4142060, -4691340, 1015980, -3777640, -5020750, 1041590, -3880930, -4936580, 1009430, -3836810, -4977310, 1193230, -4196270, -4637160, 1176710, -4299020, -4546990, 1087520, -4249300, -4614960, 1193230, -4196270, -4637160, 1237400, -4417480, -4416320, 1176710, -4299020, -4546990, 1314970, -4366510, -4444320, 1237400, -4417480, -4416320, 1193230, -4196270, -4637160, 1314970, -4366510, -4444320, 1193230, -4196270, -4637160, 1181160, -4139910, -4690250, 1314970, -4366510, -4444320, 1181160, -4139910, -4690250, 1230400, -4130710, -4685730, 1230400, -4130710, -4685730, 1181160, -4139910, -4690250, 1083560, -3706170, -5059480, 1181160, -4139910, -4690250, 1193230, -4196270, -4637160, 1181160, -4139910, -4690250, 1181160, -4139910, -4690250, 1181160, -4139910, -4690250, 1083560, -3706170, -5059480, 1181160, -4139910, -4690250, 1083560, -3706170, -5059480, 1083560, -3706170, -5059480, 1181160, -4139910, -4690250, 1193230, -4196270, -4637160, 1169170, -4142060, -4691340, 1169170, -4142060, -4691340, 1015980, -3777640, -5020750, 1083560, -3706170, -5059480, 1169170, -4142060, -4691340, 1083560, -3706170, -5059480, 1181160, -4139910, -4690250, 1427990, -3638470, -5023240, 1373770, -3673990, -5012570, 1371540, -3660810, -5022740, 1371540, -3660810, -5022740, 1373770, -3673990, -5012570, 1333290, -3651840, -5039430, 1373770, -3673990, -5012570, 1265120, -3642160, -5063780, 1333290, -3651840, -5039430, 1373770, -3673990, -5012570, 1221290, -3739810, -5003420, 1265120, -3642160, -5063780, 1200660, -3573830, -5127340, 1209650, -3797060, -4963230, 1138800, -3624590, -5105920, 1200660, -3573830, -5127340, 1221290, -3739810, -5003420, 1209650, -3797060, -4963230, 1265120, -3642160, -5063780, 1221290, -3739810, -5003420, 1200660, -3573830, -5127340, 1265120, -3642160, -5063780, 1200660, -3573830, -5127340, 1227720, -3566830, -5125820, 1449340, -4500380, -4266600, 1303e3, -4116040, -4679050, 1313870, -4113730, -4678050, 1449340, -4500380, -4266600, 1313870, -4113730, -4678050, 1355480, -4151350, -4633020, 1313870, -4113730, -4678050, 1303e3, -4116040, -4679050, 1295980, -4097200, -4697370, 1440630, -4411610, -4360590, 1449340, -4500380, -4266600, 1355480, -4151350, -4633020, 1430810, -4350190, -4424620, 1440630, -4411610, -4360590, 1355480, -4151350, -4633020, 1422190, -4290070, -4485280, 1430810, -4350190, -4424620, 1355480, -4151350, -4633020, 1415550, -4243440, -4531200, 1422190, -4290070, -4485280, 1355480, -4151350, -4633020, 1461e3, -4323740, -4440550, 1430810, -4350190, -4424620, 1422190, -4290070, -4485280, 1459610, -4293180, -4470360, 1461e3, -4323740, -4440550, 1422190, -4290070, -4485280, 1750700, -5182540, -3268780, 1764330, -5233550, -3179560, 1750340, -5182640, -3268820, 1750700, -5182540, -3268780, 1750340, -5182640, -3268820, 1637860, -4788870, -3868320, 1750700, -5182540, -3268780, 1637860, -4788870, -3868320, 1657490, -4847180, -3787020, 1750340, -5182640, -3268820, 1764330, -5233550, -3179560, 1747010, -5183560, -3269130, 1747010, -5183560, -3269130, 1583860, -4710020, -3985070, 1637860, -4788870, -3868320, 1747010, -5183560, -3269130, 1637860, -4788870, -3868320, 1750340, -5182640, -3268820, 1764330, -5233550, -3179560, 1744880, -5184150, -3269330, 1747010, -5183560, -3269130, 1744880, -5184150, -3269330, 1715530, -5108960, -3399730, 1583860, -4710020, -3985070, 1744880, -5184150, -3269330, 1583860, -4710020, -3985070, 1747010, -5183560, -3269130, 1583860, -4710020, -3985070, 1715530, -5108960, -3399730, 1542120, -4657720, -4061650, 1715530, -5108960, -3399730, 1649610, -5035580, -3538080, 1542120, -4657720, -4061650, 1542120, -4657720, -4061650, 1649610, -5035580, -3538080, 1500170, -4594050, -4148350, 1497430, -4589080, -4154800, 1483470, -4593610, -4154800, 1449340, -4500380, -4266600, 1649610, -5035580, -3538080, 1483470, -4593610, -4154800, 1497430, -4589080, -4154800, 1649610, -5035580, -3538080, 1497430, -4589080, -4154800, 1500170, -4594050, -4148350, 1497430, -4589080, -4154800, 1449340, -4500380, -4266600, 1485640, -4504510, -4249840, 1497430, -4589080, -4154800, 1485640, -4504510, -4249840, 1499290, -4588470, -4154800, 1499290, -4588470, -4154800, 1500170, -4594050, -4148350, 1497430, -4589080, -4154800, 2104990, -5288400, -2868270, 2084470, -5317520, -2829430, 2028410, -5284510, -2929550, 2081390, -5419140, -2633360, 2028410, -5284510, -2929550, 2084470, -5317520, -2829430, 2081390, -5419140, -2633360, 2084470, -5317520, -2829430, 2109490, -5408270, -2633360, 2109490, -5408270, -2633360, 2165460, -5631450, -2061430, 2081390, -5419140, -2633360, 2084470, -5317520, -2829430, 2113740, -5406610, -2633360, 2109490, -5408270, -2633360, 2167260, -5575170, -2206420, 2165460, -5631450, -2061430, 2109490, -5408270, -2633360, 2167260, -5575170, -2206420, 2109490, -5408270, -2633360, 2113740, -5406610, -2633360, 2132470, -5399250, -2633360, 2113740, -5406610, -2633360, 2084470, -5317520, -2829430, 2202980, -5513400, -2322400, 2167260, -5575170, -2206420, 2113740, -5406610, -2633360, 2202980, -5513400, -2322400, 2113740, -5406610, -2633360, 2132470, -5399250, -2633360, 2135110, -5398200, -2633360, 2132470, -5399250, -2633360, 2084470, -5317520, -2829430, 2202980, -5513400, -2322400, 2132470, -5399250, -2633360, 2135110, -5398200, -2633360, 2202980, -5513400, -2322400, 2135110, -5398200, -2633360, 2135790, -5399260, -2630650, 2135110, -5398200, -2633360, 2084470, -5317520, -2829430, 2109660, -5324600, -2797470, 2135110, -5398200, -2633360, 2109660, -5324600, -2797470, 2135390, -5398090, -2633360, 2135390, -5398090, -2633360, 2135790, -5399260, -2630650, 2135110, -5398200, -2633360, 2246710, -5378410, -2580840, 2218870, -5444840, -2463760, 2135790, -5399260, -2630650, 2289540, -5421880, -2449770, 2218870, -5444840, -2463760, 2246710, -5378410, -2580840, 2296830, -5407100, -2475320, 2289540, -5421880, -2449770, 2246710, -5378410, -2580840, 1401730, -4505380, -4277160, 1314970, -4366510, -4444320, 1273740, -4122110, -4681740, 1401730, -4505380, -4277160, 1273740, -4122110, -4681740, 1286040, -4119580, -4680610, 1253380, -4011360, -4781690, 1286040, -4119580, -4680610, 1273740, -4122110, -4681740, 1286040, -4119580, -4680610, 1287840, -4119210, -4680440, 1444210, -4606100, -4154800, 1286040, -4119580, -4680610, 1444210, -4606100, -4154800, 1436900, -4608390, -4154800, 1286040, -4119580, -4680610, 1436900, -4608390, -4154800, 1401730, -4505380, -4277160, 1287840, -4119210, -4680440, 1286040, -4119580, -4680610, 1253380, -4011360, -4781690, 1558430, -4958720, -3683960, 1436900, -4608390, -4154800, 1444210, -4606100, -4154800, 1444210, -4606100, -4154800, 1287840, -4119210, -4680440, 1301850, -4116280, -4679150, 1444210, -4606100, -4154800, 1301850, -4116280, -4679150, 1451050, -4603950, -4154800, 1287840, -4119210, -4680440, 1253380, -4011360, -4781690, 1295980, -4097200, -4697370, 1287840, -4119210, -4680440, 1295980, -4097200, -4697370, 1301850, -4116280, -4679150, 1451050, -4603950, -4154800, 1558430, -4958720, -3683960, 1444210, -4606100, -4154800, 1479010, -4595050, -4154800, 1451050, -4603950, -4154800, 1301850, -4116280, -4679150, 1479010, -4595050, -4154800, 1301850, -4116280, -4679150, 1302770, -4116090, -4679070, 1302770, -4116090, -4679070, 1301850, -4116280, -4679150, 1295980, -4097200, -4697370, 1649610, -5035580, -3538080, 1558430, -4958720, -3683960, 1451050, -4603950, -4154800, 1649610, -5035580, -3538080, 1451050, -4603950, -4154800, 1479010, -4595050, -4154800, 1479010, -4595050, -4154800, 1302770, -4116090, -4679070, 1303e3, -4116040, -4679050, 1479010, -4595050, -4154800, 1303e3, -4116040, -4679050, 1449340, -4500380, -4266600, 1479010, -4595050, -4154800, 1449340, -4500380, -4266600, 1483470, -4593610, -4154800, 1303e3, -4116040, -4679050, 1302770, -4116090, -4679070, 1295980, -4097200, -4697370, 1649610, -5035580, -3538080, 1479010, -4595050, -4154800, 1483470, -4593610, -4154800, 1822920, -5028750, -3462440, 1816450, -5139490, -3300520, 1751950, -4916800, -3653270, 1735820, -4865290, -3728650, 1751950, -4916800, -3653270, 1816450, -5139490, -3300520, 1820550, -5162600, -3262220, 1849720, -5343210, -2941260, 1810010, -5165670, -3263210, 1820550, -5162600, -3262220, 1810010, -5165670, -3263210, 1735820, -4865290, -3728650, 1820550, -5162600, -3262220, 1735820, -4865290, -3728650, 1816450, -5139490, -3300520, 1898260, -5428180, -2749740, 1849720, -5343210, -2941260, 1820550, -5162600, -3262220, 1898260, -5428180, -2749740, 1820550, -5162600, -3262220, 1822980, -5161880, -3262e3, 1816450, -5139490, -3300520, 1822980, -5161880, -3262e3, 1820550, -5162600, -3262220, 1933430, -5473680, -2633360, 1898260, -5428180, -2749740, 1822980, -5161880, -3262e3, 1933430, -5473680, -2633360, 1822980, -5161880, -3262e3, 1824870, -5161330, -3261820, 1933430, -5473680, -2633360, 1824870, -5161330, -3261820, 1945470, -5469410, -2633360, 1824870, -5161330, -3261820, 1822980, -5161880, -3262e3, 1816450, -5139490, -3300520, 1960850, -5507910, -2540690, 1933430, -5473680, -2633360, 1945470, -5469410, -2633360, 1945470, -5469410, -2633360, 1824870, -5161330, -3261820, 1834240, -5158570, -3260930, 1945470, -5469410, -2633360, 1834240, -5158570, -3260930, 1901410, -5227920, -3109500, 1945470, -5469410, -2633360, 1901410, -5227920, -3109500, 1952910, -5466760, -2633360, 1834240, -5158570, -3260930, 1824870, -5161330, -3261820, 1816450, -5139490, -3300520, 1952910, -5466760, -2633360, 1960850, -5507910, -2540690, 1945470, -5469410, -2633360, 1901410, -5227920, -3109500, 1834240, -5158570, -3260930, 1847910, -5154510, -3259650, 1901410, -5227920, -3109500, 1847910, -5154510, -3259650, 1891680, -5174590, -3202600, 1847910, -5154510, -3259650, 1834240, -5158570, -3260930, 1816450, -5139490, -3300520, 1810010, -5165670, -3263210, 1849720, -5343210, -2941260, 1782810, -5173500, -3265770, 1782810, -5173500, -3265770, 1657490, -4847180, -3787020, 1735820, -4865290, -3728650, 1782810, -5173500, -3265770, 1735820, -4865290, -3728650, 1810010, -5165670, -3263210, 1849720, -5343210, -2941260, 1764330, -5233550, -3179560, 1750700, -5182540, -3268780, 1849720, -5343210, -2941260, 1750700, -5182540, -3268780, 1782810, -5173500, -3265770, 1782810, -5173500, -3265770, 1750700, -5182540, -3268780, 1657490, -4847180, -3787020, 1849720, -5343210, -2941260, 1774750, -5301070, -3060460, 1764330, -5233550, -3179560, 1822100, -4956940, -3564230, 1822920, -5028750, -3462440, 1751950, -4916800, -3653270, 1841860, -5010030, -3479400, 1822920, -5028750, -3462440, 1822100, -4956940, -3564230, 1901410, -5227920, -3109500, 1979700, -5457110, -2633360, 1952910, -5466760, -2633360, 2023160, -5586240, -2311990, 1960850, -5507910, -2540690, 1952910, -5466760, -2633360, 2023160, -5586240, -2311990, 1952910, -5466760, -2633360, 1979700, -5457110, -2633360, 1990490, -5453190, -2633360, 1979700, -5457110, -2633360, 1901410, -5227920, -3109500, 2088340, -5693840, -1968140, 2023160, -5586240, -2311990, 1979700, -5457110, -2633360, 2088340, -5693840, -1968140, 1979700, -5457110, -2633360, 1990490, -5453190, -2633360, 1990490, -5453190, -2633360, 1901410, -5227920, -3109500, 1950910, -5261620, -3021330, 1990490, -5453190, -2633360, 1950910, -5261620, -3021330, 2010910, -5445690, -2633360, 2010910, -5445690, -2633360, 2088340, -5693840, -1968140, 1990490, -5453190, -2633360, 2020410, -5442170, -2633360, 2010910, -5445690, -2633360, 1950910, -5261620, -3021330, 2121010, -5700300, -1914120, 2088340, -5693840, -1968140, 2010910, -5445690, -2633360, 2121010, -5700300, -1914120, 2010910, -5445690, -2633360, 2020410, -5442170, -2633360, 2020410, -5442170, -2633360, 1950910, -5261620, -3021330, 2028410, -5284510, -2929550, 2020410, -5442170, -2633360, 2028410, -5284510, -2929550, 2063560, -5425960, -2633360, 2063560, -5425960, -2633360, 2121010, -5700300, -1914120, 2020410, -5442170, -2633360, 2028410, -5284510, -2929550, 2077230, -5420740, -2633360, 2063560, -5425960, -2633360, 2161430, -5660310, -1985740, 2121010, -5700300, -1914120, 2063560, -5425960, -2633360, 2161430, -5660310, -1985740, 2063560, -5425960, -2633360, 2077230, -5420740, -2633360, 2081390, -5419140, -2633360, 2077230, -5420740, -2633360, 2028410, -5284510, -2929550, 2165460, -5631450, -2061430, 2161430, -5660310, -1985740, 2077230, -5420740, -2633360, 2165460, -5631450, -2061430, 2077230, -5420740, -2633360, 2081390, -5419140, -2633360, 2088340, -5693840, -1968140, 2034190, -5704030, -1994980, 2037630, -5648730, -2142350, 2088340, -5693840, -1968140, 2037630, -5648730, -2142350, 2023160, -5586240, -2311990, 1138800, -3624590, -5105920, 1169230, -3904180, -4889770, 1083560, -3706170, -5059480, 1138800, -3624590, -5105920, 1184090, -3867120, -4915400, 1169230, -3904180, -4889770, 1230630, -3858390, -4910850, 1184090, -3867120, -4915400, 1138800, -3624590, -5105920, 1230630, -3858390, -4910850, 1138800, -3624590, -5105920, 1209650, -3797060, -4963230, 1169230, -3904180, -4889770, 1189e3, -3992350, -4813720, 1083560, -3706170, -5059480, 1314970, -4366510, -4444320, 1230400, -4130710, -4685730, 1234870, -4129840, -4685320, 1230400, -4130710, -4685730, 1083560, -3706170, -5059480, 1189e3, -3992350, -4813720, 1230400, -4130710, -4685730, 1189e3, -3992350, -4813720, 1234870, -4129840, -4685320, 1273740, -4122110, -4681740, 1314970, -4366510, -4444320, 1234870, -4129840, -4685320, 1234870, -4129840, -4685320, 1189e3, -3992350, -4813720, 1253380, -4011360, -4781690, 1234870, -4129840, -4685320, 1253380, -4011360, -4781690, 1273740, -4122110, -4681740, 1303350, -4457500, -4357130, 1311210, -4578150, -4228640, 1257110, -4481910, -4345750, 1342300, -4636830, -4154800, 1311210, -4578150, -4228640, 1303350, -4457500, -4357130, 1342300, -4636830, -4154800, 1303350, -4457500, -4357130, 1356140, -4632800, -4154800, 1376260, -4699450, -4073070, 1342300, -4636830, -4154800, 1356140, -4632800, -4154800, 1356140, -4632800, -4154800, 1303350, -4457500, -4357130, 1354540, -4540520, -4255290, 1356140, -4632800, -4154800, 1354540, -4540520, -4255290, 1367040, -4629590, -4154800, 1367040, -4629590, -4154800, 1376260, -4699450, -4073070, 1356140, -4632800, -4154800, 1385820, -4624010, -4154800, 1367040, -4629590, -4154800, 1354540, -4540520, -4255290, 1427870, -4734580, -4014600, 1376260, -4699450, -4073070, 1367040, -4629590, -4154800, 1427870, -4734580, -4014600, 1367040, -4629590, -4154800, 1385820, -4624010, -4154800, 1385820, -4624010, -4154800, 1354540, -4540520, -4255290, 1401730, -4505380, -4277160, 1385820, -4624010, -4154800, 1401730, -4505380, -4277160, 1415080, -4615140, -4154800, 1415080, -4615140, -4154800, 1427870, -4734580, -4014600, 1385820, -4624010, -4154800, 1401730, -4505380, -4277160, 1423930, -4612410, -4154800, 1415080, -4615140, -4154800, 1474500, -4873540, -3828360, 1427870, -4734580, -4014600, 1415080, -4615140, -4154800, 1474500, -4873540, -3828360, 1415080, -4615140, -4154800, 1423930, -4612410, -4154800, 1436900, -4608390, -4154800, 1423930, -4612410, -4154800, 1401730, -4505380, -4277160, 1558430, -4958720, -3683960, 1474500, -4873540, -3828360, 1423930, -4612410, -4154800, 1558430, -4958720, -3683960, 1423930, -4612410, -4154800, 1436900, -4608390, -4154800, 1474500, -4873540, -3828360, 1438e3, -4882160, -3831230, 1423310, -4806740, -3930140, 1474500, -4873540, -3828360, 1423310, -4806740, -3930140, 1427870, -4734580, -4014600, 1291600, -4054760, -4735e3, 1295980, -4097200, -4697370, 1253380, -4011360, -4781690, 2211270, -5597060, -2105700, 2165460, -5631450, -2061430, 2167260, -5575170, -2206420, 1764330, -5233550, -3179560, 1722430, -5198610, -3258340, 1721860, -5190480, -3271490, 1764330, -5233550, -3179560, 1721860, -5190480, -3271490, 1744880, -5184150, -3269330, 1744880, -5184150, -3269330, 1721860, -5190480, -3271490, 1715530, -5108960, -3399730, 1641280, -4717020, -3953630, 1637860, -4788870, -3868320, 1583860, -4710020, -3985070, 2218870, -5444840, -2463760, 2202980, -5513400, -2322400, 2135790, -5399260, -2630650, 1466100, -4372600, -4391080, 1440630, -4411610, -4360590, 1430810, -4350190, -4424620, 1099530, -4156500, -4695380, 1097760, -4154130, -4697870, 1098590, -4154e3, -4697800, 1097760, -4154130, -4697870, 1048840, -4087320, -4766680, 1021820, -3945360, -4889740, 1097760, -4154130, -4697870, 1021820, -3945360, -4889740, 1098590, -4154e3, -4697800, -2153790, 5607890, 2136030, -2126850, 5602800, 2175760, -2116470, 5639430, 2090110, -2126850, 5602800, 2175760, -2100840, 5667440, 2029660, -2116470, 5639430, 2090110, -2126850, 5602800, 2175760, -2070200, 5623010, 2178230, -2100840, 5667440, 2029660, -2100840, 5667440, 2029660, -2070200, 5623010, 2178230, -2020750, 5714340, 1979180, -2070200, 5623010, 2178230, -1966030, 5671480, 2149070, -2020750, 5714340, 1979180, -2020750, 5714340, 1979180, -1966030, 5671480, 2149070, -1935310, 5732440, 2011750, -1966030, 5671480, 2149070, -1922530, 5704130, 2101810, -1935310, 5732440, 2011750, -1282660, 5661630, 2633360, -1294860, 5742460, 2447e3, -1374760, 5724070, 2446490, -1282660, 5661630, 2633360, -1374760, 5724070, 2446490, -1353800, 5645040, 2633360, -1108940, 4698100, 4154800, -1197320, 5161500, 3538590, -1226780, 5152660, 3541360, -1108940, 4698100, 4154800, -1226780, 5152660, 3541360, -1112300, 4697310, 4154800, -1197320, 5161500, 3538590, -1282660, 5661630, 2633360, -1353800, 5645040, 2633360, -1197320, 5161500, 3538590, -1353800, 5645040, 2633360, -1226780, 5152660, 3541360, -1112300, 4697310, 4154800, -1094590, 4626130, 4237960, -1108940, 4698100, 4154800, -1235970, 5672010, 2633360, -1243170, 5764480, 2422060, -1294860, 5742460, 2447e3, -1235970, 5672010, 2633360, -1294860, 5742460, 2447e3, -1282660, 5661630, 2633360, -1106730, 4698630, 4154800, -1177950, 5167220, 3536760, -1197320, 5161500, 3538590, -1106730, 4698630, 4154800, -1197320, 5161500, 3538590, -1108940, 4698100, 4154800, -1177950, 5167220, 3536760, -1235970, 5672010, 2633360, -1282660, 5661630, 2633360, -1177950, 5167220, 3536760, -1282660, 5661630, 2633360, -1197320, 5161500, 3538590, -1094590, 4626130, 4237960, -1106730, 4698630, 4154800, -1108940, 4698100, 4154800, -1235970, 5672010, 2633360, -1220330, 5675390, 2633360, -1243170, 5764480, 2422060, -1106730, 4698630, 4154800, -992093, 4724160, 4154800, -1100990, 5189110, 3529540, -1106730, 4698630, 4154800, -1100990, 5189110, 3529540, -1177950, 5167220, 3536760, -1177950, 5167220, 3536760, -1100990, 5189110, 3529540, -1220330, 5675390, 2633360, -1177950, 5167220, 3536760, -1220330, 5675390, 2633360, -1235970, 5672010, 2633360, -1094590, 4626130, 4237960, -965532, 4608480, 4287940, -992093, 4724160, 4154800, -1094590, 4626130, 4237960, -992093, 4724160, 4154800, -1106730, 4698630, 4154800, -1174420, 5685070, 2633360, -1192250, 5781540, 2407050, -1243170, 5764480, 2422060, -1174420, 5685070, 2633360, -1243170, 5764480, 2422060, -1220330, 5675390, 2633360, -988712, 4724870, 4154800, -1080950, 5194610, 3527660, -1100990, 5189110, 3529540, -988712, 4724870, 4154800, -1100990, 5189110, 3529540, -992093, 4724160, 4154800, -1080950, 5194610, 3527660, -1174420, 5685070, 2633360, -1220330, 5675390, 2633360, -1080950, 5194610, 3527660, -1220330, 5675390, 2633360, -1100990, 5189110, 3529540, -992093, 4724160, 4154800, -965532, 4608480, 4287940, -988712, 4724870, 4154800, -1143250, 5691420, 2633360, -1162630, 5834310, 2292230, -1192250, 5781540, 2407050, -1143250, 5691420, 2633360, -1192250, 5781540, 2407050, -1174420, 5685070, 2633360, -986403, 4725350, 4154800, -1067250, 5198320, 3526370, -1080950, 5194610, 3527660, -986403, 4725350, 4154800, -1080950, 5194610, 3527660, -988712, 4724870, 4154800, -1067250, 5198320, 3526370, -1143250, 5691420, 2633360, -1174420, 5685070, 2633360, -1067250, 5198320, 3526370, -1174420, 5685070, 2633360, -1080950, 5194610, 3527660, -965532, 4608480, 4287940, -986403, 4725350, 4154800, -988712, 4724870, 4154800, -1217080, 5824310, 2289410, -1192250, 5781540, 2407050, -1162630, 5834310, 2292230, -1853610, 5501220, 2633360, -1883310, 5621120, 2345140, -2018770, 5587750, 2312180, -1853610, 5501220, 2633360, -2018770, 5587750, 2312180, -1963740, 5462880, 2633360, -1586550, 4559030, 4154800, -1711020, 4979330, 3587840, -1754730, 4960980, 3592120, -1586550, 4559030, 4154800, -1754730, 4960980, 3592120, -1594750, 4556170, 4154800, -1711020, 4979330, 3587840, -1853610, 5501220, 2633360, -1963740, 5462880, 2633360, -1711020, 4979330, 3587840, -1963740, 5462880, 2633360, -1754730, 4960980, 3592120, -1594750, 4556170, 4154800, -1551780, 4445120, 4288300, -1586550, 4559030, 4154800, -1815160, 5514030, 2633360, -1838900, 5642800, 2328390, -1883310, 5621120, 2345140, -1815160, 5514030, 2633360, -1883310, 5621120, 2345140, -1853610, 5501220, 2633360, -1583690, 4560030, 4154800, -1695610, 4985680, 3586340, -1711020, 4979330, 3587840, -1583690, 4560030, 4154800, -1711020, 4979330, 3587840, -1586550, 4559030, 4154800, -1695610, 4985680, 3586340, -1815160, 5514030, 2633360, -1853610, 5501220, 2633360, -1695610, 4985680, 3586340, -1853610, 5501220, 2633360, -1711020, 4979330, 3587840, -1551780, 4445120, 4288300, -1583690, 4560030, 4154800, -1586550, 4559030, 4154800, -1815160, 5514030, 2633360, -1794550, 5520770, 2633360, -1838900, 5642800, 2328390, -1583690, 4560030, 4154800, -1473090, 4596950, 4154800, -1616950, 5017260, 3578680, -1583690, 4560030, 4154800, -1616950, 5017260, 3578680, -1695610, 4985680, 3586340, -1695610, 4985680, 3586340, -1616950, 5017260, 3578680, -1794550, 5520770, 2633360, -1695610, 4985680, 3586340, -1794550, 5520770, 2633360, -1815160, 5514030, 2633360, -1551780, 4445120, 4288300, -1435840, 4486900, 4285200, -1473090, 4596950, 4154800, -1551780, 4445120, 4288300, -1473090, 4596950, 4154800, -1583690, 4560030, 4154800, -1710420, 5547410, 2633360, -1736340, 5664090, 2355090, -1838900, 5642800, 2328390, -1710420, 5547410, 2633360, -1838900, 5642800, 2328390, -1794550, 5520770, 2633360, -1466910, 4598920, 4154800, -1583e3, 5030430, 3575380, -1616950, 5017260, 3578680, -1466910, 4598920, 4154800, -1616950, 5017260, 3578680, -1473090, 4596950, 4154800, -1583e3, 5030430, 3575380, -1710420, 5547410, 2633360, -1794550, 5520770, 2633360, -1583e3, 5030430, 3575380, -1794550, 5520770, 2633360, -1616950, 5017260, 3578680, -1473090, 4596950, 4154800, -1435840, 4486900, 4285200, -1466910, 4598920, 4154800, -1679410, 5556880, 2633360, -1692990, 5634100, 2455730, -1736340, 5664090, 2355090, -1679410, 5556880, 2633360, -1736340, 5664090, 2355090, -1710420, 5547410, 2633360, -1464660, 4599640, 4154800, -1570340, 5035270, 3574160, -1583e3, 5030430, 3575380, -1464660, 4599640, 4154800, -1583e3, 5030430, 3575380, -1466910, 4598920, 4154800, -1570340, 5035270, 3574160, -1679410, 5556880, 2633360, -1710420, 5547410, 2633360, -1570340, 5035270, 3574160, -1710420, 5547410, 2633360, -1583e3, 5030430, 3575380, -1435840, 4486900, 4285200, -1464660, 4599640, 4154800, -1466910, 4598920, 4154800, -1736340, 5664090, 2355090, -1692990, 5634100, 2455730, -1684410, 5662160, 2396800, -2064750, 5425500, 2633360, -2108300, 5554510, 2312390, -2208280, 5508820, 2328190, -2064750, 5425500, 2633360, -2208280, 5508820, 2328190, -2150750, 5391990, 2633360, -1737070, 4503830, 4154800, -1882090, 4904800, 3604690, -1917280, 4888550, 3608190, -1737070, 4503830, 4154800, -1917280, 4888550, 3608190, -1746500, 4500190, 4154800, -1882090, 4904800, 3604690, -2064750, 5425500, 2633360, -2150750, 5391990, 2633360, -1882090, 4904800, 3604690, -2150750, 5391990, 2633360, -1917280, 4888550, 3608190, -1746500, 4500190, 4154800, -1673020, 4328980, 4360440, -1737070, 4503830, 4154800, -2039540, 5435030, 2633360, -2089750, 5605990, 2203130, -2108300, 5554510, 2312390, -2039540, 5435030, 2633360, -2108300, 5554510, 2312390, -2064750, 5425500, 2633360, -1734240, 4504920, 4154800, -1871720, 4909520, 3603660, -1882090, 4904800, 3604690, -1734240, 4504920, 4154800, -1882090, 4904800, 3604690, -1737070, 4503830, 4154800, -1871720, 4909520, 3603660, -2039540, 5435030, 2633360, -2064750, 5425500, 2633360, -1871720, 4909520, 3603660, -2064750, 5425500, 2633360, -1882090, 4904800, 3604690, -1673020, 4328980, 4360440, -1734240, 4504920, 4154800, -1737070, 4503830, 4154800, -2039540, 5435030, 2633360, -2027110, 5439680, 2633360, -2089750, 5605990, 2203130, -1734240, 4504920, 4154800, -1683810, 4524010, 4154800, -1834420, 4926300, 3599970, -1734240, 4504920, 4154800, -1834420, 4926300, 3599970, -1871720, 4909520, 3603660, -1871720, 4909520, 3603660, -1834420, 4926300, 3599970, -2027110, 5439680, 2633360, -1871720, 4909520, 3603660, -2027110, 5439680, 2633360, -2039540, 5435030, 2633360, -1673020, 4328980, 4360440, -1632830, 4387730, 4317030, -1683810, 4524010, 4154800, -1673020, 4328980, 4360440, -1683810, 4524010, 4154800, -1734240, 4504920, 4154800, -1984320, 5455430, 2633360, -2036210, 5628040, 2197060, -2089750, 5605990, 2203130, -1984320, 5455430, 2633360, -2089750, 5605990, 2203130, -2027110, 5439680, 2633360, -1680020, 4525420, 4154800, -1817270, 4933890, 3598280, -1834420, 4926300, 3599970, -1680020, 4525420, 4154800, -1834420, 4926300, 3599970, -1683810, 4524010, 4154800, -1817270, 4933890, 3598280, -1984320, 5455430, 2633360, -2027110, 5439680, 2633360, -1817270, 4933890, 3598280, -2027110, 5439680, 2633360, -1834420, 4926300, 3599970, -1683810, 4524010, 4154800, -1632830, 4387730, 4317030, -1680020, 4525420, 4154800, -1980230, 5456920, 2633360, -2018770, 5587750, 2312180, -2036210, 5628040, 2197060, -1980230, 5456920, 2633360, -2036210, 5628040, 2197060, -1984320, 5455430, 2633360, -1679630, 4525570, 4154800, -1815590, 4934630, 3598110, -1817270, 4933890, 3598280, -1679630, 4525570, 4154800, -1817270, 4933890, 3598280, -1680020, 4525420, 4154800, -1815590, 4934630, 3598110, -1980230, 5456920, 2633360, -1984320, 5455430, 2633360, -1815590, 4934630, 3598110, -1984320, 5455430, 2633360, -1817270, 4933890, 3598280, -1632830, 4387730, 4317030, -1679630, 4525570, 4154800, -1680020, 4525420, 4154800, -2036210, 5628040, 2197060, -2018770, 5587750, 2312180, -2000940, 5610610, 2272240, -2208280, 5508820, 2328190, -2159780, 5388380, 2633360, -2150750, 5391990, 2633360, -1795090, 4481020, 4154800, -1746500, 4500190, 4154800, -1917280, 4888550, 3608190, -1795090, 4481020, 4154800, -1917280, 4888550, 3608190, -1952160, 4872120, 3611680, -1952160, 4872120, 3611680, -1917280, 4888550, 3608190, -2150750, 5391990, 2633360, -1952160, 4872120, 3611680, -2150750, 5391990, 2633360, -2159780, 5388380, 2633360, -1716200, 4284300, 4387510, -1673020, 4328980, 4360440, -1746500, 4500190, 4154800, -1716200, 4284300, 4387510, -1746500, 4500190, 4154800, -1795090, 4481020, 4154800, -2160250, 5388190, 2633360, -2159780, 5388380, 2633360, -2208280, 5508820, 2328190, -1797990, 4479860, 4154800, -1795090, 4481020, 4154800, -1952160, 4872120, 3611680, -1797990, 4479860, 4154800, -1952160, 4872120, 3611680, -1954230, 4871140, 3611890, -1954230, 4871140, 3611890, -1952160, 4872120, 3611680, -2159780, 5388380, 2633360, -1954230, 4871140, 3611890, -2159780, 5388380, 2633360, -2160250, 5388190, 2633360, -1680040, 4184930, 4495360, -1716200, 4284300, 4387510, -1795090, 4481020, 4154800, -1680040, 4184930, 4495360, -1795090, 4481020, 4154800, -1797990, 4479860, 4154800, -2160250, 5388190, 2633360, -2208280, 5508820, 2328190, -2333800, 5434420, 2379690, -2160250, 5388190, 2633360, -2333800, 5434420, 2379690, -2276910, 5339940, 2633360, -1797990, 4479860, 4154800, -1954230, 4871140, 3611890, -2005960, 4846170, 3617070, -1797990, 4479860, 4154800, -2005960, 4846170, 3617070, -1817830, 4471850, 4154800, -1954230, 4871140, 3611890, -2160250, 5388190, 2633360, -2276910, 5339940, 2633360, -1954230, 4871140, 3611890, -2276910, 5339940, 2633360, -2005960, 4846170, 3617070, -1817830, 4471850, 4154800, -1680040, 4184930, 4495360, -1797990, 4479860, 4154800, -2333800, 5434420, 2379690, -2282590, 5337520, 2633360, -2276910, 5339940, 2633360, -1853520, 4457170, 4154800, -1817830, 4471850, 4154800, -2005960, 4846170, 3617070, -1853520, 4457170, 4154800, -2005960, 4846170, 3617070, -2031300, 4833680, 3619620, -2031300, 4833680, 3619620, -2005960, 4846170, 3617070, -2276910, 5339940, 2633360, -2031300, 4833680, 3619620, -2276910, 5339940, 2633360, -2282590, 5337520, 2633360, -1723800, 4174800, 4488260, -1680040, 4184930, 4495360, -1817830, 4471850, 4154800, -1723800, 4174800, 4488260, -1817830, 4471850, 4154800, -1853520, 4457170, 4154800, -2293020, 5333040, 2633360, -2282590, 5337520, 2633360, -2333800, 5434420, 2379690, -1919130, 4429320, 4154800, -1853520, 4457170, 4154800, -2031300, 4833680, 3619620, -1919130, 4429320, 4154800, -2031300, 4833680, 3619620, -2078140, 4810140, 3624360, -2078140, 4810140, 3624360, -2031300, 4833680, 3619620, -2282590, 5337520, 2633360, -2078140, 4810140, 3624360, -2282590, 5337520, 2633360, -2293020, 5333040, 2633360, -1804750, 4157790, 4472310, -1723800, 4174800, 4488260, -1853520, 4457170, 4154800, -1804750, 4157790, 4472310, -1853520, 4457170, 4154800, -1919130, 4429320, 4154800, -1679410, 5556880, 2633360, -1665340, 5561110, 2633360, -1692990, 5634100, 2455730, -1464660, 4599640, 4154800, -1344080, 4636310, 4154800, -1488330, 5065720, 3566270, -1464660, 4599640, 4154800, -1488330, 5065720, 3566270, -1570340, 5035270, 3574160, -1570340, 5035270, 3574160, -1488330, 5065720, 3566270, -1665340, 5561110, 2633360, -1570340, 5035270, 3574160, -1665340, 5561110, 2633360, -1679410, 5556880, 2633360, -1435840, 4486900, 4285200, -1315940, 4550550, 4256680, -1344080, 4636310, 4154800, -1435840, 4486900, 4285200, -1344080, 4636310, 4154800, -1464660, 4599640, 4154800, -1584220, 5584760, 2633360, -1600760, 5652830, 2474360, -1692990, 5634100, 2455730, -1584220, 5584760, 2633360, -1692990, 5634100, 2455730, -1665340, 5561110, 2633360, -1339380, 4637670, 4154800, -1455640, 5077430, 3563130, -1488330, 5065720, 3566270, -1339380, 4637670, 4154800, -1488330, 5065720, 3566270, -1344080, 4636310, 4154800, -1455640, 5077430, 3563130, -1584220, 5584760, 2633360, -1665340, 5561110, 2633360, -1455640, 5077430, 3563130, -1665340, 5561110, 2633360, -1488330, 5065720, 3566270, -1344080, 4636310, 4154800, -1315940, 4550550, 4256680, -1339380, 4637670, 4154800, -1539630, 5597220, 2633360, -1548830, 5650330, 2512570, -1600760, 5652830, 2474360, -1539630, 5597220, 2633360, -1600760, 5652830, 2474360, -1584220, 5584760, 2633360, -1336790, 4638420, 4154800, -1437610, 5083790, 3561390, -1455640, 5077430, 3563130, -1336790, 4638420, 4154800, -1455640, 5077430, 3563130, -1339380, 4637670, 4154800, -1437610, 5083790, 3561390, -1539630, 5597220, 2633360, -1584220, 5584760, 2633360, -1437610, 5083790, 3561390, -1584220, 5584760, 2633360, -1455640, 5077430, 3563130, -1315940, 4550550, 4256680, -1336790, 4638420, 4154800, -1339380, 4637670, 4154800, -1539630, 5597220, 2633360, -1532300, 5599230, 2633360, -1548830, 5650330, 2512570, -1336790, 4638420, 4154800, -1247660, 4663180, 4154800, -1378620, 5104060, 3555760, -1336790, 4638420, 4154800, -1378620, 5104060, 3555760, -1437610, 5083790, 3561390, -1437610, 5083790, 3561390, -1378620, 5104060, 3555760, -1532300, 5599230, 2633360, -1437610, 5083790, 3561390, -1532300, 5599230, 2633360, -1539630, 5597220, 2633360, -1315940, 4550550, 4256680, -1233510, 4614790, 4212270, -1247660, 4663180, 4154800, -1315940, 4550550, 4256680, -1247660, 4663180, 4154800, -1336790, 4638420, 4154800, -1548830, 5650330, 2512570, -1532300, 5599230, 2633360, -1529560, 5599980, 2633360, -1247660, 4663180, 4154800, -1214020, 4672050, 4154800, -1356520, 5111450, 3553650, -1247660, 4663180, 4154800, -1356520, 5111450, 3553650, -1378620, 5104060, 3555760, -1378620, 5104060, 3555760, -1356520, 5111450, 3553650, -1529560, 5599980, 2633360, -1378620, 5104060, 3555760, -1529560, 5599980, 2633360, -1532300, 5599230, 2633360, -1233510, 4614790, 4212270, -1192030, 4601930, 4238030, -1214020, 4672050, 4154800, -1233510, 4614790, 4212270, -1214020, 4672050, 4154800, -1247660, 4663180, 4154800, -1451620, 5620680, 2633360, -1470420, 5695140, 2458280, -1548830, 5650330, 2512570, -1451620, 5620680, 2633360, -1548830, 5650330, 2512570, -1529560, 5599980, 2633360, -1210270, 4673030, 4154800, -1324970, 5121810, 3550660, -1356520, 5111450, 3553650, -1210270, 4673030, 4154800, -1356520, 5111450, 3553650, -1214020, 4672050, 4154800, -1324970, 5121810, 3550660, -1451620, 5620680, 2633360, -1529560, 5599980, 2633360, -1324970, 5121810, 3550660, -1529560, 5599980, 2633360, -1356520, 5111450, 3553650, -1214020, 4672050, 4154800, -1192030, 4601930, 4238030, -1210270, 4673030, 4154800, -1365220, 5642290, 2633360, -1374760, 5724070, 2446490, -1470420, 5695140, 2458280, -1365220, 5642290, 2633360, -1470420, 5695140, 2458280, -1451620, 5620680, 2633360, -1206110, 4674100, 4154800, -1289730, 5133130, 3547310, -1324970, 5121810, 3550660, -1206110, 4674100, 4154800, -1324970, 5121810, 3550660, -1210270, 4673030, 4154800, -1289730, 5133130, 3547310, -1365220, 5642290, 2633360, -1451620, 5620680, 2633360, -1289730, 5133130, 3547310, -1451620, 5620680, 2633360, -1324970, 5121810, 3550660, -1192030, 4601930, 4238030, -1206110, 4674100, 4154800, -1210270, 4673030, 4154800, -1365220, 5642290, 2633360, -1353800, 5645040, 2633360, -1374760, 5724070, 2446490, -1206110, 4674100, 4154800, -1112300, 4697310, 4154800, -1226780, 5152660, 3541360, -1206110, 4674100, 4154800, -1226780, 5152660, 3541360, -1289730, 5133130, 3547310, -1289730, 5133130, 3547310, -1226780, 5152660, 3541360, -1353800, 5645040, 2633360, -1289730, 5133130, 3547310, -1353800, 5645040, 2633360, -1365220, 5642290, 2633360, -1192030, 4601930, 4238030, -1094590, 4626130, 4237960, -1112300, 4697310, 4154800, -1192030, 4601930, 4238030, -1112300, 4697310, 4154800, -1206110, 4674100, 4154800, -1135100, 5693050, 2633360, -1151630, 5826850, 2316460, -1162630, 5834310, 2292230, -1135100, 5693050, 2633360, -1162630, 5834310, 2292230, -1143250, 5691420, 2633360, -985743, 4725490, 4154800, -1063670, 5199280, 3526040, -1067250, 5198320, 3526370, -985743, 4725490, 4154800, -1067250, 5198320, 3526370, -986403, 4725350, 4154800, -1063670, 5199280, 3526040, -1135100, 5693050, 2633360, -1143250, 5691420, 2633360, -1063670, 5199280, 3526040, -1143250, 5691420, 2633360, -1067250, 5198320, 3526370, -965532, 4608480, 4287940, -985743, 4725490, 4154800, -986403, 4725350, 4154800, -1131430, 5693780, 2633360, -1145320, 5810890, 2359e3, -1151630, 5826850, 2316460, -1131430, 5693780, 2633360, -1151630, 5826850, 2316460, -1135100, 5693050, 2633360, -985496, 4725540, 4154800, -1062050, 5199710, 3525890, -1063670, 5199280, 3526040, -985496, 4725540, 4154800, -1063670, 5199280, 3526040, -985743, 4725490, 4154800, -1062050, 5199710, 3525890, -1131430, 5693780, 2633360, -1135100, 5693050, 2633360, -1062050, 5199710, 3525890, -1135100, 5693050, 2633360, -1063670, 5199280, 3526040, -965532, 4608480, 4287940, -985496, 4725540, 4154800, -985743, 4725490, 4154800, -1131430, 5693780, 2633360, -1118700, 5696300, 2633360, -1145320, 5810890, 2359e3, -985496, 4725540, 4154800, -910487, 4740560, 4154800, -1011060, 5213110, 3521130, -985496, 4725540, 4154800, -1011060, 5213110, 3521130, -1062050, 5199710, 3525890, -1062050, 5199710, 3525890, -1011060, 5213110, 3521130, -1118700, 5696300, 2633360, -1062050, 5199710, 3525890, -1118700, 5696300, 2633360, -1131430, 5693780, 2633360, -965532, 4608480, 4287940, -883899, 4613430, 4300110, -910487, 4740560, 4154800, -965532, 4608480, 4287940, -910487, 4740560, 4154800, -985496, 4725540, 4154800, -1055610, 5708330, 2633360, -1073040, 5836800, 2329050, -1145320, 5810890, 2359e3, -1055610, 5708330, 2633360, -1145320, 5810890, 2359e3, -1118700, 5696300, 2633360, -905356, 4741550, 4154800, -982890, 5220270, 3518510, -1011060, 5213110, 3521130, -905356, 4741550, 4154800, -1011060, 5213110, 3521130, -910487, 4740560, 4154800, -982890, 5220270, 3518510, -1055610, 5708330, 2633360, -1118700, 5696300, 2633360, -982890, 5220270, 3518510, -1118700, 5696300, 2633360, -1011060, 5213110, 3521130, -910487, 4740560, 4154800, -883899, 4613430, 4300110, -905356, 4741550, 4154800, -1017920, 5715170, 2633360, -1027550, 5837340, 2347990, -1073040, 5836800, 2329050, -1017920, 5715170, 2633360, -1073040, 5836800, 2329050, -1055610, 5708330, 2633360, -902377, 4742110, 4154800, -966038, 5224490, 3516930, -982890, 5220270, 3518510, -902377, 4742110, 4154800, -982890, 5220270, 3518510, -905356, 4741550, 4154800, -966038, 5224490, 3516930, -1017920, 5715170, 2633360, -1055610, 5708330, 2633360, -966038, 5224490, 3516930, -1055610, 5708330, 2633360, -982890, 5220270, 3518510, -883899, 4613430, 4300110, -902377, 4742110, 4154800, -905356, 4741550, 4154800, -907707, 5797280, 2491260, -890703, 5736370, 2633360, -886508, 5737020, 2633360, -863336, 5633970, 2852860, -865484, 5674640, 2770960, -886508, 5737020, 2633360, -863336, 5633970, 2852860, -886508, 5737020, 2633360, -890703, 5736370, 2633360, -902455, 5734530, 2633360, -890703, 5736370, 2633360, -907707, 5797280, 2491260, -791193, 4761930, 4154800, -837774, 5254590, 3505030, -853373, 5251110, 3506470, -791193, 4761930, 4154800, -853373, 5251110, 3506470, -793761, 4761500, 4154800, -837774, 5254590, 3505030, -863336, 5633970, 2852860, -890703, 5736370, 2633360, -837774, 5254590, 3505030, -890703, 5736370, 2633360, -902455, 5734530, 2633360, -837774, 5254590, 3505030, -902455, 5734530, 2633360, -853373, 5251110, 3506470, -778292, 4643020, 4288740, -791193, 4761930, 4154800, -793761, 4761500, 4154800, -902455, 5734530, 2633360, -907707, 5797280, 2491260, -973108, 5795180, 2471520, -902455, 5734530, 2633360, -973108, 5795180, 2471520, -961187, 5724980, 2633360, -793761, 4761500, 4154800, -853373, 5251110, 3506470, -879908, 5245080, 3508930, -793761, 4761500, 4154800, -879908, 5245080, 3508930, -798148, 4760770, 4154800, -853373, 5251110, 3506470, -902455, 5734530, 2633360, -961187, 5724980, 2633360, -853373, 5251110, 3506470, -961187, 5724980, 2633360, -879908, 5245080, 3508930, -798148, 4760770, 4154800, -778292, 4643020, 4288740, -793761, 4761500, 4154800, -971947, 5723160, 2633360, -961187, 5724980, 2633360, -973108, 5795180, 2471520, -898652, 4742820, 4154800, -798148, 4760770, 4154800, -879908, 5245080, 3508930, -898652, 4742820, 4154800, -879908, 5245080, 3508930, -945287, 5229590, 3515e3, -945287, 5229590, 3515e3, -879908, 5245080, 3508930, -961187, 5724980, 2633360, -945287, 5229590, 3515e3, -961187, 5724980, 2633360, -971947, 5723160, 2633360, -883899, 4613430, 4300110, -778292, 4643020, 4288740, -798148, 4760770, 4154800, -883899, 4613430, 4300110, -798148, 4760770, 4154800, -898652, 4742820, 4154800, -971947, 5723160, 2633360, -973108, 5795180, 2471520, -1027550, 5837340, 2347990, -971947, 5723160, 2633360, -1027550, 5837340, 2347990, -1017920, 5715170, 2633360, -898652, 4742820, 4154800, -945287, 5229590, 3515e3, -966038, 5224490, 3516930, -898652, 4742820, 4154800, -966038, 5224490, 3516930, -902377, 4742110, 4154800, -945287, 5229590, 3515e3, -971947, 5723160, 2633360, -1017920, 5715170, 2633360, -945287, 5229590, 3515e3, -1017920, 5715170, 2633360, -966038, 5224490, 3516930, -883899, 4613430, 4300110, -898652, 4742820, 4154800, -902377, 4742110, 4154800, -790586, 4762030, 4154800, -834040, 5255410, 3504690, -837774, 5254590, 3505030, -790586, 4762030, 4154800, -837774, 5254590, 3505030, -791193, 4761930, 4154800, -834040, 5255410, 3504690, -854608, 5596190, 2928340, -863336, 5633970, 2852860, -834040, 5255410, 3504690, -863336, 5633970, 2852860, -837774, 5254590, 3505030, -778292, 4643020, 4288740, -790586, 4762030, 4154800, -791193, 4761930, 4154800, -786497, 4762700, 4154800, -809013, 5260880, 3502370, -834040, 5255410, 3504690, -786497, 4762700, 4154800, -834040, 5255410, 3504690, -790586, 4762030, 4154800, -809013, 5260880, 3502370, -810193, 5590410, 2951740, -854608, 5596190, 2928340, -809013, 5260880, 3502370, -854608, 5596190, 2928340, -834040, 5255410, 3504690, -778292, 4643020, 4288740, -786497, 4762700, 4154800, -790586, 4762030, 4154800, -782856, 4763300, 4154800, -786556, 5265670, 3500300, -809013, 5260880, 3502370, -782856, 4763300, 4154800, -809013, 5260880, 3502370, -786497, 4762700, 4154800, -786556, 5265670, 3500300, -773350, 5564670, 3009320, -810193, 5590410, 2951740, -786556, 5265670, 3500300, -810193, 5590410, 2951740, -809013, 5260880, 3502370, -778292, 4643020, 4288740, -782856, 4763300, 4154800, -786497, 4762700, 4154800, -782856, 4763300, 4154800, -630954, 4785790, 4154800, -718455, 5279590, 3494020, -782856, 4763300, 4154800, -718455, 5279590, 3494020, -786556, 5265670, 3500300, -786556, 5265670, 3500300, -718455, 5279590, 3494020, -773350, 5564670, 3009320, -778292, 4643020, 4288740, -608377, 4651310, 4307060, -630954, 4785790, 4154800, -778292, 4643020, 4288740, -630954, 4785790, 4154800, -782856, 4763300, 4154800, -448266, 4806350, 4154800, -408111, 4809920, 4154800, -485116, 5320240, 3472620, -448266, 4806350, 4154800, -485116, 5320240, 3472620, -500617, 5317870, 3474040, -525697, 5556320, 3076970, -500617, 5317870, 3474040, -485116, 5320240, 3472620, -423312, 4557190, 4427340, -373430, 4552910, 4436170, -408111, 4809920, 4154800, -423312, 4557190, 4427340, -408111, 4809920, 4154800, -448266, 4806350, 4154800, -479614, 4803320, 4154800, -448266, 4806350, 4154800, -500617, 5317870, 3474040, -479614, 4803320, 4154800, -500617, 5317870, 3474040, -512788, 5315970, 3475160, -512788, 5315970, 3475160, -500617, 5317870, 3474040, -525697, 5556320, 3076970, -466650, 4624190, 4353390, -423312, 4557190, 4427340, -448266, 4806350, 4154800, -466650, 4624190, 4353390, -448266, 4806350, 4154800, -479614, 4803320, 4154800, -479614, 4803320, 4154800, -512788, 5315970, 3475160, -559790, 5308400, 3479450, -479614, 4803320, 4154800, -559790, 5308400, 3479450, -489849, 4802290, 4154800, -512788, 5315970, 3475160, -525697, 5556320, 3076970, -592359, 5526680, 3117700, -512788, 5315970, 3475160, -592359, 5526680, 3117700, -559790, 5308400, 3479450, -489849, 4802290, 4154800, -466650, 4624190, 4353390, -479614, 4803320, 4154800, -531193, 4797890, 4154800, -489849, 4802290, 4154800, -559790, 5308400, 3479450, -531193, 4797890, 4154800, -559790, 5308400, 3479450, -574967, 5305860, 3480840, -574967, 5305860, 3480840, -559790, 5308400, 3479450, -592359, 5526680, 3117700, -518971, 4663900, 4305160, -466650, 4624190, 4353390, -489849, 4802290, 4154800, -518971, 4663900, 4305160, -489849, 4802290, 4154800, -531193, 4797890, 4154800, -531193, 4797890, 4154800, -574967, 5305860, 3480840, -604878, 5300720, 3483590, -531193, 4797890, 4154800, -604878, 5300720, 3483590, -536443, 4797310, 4154800, -574967, 5305860, 3480840, -592359, 5526680, 3117700, -641418, 5554990, 3057510, -574967, 5305860, 3480840, -641418, 5554990, 3057510, -604878, 5300720, 3483590, -536443, 4797310, 4154800, -518971, 4663900, 4305160, -531193, 4797890, 4154800, -616493, 4787680, 4154800, -536443, 4797310, 4154800, -604878, 5300720, 3483590, -616493, 4787680, 4154800, -604878, 5300720, 3483590, -637712, 5294870, 3486600, -637712, 5294870, 3486600, -604878, 5300720, 3483590, -641418, 5554990, 3057510, -608377, 4651310, 4307060, -518971, 4663900, 4305160, -536443, 4797310, 4154800, -608377, 4651310, 4307060, -536443, 4797310, 4154800, -616493, 4787680, 4154800, -616493, 4787680, 4154800, -637712, 5294870, 3486600, -683877, 5286290, 3490840, -616493, 4787680, 4154800, -683877, 5286290, 3490840, -624722, 4786610, 4154800, -637712, 5294870, 3486600, -641418, 5554990, 3057510, -717002, 5576140, 3002070, -637712, 5294870, 3486600, -717002, 5576140, 3002070, -683877, 5286290, 3490840, -608377, 4651310, 4307060, -616493, 4787680, 4154800, -624722, 4786610, 4154800, -624722, 4786610, 4154800, -683877, 5286290, 3490840, -718455, 5279590, 3494020, -624722, 4786610, 4154800, -718455, 5279590, 3494020, -630954, 4785790, 4154800, -683877, 5286290, 3490840, -717002, 5576140, 3002070, -773350, 5564670, 3009320, -683877, 5286290, 3490840, -773350, 5564670, 3009320, -718455, 5279590, 3494020, -630954, 4785790, 4154800, -608377, 4651310, 4307060, -624722, 4786610, 4154800, -291666, 4818390, 4154800, -320352, 5342510, 3457600, -400982, 5332270, 3464950, -291666, 4818390, 4154800, -400982, 5332270, 3464950, -316715, 4816810, 4154800, -320352, 5342510, 3457600, -333535, 5592100, 3039e3, -443244, 5550200, 3100760, -320352, 5342510, 3457600, -443244, 5550200, 3100760, -400982, 5332270, 3464950, -316715, 4816810, 4154800, -274390, 4511180, 4485420, -291666, 4818390, 4154800, -392243, 4811240, 4154800, -316715, 4816810, 4154800, -400982, 5332270, 3464950, -392243, 4811240, 4154800, -400982, 5332270, 3464950, -428486, 5328490, 3467450, -428486, 5328490, 3467450, -400982, 5332270, 3464950, -443244, 5550200, 3100760, -373430, 4552910, 4436170, -274390, 4511180, 4485420, -316715, 4816810, 4154800, -373430, 4552910, 4436170, -316715, 4816810, 4154800, -392243, 4811240, 4154800, -392243, 4811240, 4154800, -428486, 5328490, 3467450, -485116, 5320240, 3472620, -392243, 4811240, 4154800, -485116, 5320240, 3472620, -408111, 4809920, 4154800, -428486, 5328490, 3467450, -443244, 5550200, 3100760, -525697, 5556320, 3076970, -428486, 5328490, 3467450, -525697, 5556320, 3076970, -485116, 5320240, 3472620, -408111, 4809920, 4154800, -373430, 4552910, 4436170, -392243, 4811240, 4154800, -170817, 4824180, 4154800, -170803, 5358200, 3444020, -223885, 5353110, 3448840, -170817, 4824180, 4154800, -223885, 5353110, 3448840, -187335, 4823570, 4154800, -170803, 5358200, 3444020, -167217, 5645080, 2954140, -246365, 5635690, 2966410, -170803, 5358200, 3444020, -246365, 5635690, 2966410, -223885, 5353110, 3448840, -187335, 4823570, 4154800, -167876, 4505410, 4496380, -170817, 4824180, 4154800, -273500, 4819450, 4154800, -187335, 4823570, 4154800, -223885, 5353110, 3448840, -273500, 4819450, 4154800, -223885, 5353110, 3448840, -261078, 5349240, 3452220, -261078, 5349240, 3452220, -223885, 5353110, 3448840, -246365, 5635690, 2966410, -274390, 4511180, 4485420, -167876, 4505410, 4496380, -187335, 4823570, 4154800, -274390, 4511180, 4485420, -187335, 4823570, 4154800, -273500, 4819450, 4154800, -273500, 4819450, 4154800, -261078, 5349240, 3452220, -320352, 5342510, 3457600, -273500, 4819450, 4154800, -320352, 5342510, 3457600, -291666, 4818390, 4154800, -261078, 5349240, 3452220, -246365, 5635690, 2966410, -333535, 5592100, 3039e3, -261078, 5349240, 3452220, -333535, 5592100, 3039e3, -320352, 5342510, 3457600, -274390, 4511180, 4485420, -273500, 4819450, 4154800, -291666, 4818390, 4154800, -52672.5, 4826920, 4154800, -36758.6, 4827070, 4154800, -58305.6, 5367170, 3433830, -52672.5, 4826920, 4154800, -58305.6, 5367170, 3433830, -64802.4, 5366720, 3434420, -71808.4, 5631880, 2982860, -64802.4, 5366720, 3434420, -58305.6, 5367170, 3433830, -45606, 4460440, 4543550, -21078.7, 4300920, 4694010, -36758.6, 4827070, 4154800, -45606, 4460440, 4543550, -36758.6, 4827070, 4154800, -52672.5, 4826920, 4154800, -75056.1, 4826620, 4154800, -52672.5, 4826920, 4154800, -64802.4, 5366720, 3434420, -75056.1, 4826620, 4154800, -64802.4, 5366720, 3434420, -73955, 5366070, 3435250, -73955, 5366070, 3435250, -64802.4, 5366720, 3434420, -71808.4, 5631880, 2982860, -74174.8, 4494440, 4509780, -45606, 4460440, 4543550, -52672.5, 4826920, 4154800, -74174.8, 4494440, 4509780, -52672.5, 4826920, 4154800, -75056.1, 4826620, 4154800, -75056.1, 4826620, 4154800, -73955, 5366070, 3435250, -109706, 5363370, 3438490, -75056.1, 4826620, 4154800, -109706, 5363370, 3438490, -86361, 4826440, 4154800, -73955, 5366070, 3435250, -71808.4, 5631880, 2982860, -123772, 5632250, 2980480, -73955, 5366070, 3435250, -123772, 5632250, 2980480, -109706, 5363370, 3438490, -86361, 4826440, 4154800, -74174.8, 4494440, 4509780, -75056.1, 4826620, 4154800, -161588, 4824500, 4154800, -86361, 4826440, 4154800, -109706, 5363370, 3438490, -161588, 4824500, 4154800, -109706, 5363370, 3438490, -140949, 5360810, 3441320, -140949, 5360810, 3441320, -109706, 5363370, 3438490, -123772, 5632250, 2980480, -167876, 4505410, 4496380, -74174.8, 4494440, 4509780, -86361, 4826440, 4154800, -167876, 4505410, 4496380, -86361, 4826440, 4154800, -161588, 4824500, 4154800, -161588, 4824500, 4154800, -140949, 5360810, 3441320, -170803, 5358200, 3444020, -161588, 4824500, 4154800, -170803, 5358200, 3444020, -170817, 4824180, 4154800, -140949, 5360810, 3441320, -123772, 5632250, 2980480, -167217, 5645080, 2954140, -140949, 5360810, 3441320, -167217, 5645080, 2954140, -170803, 5358200, 3444020, -167876, 4505410, 4496380, -161588, 4824500, 4154800, -170817, 4824180, 4154800, -15848, 4827180, 4154800, -7170.76, 5370470, 3429200, -58305.6, 5367170, 3433830, -15848, 4827180, 4154800, -58305.6, 5367170, 3433830, -36758.6, 4827070, 4154800, -7170.76, 5370470, 3429200, -1550.14, 5620220, 3005470, -71808.4, 5631880, 2982860, -7170.76, 5370470, 3429200, -71808.4, 5631880, 2982860, -58305.6, 5367170, 3433830, -36758.6, 4827070, 4154800, -21078.7, 4300920, 4694010, -15848, 4827180, 4154800, -244.468, 4827210, 4154800, 31272.7, 5372620, 3425720, -7170.76, 5370470, 3429200, -244.468, 4827210, 4154800, -7170.76, 5370470, 3429200, -15848, 4827180, 4154800, 31272.7, 5372620, 3425720, 51540, 5633260, 2980690, -1550.14, 5620220, 3005470, 31272.7, 5372620, 3425720, -1550.14, 5620220, 3005470, -7170.76, 5370470, 3429200, -21078.7, 4300920, 4694010, -244.468, 4827210, 4154800, -15848, 4827180, 4154800, -244.468, 4827210, 4154800, 77801.9, 4826580, 4154800, 62630.8, 5374160, 3422890, -244.468, 4827210, 4154800, 62630.8, 5374160, 3422890, 31272.7, 5372620, 3425720, 31272.7, 5372620, 3425720, 62630.8, 5374160, 3422890, 51540, 5633260, 2980690, -21078.7, 4300920, 4694010, 85378, 4269150, 4722010, 77801.9, 4826580, 4154800, -21078.7, 4300920, 4694010, 77801.9, 4826580, 4154800, -244.468, 4827210, 4154800, 97681.8, 4826220, 4154800, 110314, 5376150, 3418580, 62630.8, 5374160, 3422890, 97681.8, 4826220, 4154800, 62630.8, 5374160, 3422890, 77801.9, 4826580, 4154800, 110314, 5376150, 3418580, 117374, 5670540, 2907730, 51540, 5633260, 2980690, 110314, 5376150, 3418580, 51540, 5633260, 2980690, 62630.8, 5374160, 3422890, 77801.9, 4826580, 4154800, 85378, 4269150, 4722010, 97681.8, 4826220, 4154800, 100259, 4826170, 4154800, 116524, 5376380, 3418020, 110314, 5376150, 3418580, 100259, 4826170, 4154800, 110314, 5376150, 3418580, 97681.8, 4826220, 4154800, 116524, 5376380, 3418020, 124779, 5629810, 2985e3, 117374, 5670540, 2907730, 116524, 5376380, 3418020, 117374, 5670540, 2907730, 110314, 5376150, 3418580, 85378, 4269150, 4722010, 100259, 4826170, 4154800, 97681.8, 4826220, 4154800, 235690, 4821450, 4154800, 278166, 5379770, 3403410, 192129, 5378580, 3411190, 235690, 4821450, 4154800, 192129, 5378580, 3411190, 197428, 4823170, 4154800, 278166, 5379770, 3403410, 299491, 5629100, 2973990, 185058, 5639100, 2964410, 278166, 5379770, 3403410, 185058, 5639100, 2964410, 192129, 5378580, 3411190, 192730, 4200420, 4779750, 192272, 4169930, 4806210, 194196, 4200500, 4779620, 194196, 4200500, 4779620, 235690, 4821450, 4154800, 197428, 4823170, 4154800, 194196, 4200500, 4779620, 197428, 4823170, 4154800, 192730, 4200420, 4779750, 177240, 4823950, 4154800, 197428, 4823170, 4154800, 192129, 5378580, 3411190, 177240, 4823950, 4154800, 192129, 5378580, 3411190, 184067, 5378400, 3411910, 185058, 5639100, 2964410, 184067, 5378400, 3411910, 192129, 5378580, 3411190, 163518, 4164220, 4812180, 192272, 4169930, 4806210, 192730, 4200420, 4779750, 163518, 4164220, 4812180, 192730, 4200420, 4779750, 164357, 4198690, 4782310, 164357, 4198690, 4782310, 192730, 4200420, 4779750, 197428, 4823170, 4154800, 164357, 4198690, 4782310, 197428, 4823170, 4154800, 177240, 4823950, 4154800, 163971, 4824420, 4154800, 177240, 4823950, 4154800, 184067, 5378400, 3411910, 163971, 4824420, 4154800, 184067, 5378400, 3411910, 178754, 5378270, 3412390, 185058, 5639100, 2964410, 178754, 5378270, 3412390, 184067, 5378400, 3411910, 153882, 4197990, 4783260, 163518, 4164220, 4812180, 164357, 4198690, 4782310, 153882, 4197990, 4783260, 164357, 4198690, 4782310, 177240, 4823950, 4154800, 153882, 4197990, 4783260, 177240, 4823950, 4154800, 163971, 4824420, 4154800, 153882, 4197990, 4783260, 163971, 4824420, 4154800, 146466, 4223410, 4761220, 118436, 4825750, 4154800, 163971, 4824420, 4154800, 178754, 5378270, 3412390, 118436, 4825750, 4154800, 178754, 5378270, 3412390, 160445, 5377790, 3414050, 160445, 5377790, 3414050, 178754, 5378270, 3412390, 185058, 5639100, 2964410, 85378, 4269150, 4722010, 146466, 4223410, 4761220, 163971, 4824420, 4154800, 85378, 4269150, 4722010, 163971, 4824420, 4154800, 118436, 4825750, 4154800, 118436, 4825750, 4154800, 160445, 5377790, 3414050, 116524, 5376380, 3418020, 118436, 4825750, 4154800, 116524, 5376380, 3418020, 100259, 4826170, 4154800, 160445, 5377790, 3414050, 185058, 5639100, 2964410, 124779, 5629810, 2985e3, 160445, 5377790, 3414050, 124779, 5629810, 2985e3, 116524, 5376380, 3418020, 85378, 4269150, 4722010, 118436, 4825750, 4154800, 100259, 4826170, 4154800, 354477, 4814180, 4154800, 357283, 4813970, 4154800, 394908, 5379180, 3392870, 354477, 4814180, 4154800, 394908, 5379180, 3392870, 393891, 5379200, 3392950, 409690, 5610150, 2996410, 393891, 5379200, 3392950, 394908, 5379180, 3392870, 312723, 4226370, 4750630, 322420, 4308670, 4675970, 357283, 4813970, 4154800, 312723, 4226370, 4750630, 357283, 4813970, 4154800, 354477, 4814180, 4154800, 310872, 4817190, 4154800, 354477, 4814180, 4154800, 393891, 5379200, 3392950, 310872, 4817190, 4154800, 393891, 5379200, 3392950, 377883, 5379420, 3394410, 377883, 5379420, 3394410, 393891, 5379200, 3392950, 409690, 5610150, 2996410, 250962, 4222690, 4757520, 312723, 4226370, 4750630, 354477, 4814180, 4154800, 250962, 4222690, 4757520, 354477, 4814180, 4154800, 310872, 4817190, 4154800, 310872, 4817190, 4154800, 377883, 5379420, 3394410, 293509, 5379840, 3402030, 310872, 4817190, 4154800, 293509, 5379840, 3402030, 275274, 4819350, 4154800, 377883, 5379420, 3394410, 409690, 5610150, 2996410, 299491, 5629100, 2973990, 377883, 5379420, 3394410, 299491, 5629100, 2973990, 293509, 5379840, 3402030, 275274, 4819350, 4154800, 250962, 4222690, 4757520, 310872, 4817190, 4154800, 235690, 4821450, 4154800, 275274, 4819350, 4154800, 293509, 5379840, 3402030, 235690, 4821450, 4154800, 293509, 5379840, 3402030, 278166, 5379770, 3403410, 278166, 5379770, 3403410, 293509, 5379840, 3402030, 299491, 5629100, 2973990, 192272, 4169930, 4806210, 227926, 4202290, 4776580, 194196, 4200500, 4779620, 227926, 4202290, 4776580, 250962, 4222690, 4757520, 275274, 4819350, 4154800, 227926, 4202290, 4776580, 275274, 4819350, 4154800, 235690, 4821450, 4154800, 227926, 4202290, 4776580, 235690, 4821450, 4154800, 194196, 4200500, 4779620, 357283, 4813970, 4154800, 388993, 4811510, 4154800, 406477, 5378980, 3391820, 357283, 4813970, 4154800, 406477, 5378980, 3391820, 394908, 5379180, 3392870, 409690, 5610150, 2996410, 394908, 5379180, 3392870, 406477, 5378980, 3391820, 322420, 4308670, 4675970, 367341, 4342100, 4641840, 388993, 4811510, 4154800, 322420, 4308670, 4675970, 388993, 4811510, 4154800, 357283, 4813970, 4154800, 411183, 4809660, 4154800, 466521, 5377550, 3386390, 406477, 5378980, 3391820, 411183, 4809660, 4154800, 406477, 5378980, 3391820, 388993, 4811510, 4154800, 466521, 5377550, 3386390, 487110, 5580700, 3039220, 409690, 5610150, 2996410, 466521, 5377550, 3386390, 409690, 5610150, 2996410, 406477, 5378980, 3391820, 388993, 4811510, 4154800, 367341, 4342100, 4641840, 411183, 4809660, 4154800, 433105, 4807740, 4154800, 526347, 5375450, 3380990, 466521, 5377550, 3386390, 433105, 4807740, 4154800, 466521, 5377550, 3386390, 411183, 4809660, 4154800, 526347, 5375450, 3380990, 561689, 5563140, 3058370, 487110, 5580700, 3039220, 526347, 5375450, 3380990, 487110, 5580700, 3039220, 466521, 5377550, 3386390, 367341, 4342100, 4641840, 433105, 4807740, 4154800, 411183, 4809660, 4154800, 443518, 4806790, 4154800, 554944, 5374210, 3378400, 526347, 5375450, 3380990, 443518, 4806790, 4154800, 526347, 5375450, 3380990, 433105, 4807740, 4154800, 554944, 5374210, 3378400, 591514, 5534020, 3104890, 561689, 5563140, 3058370, 554944, 5374210, 3378400, 561689, 5563140, 3058370, 526347, 5375450, 3380990, 367341, 4342100, 4641840, 443518, 4806790, 4154800, 433105, 4807740, 4154800, 460185, 4805220, 4154800, 600969, 5371890, 3374240, 554944, 5374210, 3378400, 460185, 4805220, 4154800, 554944, 5374210, 3378400, 443518, 4806790, 4154800, 600969, 5371890, 3374240, 644851, 5520200, 3118750, 591514, 5534020, 3104890, 600969, 5371890, 3374240, 591514, 5534020, 3104890, 554944, 5374210, 3378400, 367341, 4342100, 4641840, 460185, 4805220, 4154800, 443518, 4806790, 4154800, 460185, 4805220, 4154800, 568482, 4793620, 4154800, 629549, 5370260, 3371650, 460185, 4805220, 4154800, 629549, 5370260, 3371650, 600969, 5371890, 3374240, 600969, 5371890, 3374240, 629549, 5370260, 3371650, 644851, 5520200, 3118750, 367341, 4342100, 4641840, 514246, 4300140, 4666710, 568482, 4793620, 4154800, 367341, 4342100, 4641840, 568482, 4793620, 4154800, 460185, 4805220, 4154800, 568482, 4793620, 4154800, 612373, 4788210, 4154800, 640984, 5369560, 3370620, 568482, 4793620, 4154800, 640984, 5369560, 3370620, 629549, 5370260, 3371650, 644851, 5520200, 3118750, 629549, 5370260, 3371650, 640984, 5369560, 3370620, 514246, 4300140, 4666710, 587285, 4436280, 4529550, 612373, 4788210, 4154800, 514246, 4300140, 4666710, 612373, 4788210, 4154800, 568482, 4793620, 4154800, 636800, 4785020, 4154800, 721062, 5363970, 3363370, 640984, 5369560, 3370620, 636800, 4785020, 4154800, 640984, 5369560, 3370620, 612373, 4788210, 4154800, 721062, 5363970, 3363370, 737226, 5472420, 3181440, 644851, 5520200, 3118750, 721062, 5363970, 3363370, 644851, 5520200, 3118750, 640984, 5369560, 3370620, 612373, 4788210, 4154800, 587285, 4436280, 4529550, 636800, 4785020, 4154800, 636800, 4785020, 4154800, 667028, 4780900, 4154800, 727109, 5363500, 3362820, 636800, 4785020, 4154800, 727109, 5363500, 3362820, 721062, 5363970, 3363370, 721062, 5363970, 3363370, 727109, 5363500, 3362820, 737226, 5472420, 3181440, 587285, 4436280, 4529550, 629358, 4448310, 4512190, 667028, 4780900, 4154800, 587285, 4436280, 4529550, 667028, 4780900, 4154800, 636800, 4785020, 4154800, 686631, 4778120, 4154800, 794109, 5357830, 3356740, 727109, 5363500, 3362820, 686631, 4778120, 4154800, 727109, 5363500, 3362820, 667028, 4780900, 4154800, 794109, 5357830, 3356740, 811191, 5444580, 3210870, 737226, 5472420, 3181440, 794109, 5357830, 3356740, 737226, 5472420, 3181440, 727109, 5363500, 3362820, 667028, 4780900, 4154800, 629358, 4448310, 4512190, 686631, 4778120, 4154800, 696537, 4776690, 4154800, 828210, 5354610, 3353660, 794109, 5357830, 3356740, 696537, 4776690, 4154800, 794109, 5357830, 3356740, 686631, 4778120, 4154800, 828210, 5354610, 3353660, 852626, 5451790, 3187970, 811191, 5444580, 3210870, 828210, 5354610, 3353660, 811191, 5444580, 3210870, 794109, 5357830, 3356740, 629358, 4448310, 4512190, 696537, 4776690, 4154800, 686631, 4778120, 4154800, 629358, 4448310, 4512190, 788232, 4454870, 4480860, 739455, 4599200, 4342140, 696537, 4776690, 4154800, 762713, 4766570, 4154800, 840372, 5353420, 3352550, 696537, 4776690, 4154800, 840372, 5353420, 3352550, 828210, 5354610, 3353660, 828210, 5354610, 3353660, 840372, 5353420, 3352550, 852626, 5451790, 3187970, 629358, 4448310, 4512190, 739455, 4599200, 4342140, 762713, 4766570, 4154800, 629358, 4448310, 4512190, 762713, 4766570, 4154800, 696537, 4776690, 4154800, 762713, 4766570, 4154800, 808283, 4759060, 4154800, 848666, 5352580, 3351790, 762713, 4766570, 4154800, 848666, 5352580, 3351790, 840372, 5353420, 3352550, 852626, 5451790, 3187970, 840372, 5353420, 3352550, 848666, 5352580, 3351790, 739455, 4599200, 4342140, 798669, 4652850, 4274420, 808283, 4759060, 4154800, 739455, 4599200, 4342140, 808283, 4759060, 4154800, 762713, 4766570, 4154800, 739455, 4599200, 4342140, 797833, 4609460, 4321010, 798669, 4652850, 4274420, -2953890, 4785740, 2998550, -2849410, 4693100, 3235080, -2909570, 4818300, 2989780, -2953890, 4785740, 2998550, -2884690, 4706640, 3184080, -2849410, 4693100, 3235080, -2941970, 4691360, 3154280, -2884690, 4706640, 3184080, -2953890, 4785740, 2998550, -2941970, 4691360, 3154280, -2953890, 4785740, 2998550, -2952820, 4736890, 3075650, -2532690, 4549030, 3671720, -2451110, 4437990, 3857030, -2526870, 4552780, 3671100, -2532690, 4549030, 3671720, -2526870, 4552780, 3671100, -2838290, 4999340, 2753220, -2532690, 4549030, 3671720, -2838290, 4999340, 2753220, -2550600, 4572940, 3629670, -2653550, 4554130, 3579510, -2550600, 4572940, 3629670, -2838290, 4999340, 2753220, -2875970, 4902960, 2883470, -2653550, 4554130, 3579510, -2838290, 4999340, 2753220, -2715610, 4588190, 3488920, -2653550, 4554130, 3579510, -2875970, 4902960, 2883470, -2909570, 4818300, 2989780, -2715610, 4588190, 3488920, -2875970, 4902960, 2883470, -2792860, 4606290, 3403610, -2715610, 4588190, 3488920, -2909570, 4818300, 2989780, -2849410, 4693100, 3235080, -2792860, 4606290, 3403610, -2909570, 4818300, 2989780, -2871160, 4611270, 3331440, -2792860, 4606290, 3403610, -2849410, 4693100, 3235080, -2871160, 4611270, 3331440, -2849410, 4693100, 3235080, -2892490, 4648420, 3261080, -2365260, 4437180, 3910820, -2302800, 4417410, 3969640, -2432520, 4611940, 3661030, -2365260, 4437180, 3910820, -2432520, 4611940, 3661030, -2461470, 4594080, 3664110, -2783890, 5093940, 2633550, -2461470, 4594080, 3664110, -2432520, 4611940, 3661030, -2433780, 4412780, 3896460, -2365260, 4437180, 3910820, -2461470, 4594080, 3664110, -2433780, 4412780, 3896460, -2461470, 4594080, 3664110, -2511910, 4562350, 3669490, -2511910, 4562350, 3669490, -2461470, 4594080, 3664110, -2783890, 5093940, 2633550, -2526410, 4553080, 3671050, -2433780, 4412780, 3896460, -2511910, 4562350, 3669490, -2511910, 4562350, 3669490, -2783890, 5093940, 2633550, -2838290, 4999340, 2753220, -2511910, 4562350, 3669490, -2838290, 4999340, 2753220, -2526410, 4553080, 3671050, -2451110, 4437990, 3857030, -2433780, 4412780, 3896460, -2526410, 4553080, 3671050, -2451110, 4437990, 3857030, -2526410, 4553080, 3671050, -2526870, 4552780, 3671100, -2838290, 4999340, 2753220, -2526870, 4552780, 3671100, -2526410, 4553080, 3671050, -2535500, 5222120, 2633360, -2569080, 5292920, 2454570, -2679970, 5196350, 2540240, -2535500, 5222120, 2633360, -2679970, 5196350, 2540240, -2656030, 5161860, 2633360, -2113460, 4339960, 4154800, -2285640, 4698530, 3645640, -2338290, 4668240, 3651120, -2113460, 4339960, 4154800, -2338290, 4668240, 3651120, -2136380, 4328720, 4154800, -2285640, 4698530, 3645640, -2535500, 5222120, 2633360, -2656030, 5161860, 2633360, -2285640, 4698530, 3645640, -2656030, 5161860, 2633360, -2338290, 4668240, 3651120, -2136380, 4328720, 4154800, -1954120, 4009210, 4544130, -2113460, 4339960, 4154800, -2679970, 5196350, 2540240, -2658820, 5160420, 2633360, -2656030, 5161860, 2633360, -2180540, 4306640, 4154800, -2136380, 4328720, 4154800, -2338290, 4668240, 3651120, -2180540, 4306640, 4154800, -2338290, 4668240, 3651120, -2368910, 4650240, 3654330, -2368910, 4650240, 3654330, -2338290, 4668240, 3651120, -2656030, 5161860, 2633360, -2368910, 4650240, 3654330, -2656030, 5161860, 2633360, -2658820, 5160420, 2633360, -1981470, 3936620, 4595120, -1954120, 4009210, 4544130, -2136380, 4328720, 4154800, -1981470, 3936620, 4595120, -2136380, 4328720, 4154800, -2180540, 4306640, 4154800, -2661340, 5159120, 2633360, -2658820, 5160420, 2633360, -2679970, 5196350, 2540240, -2220510, 4286170, 4154800, -2180540, 4306640, 4154800, -2368910, 4650240, 3654330, -2220510, 4286170, 4154800, -2368910, 4650240, 3654330, -2396880, 4633550, 3657270, -2396880, 4633550, 3657270, -2368910, 4650240, 3654330, -2658820, 5160420, 2633360, -2396880, 4633550, 3657270, -2658820, 5160420, 2633360, -2661340, 5159120, 2633360, -2019110, 3891610, 4616870, -1981470, 3936620, 4595120, -2180540, 4306640, 4154800, -2019110, 3891610, 4616870, -2180540, 4306640, 4154800, -2220510, 4286170, 4154800, -2662240, 5158660, 2633360, -2661340, 5159120, 2633360, -2679970, 5196350, 2540240, -2406420, 4627810, 3658280, -2302800, 4417410, 3969640, -2229110, 4281710, 4154800, -2406420, 4627810, 3658280, -2229110, 4281710, 4154800, -2220510, 4286170, 4154800, -2406420, 4627810, 3658280, -2220510, 4286170, 4154800, -2396880, 4633550, 3657270, -2396880, 4633550, 3657270, -2661340, 5159120, 2633360, -2662240, 5158660, 2633360, -2396880, 4633550, 3657270, -2662240, 5158660, 2633360, -2406420, 4627810, 3658280, -2229110, 4281710, 4154800, -2019110, 3891610, 4616870, -2220510, 4286170, 4154800, -2783660, 5094170, 2633360, -2662240, 5158660, 2633360, -2679970, 5196350, 2540240, -2432520, 4611940, 3661030, -2302800, 4417410, 3969640, -2406420, 4627810, 3658280, -2783660, 5094170, 2633360, -2783890, 5093940, 2633550, -2432520, 4611940, 3661030, -2783660, 5094170, 2633360, -2432520, 4611940, 3661030, -2406420, 4627810, 3658280, -2783660, 5094170, 2633360, -2406420, 4627810, 3658280, -2662240, 5158660, 2633360, -2378080, 5295660, 2633360, -2417060, 5390020, 2397370, -2466530, 5346880, 2442840, -2378080, 5295660, 2633360, -2466530, 5346880, 2442840, -2429350, 5272340, 2633360, -1994220, 4396020, 4154800, -2155840, 4769780, 3632260, -2178210, 4757840, 3634560, -1994220, 4396020, 4154800, -2178210, 4757840, 3634560, -2003340, 4391870, 4154800, -2155840, 4769780, 3632260, -2378080, 5295660, 2633360, -2429350, 5272340, 2633360, -2155840, 4769780, 3632260, -2429350, 5272340, 2633360, -2178210, 4757840, 3634560, -2003340, 4391870, 4154800, -1859450, 4087760, 4513970, -1994220, 4396020, 4154800, -2440760, 5267070, 2633360, -2429350, 5272340, 2633360, -2466530, 5346880, 2442840, -2095640, 4348590, 4154800, -2003340, 4391870, 4154800, -2178210, 4757840, 3634560, -2095640, 4348590, 4154800, -2178210, 4757840, 3634560, -2244040, 4721890, 3641330, -2244040, 4721890, 3641330, -2178210, 4757840, 3634560, -2429350, 5272340, 2633360, -2244040, 4721890, 3641330, -2429350, 5272340, 2633360, -2440760, 5267070, 2633360, -1954120, 4009210, 4544130, -1859450, 4087760, 4513970, -2003340, 4391870, 4154800, -1954120, 4009210, 4544130, -2003340, 4391870, 4154800, -2095640, 4348590, 4154800, -2440760, 5267070, 2633360, -2466530, 5346880, 2442840, -2569080, 5292920, 2454570, -2440760, 5267070, 2633360, -2569080, 5292920, 2454570, -2535500, 5222120, 2633360, -2095640, 4348590, 4154800, -2244040, 4721890, 3641330, -2285640, 4698530, 3645640, -2095640, 4348590, 4154800, -2285640, 4698530, 3645640, -2113460, 4339960, 4154800, -2244040, 4721890, 3641330, -2440760, 5267070, 2633360, -2535500, 5222120, 2633360, -2244040, 4721890, 3641330, -2535500, 5222120, 2633360, -2285640, 4698530, 3645640, -1954120, 4009210, 4544130, -2095640, 4348590, 4154800, -2113460, 4339960, 4154800, -2293020, 5333040, 2633360, -2333800, 5434420, 2379690, -2378940, 5392e3, 2430600, -2293020, 5333040, 2633360, -2378940, 5392e3, 2430600, -2340400, 5312420, 2633360, -1919130, 4429320, 4154800, -2078140, 4810140, 3624360, -2098620, 4799660, 3626440, -1919130, 4429320, 4154800, -2098620, 4799660, 3626440, -1926700, 4426030, 4154800, -2078140, 4810140, 3624360, -2293020, 5333040, 2633360, -2340400, 5312420, 2633360, -2078140, 4810140, 3624360, -2340400, 5312420, 2633360, -2098620, 4799660, 3626440, -1926700, 4426030, 4154800, -1804750, 4157790, 4472310, -1919130, 4429320, 4154800, -2348560, 5308820, 2633360, -2340400, 5312420, 2633360, -2378940, 5392e3, 2430600, -1989e3, 4398390, 4154800, -1926700, 4426030, 4154800, -2098620, 4799660, 3626440, -1989e3, 4398390, 4154800, -2098620, 4799660, 3626440, -2142890, 4776620, 3630940, -2142890, 4776620, 3630940, -2098620, 4799660, 3626440, -2340400, 5312420, 2633360, -2142890, 4776620, 3630940, -2340400, 5312420, 2633360, -2348560, 5308820, 2633360, -1859450, 4087760, 4513970, -1804750, 4157790, 4472310, -1926700, 4426030, 4154800, -1859450, 4087760, 4513970, -1926700, 4426030, 4154800, -1989e3, 4398390, 4154800, -2348560, 5308820, 2633360, -2378940, 5392e3, 2430600, -2417060, 5390020, 2397370, -2348560, 5308820, 2633360, -2417060, 5390020, 2397370, -2378080, 5295660, 2633360, -1989e3, 4398390, 4154800, -2142890, 4776620, 3630940, -2155840, 4769780, 3632260, -1989e3, 4398390, 4154800, -2155840, 4769780, 3632260, -1994220, 4396020, 4154800, -2142890, 4776620, 3630940, -2348560, 5308820, 2633360, -2378080, 5295660, 2633360, -2142890, 4776620, 3630940, -2378080, 5295660, 2633360, -2155840, 4769780, 3632260, -1859450, 4087760, 4513970, -1989e3, 4398390, 4154800, -1994220, 4396020, 4154800, -1680040, 4184930, 4495360, -1659990, 4247150, 4444510, -1694690, 4265500, 4413940, -1680040, 4184930, 4495360, -1694690, 4265500, 4413940, -1716200, 4284300, 4387510, -2744220, 4304240, 3811240, -2713220, 4282290, 3857560, -2663750, 4311130, 3859900, -2744220, 4304240, 3811240, -2663750, 4311130, 3859900, -2646600, 4386630, 3786420, -2663750, 4311130, 3859900, -2583090, 4329210, 3894100, -2646600, 4386630, 3786420, -2646600, 4386630, 3786420, -2583090, 4329210, 3894100, -2628870, 4438630, 3738180, -2583090, 4329210, 3894100, -2521880, 4420790, 3831240, -2628870, 4438630, 3738180, -2628870, 4438630, 3738180, -2521880, 4420790, 3831240, -2569330, 4510920, 3693080, -2521880, 4420790, 3831240, -2545080, 4541030, 3673050, -2564150, 4528610, 3675110, -2521880, 4420790, 3831240, -2564150, 4528610, 3675110, -2569330, 4510920, 3693080, -2564150, 4528610, 3675110, -2545080, 4541030, 3673050, -2550600, 4572940, 3629670, -2161930, 3779070, 4645410, -2003600, 3572130, 4872990, -2074290, 3762690, 4698020, -2003600, 3572130, 4872990, -2008950, 3768120, 4721840, -2074290, 3762690, 4698020, -2003600, 3572130, 4872990, -1940270, 3667790, 4827650, -2008950, 3768120, 4721840, -2008950, 3768120, 4721840, -1940270, 3667790, 4827650, -1972220, 3821760, 4694320, -1940270, 3667790, 4827650, -1848660, 3679010, 4854810, -1972220, 3821760, 4694320, -1972220, 3821760, 4694320, -1848660, 3679010, 4854810, -1900410, 3843670, 4705950, -1848660, 3679010, 4854810, -1845470, 3751810, 4800370, -1900410, 3843670, 4705950, -1900410, 3843670, 4705950, -1845470, 3751810, 4800370, -1866890, 3871670, 4696470, -1845470, 3751810, 4800370, -1834910, 3849570, 4726940, -1866890, 3871670, 4696470, -2481200, 4167380, 4128240, -2469420, 4147760, 4154800, -2468260, 4148450, 4154800, -2016350, 3390790, 4994940, -2012820, 3384860, 5000340, -2007410, 3397590, 4993920, -2468260, 4148450, 4154800, -2469420, 4147760, 4154800, -2016350, 3390790, 4994940, -2468260, 4148450, 4154800, -2016350, 3390790, 4994940, -2007410, 3397590, 4993920, -2468260, 4148450, 4154800, -2007410, 3397590, 4993920, -1993970, 3428450, 4978290, -2469860, 4147500, 4154800, -2469420, 4147760, 4154800, -2481200, 4167380, 4128240, -1969830, 3277960, 5087330, -2012820, 3384860, 5000340, -2016350, 3390790, 4994940, -1969830, 3277960, 5087330, -2016350, 3390790, 4994940, -2029550, 3380680, 4996430, -2029550, 3380680, 4996430, -2016350, 3390790, 4994940, -2469420, 4147760, 4154800, -2029550, 3380680, 4996430, -2469420, 4147760, 4154800, -2469860, 4147500, 4154800, -2525660, 4113760, 4154800, -2469860, 4147500, 4154800, -2481200, 4167380, 4128240, -2034700, 3376700, 4997020, -1969830, 3277960, 5087330, -2029550, 3380680, 4996430, -2525660, 4113760, 4154800, -2530840, 4107390, 4157930, -2034700, 3376700, 4997020, -2525660, 4113760, 4154800, -2034700, 3376700, 4997020, -2029550, 3380680, 4996430, -2525660, 4113760, 4154800, -2029550, 3380680, 4996430, -2469860, 4147500, 4154800, -2031890, 3220840, 5099310, -1969830, 3277960, 5087330, -2034700, 3376700, 4997020, -2031890, 3220840, 5099310, -2034700, 3376700, 4997020, -2094760, 3329380, 5003910, -2094760, 3329380, 5003910, -2034700, 3376700, 4997020, -2530840, 4107390, 4157930, -2570240, 4086050, 4154800, -2534980, 4108020, 4154800, -2588850, 4115950, 4113800, -2031890, 3220840, 5099310, -2094760, 3329380, 5003910, -2097990, 3326780, 5004280, -2094760, 3329380, 5003910, -2530840, 4107390, 4157930, -2534980, 4108020, 4154800, -2094760, 3329380, 5003910, -2534980, 4108020, 4154800, -2570240, 4086050, 4154800, -2094760, 3329380, 5003910, -2570240, 4086050, 4154800, -2097990, 3326780, 5004280, -2570240, 4086050, 4154800, -2588850, 4115950, 4113800, -2669280, 4131130, 4047100, -2570240, 4086050, 4154800, -2669280, 4131130, 4047100, -2615650, 4057130, 4154800, -2101860, 3323660, 5004730, -2031890, 3220840, 5099310, -2097990, 3326780, 5004280, -2097990, 3326780, 5004280, -2570240, 4086050, 4154800, -2615650, 4057130, 4154800, -2097990, 3326780, 5004280, -2615650, 4057130, 4154800, -2101860, 3323660, 5004730, -2669280, 4131130, 4047100, -2588850, 4115950, 4113800, -2633430, 4193010, 4007010, -2387510, 4195440, 4154800, -2423280, 4258810, 4069310, -2481200, 4167380, 4128240, -2387510, 4195440, 4154800, -2481200, 4167380, 4128240, -2465290, 4150210, 4154800, -2465290, 4150210, 4154800, -2168940, 3808270, 4618400, -2387510, 4195440, 4154800, -2481200, 4167380, 4128240, -2465950, 4149820, 4154800, -2465290, 4150210, 4154800, -2161930, 3779070, 4645410, -2168940, 3808270, 4618400, -2465290, 4150210, 4154800, -2161930, 3779070, 4645410, -2465290, 4150210, 4154800, -2465950, 4149820, 4154800, -2481200, 4167380, 4128240, -2468260, 4148450, 4154800, -2465950, 4149820, 4154800, -1993970, 3428450, 4978290, -2161930, 3779070, 4645410, -2465950, 4149820, 4154800, -1993970, 3428450, 4978290, -2465950, 4149820, 4154800, -2468260, 4148450, 4154800, -1993970, 3428450, 4978290, -2003600, 3572130, 4872990, -2161930, 3779070, 4645410, -1993970, 3428450, 4978290, -1984610, 3539570, 4904210, -2003600, 3572130, 4872990, -2283250, 4253080, 4154800, -2326700, 4367980, 4009920, -2399440, 4324600, 4014050, -2283250, 4253080, 4154800, -2399440, 4324600, 4014050, -2339610, 4222340, 4154800, -2339610, 4222340, 4154800, -2111890, 3829790, 4626980, -2283250, 4253080, 4154800, -2352500, 4215170, 4154800, -2339610, 4222340, 4154800, -2399440, 4324600, 4014050, -2168940, 3808270, 4618400, -2111890, 3829790, 4626980, -2339610, 4222340, 4154800, -2168940, 3808270, 4618400, -2339610, 4222340, 4154800, -2352500, 4215170, 4154800, -2352500, 4215170, 4154800, -2399440, 4324600, 4014050, -2423280, 4258810, 4069310, -2352500, 4215170, 4154800, -2423280, 4258810, 4069310, -2387510, 4195440, 4154800, -2168940, 3808270, 4618400, -2352500, 4215170, 4154800, -2387510, 4195440, 4154800, -2258350, 4266360, 4154800, -2229110, 4281710, 4154800, -2302800, 4417410, 3969640, -2111890, 3829790, 4626980, -2019110, 3891610, 4616870, -2229110, 4281710, 4154800, -2111890, 3829790, 4626980, -2229110, 4281710, 4154800, -2258350, 4266360, 4154800, -2258350, 4266360, 4154800, -2302800, 4417410, 3969640, -2326700, 4367980, 4009920, -2258350, 4266360, 4154800, -2326700, 4367980, 4009920, -2283250, 4253080, 4154800, -2111890, 3829790, 4626980, -2258350, 4266360, 4154800, -2283250, 4253080, 4154800, -2588850, 4115950, 4113800, -2556730, 4192370, 4056710, -2586420, 4206470, 4023380, -2588850, 4115950, 4113800, -2586420, 4206470, 4023380, -2633430, 4193010, 4007010, -2633430, 4193010, 4007010, -2586420, 4206470, 4023380, -2564080, 4258070, 3983470, -2901810, 3803110, 4204440, -2398660, 3190190, 4958230, -2856300, 3808530, 4230440, -2901810, 3803110, 4204440, -2450180, 3217840, 4915280, -2398660, 3190190, 4958230, -2522090, 3268260, 4845610, -2450180, 3217840, 4915280, -2901810, 3803110, 4204440, -2926200, 3738370, 4245130, -2522090, 3268260, 4845610, -2901810, 3803110, 4204440, -2960490, 3761030, 4201410, -2926200, 3738370, 4245130, -2901810, 3803110, 4204440, -2398660, 3190190, 4958230, -2355390, 3175700, 4987990, -2856300, 3808530, 4230440, -2856300, 3808530, 4230440, -2355390, 3175700, 4987990, -2841230, 3884600, 4171410, -2304080, 3148360, 5028840, -2268880, 3129050, 5056630, -2291850, 3159680, 5027340, -2304080, 3148360, 5028840, -2291850, 3159680, 5027340, -2841230, 3884600, 4171410, -2304080, 3148360, 5028840, -2841230, 3884600, 4171410, -2355390, 3175700, 4987990, -2822070, 3916360, 4154800, -2775950, 3949180, 4154800, -2788420, 3970470, 4126250, -2291850, 3159680, 5027340, -2268880, 3129050, 5056630, -2289840, 3161540, 5027090, -2289840, 3161540, 5027090, -2775950, 3949180, 4154800, -2822070, 3916360, 4154800, -2289840, 3161540, 5027090, -2822070, 3916360, 4154800, -2841230, 3884600, 4171410, -2289840, 3161540, 5027090, -2841230, 3884600, 4171410, -2291850, 3159680, 5027340, -2775950, 3949180, 4154800, -2774290, 3950350, 4154800, -2788420, 3970470, 4126250, -2268880, 3129050, 5056630, -2201870, 3136670, 5081310, -2246800, 3200550, 5021860, -2268880, 3129050, 5056630, -2246800, 3200550, 5021860, -2289840, 3161540, 5027090, -2289840, 3161540, 5027090, -2246800, 3200550, 5021860, -2774290, 3950350, 4154800, -2289840, 3161540, 5027090, -2774290, 3950350, 4154800, -2775950, 3949180, 4154800, -2722e3, 3986560, 4154800, -2757640, 4047710, 4071900, -2788420, 3970470, 4126250, -2722e3, 3986560, 4154800, -2788420, 3970470, 4126250, -2774290, 3950350, 4154800, -2246800, 3200550, 5021860, -2201870, 3136670, 5081310, -2243980, 3203070, 5021520, -2243980, 3203070, 5021520, -2722e3, 3986560, 4154800, -2774290, 3950350, 4154800, -2243980, 3203070, 5021520, -2774290, 3950350, 4154800, -2246800, 3200550, 5021860, -2722e3, 3986560, 4154800, -2714340, 3991780, 4154800, -2757640, 4047710, 4071900, -2201870, 3136670, 5081310, -2104540, 3170940, 5101110, -2172560, 3265140, 5012990, -2201870, 3136670, 5081310, -2172560, 3265140, 5012990, -2243980, 3203070, 5021520, -2243980, 3203070, 5021520, -2172560, 3265140, 5012990, -2714340, 3991780, 4154800, -2243980, 3203070, 5021520, -2714340, 3991780, 4154800, -2722e3, 3986560, 4154800, -2624280, 4051550, 4154800, -2669280, 4131130, 4047100, -2757640, 4047710, 4071900, -2624280, 4051550, 4154800, -2757640, 4047710, 4071900, -2714340, 3991780, 4154800, -2172560, 3265140, 5012990, -2104540, 3170940, 5101110, -2165460, 3271150, 5012150, -2165460, 3271150, 5012150, -2624280, 4051550, 4154800, -2714340, 3991780, 4154800, -2165460, 3271150, 5012150, -2714340, 3991780, 4154800, -2172560, 3265140, 5012990, -2624280, 4051550, 4154800, -2615650, 4057130, 4154800, -2669280, 4131130, 4047100, -2104540, 3170940, 5101110, -2031890, 3220840, 5099310, -2101860, 3323660, 5004730, -2104540, 3170940, 5101110, -2101860, 3323660, 5004730, -2165460, 3271150, 5012150, -2165460, 3271150, 5012150, -2101860, 3323660, 5004730, -2615650, 4057130, 4154800, -2165460, 3271150, 5012150, -2615650, 4057130, 4154800, -2624280, 4051550, 4154800, -3072550, 3579740, 4278110, -3047270, 3551050, 4319610, -3003410, 3580090, 4326320, -3047270, 3551050, 4319610, -2742060, 3201250, 4770780, -3003410, 3580090, 4326320, -2815750, 3240630, 4701230, -2742060, 3201250, 4770780, -3047270, 3551050, 4319610, -2966940, 3410070, 4484830, -2815750, 3240630, 4701230, -3047270, 3551050, 4319610, -3077480, 3522190, 4321810, -2966940, 3410070, 4484830, -3047270, 3551050, 4319610, -3005440, 3633340, 4280570, -2637400, 3211060, 4822560, -2926200, 3738370, 4245130, -2742060, 3201250, 4770780, -2637400, 3211060, 4822560, -3005440, 3633340, 4280570, -2742060, 3201250, 4770780, -3005440, 3633340, 4280570, -3003410, 3580090, 4326320, -3021180, 3116310, 4657840, -2925960, 3096930, 4730500, -3063800, 3198250, 4574260, -2996700, 2993980, 4752290, -2925960, 3096930, 4730500, -3021180, 3116310, 4657840, -2996700, 2993980, 4752290, -3021180, 3116310, 4657840, -3021280, 3074370, 4685380, -3078830, 3290460, 4498660, -2900780, 3164870, 4701150, -2999100, 3344540, 4512520, -2925960, 3096930, 4730500, -2900780, 3164870, 4701150, -3078830, 3290460, 4498660, -3063800, 3198250, 4574260, -2925960, 3096930, 4730500, -3078830, 3290460, 4498660, -2900780, 3164870, 4701150, -2815750, 3240630, 4701230, -2966940, 3410070, 4484830, -2900780, 3164870, 4701150, -2966940, 3410070, 4484830, -2999100, 3344540, 4512520, -1969830, 3277960, 5087330, -1944600, 3344240, 5054010, -1987290, 3343530, 5037960, -1969830, 3277960, 5087330, -1987290, 3343530, 5037960, -2012820, 3384860, 5000340, 1217570, 4697110, 4125600, 1314390, 4898530, 3854520, 1304110, 4921240, 3829170, 1217570, 4697110, 4125600, 1307170, 4832770, 3938490, 1314390, 4898530, 3854520, 1217570, 4697110, 4125600, 1277830, 4695700, 4109070, 1307170, 4832770, 3938490, 1307170, 4832770, 3938490, 1277830, 4695700, 4109070, 1354050, 4803500, 3958270, 1277830, 4695700, 4109070, 1358580, 4725470, 4049e3, 1354050, 4803500, 3958270, 1354050, 4803500, 3958270, 1358580, 4725470, 4049e3, 1383500, 4802350, 3949530, 1358580, 4725470, 4049e3, 1386580, 4734180, 4029410, 1383500, 4802350, 3949530, 989602, 4724680, 4154800, 1095320, 5082100, 3682630, 1014100, 5174780, 3575990, 989602, 4724680, 4154800, 1014100, 5174780, 3575990, 985792, 4725480, 4154800, 985792, 4725480, 4154800, 984077, 4705260, 4177930, 989602, 4724680, 4154800, 1014100, 5174780, 3575990, 955966, 4731600, 4154800, 985792, 4725480, 4154800, 948993, 4682730, 4211010, 984077, 4705260, 4177930, 985792, 4725480, 4154800, 948993, 4682730, 4211010, 985792, 4725480, 4154800, 955966, 4731600, 4154800, 843918, 4752870, 4154800, 955966, 4731600, 4154800, 1014100, 5174780, 3575990, 812982, 4667510, 4255820, 948993, 4682730, 4211010, 955966, 4731600, 4154800, 812982, 4667510, 4255820, 955966, 4731600, 4154800, 843918, 4752870, 4154800, 843918, 4752870, 4154800, 1014100, 5174780, 3575990, 1002570, 5260120, 3453440, 843918, 4752870, 4154800, 1002570, 5260120, 3453440, 838377, 4753850, 4154800, 812982, 4667510, 4255820, 843918, 4752870, 4154800, 838377, 4753850, 4154800, 1002570, 5260120, 3453440, 1014100, 5174780, 3575990, 1033030, 5222500, 3500910, 996522, 5335530, 3338350, 1011340, 5289620, 3405810, 1052340, 5328010, 3333270, 1052340, 5328010, 3333270, 1062780, 5337530, 3314790, 977586, 5390750, 3254740, 1052340, 5328010, 3333270, 977586, 5390750, 3254740, 996522, 5335530, 3338350, 1002570, 5260120, 3453440, 1011340, 5289620, 3405810, 996522, 5335530, 3338350, 1002570, 5260120, 3453440, 996522, 5335530, 3338350, 988561, 5336550, 3339080, 977586, 5390750, 3254740, 988561, 5336550, 3339080, 996522, 5335530, 3338350, 838377, 4753850, 4154800, 1002570, 5260120, 3453440, 988561, 5336550, 3339080, 838377, 4753850, 4154800, 988561, 5336550, 3339080, 965181, 5339490, 3341210, 838377, 4753850, 4154800, 965181, 5339490, 3341210, 831896, 4754980, 4154800, 965181, 5339490, 3341210, 988561, 5336550, 3339080, 977586, 5390750, 3254740, 812982, 4667510, 4255820, 838377, 4753850, 4154800, 831896, 4754980, 4154800, 831896, 4754980, 4154800, 965181, 5339490, 3341210, 850777, 5352370, 3351610, 831896, 4754980, 4154800, 850777, 5352370, 3351610, 819951, 4757060, 4154800, 965181, 5339490, 3341210, 977586, 5390750, 3254740, 852626, 5451790, 3187970, 965181, 5339490, 3341210, 852626, 5451790, 3187970, 850777, 5352370, 3351610, 819951, 4757060, 4154800, 812982, 4667510, 4255820, 831896, 4754980, 4154800, 1095320, 5082100, 3682630, 1132840, 4728220, 4114270, 1234470, 5023150, 3719070, 1101370, 4699880, 4154800, 1132840, 4728220, 4114270, 1095320, 5082100, 3682630, 1101370, 4699880, 4154800, 1095320, 5082100, 3682630, 1091570, 4702170, 4154800, 1091570, 4702170, 4154800, 1091130, 4690500, 4167990, 1101370, 4699880, 4154800, 989602, 4724680, 4154800, 1091570, 4702170, 4154800, 1095320, 5082100, 3682630, 984077, 4705260, 4177930, 1091130, 4690500, 4167990, 1091570, 4702170, 4154800, 984077, 4705260, 4177930, 1091570, 4702170, 4154800, 989602, 4724680, 4154800, 1248100, 4967770, 3787800, 1217570, 4697110, 4125600, 1304110, 4921240, 3829170, 1132840, 4728220, 4114270, 1217570, 4697110, 4125600, 1248100, 4967770, 3787800, 1132840, 4728220, 4114270, 1248100, 4967770, 3787800, 1234470, 5023150, 3719070, -774812, 5753170, 2633360, -772132, 5783240, 2567900, -877420, 5760650, 2584690, -774812, 5753170, 2633360, -877420, 5760650, 2584690, -829792, 5745500, 2633360, -829792, 5745500, 2633360, -776912, 5727640, 2687460, -774812, 5753170, 2633360, -874410, 5738880, 2633360, -829792, 5745500, 2633360, -877420, 5760650, 2584690, -865484, 5674640, 2770960, -776912, 5727640, 2687460, -829792, 5745500, 2633360, -865484, 5674640, 2770960, -829792, 5745500, 2633360, -874410, 5738880, 2633360, -874410, 5738880, 2633360, -877420, 5760650, 2584690, -907707, 5797280, 2491260, -874410, 5738880, 2633360, -907707, 5797280, 2491260, -886508, 5737020, 2633360, -886508, 5737020, 2633360, -865484, 5674640, 2770960, -874410, 5738880, 2633360, -73986, 4366150, 4633270, -21078.7, 4300920, 4694010, -45606, 4460440, 4543550, -1027550, 5837340, 2347990, -973108, 5795180, 2471520, -949314, 5834840, 2386550, -717002, 5576140, 3002070, -641418, 5554990, 3057510, -611083, 5580840, 3016640, 1277830, 4695700, 4109070, 1365310, 4706220, 4068960, 1358580, 4725470, 4049e3, 808283, 4759060, 4154800, 819951, 4757060, 4154800, 850777, 5352370, 3351610, 808283, 4759060, 4154800, 850777, 5352370, 3351610, 848666, 5352580, 3351790, 852626, 5451790, 3187970, 848666, 5352580, 3351790, 850777, 5352370, 3351610, 798669, 4652850, 4274420, 812982, 4667510, 4255820, 819951, 4757060, 4154800, 798669, 4652850, 4274420, 819951, 4757060, 4154800, 808283, 4759060, 4154800, 1011340, 5289620, 3405810, 1075910, 5268680, 3418370, 1065040, 5326210, 3332110, 1011340, 5289620, 3405810, 1065040, 5326210, 3332110, 1052340, 5328010, 3333270, 1052340, 5328010, 3333270, 1065040, 5326210, 3332110, 1062780, 5337530, 3314790, 1314390, 4898530, 3854520, 1307170, 4832770, 3938490, 1317080, 4857730, 3904570, -3026670, 3446530, 4417e3, -2966940, 3410070, 4484830, -3077480, 3522190, 4321810, -2637400, 3211060, 4822560, -2522090, 3268260, 4845610, -2926200, 3738370, 4245130, -2521880, 4420790, 3831240, -2451110, 4437990, 3857030, -2532690, 4549030, 3671720, -2521880, 4420790, 3831240, -2532690, 4549030, 3671720, -2545080, 4541030, 3673050, -2545080, 4541030, 3673050, -2532690, 4549030, 3671720, -2550600, 4572940, 3629670, -1980230, 5456920, 2633360, -1963740, 5462880, 2633360, -2018770, 5587750, 2312180, -1679630, 4525570, 4154800, -1594750, 4556170, 4154800, -1754730, 4960980, 3592120, -1679630, 4525570, 4154800, -1754730, 4960980, 3592120, -1815590, 4934630, 3598110, -1815590, 4934630, 3598110, -1754730, 4960980, 3592120, -1963740, 5462880, 2633360, -1815590, 4934630, 3598110, -1963740, 5462880, 2633360, -1980230, 5456920, 2633360, -1632830, 4387730, 4317030, -1551780, 4445120, 4288300, -1594750, 4556170, 4154800, -1632830, 4387730, 4317030, -1594750, 4556170, 4154800, -1679630, 4525570, 4154800, 6342490, -311387, 595030, 6330310, -358837, 689799, 6346190, -316613, 551576, 6346190, -316613, 551576, 6330310, -358837, 689799, 6343570, -366999, 550454, 6302620, -372892, 901688, 6302260, -379026, 901688, 6307150, -377914, 867550, 6302620, -372892, 901688, 6307150, -377914, 867550, 6307480, -370704, 868202, 6307480, -370704, 868202, 6307150, -377914, 867550, 6343570, -366999, 550454, 6307480, -370704, 868202, 6343570, -366999, 550454, 6330310, -358837, 689799, 6302620, -372892, 901688, 6271980, -384918, 1089390, 6302260, -379026, 901688, 6304950, -331202, 901688, 6302620, -372892, 901688, 6307480, -370704, 868202, 6304950, -331202, 901688, 6307480, -370704, 868202, 6309030, -335167, 871414, 6309030, -335167, 871414, 6307480, -370704, 868202, 6330310, -358837, 689799, 6280960, -310212, 1061280, 6271980, -384918, 1089390, 6302620, -372892, 901688, 6280960, -310212, 1061280, 6302620, -372892, 901688, 6304950, -331202, 901688, 6304950, -331202, 901688, 6309030, -335167, 871414, 6309440, -324782, 872353, 6304950, -331202, 901688, 6309440, -324782, 872353, 6305400, -322535, 901688, 6309030, -335167, 871414, 6330310, -358837, 689799, 6317080, -329249, 813796, 6309030, -335167, 871414, 6317080, -329249, 813796, 6309440, -324782, 872353, 6280960, -310212, 1061280, 6304950, -331202, 901688, 6305400, -322535, 901688, 6292110, -521073, 901688, 6291190, -532063, 901688, 6298110, -529690, 853820, 6292110, -521073, 901688, 6298110, -529690, 853820, 6298770, -520298, 854670, 6331470, -514971, 570718, 6298770, -520298, 854670, 6298110, -529690, 853820, 6263400, -523738, 1080850, 6255460, -542293, 1116880, 6291190, -532063, 901688, 6263400, -523738, 1080850, 6291190, -532063, 901688, 6292110, -521073, 901688, 6294760, -488010, 901688, 6292110, -521073, 901688, 6298770, -520298, 854670, 6294760, -488010, 901688, 6298770, -520298, 854670, 6300720, -491701, 857258, 6300720, -491701, 857258, 6298770, -520298, 854670, 6331470, -514971, 570718, 6271250, -474868, 1057830, 6263400, -523738, 1080850, 6292110, -521073, 901688, 6271250, -474868, 1057830, 6292110, -521073, 901688, 6294760, -488010, 901688, 6294760, -488010, 901688, 6300720, -491701, 857258, 6302550, -462709, 859882, 6294760, -488010, 901688, 6302550, -462709, 859882, 6296470, -465322, 901688, 6300720, -491701, 857258, 6331470, -514971, 570718, 6336720, -444087, 571990, 6300720, -491701, 857258, 6336720, -444087, 571990, 6302550, -462709, 859882, 6296470, -465322, 901688, 6271250, -474868, 1057830, 6294760, -488010, 901688, 6298340, -439388, 901688, 6296470, -465322, 901688, 6302550, -462709, 859882, 6298340, -439388, 901688, 6302550, -462709, 859882, 6303890, -440018, 861934, 6303890, -440018, 861934, 6302550, -462709, 859882, 6336720, -444087, 571990, 6269340, -436245, 1085250, 6271250, -474868, 1057830, 6296470, -465322, 901688, 6269340, -436245, 1085250, 6296470, -465322, 901688, 6298340, -439388, 901688, 6298340, -439388, 901688, 6303890, -440018, 861934, 6305640, -408171, 864814, 6298340, -439388, 901688, 6305640, -408171, 864814, 6300130, -412916, 901688, 6303890, -440018, 861934, 6336720, -444087, 571990, 6343570, -366999, 550454, 6303890, -440018, 861934, 6343570, -366999, 550454, 6305640, -408171, 864814, 6300130, -412916, 901688, 6269340, -436245, 1085250, 6298340, -439388, 901688, 6302260, -379026, 901688, 6300130, -412916, 901688, 6305640, -408171, 864814, 6302260, -379026, 901688, 6305640, -408171, 864814, 6307150, -377914, 867550, 6343570, -366999, 550454, 6307150, -377914, 867550, 6305640, -408171, 864814, 6271980, -384918, 1089390, 6269340, -436245, 1085250, 6300130, -412916, 901688, 6271980, -384918, 1089390, 6300130, -412916, 901688, 6302260, -379026, 901688, 6279410, -656604, 901688, 6278500, -665239, 901688, 6287200, -662096, 841822, 6279410, -656604, 901688, 6287200, -662096, 841822, 6287860, -654950, 842470, 6321170, -645927, 551490, 6287860, -654950, 842470, 6287200, -662096, 841822, 6245030, -661939, 1110750, 6234800, -677891, 1157290, 6278500, -665239, 901688, 6245030, -661939, 1110750, 6278500, -665239, 901688, 6279410, -656604, 901688, 6281060, -640640, 901688, 6279410, -656604, 901688, 6287860, -654950, 842470, 6281060, -640640, 901688, 6287860, -654950, 842470, 6289060, -641654, 843676, 6289060, -641654, 843676, 6287860, -654950, 842470, 6321170, -645927, 551490, 6245230, -636231, 1124490, 6245030, -661939, 1110750, 6279410, -656604, 901688, 6245230, -636231, 1124490, 6279410, -656604, 901688, 6281060, -640640, 901688, 6281060, -640640, 901688, 6289060, -641654, 843676, 6294550, -576818, 849551, 6281060, -640640, 901688, 6294550, -576818, 849551, 6286180, -588212, 901688, 6289060, -641654, 843676, 6321170, -645927, 551490, 6331470, -514971, 570718, 6289060, -641654, 843676, 6331470, -514971, 570718, 6294550, -576818, 849551, 6286180, -588212, 901688, 6245230, -636231, 1124490, 6281060, -640640, 901688, 6288780, -559811, 901688, 6286180, -588212, 901688, 6294550, -576818, 849551, 6288780, -559811, 901688, 6294550, -576818, 849551, 6296380, -553157, 851695, 6331470, -514971, 570718, 6296380, -553157, 851695, 6294550, -576818, 849551, 6246730, -590967, 1140610, 6245230, -636231, 1124490, 6286180, -588212, 901688, 6246730, -590967, 1140610, 6286180, -588212, 901688, 6288780, -559811, 901688, 6291190, -532063, 901688, 6288780, -559811, 901688, 6296380, -553157, 851695, 6291190, -532063, 901688, 6296380, -553157, 851695, 6298110, -529690, 853820, 6331470, -514971, 570718, 6298110, -529690, 853820, 6296380, -553157, 851695, 6255460, -542293, 1116880, 6246730, -590967, 1140610, 6288780, -559811, 901688, 6255460, -542293, 1116880, 6288780, -559811, 901688, 6291190, -532063, 901688, 6271650, -727028, 901688, 6270080, -740406, 901688, 6279710, -737538, 834976, 6271650, -727028, 901688, 6279710, -737538, 834976, 6280870, -726493, 835978, 6315560, -722780, 519689, 6280870, -726493, 835978, 6279710, -737538, 834976, 6231010, -728277, 1147140, 6234360, -748977, 1115390, 6270080, -740406, 901688, 6231010, -728277, 1147140, 6270080, -740406, 901688, 6271650, -727028, 901688, 6272970, -715553, 901688, 6271650, -727028, 901688, 6280870, -726493, 835978, 6272970, -715553, 901688, 6280870, -726493, 835978, 6281840, -716966, 836843, 6281840, -716966, 836843, 6280870, -726493, 835978, 6315560, -722780, 519689, 6233560, -709560, 1145020, 6231010, -728277, 1147140, 6271650, -727028, 901688, 6233560, -709560, 1145020, 6271650, -727028, 901688, 6272970, -715553, 901688, 6272970, -715553, 901688, 6281840, -716966, 836843, 6285710, -677794, 840398, 6272970, -715553, 901688, 6285710, -677794, 840398, 6276450, -684343, 901688, 6281840, -716966, 836843, 6315560, -722780, 519689, 6321170, -645927, 551490, 6281840, -716966, 836843, 6321170, -645927, 551490, 6285710, -677794, 840398, 6276450, -684343, 901688, 6233560, -709560, 1145020, 6272970, -715553, 901688, 6278500, -665239, 901688, 6276450, -684343, 901688, 6285710, -677794, 840398, 6278500, -665239, 901688, 6285710, -677794, 840398, 6287200, -662096, 841822, 6321170, -645927, 551490, 6287200, -662096, 841822, 6285710, -677794, 840398, 6234800, -677891, 1157290, 6233560, -709560, 1145020, 6276450, -684343, 901688, 6234800, -677891, 1157290, 6276450, -684343, 901688, 6278500, -665239, 901688, 6305300, -832229, 479254, 6295860, -844003, 572909, 6302240, -853458, 482152, 6305300, -832229, 479254, 6296e3, -833325, 586695, 6295860, -844003, 572909, 6264820, -783660, 901688, 6273380, -795163, 829740, 6274290, -787170, 830467, 6264820, -783660, 901688, 6274290, -787170, 830467, 6265560, -777756, 901688, 6273380, -795163, 829740, 6296e3, -833325, 586695, 6305300, -832229, 479254, 6273380, -795163, 829740, 6305300, -832229, 479254, 6274290, -787170, 830467, 6234360, -748977, 1115390, 6264820, -783660, 901688, 6265560, -777756, 901688, 6265560, -777756, 901688, 6274290, -787170, 830467, 6279710, -737538, 834976, 6265560, -777756, 901688, 6279710, -737538, 834976, 6270080, -740406, 901688, 6274290, -787170, 830467, 6305300, -832229, 479254, 6315560, -722780, 519689, 6274290, -787170, 830467, 6315560, -722780, 519689, 6279710, -737538, 834976, 6270080, -740406, 901688, 6234360, -748977, 1115390, 6265560, -777756, 901688, 6248460, -859499, 944786, 6216520, -862568, 1132630, 6216310, -876959, 1122740, 6223540, -832913, 1116280, 6216520, -862568, 1132630, 6248460, -859499, 944786, 6258190, -834962, 901688, 6255290, -856437, 901688, 6266740, -850854, 824675, 6258190, -834962, 901688, 6266740, -850854, 824675, 6268620, -835443, 826078, 6291410, -836118, 630064, 6268620, -835443, 826078, 6266740, -850854, 824675, 6223540, -832913, 1116280, 6248460, -859499, 944786, 6255290, -856437, 901688, 6223540, -832913, 1116280, 6255290, -856437, 901688, 6258190, -834962, 901688, 6264300, -787847, 901688, 6258190, -834962, 901688, 6268620, -835443, 826078, 6264300, -787847, 901688, 6268620, -835443, 826078, 6272720, -800855, 829224, 6272720, -800855, 829224, 6268620, -835443, 826078, 6291410, -836118, 630064, 6234360, -748977, 1115390, 6223540, -832913, 1116280, 6258190, -834962, 901688, 6234360, -748977, 1115390, 6258190, -834962, 901688, 6264300, -787847, 901688, 6264300, -787847, 901688, 6272720, -800855, 829224, 6273380, -795163, 829740, 6264300, -787847, 901688, 6273380, -795163, 829740, 6264820, -783660, 901688, 6272720, -800855, 829224, 6291410, -836118, 630064, 6296e3, -833325, 586695, 6272720, -800855, 829224, 6296e3, -833325, 586695, 6273380, -795163, 829740, 6234360, -748977, 1115390, 6264300, -787847, 901688, 6264820, -783660, 901688, 6259690, -905829, 819671, 6255290, -910397, 847507, 6258930, -911519, 819152, 6258930, -911519, 819152, 6274560, -916629, 683484, 6280330, -881938, 676135, 6258930, -911519, 819152, 6280330, -881938, 676135, 6259690, -905829, 819671, 6249660, -903016, 895285, 6255290, -910397, 847507, 6259690, -905829, 819671, 6249660, -903016, 895285, 6259690, -905829, 819671, 6260990, -895967, 820569, 6280330, -881938, 676135, 6260990, -895967, 820569, 6259690, -905829, 819671, 6260990, -895967, 820569, 6261440, -892520, 820882, 6249430, -898202, 901688, 6260990, -895967, 820569, 6249430, -898202, 901688, 6248800, -902534, 901688, 6260990, -895967, 820569, 6248800, -902534, 901688, 6249660, -903016, 895285, 6280330, -881938, 676135, 6261440, -892520, 820882, 6260990, -895967, 820569, 6249430, -898202, 901688, 6244710, -900265, 931633, 6248800, -902534, 901688, 6254360, -863200, 901688, 6249430, -898202, 901688, 6261440, -892520, 820882, 6254360, -863200, 901688, 6261440, -892520, 820882, 6264360, -869864, 822945, 6264360, -869864, 822945, 6261440, -892520, 820882, 6280330, -881938, 676135, 6248460, -859499, 944786, 6244710, -900265, 931633, 6249430, -898202, 901688, 6248460, -859499, 944786, 6249430, -898202, 901688, 6254360, -863200, 901688, 6254360, -863200, 901688, 6264360, -869864, 822945, 6266740, -850854, 824675, 6254360, -863200, 901688, 6266740, -850854, 824675, 6255290, -856437, 901688, 6264360, -869864, 822945, 6280330, -881938, 676135, 6291410, -836118, 630064, 6264360, -869864, 822945, 6291410, -836118, 630064, 6266740, -850854, 824675, 6255290, -856437, 901688, 6248460, -859499, 944786, 6254360, -863200, 901688, 6256950, -926238, 817811, 6252770, -927711, 847382, 6256010, -933070, 817188, 6256010, -933070, 817188, 6256190, -933370, 815497, 6264400, -923420, 762452, 6256010, -933070, 817188, 6264400, -923420, 762452, 6256950, -926238, 817811, 6255290, -910397, 847507, 6252770, -927711, 847382, 6256950, -926238, 817811, 6255290, -910397, 847507, 6256950, -926238, 817811, 6258490, -914802, 818854, 6258490, -914802, 818854, 6256950, -926238, 817811, 6264400, -923420, 762452, 6255290, -910397, 847507, 6258490, -914802, 818854, 6258930, -911519, 819152, 6258490, -914802, 818854, 6264400, -923420, 762452, 6274560, -916629, 683484, 6258490, -914802, 818854, 6274560, -916629, 683484, 6258930, -911519, 819152, 6274560, -916629, 683484, 6264400, -923420, 762452, 6266510, -948042, 713658, 6231020, -884488, 1032240, 6214720, -898804, 1114300, 6219880, -908449, 1077320, 6216310, -876959, 1122740, 6214720, -898804, 1114300, 6231020, -884488, 1032240, 6248460, -859499, 944786, 6216310, -876959, 1122740, 6231020, -884488, 1032240, 6248800, -902534, 901688, 6248380, -905437, 901688, 6249660, -903016, 895285, 6244710, -900265, 931633, 6245420, -911002, 916423, 6248380, -905437, 901688, 6244710, -900265, 931633, 6248380, -905437, 901688, 6248800, -902534, 901688, 6305400, -322535, 901688, 6309440, -324782, 872353, 6310420, -298090, 874765, 6305400, -322535, 901688, 6310420, -298090, 874765, 6307240, -284332, 901688, 6310420, -298090, 874765, 6309440, -324782, 872353, 6317080, -329249, 813796, 6280960, -310212, 1061280, 6305400, -322535, 901688, 6307240, -284332, 901688, 6280960, -310212, 1061280, 6307240, -284332, 901688, 6306740, -282217, 905827, 6130100, 1750940, 191008, 6138630, 1691480, 368594, 6152980, 1665540, 217127, 6130100, 1750940, 191008, 6126830, 1740960, 333069, 6138630, 1691480, 368594, 6130100, 1750940, 191008, 6127820, 1746410, 282690, 6126830, 1740960, 333069, 6125890, 1758060, 250679, 6127820, 1746410, 282690, 6130100, 1750940, 191008, 6152980, 1665540, 217127, 6154660, 1589230, 522722, 6174830, 1578280, 246284, 6152980, 1665540, 217127, 6145700, 1641100, 465150, 6154660, 1589230, 522722, 6152980, 1665540, 217127, 6145940, 1650960, 425548, 6145700, 1641100, 465150, 6138630, 1691480, 368594, 6145940, 1650960, 425548, 6152980, 1665540, 217127, 6148100, 1436300, 901688, 6207930, 1441870, 250619, 6174830, 1578280, 246284, 6148100, 1436300, 901688, 6174830, 1578280, 246284, 6141820, 1462950, 901688, 6126880, 1437980, 1032930, 6123310, 1432560, 1061080, 6128060, 1433290, 1032500, 6128060, 1433290, 1032500, 6148100, 1436300, 901688, 6141820, 1462950, 901688, 6128060, 1433290, 1032500, 6141820, 1462950, 901688, 6126880, 1437980, 1032930, 6174830, 1578280, 246284, 6137510, 1480900, 901688, 6141820, 1462950, 901688, 6110140, 1445360, 1117720, 6123310, 1432560, 1061080, 6126880, 1437980, 1032930, 6110140, 1445360, 1117720, 6126880, 1437980, 1032930, 6121540, 1459170, 1034910, 6121540, 1459170, 1034910, 6126880, 1437980, 1032930, 6141820, 1462950, 901688, 6121540, 1459170, 1034910, 6141820, 1462950, 901688, 6137510, 1480900, 901688, 6174830, 1578280, 246284, 6131230, 1506710, 901688, 6137510, 1480900, 901688, 6090930, 1470500, 1187130, 6110140, 1445360, 1117720, 6121540, 1459170, 1034910, 6090930, 1470500, 1187130, 6121540, 1459170, 1034910, 6113660, 1489830, 1037760, 6113660, 1489830, 1037760, 6121540, 1459170, 1034910, 6137510, 1480900, 901688, 6113660, 1489830, 1037760, 6137510, 1480900, 901688, 6131230, 1506710, 901688, 6174830, 1578280, 246284, 6125410, 1530180, 901688, 6131230, 1506710, 901688, 6104700, 1516890, 1051140, 6090930, 1470500, 1187130, 6113660, 1489830, 1037760, 6104700, 1516890, 1051140, 6113660, 1489830, 1037760, 6106310, 1517880, 1040380, 6106310, 1517880, 1040380, 6113660, 1489830, 1037760, 6131230, 1506710, 901688, 6106310, 1517880, 1040380, 6131230, 1506710, 901688, 6125410, 1530180, 901688, 6111980, 1582990, 901688, 6125410, 1530180, 901688, 6174830, 1578280, 246284, 6103870, 1527070, 1041240, 6104700, 1516890, 1051140, 6106310, 1517880, 1040380, 6103870, 1527070, 1041240, 6106310, 1517880, 1040380, 6125410, 1530180, 901688, 6103870, 1527070, 1041240, 6125410, 1530180, 901688, 6111980, 1582990, 901688, 6103870, 1527070, 1041240, 6111980, 1582990, 901688, 6098800, 1582310, 987433, 6111980, 1582990, 901688, 6174830, 1578280, 246284, 6148360, 1585430, 601933, 6111980, 1582990, 901688, 6148360, 1585430, 601933, 6111840, 1583530, 901688, 6098800, 1582310, 987433, 6111980, 1582990, 901688, 6111840, 1583530, 901688, 6154660, 1589230, 522722, 6148360, 1585430, 601933, 6174830, 1578280, 246284, 6111370, 1585310, 901688, 6137770, 1591520, 687214, 6128920, 1616640, 707168, 6111370, 1585310, 901688, 6128920, 1616640, 707168, 6109340, 1593140, 901688, 6109340, 1593140, 901688, 6098800, 1582310, 987433, 6111370, 1585310, 901688, 6100570, 1626390, 901688, 6109340, 1593140, 901688, 6128920, 1616640, 707168, 6089390, 1629370, 968882, 6098800, 1582310, 987433, 6109340, 1593140, 901688, 6089390, 1629370, 968882, 6109340, 1593140, 901688, 6100570, 1626390, 901688, 6100570, 1626390, 901688, 6128920, 1616640, 707168, 6101470, 1666830, 818426, 6100570, 1626390, 901688, 6101470, 1666830, 818426, 6095250, 1646210, 901688, 6095250, 1646210, 901688, 6089390, 1629370, 968882, 6100570, 1626390, 901688, 6101470, 1666830, 818426, 6094100, 1650480, 901688, 6095250, 1646210, 901688, 6091970, 1646120, 923613, 6089390, 1629370, 968882, 6095250, 1646210, 901688, 6091970, 1646120, 923613, 6095250, 1646210, 901688, 6094100, 1650480, 901688, 6092410, 1656700, 901688, 6094100, 1650480, 901688, 6101470, 1666830, 818426, 6092410, 1656700, 901688, 6101470, 1666830, 818426, 6093100, 1682450, 848124, 6092410, 1656700, 901688, 6091970, 1646120, 923613, 6094100, 1650480, 901688, 6171500, 1332170, 901688, 6179950, 1320790, 859850, 6225790, 1364200, 242410, 6171500, 1332170, 901688, 6225790, 1364200, 242410, 6170550, 1336570, 901688, 6170550, 1336570, 901688, 6168690, 1335850, 915261, 6171500, 1332170, 901688, 6158660, 1390320, 901688, 6170550, 1336570, 901688, 6225790, 1364200, 242410, 6149380, 1391880, 960319, 6168690, 1335850, 915261, 6170550, 1336570, 901688, 6149380, 1391880, 960319, 6170550, 1336570, 901688, 6158660, 1390320, 901688, 6158660, 1390320, 901688, 6225790, 1364200, 242410, 6210820, 1428320, 256643, 6158660, 1390320, 901688, 6210820, 1428320, 256643, 6157470, 1395580, 901688, 6157470, 1395580, 901688, 6149380, 1391880, 960319, 6158660, 1390320, 901688, 6152950, 1415400, 901688, 6157470, 1395580, 901688, 6210820, 1428320, 256643, 6132550, 1410790, 1036770, 6134020, 1409180, 1030250, 6133570, 1411020, 1030420, 6134020, 1409180, 1030250, 6149380, 1391880, 960319, 6157470, 1395580, 901688, 6134020, 1409180, 1030250, 6157470, 1395580, 901688, 6152950, 1415400, 901688, 6134020, 1409180, 1030250, 6152950, 1415400, 901688, 6133570, 1411020, 1030420, 6152950, 1415400, 901688, 6210820, 1428320, 256643, 6207930, 1441870, 250619, 6152950, 1415400, 901688, 6207930, 1441870, 250619, 6152410, 1417720, 901688, 6133550, 1411130, 1030430, 6132550, 1410790, 1036770, 6133570, 1411020, 1030420, 6133570, 1411020, 1030420, 6152950, 1415400, 901688, 6152410, 1417720, 901688, 6133570, 1411020, 1030420, 6152410, 1417720, 901688, 6133550, 1411130, 1030430, 6148100, 1436300, 901688, 6152410, 1417720, 901688, 6207930, 1441870, 250619, 6123310, 1432560, 1061080, 6132550, 1410790, 1036770, 6133550, 1411130, 1030430, 6123310, 1432560, 1061080, 6133550, 1411130, 1030430, 6128060, 1433290, 1032500, 6128060, 1433290, 1032500, 6133550, 1411130, 1030430, 6152410, 1417720, 901688, 6128060, 1433290, 1032500, 6152410, 1417720, 901688, 6148100, 1436300, 901688, 6250170, 1246230, 249950, 6217940, 1215270, 733090, 6224210, 1153300, 778211, 6198590, 1288830, 770090, 6217940, 1215270, 733090, 6250170, 1246230, 249950, 6239330, 1297980, 257211, 6198590, 1288830, 770090, 6250170, 1246230, 249950, 6190850, 1297770, 815697, 6198590, 1288830, 770090, 6239330, 1297980, 257211, 6225790, 1364200, 242410, 6190850, 1297770, 815697, 6239330, 1297980, 257211, 6225790, 1364200, 242410, 6179950, 1320790, 859850, 6190850, 1297770, 815697, 6285930, 966927, 480790, 6286350, 939534, 527061, 6288980, 938640, 496600, 6275160, 966684, 605006, 6286350, 939534, 527061, 6285930, 966927, 480790, 6285990, 989769, 431369, 6275160, 966684, 605006, 6285930, 966927, 480790, 6255980, 1016960, 711123, 6275160, 966684, 605006, 6285990, 989769, 431369, 6279140, 104e4, 412656, 6255980, 1016960, 711123, 6285990, 989769, 431369, 6250650, 1048550, 712111, 6255980, 1016960, 711123, 6279140, 104e4, 412656, 6276180, 1083540, 339679, 6250650, 1048550, 712111, 6279140, 104e4, 412656, 6231930, 1112130, 776390, 6250650, 1048550, 712111, 6276180, 1083540, 339679, 6250170, 1246230, 249950, 6231930, 1112130, 776390, 6276180, 1083540, 339679, 6250170, 1246230, 249950, 6224210, 1153300, 778211, 6231930, 1112130, 776390, 6079740, 1586740, 1091630, 6052570, 1555770, 1271100, 6090300, 1537860, 1102580, 6079740, 1586740, 1091630, 6043890, 1559480, 1307100, 6052570, 1555770, 1271100, 6079740, 1586740, 1091630, 6036900, 1569930, 1326640, 6043890, 1559480, 1307100, 6025130, 1602420, 1341090, 6036900, 1569930, 1326640, 6079740, 1586740, 1091630, 6070530, 1616310, 1099390, 6025130, 1602420, 1341090, 6079740, 1586740, 1091630, 6052570, 1555770, 1271100, 6090930, 1470500, 1187130, 6104700, 1516890, 1051140, 6052570, 1555770, 1271100, 6104700, 1516890, 1051140, 6090300, 1537860, 1102580, 6054670, 1675460, 1098320, 6052710, 1613170, 1197200, 6070530, 1616310, 1099390, 6052710, 1613170, 1197200, 6025130, 1602420, 1341090, 6070530, 1616310, 1099390, 6037870, 1613350, 1269280, 6025130, 1602420, 1341090, 6052710, 1613170, 1197200, 6036900, 1569930, 1326640, 6030180, 1527380, 1404050, 6038510, 1525880, 1369690, 6036900, 1569930, 1326640, 6021220, 1556720, 1410240, 6030180, 1527380, 1404050, 6025130, 1602420, 1341090, 6021220, 1556720, 1410240, 6036900, 1569930, 1326640, 6250170, 1246230, 249950, 6276180, 1083540, 339679, 6282940, 1068230, 252472, 6111840, 1583530, 901688, 6148360, 1585430, 601933, 6137770, 1591520, 687214, 6111840, 1583530, 901688, 6137770, 1591520, 687214, 6111370, 1585310, 901688, 6098800, 1582310, 987433, 6111840, 1583530, 901688, 6111370, 1585310, 901688, 6149710, 1597170, 555555, 6148360, 1585430, 601933, 6154660, 1589230, 522722, 5563050, 2985730, -901688, 5568800, 2974990, -901688, 5495760, 2941260, -1346870, 5593390, 3028e3, 473615, 5616050, 2983590, 486986, 5600140, 2988360, -621399, 5593390, 3028e3, 473615, 5600140, 2988360, -621399, 5590890, 3006020, -619598, 5590890, 3006020, -619598, 5600140, 2988360, -621399, 5568800, 2974990, -901688, 5590890, 3006020, -619598, 5568800, 2974990, -901688, 5563050, 2985730, -901688, 5563050, 2985730, -901688, 5495760, 2941260, -1346870, 5494290, 2967320, -1295060, 5563050, 2985730, -901688, 5494290, 2967320, -1295060, 5554570, 3001470, -901688, 5593390, 3028e3, 473615, 5590890, 3006020, -619598, 5584230, 3018640, -618310, 5590890, 3006020, -619598, 5563050, 2985730, -901688, 5554570, 3001470, -901688, 5590890, 3006020, -619598, 5554570, 3001470, -901688, 5584230, 3018640, -618310, 5467770, 2971680, -1392900, 5494290, 2967320, -1295060, 5495760, 2941260, -1346870, 5476680, 2991240, -1314330, 5494290, 2967320, -1295060, 5467770, 2971680, -1392900, 5434370, 3004180, -1452230, 5476680, 2991240, -1314330, 5467770, 2971680, -1392900, 5431870, 3053400, -1356410, 5476680, 2991240, -1314330, 5434370, 3004180, -1452230, 5393580, 3076390, -1453120, 5431870, 3053400, -1356410, 5434370, 3004180, -1452230, 5393580, 3076390, -1453120, 5420890, 3081500, -1336750, 5431870, 3053400, -1356410, 5542970, 3115660, -497081, 5554330, 3113940, -364025, 5570300, 3090830, -313823, 5542970, 3115660, -497081, 5570300, 3090830, -313823, 5533070, 3113340, -608590, 5542970, 3115660, -497081, 5533070, 3113340, -608590, 5531430, 3116310, -608284, 5526e3, 3116280, -655659, 5531430, 3116310, -608284, 5533070, 3113340, -608590, 5519850, 3064870, -901688, 5521840, 3061280, -901688, 5518740, 3059450, -926336, 5533070, 3113340, -608590, 5570300, 3090830, -313823, 5551760, 3079190, -612104, 5519850, 3064870, -901688, 5526e3, 3116280, -655659, 5533070, 3113340, -608590, 5519850, 3064870, -901688, 5533070, 3113340, -608590, 5551760, 3079190, -612104, 5519850, 3064870, -901688, 5551760, 3079190, -612104, 5521840, 3061280, -901688, 5517940, 3068300, -901688, 5519850, 3064870, -901688, 5518740, 3059450, -926336, 5526e3, 3116280, -655659, 5519850, 3064870, -901688, 5517940, 3068300, -901688, 5526e3, 3116280, -655659, 5517940, 3068300, -901688, 5509030, 3132110, -719423, 5517940, 3068300, -901688, 5518740, 3059450, -926336, 5447840, 3189340, -907866, 5517940, 3068300, -901688, 5447840, 3189340, -907866, 5449940, 3187520, -901688, 5449940, 3187520, -901688, 5509030, 3132110, -719423, 5517940, 3068300, -901688, 5447840, 3189340, -907866, 5449e3, 3189120, -901688, 5449940, 3187520, -901688, 5470710, 3184030, -780913, 5509030, 3132110, -719423, 5449940, 3187520, -901688, 5470710, 3184030, -780913, 5449940, 3187520, -901688, 5449e3, 3189120, -901688, 5430360, 3220750, -901688, 5449e3, 3189120, -901688, 5447840, 3189340, -907866, 5430360, 3220750, -901688, 5447840, 3189340, -907866, 5424390, 3225890, -919002, 5430360, 3220750, -901688, 5470710, 3184030, -780913, 5449e3, 3189120, -901688, 5453110, 3299150, 243699, 5475550, 3260620, 258660, 5472720, 3269220, 204461, 5472720, 3269220, 204461, 5475550, 3260620, 258660, 5495280, 3232900, 175107, 5466430, 3263030, 387786, 5495280, 3232900, 175107, 5475550, 3260620, 258660, 5466430, 3263030, 387786, 5517880, 3196830, 117458, 5495280, 3232900, 175107, 5466430, 3263030, 387786, 5511660, 3176200, 461104, 5517880, 3196830, 117458, 5517880, 3196830, 117458, 5511660, 3176200, 461104, 5530230, 3176920, 66053.7, 5511660, 3176200, 461104, 5533610, 3171630, -22702, 5530230, 3176920, 66053.7, 5511660, 3176200, 461104, 5521640, 3151530, 508195, 5533610, 3171630, -22702, 5533610, 3171630, -22702, 5521640, 3151530, 508195, 5546140, 3149080, -64950.9, 5521640, 3151530, 508195, 5560410, 3119320, -179114, 5546140, 3149080, -64950.9, 5521640, 3151530, 508195, 5553610, 3098610, 484875, 5560410, 3119320, -179114, 5560410, 3119320, -179114, 5553610, 3098610, 484875, 5560510, 3114650, -244874, 5560510, 3114650, -244874, 5553610, 3098610, 484875, 5567660, 3101150, -253393, 5553610, 3098610, 484875, 5570300, 3090830, -313823, 5567660, 3101150, -253393, 5535210, 3037020, -901688, 5535540, 3036430, -901688, 5531280, 3032670, -939411, 5553610, 3098610, 484875, 5561350, 3061460, -613925, 5558500, 3066740, -613384, 5553610, 3098610, 484875, 5558500, 3066740, -613384, 5570300, 3090830, -313823, 5561350, 3061460, -613925, 5535540, 3036430, -901688, 5535210, 3037020, -901688, 5561350, 3061460, -613925, 5535210, 3037020, -901688, 5558500, 3066740, -613384, 5535540, 3036430, -901688, 5536190, 3035240, -901688, 5531280, 3032670, -939411, 5553610, 3098610, 484875, 5577940, 3053420, 492131, 5566920, 3051110, -614987, 5553610, 3098610, 484875, 5566920, 3051110, -614987, 5561350, 3061460, -613925, 5561350, 3061460, -613925, 5566920, 3051110, -614987, 5536190, 3035240, -901688, 5561350, 3061460, -613925, 5536190, 3035240, -901688, 5535540, 3036430, -901688, 5518020, 3017730, -1057300, 5536760, 2999950, -1009170, 5506970, 2989550, -1186190, 5506970, 2989550, -1186190, 5536760, 2999950, -1009170, 5494290, 2967320, -1295060, 5554570, 3001470, -901688, 5494290, 2967320, -1295060, 5536760, 2999950, -1009170, 5554570, 3001470, -901688, 5536760, 2999950, -1009170, 5551260, 3007600, -901688, 5581620, 3023550, -617807, 5593390, 3028e3, 473615, 5584230, 3018640, -618310, 5584230, 3018640, -618310, 5554570, 3001470, -901688, 5551260, 3007600, -901688, 5584230, 3018640, -618310, 5551260, 3007600, -901688, 5581620, 3023550, -617807, 5550240, 3009480, -901688, 5551260, 3007600, -901688, 5536760, 2999950, -1009170, 5577940, 3053420, 492131, 5593390, 3028e3, 473615, 5581620, 3023550, -617807, 5577940, 3053420, 492131, 5581620, 3023550, -617807, 5577960, 3030440, -617103, 5577960, 3030440, -617103, 5581620, 3023550, -617807, 5551260, 3007600, -901688, 5577960, 3030440, -617103, 5551260, 3007600, -901688, 5550240, 3009480, -901688, 5550240, 3009480, -901688, 5536760, 2999950, -1009170, 5531280, 3032670, -939411, 5550240, 3009480, -901688, 5531280, 3032670, -939411, 5536190, 3035240, -901688, 5566920, 3051110, -614987, 5577940, 3053420, 492131, 5577960, 3030440, -617103, 5577960, 3030440, -617103, 5550240, 3009480, -901688, 5536190, 3035240, -901688, 5577960, 3030440, -617103, 5536190, 3035240, -901688, 5566920, 3051110, -614987, 5649180, 2684610, -1244920, 5703740, 2707300, -901688, 5705130, 2704370, -901688, 5744060, 2712600, 570954, 5753280, 2698560, 544168, 5735230, 2713610, -649048, 5744060, 2712600, 570954, 5735230, 2713610, -649048, 5732860, 2718740, -648539, 5732860, 2718740, -648539, 5735230, 2713610, -649048, 5705130, 2704370, -901688, 5732860, 2718740, -648539, 5705130, 2704370, -901688, 5703740, 2707300, -901688, 5700400, 2714330, -901688, 5703740, 2707300, -901688, 5649180, 2684610, -1244920, 5725560, 2749440, 580390, 5744060, 2712600, 570954, 5732860, 2718740, -648539, 5725560, 2749440, 580390, 5732860, 2718740, -648539, 5727140, 2731060, -647312, 5727140, 2731060, -647312, 5732860, 2718740, -648539, 5703740, 2707300, -901688, 5727140, 2731060, -647312, 5703740, 2707300, -901688, 5700400, 2714330, -901688, 5700400, 2714330, -901688, 5649180, 2684610, -1244920, 5624360, 2713150, -1294130, 5700400, 2714330, -901688, 5624360, 2713150, -1294130, 5687610, 2741030, -901688, 5716720, 2753330, -645091, 5725560, 2749440, 580390, 5727140, 2731060, -647312, 5727140, 2731060, -647312, 5700400, 2714330, -901688, 5687610, 2741030, -901688, 5727140, 2731060, -647312, 5687610, 2741030, -901688, 5716720, 2753330, -645091, 5679940, 2756890, -901688, 5687610, 2741030, -901688, 5624360, 2713150, -1294130, 5689920, 2824850, 568802, 5725560, 2749440, 580390, 5716720, 2753330, -645091, 5689920, 2824850, 568802, 5716720, 2753330, -645091, 5704180, 2779820, -642444, 5704180, 2779820, -642444, 5716720, 2753330, -645091, 5687610, 2741030, -901688, 5704180, 2779820, -642444, 5687610, 2741030, -901688, 5679940, 2756890, -901688, 5679940, 2756890, -901688, 5624360, 2713150, -1294130, 5583060, 2790070, -1309220, 5679940, 2756890, -901688, 5583060, 2790070, -1309220, 5649310, 2819120, -901688, 5679310, 2831460, -637269, 5689920, 2824850, 568802, 5704180, 2779820, -642444, 5704180, 2779820, -642444, 5679940, 2756890, -901688, 5649310, 2819120, -901688, 5704180, 2779820, -642444, 5649310, 2819120, -901688, 5679310, 2831460, -637269, 5642370, 2832980, -901688, 5649310, 2819120, -901688, 5583060, 2790070, -1309220, 5658150, 2888460, 566267, 5689920, 2824850, 568802, 5679310, 2831460, -637269, 5658150, 2888460, 566267, 5679310, 2831460, -637269, 5668020, 2854530, -634949, 5668020, 2854530, -634949, 5679310, 2831460, -637269, 5649310, 2819120, -901688, 5668020, 2854530, -634949, 5649310, 2819120, -901688, 5642370, 2832980, -901688, 5642370, 2832980, -901688, 5583060, 2790070, -1309220, 5559310, 2852730, -1275030, 5642370, 2832980, -901688, 5559310, 2852730, -1275030, 5618490, 2880050, -901688, 5648740, 2893350, -631035, 5658150, 2888460, 566267, 5668020, 2854530, -634949, 5668020, 2854530, -634949, 5642370, 2832980, -901688, 5618490, 2880050, -901688, 5668020, 2854530, -634949, 5618490, 2880050, -901688, 5648740, 2893350, -631035, 5615100, 2886650, -901688, 5618490, 2880050, -901688, 5559310, 2852730, -1275030, 5640470, 2920520, 577951, 5658150, 2888460, 566267, 5648740, 2893350, -631035, 5640470, 2920520, 577951, 5648740, 2893350, -631035, 5642980, 2904830, -629876, 5642980, 2904830, -629876, 5648740, 2893350, -631035, 5618490, 2880050, -901688, 5642980, 2904830, -629876, 5618490, 2880050, -901688, 5615100, 2886650, -901688, 5615100, 2886650, -901688, 5559310, 2852730, -1275030, 5537500, 2869e3, -1331760, 5615100, 2886650, -901688, 5537500, 2869e3, -1331760, 5606090, 2904120, -901688, 5635720, 2919210, -628421, 5640470, 2920520, 577951, 5642980, 2904830, -629876, 5642980, 2904830, -629876, 5615100, 2886650, -901688, 5606090, 2904120, -901688, 5642980, 2904830, -629876, 5606090, 2904120, -901688, 5635720, 2919210, -628421, 5598740, 2918250, -901688, 5606090, 2904120, -901688, 5537500, 2869e3, -1331760, 5616050, 2983590, 486986, 5640470, 2920520, 577951, 5635720, 2919210, -628421, 5616050, 2983590, 486986, 5635720, 2919210, -628421, 5623840, 2942530, -626056, 5623840, 2942530, -626056, 5635720, 2919210, -628421, 5606090, 2904120, -901688, 5623840, 2942530, -626056, 5606090, 2904120, -901688, 5598740, 2918250, -901688, 5598740, 2918250, -901688, 5537500, 2869e3, -1331760, 5495760, 2941260, -1346870, 5598740, 2918250, -901688, 5495760, 2941260, -1346870, 5568800, 2974990, -901688, 5600140, 2988360, -621399, 5616050, 2983590, 486986, 5623840, 2942530, -626056, 5623840, 2942530, -626056, 5598740, 2918250, -901688, 5568800, 2974990, -901688, 5623840, 2942530, -626056, 5568800, 2974990, -901688, 5600140, 2988360, -621399, 5649180, 2684610, -1244920, 5705130, 2704370, -901688, 5708100, 2698100, -901688, 5753280, 2698560, 544168, 5768700, 2666120, 540864, 5740250, 2702700, -650134, 5753280, 2698560, 544168, 5740250, 2702700, -650134, 5735230, 2713610, -649048, 5735230, 2713610, -649048, 5740250, 2702700, -650134, 5708100, 2698100, -901688, 5735230, 2713610, -649048, 5708100, 2698100, -901688, 5705130, 2704370, -901688, 5731970, 2647e3, -901688, 5680390, 2622690, -1234910, 5649180, 2684610, -1244920, 5731970, 2647e3, -901688, 5649180, 2684610, -1244920, 5708100, 2698100, -901688, 5740250, 2702700, -650134, 5768700, 2666120, 540864, 5759620, 2660150, -654355, 5759620, 2660150, -654355, 5731970, 2647e3, -901688, 5708100, 2698100, -901688, 5759620, 2660150, -654355, 5708100, 2698100, -901688, 5740250, 2702700, -650134, 5731970, 2647e3, -901688, 5735380, 2639620, -901688, 5680390, 2622690, -1234910, 5768700, 2666120, 540864, 5785060, 2625500, 564166, 5765420, 2647220, -655636, 5768700, 2666120, 540864, 5765420, 2647220, -655636, 5759620, 2660150, -654355, 5759620, 2660150, -654355, 5765420, 2647220, -655636, 5735380, 2639620, -901688, 5759620, 2660150, -654355, 5735380, 2639620, -901688, 5731970, 2647e3, -901688, 5752800, 2601430, -901688, 5701180, 2575920, -1237530, 5680390, 2622690, -1234910, 5752800, 2601430, -901688, 5680390, 2622690, -1234910, 5735380, 2639620, -901688, 5765420, 2647220, -655636, 5785060, 2625500, 564166, 5779670, 2615160, -658803, 5779670, 2615160, -658803, 5752800, 2601430, -901688, 5735380, 2639620, -901688, 5779670, 2615160, -658803, 5735380, 2639620, -901688, 5765420, 2647220, -655636, 5755020, 2596510, -901688, 5709790, 2572940, -1203790, 5701180, 2575920, -1237530, 5755020, 2596510, -901688, 5701180, 2575920, -1237530, 5752800, 2601430, -901688, 5785060, 2625500, 564166, 5781500, 2611020, -659211, 5779670, 2615160, -658803, 5781500, 2611020, -659211, 5755020, 2596510, -901688, 5752800, 2601430, -901688, 5781500, 2611020, -659211, 5752800, 2601430, -901688, 5779670, 2615160, -658803, 5746790, 2493630, -1194660, 5793100, 2510390, -901688, 5796530, 2502460, -901688, 5839280, 2514450, 509174, 5858260, 2467580, 520245, 5826830, 2505460, -669584, 5839280, 2514450, 509174, 5826830, 2505460, -669584, 5820820, 2519760, -668186, 5820820, 2519760, -668186, 5826830, 2505460, -669584, 5796530, 2502460, -901688, 5820820, 2519760, -668186, 5796530, 2502460, -901688, 5793100, 2510390, -901688, 5784830, 2529390, -901688, 5793100, 2510390, -901688, 5746790, 2493630, -1194660, 5785060, 2625500, 564166, 5839280, 2514450, 509174, 5820820, 2519760, -668186, 5785060, 2625500, 564166, 5820820, 2519760, -668186, 5806150, 2554280, -664797, 5806150, 2554280, -664797, 5820820, 2519760, -668186, 5793100, 2510390, -901688, 5806150, 2554280, -664797, 5793100, 2510390, -901688, 5784830, 2529390, -901688, 5784830, 2529390, -901688, 5746790, 2493630, -1194660, 5725670, 2538720, -1201060, 5784830, 2529390, -901688, 5725670, 2538720, -1201060, 5767910, 2567740, -901688, 5785060, 2625500, 564166, 5806150, 2554280, -664797, 5792120, 2586760, -661604, 5806150, 2554280, -664797, 5784830, 2529390, -901688, 5767910, 2567740, -901688, 5806150, 2554280, -664797, 5767910, 2567740, -901688, 5792120, 2586760, -661604, 5767910, 2567740, -901688, 5725670, 2538720, -1201060, 5709790, 2572940, -1203790, 5767910, 2567740, -901688, 5709790, 2572940, -1203790, 5755020, 2596510, -901688, 5785060, 2625500, 564166, 5792120, 2586760, -661604, 5781500, 2611020, -659211, 5792120, 2586760, -661604, 5767910, 2567740, -901688, 5755020, 2596510, -901688, 5792120, 2586760, -661604, 5755020, 2596510, -901688, 5781500, 2611020, -659211, 5837120, 2406270, -901688, 5789260, 2386490, -1208260, 5770520, 2430130, -1210920, 5837120, 2406270, -901688, 5770520, 2430130, -1210920, 5822200, 2442160, -901688, 5850920, 2447090, -675288, 5882190, 2425080, 445162, 5863070, 2417e3, -678217, 5863070, 2417e3, -678217, 5837120, 2406270, -901688, 5822200, 2442160, -901688, 5863070, 2417e3, -678217, 5822200, 2442160, -901688, 5850920, 2447090, -675288, 5770520, 2430130, -1210920, 5819750, 2447980, -901688, 5822200, 2442160, -901688, 5864800, 2453790, 511749, 5882190, 2425080, 445162, 5850920, 2447090, -675288, 5864800, 2453790, 511749, 5850920, 2447090, -675288, 5846780, 2457230, -674300, 5846780, 2457230, -674300, 5850920, 2447090, -675288, 5822200, 2442160, -901688, 5846780, 2457230, -674300, 5822200, 2442160, -901688, 5819750, 2447980, -901688, 5818690, 2450510, -901688, 5819750, 2447980, -901688, 5770520, 2430130, -1210920, 5858260, 2467580, 520245, 5864800, 2453790, 511749, 5846780, 2457230, -674300, 5858260, 2467580, 520245, 5846780, 2457230, -674300, 5844980, 2461640, -673869, 5844980, 2461640, -673869, 5846780, 2457230, -674300, 5819750, 2447980, -901688, 5844980, 2461640, -673869, 5819750, 2447980, -901688, 5818690, 2450510, -901688, 5818690, 2450510, -901688, 5770520, 2430130, -1210920, 5746790, 2493630, -1194660, 5818690, 2450510, -901688, 5746790, 2493630, -1194660, 5796530, 2502460, -901688, 5826830, 2505460, -669584, 5858260, 2467580, 520245, 5844980, 2461640, -673869, 5844980, 2461640, -673869, 5818690, 2450510, -901688, 5796530, 2502460, -901688, 5844980, 2461640, -673869, 5796530, 2502460, -901688, 5826830, 2505460, -669584, 5844250, 2388910, -901688, 5817700, 2375200, -1088790, 5789260, 2386490, -1208260, 5844250, 2388910, -901688, 5789260, 2386490, -1208260, 5837120, 2406270, -901688, 5882190, 2425080, 445162, 5868900, 2402410, -679638, 5863070, 2417e3, -678217, 5868900, 2402410, -679638, 5844250, 2388910, -901688, 5837120, 2406270, -901688, 5868900, 2402410, -679638, 5837120, 2406270, -901688, 5863070, 2417e3, -678217, 5855820, 2360400, -901688, 5854180, 2359200, -915269, 5817700, 2375200, -1088790, 5855820, 2360400, -901688, 5817700, 2375200, -1088790, 5844250, 2388910, -901688, 5882190, 2425080, 445162, 5878430, 2378340, -681974, 5868900, 2402410, -679638, 5878430, 2378340, -681974, 5855820, 2360400, -901688, 5844250, 2388910, -901688, 5878430, 2378340, -681974, 5844250, 2388910, -901688, 5868900, 2402410, -679638, 5855820, 2360400, -901688, 5858690, 2353270, -901688, 5854180, 2359200, -915269, 5882190, 2425080, 445162, 5885940, 2359150, -683836, 5878430, 2378340, -681974, 5858690, 2353270, -901688, 5855820, 2360400, -901688, 5878430, 2378340, -681974, 5858690, 2353270, -901688, 5878430, 2378340, -681974, 5885940, 2359150, -683836, 5858690, 2353270, -901688, 5885940, 2359150, -683836, 5868080, 2340710, -873026, 5882190, 2425080, 445162, 5887870, 2354180, -684317, 5885940, 2359150, -683836, 5887870, 2354180, -684317, 5877390, 2342240, -804052, 5868080, 2340710, -873026, 5887870, 2354180, -684317, 5868080, 2340710, -873026, 5885940, 2359150, -683836, 5882190, 2425080, 445162, 5911820, 2347710, 466689, 5890740, 2346780, -685034, 5882190, 2425080, 445162, 5890740, 2346780, -685034, 5887870, 2354180, -684317, 5887870, 2354180, -684317, 5890740, 2346780, -685034, 5877390, 2342240, -804052, 5911820, 2347710, 466689, 5940550, 2271760, 477545, 5893440, 2339780, -685711, 5911820, 2347710, 466689, 5893440, 2339780, -685711, 5890740, 2346780, -685034, 5877390, 2342240, -804052, 5890740, 2346780, -685034, 5893440, 2339780, -685711, 5893440, 2339780, -685711, 5940550, 2271760, 477545, 5933630, 2232680, -696041, 5933630, 2232680, -696041, 5926800, 2227950, -765473, 5877390, 2342240, -804052, 5933630, 2232680, -696041, 5877390, 2342240, -804052, 5893440, 2339780, -685711, 5940550, 2271760, 477545, 5962430, 2204470, 518211, 5934960, 2229030, -696393, 5940550, 2271760, 477545, 5934960, 2229030, -696393, 5933630, 2232680, -696041, 5933630, 2232680, -696041, 5934960, 2229030, -696393, 5926800, 2227950, -765473, 5934960, 2229030, -696393, 5962430, 2204470, 518211, 5953050, 2178710, -701221, 5953050, 2178710, -701221, 5946360, 2175070, -765887, 5926800, 2227950, -765473, 5953050, 2178710, -701221, 5926800, 2227950, -765473, 5934960, 2229030, -696393, 5962430, 2204470, 518211, 5954810, 2173730, -701698, 5953050, 2178710, -701221, 5954810, 2173730, -701698, 5946200, 2168670, -784905, 5946360, 2175070, -765887, 5954810, 2173730, -701698, 5946360, 2175070, -765887, 5953050, 2178710, -701221, 6088980, 1783600, -648781, 6180310, 1495200, -497099, 6172870, 1467810, -647325, 6088980, 1783600, -648781, 6161530, 1560140, -529387, 6180310, 1495200, -497099, 6088980, 1783600, -648781, 6149610, 1599860, -548906, 6161530, 1560140, -529387, 6088980, 1783600, -648781, 6138290, 1664400, -479830, 6149610, 1599860, -548906, 6088980, 1783600, -648781, 6124770, 1727770, -425968, 6138290, 1664400, -479830, 6088980, 1783600, -648781, 6119280, 1755400, -390651, 6124770, 1727770, -425968, 6115610, 1800740, -192473, 6119280, 1755400, -390651, 6088980, 1783600, -648781, 6072640, 1807240, -730697, 6115610, 1800740, -192473, 6088980, 1783600, -648781, 6187760, 1398470, -658483, 6200320, 1389530, -551222, 6201780, 1371270, -579539, 6193300, 1429320, -528066, 6200320, 1389530, -551222, 6187760, 1398470, -658483, 6180400, 1429690, -660541, 6193300, 1429320, -528066, 6187760, 1398470, -658483, 6185760, 1457490, -539290, 6193300, 1429320, -528066, 6180400, 1429690, -660541, 6172870, 1467810, -647325, 6185760, 1457490, -539290, 6180400, 1429690, -660541, 6180310, 1495200, -497099, 6185760, 1457490, -539290, 6172870, 1467810, -647325, 6187760, 1398470, -658483, 6201780, 1371270, -579539, 6198050, 1366890, -627527, 6187760, 1398470, -658483, 6198050, 1366890, -627527, 6196150, 1353520, -673265, 6198050, 1366890, -627527, 6202910, 1339110, -639150, 6196150, 1353520, -673265, 5854180, 2359200, -915269, 5850960, 2340430, -981188, 5837850, 2343870, -1048330, 5817700, 2375200, -1088790, 5854180, 2359200, -915269, 5837850, 2343870, -1048330, 5962430, 2204470, 518211, 5990470, 2117550, 555657, 5956720, 2168350, -702214, 5962430, 2204470, 518211, 5956720, 2168350, -702214, 5954810, 2173730, -701698, 5954810, 2173730, -701698, 5956720, 2168350, -702214, 5946200, 2168670, -784905, 5956720, 2168350, -702214, 5990470, 2117550, 555657, 5977810, 2107540, -708028, 5977810, 2107540, -708028, 5968820, 2104e3, -789192, 5946200, 2168670, -784905, 5977810, 2107540, -708028, 5946200, 2168670, -784905, 5956720, 2168350, -702214, 5990470, 2117550, 555657, 5985740, 2084140, -710257, 5977810, 2107540, -708028, 5985740, 2084140, -710257, 5970080, 2075100, -853097, 5968820, 2104e3, -789192, 5985740, 2084140, -710257, 5968820, 2104e3, -789192, 5977810, 2107540, -708028, 5990470, 2117550, 555657, 5990220, 2070800, -711528, 5985740, 2084140, -710257, 5990220, 2070800, -711528, 5971910, 2058250, -880493, 5970080, 2075100, -853097, 5990220, 2070800, -711528, 5970080, 2075100, -853097, 5985740, 2084140, -710257, 5990470, 2117550, 555657, 6012860, 2062450, 520176, 5992450, 2064130, -712163, 5990470, 2117550, 555657, 5992450, 2064130, -712163, 5990220, 2070800, -711528, 5990220, 2070800, -711528, 5992450, 2064130, -712163, 5971910, 2058250, -880493, 6038960, 2015110, 387259, 6044580, 2010040, 320580, 6011430, 2006190, -717669, 6038960, 2015110, 387259, 6011430, 2006190, -717669, 6011180, 2006980, -717594, 5993530, 2001240, -865022, 6011180, 2006980, -717594, 6011430, 2006190, -717669, 6030870, 2022940, 464202, 6038960, 2015110, 387259, 6011180, 2006980, -717594, 6030870, 2022940, 464202, 6011180, 2006980, -717594, 6010830, 2008050, -717493, 6010830, 2008050, -717493, 6011180, 2006980, -717594, 5993530, 2001240, -865022, 5994160, 2058960, -712655, 6030870, 2022940, 464202, 6010830, 2008050, -717493, 6010830, 2008050, -717493, 5993530, 2001240, -865022, 5971910, 2058250, -880493, 6010830, 2008050, -717493, 5971910, 2058250, -880493, 5994160, 2058960, -712655, 6012860, 2062450, 520176, 6030870, 2022940, 464202, 5994160, 2058960, -712655, 6012860, 2062450, 520176, 5994160, 2058960, -712655, 5992450, 2064130, -712163, 5971910, 2058250, -880493, 5992450, 2064130, -712163, 5994160, 2058960, -712655, 6026270, 1959520, -722091, 6081630, 1920300, -82246.2, 6043540, 1903570, -727379, 6043540, 1903570, -727379, 6024010, 1896240, -889287, 6002920, 1966020, -880431, 6043540, 1903570, -727379, 6002920, 1966020, -880431, 6026270, 1959520, -722091, 6078110, 1932600, -46975.1, 6081630, 1920300, -82246.2, 6026270, 1959520, -722091, 6078110, 1932600, -46975.1, 6026270, 1959520, -722091, 6025380, 1962360, -721823, 6002920, 1966020, -880431, 6025380, 1962360, -721823, 6026270, 1959520, -722091, 6077430, 1935300, -6422.6, 6078110, 1932600, -46975.1, 6025380, 1962360, -721823, 6077430, 1935300, -6422.6, 6025380, 1962360, -721823, 6025090, 1963300, -721734, 6002920, 1966020, -880431, 6025090, 1963300, -721734, 6025380, 1962360, -721823, 6071830, 1952550, 31947.3, 6077430, 1935300, -6422.6, 6025090, 1963300, -721734, 6071830, 1952550, 31947.3, 6025090, 1963300, -721734, 6024030, 1966660, -721415, 6002920, 1966020, -880431, 6024030, 1966660, -721415, 6025090, 1963300, -721734, 6066660, 1959340, 192573, 6071830, 1952550, 31947.3, 6024030, 1966660, -721415, 6066660, 1959340, 192573, 6024030, 1966660, -721415, 6023400, 1968650, -721228, 6002920, 1966020, -880431, 6023400, 1968650, -721228, 6024030, 1966660, -721415, 6057580, 1979260, 261515, 6066660, 1959340, 192573, 6023400, 1968650, -721228, 6057580, 1979260, 261515, 6023400, 1968650, -721228, 6022420, 1971760, -720932, 6002920, 1966020, -880431, 6022420, 1971760, -720932, 6023400, 1968650, -721228, 6044580, 2010040, 320580, 6057580, 1979260, 261515, 6022420, 1971760, -720932, 6044580, 2010040, 320580, 6022420, 1971760, -720932, 6021070, 1976020, -720530, 6021070, 1976020, -720530, 6022420, 1971760, -720932, 6002920, 1966020, -880431, 6011430, 2006190, -717669, 6044580, 2010040, 320580, 6021070, 1976020, -720530, 6021070, 1976020, -720530, 6002920, 1966020, -880431, 5993530, 2001240, -865022, 6021070, 1976020, -720530, 5993530, 2001240, -865022, 6011430, 2006190, -717669, 6057050, 1858470, -731630, 6102420, 1850020, -135534, 6063180, 1837590, -733596, 6063180, 1837590, -733596, 6055860, 1835320, -796530, 6044060, 1858240, -831998, 6063180, 1837590, -733596, 6044060, 1858240, -831998, 6057050, 1858470, -731630, 6081630, 1920300, -82246.2, 6102420, 1850020, -135534, 6057050, 1858470, -731630, 6081630, 1920300, -82246.2, 6057050, 1858470, -731630, 6054180, 1868150, -730718, 6054180, 1868150, -730718, 6057050, 1858470, -731630, 6044060, 1858240, -831998, 6081630, 1920300, -82246.2, 6054180, 1868150, -730718, 6043540, 1903570, -727379, 6054180, 1868150, -730718, 6044060, 1858240, -831998, 6024010, 1896240, -889287, 6054180, 1868150, -730718, 6024010, 1896240, -889287, 6043540, 1903570, -727379, 6102420, 1850020, -135534, 6115610, 1800740, -192473, 6072640, 1807240, -730697, 6102420, 1850020, -135534, 6072640, 1807240, -730697, 6071260, 1809610, -736226, 6102420, 1850020, -135534, 6071260, 1809610, -736226, 6063180, 1837590, -733596, 6063180, 1837590, -733596, 6071260, 1809610, -736226, 6055860, 1835320, -796530, 6066660, 1959340, 192573, 6073020, 1946820, 94610.4, 6071830, 1952550, 31947.3, 6115610, 1800740, -192473, 6125070, 1753190, -299811, 6119280, 1755400, -390651, 5789260, 2386490, -1208260, 5817700, 2375200, -1088790, 5797720, 2360730, -1218210, 6161530, 1560140, -529387, 6165730, 1553870, -498187, 6180310, 1495200, -497099, 5877390, 2342240, -804052, 5926800, 2227950, -765473, 5925560, 2217210, -805011, 5535210, 3037020, -901688, 5531280, 3032670, -939411, 5518740, 3059450, -926336, 5535210, 3037020, -901688, 5518740, 3059450, -926336, 5521840, 3061280, -901688, 5570300, 3090830, -313823, 5558500, 3066740, -613384, 5551760, 3079190, -612104, 5558500, 3066740, -613384, 5535210, 3037020, -901688, 5521840, 3061280, -901688, 5558500, 3066740, -613384, 5521840, 3061280, -901688, 5551760, 3079190, -612104, 5546140, 3149080, -64950.9, 5560410, 3119320, -179114, 5545380, 3147590, -148301, 5525500, 3128730, -598435, 5542970, 3115660, -497081, 5531430, 3116310, -608284, 5525500, 3128730, -598435, 5531430, 3116310, -608284, 5525610, 3126840, -607197, 5525610, 3126840, -607197, 5531430, 3116310, -608284, 5526e3, 3116280, -655659, 6057580, 1979260, 261515, 6060830, 1947080, 393418, 6066660, 1959340, 192573, 6066660, 1959340, 192573, 6060830, 1947080, 393418, 6073020, 1946820, 94610.4, 6060830, 1947080, 393418, 6077430, 1935300, -6422.6, 6073020, 1946820, 94610.4, 6071830, 1952550, 31947.3, 6073020, 1946820, 94610.4, 6077430, 1935300, -6422.6, 6038960, 2015110, 387259, 6060830, 1947080, 393418, 6057580, 1979260, 261515, 6038960, 2015110, 387259, 6057580, 1979260, 261515, 6044580, 2010040, 320580, 6060830, 1947080, 393418, 6078110, 1932600, -46975.1, 6077430, 1935300, -6422.6, 6060830, 1947080, 393418, 6081630, 1920300, -82246.2, 6078110, 1932600, -46975.1, 6060830, 1947080, 393418, 6082280, 1874990, 411958, 6081630, 1920300, -82246.2, 6081630, 1920300, -82246.2, 6082280, 1874990, 411958, 6102420, 1850020, -135534, 6082280, 1874990, 411958, 6104850, 1812640, 353464, 6102420, 1850020, -135534, 6102420, 1850020, -135534, 6104850, 1812640, 353464, 6115610, 1800740, -192473, 6104850, 1812640, 353464, 6125890, 1758060, 250679, 6115610, 1800740, -192473, 6115610, 1800740, -192473, 6125890, 1758060, 250679, 6125070, 1753190, -299811, 6125890, 1758060, 250679, 6130100, 1750940, 191008, 6125070, 1753190, -299811, 6125070, 1753190, -299811, 6130100, 1750940, 191008, 6124770, 1727770, -425968, 6130100, 1750940, 191008, 6138290, 1664400, -479830, 6124770, 1727770, -425968, 6231010, 1307980, -378702, 6236900, 1305340, -277914, 6243350, 1267730, -305690, 6221660, 1378820, -264384, 6236900, 1305340, -277914, 6231010, 1307980, -378702, 6221660, 1378820, -264384, 6231010, 1307980, -378702, 6216770, 1311780, -556369, 6216770, 1311780, -556369, 6231010, 1307980, -378702, 6243970, 1224320, -439610, 6138290, 1664400, -479830, 6152980, 1665540, 217127, 6149610, 1599860, -548906, 6152980, 1665540, 217127, 6175390, 1588500, -147428, 6149610, 1599860, -548906, 6152980, 1665540, 217127, 6174830, 1578280, 246284, 6175390, 1588500, -147428, 6175390, 1588500, -147428, 6174830, 1578280, 246284, 6179780, 1577090, -61105.4, 6174830, 1578280, 246284, 6179830, 1572500, 132340, 6179780, 1577090, -61105.4, 6179780, 1577090, -61105.4, 6179830, 1572500, 132340, 6192870, 1526080, 4285.59, 6149610, 1599860, -548906, 6175390, 1588500, -147428, 6176800, 1574360, -220914, 6149610, 1599860, -548906, 6176800, 1574360, -220914, 6161530, 1560140, -529387, 6176800, 1574360, -220914, 6165730, 1553870, -498187, 6161530, 1560140, -529387, 6176800, 1574360, -220914, 6183170, 1540770, -273124, 6165730, 1553870, -498187, 6165730, 1553870, -498187, 6183170, 1540770, -273124, 6180310, 1495200, -497099, 6183170, 1540770, -273124, 6185760, 1457490, -539290, 6180310, 1495200, -497099, 6183170, 1540770, -273124, 6206370, 1445360, -268477, 6185760, 1457490, -539290, 6185760, 1457490, -539290, 6206370, 1445360, -268477, 6193300, 1429320, -528066, 6206370, 1445360, -268477, 6205490, 1389460, -490250, 6193300, 1429320, -528066, 6205490, 1389460, -490250, 6221660, 1378820, -264384, 6211300, 1356390, -508793, 6205490, 1389460, -490250, 6221550, 1387870, -215414, 6221660, 1378820, -264384, 6206370, 1445360, -268477, 6221550, 1387870, -215414, 6205490, 1389460, -490250, 6205890, 1465020, 145302, 6207930, 1441870, 250619, 6211440, 1434380, 202417, 6174830, 1578280, 246284, 6207930, 1441870, 250619, 6205890, 1465020, 145302, 6174830, 1578280, 246284, 6205890, 1465020, 145302, 6186140, 1545440, 154311, 6174830, 1578280, 246284, 6186140, 1545440, 154311, 6179830, 1572500, 132340, 6130100, 1750940, 191008, 6152980, 1665540, 217127, 6138290, 1664400, -479830, 6119280, 1755400, -390651, 6125070, 1753190, -299811, 6124770, 1727770, -425968, 6221660, 1378820, -264384, 6216770, 1311780, -556369, 6211300, 1356390, -508793, 1515310, -6129110, 901688, 1513140, -6194500, 137975, 1560060, -6182750, 142343, 1515310, -6129110, 901688, 1560060, -6182750, 142343, 1521980, -6127450, 901688, 1513140, -6194500, 137975, 1511380, -6196310, 46003.7, 1564440, -6183290, 9376.84, 1513140, -6194500, 137975, 1564440, -6183290, 9376.84, 1560060, -6182750, 142343, 1521980, -6127450, 901688, 1513490, -6109520, 1027940, 1515310, -6129110, 901688, 1511500, -6130050, 901688, 1486e3, -6201130, 135452, 1513140, -6194500, 137975, 1511500, -6130050, 901688, 1513140, -6194500, 137975, 1515310, -6129110, 901688, 1486e3, -6201130, 135452, 1480660, -6203830, 28410.4, 1511380, -6196310, 46003.7, 1486e3, -6201130, 135452, 1511380, -6196310, 46003.7, 1513140, -6194500, 137975, 1513490, -6109520, 1027940, 1511500, -6130050, 901688, 1515310, -6129110, 901688, 1511500, -6130050, 901688, 1439310, -6147400, 901688, 1477120, -6203270, 134628, 1511500, -6130050, 901688, 1477120, -6203270, 134628, 1486e3, -6201130, 135452, 1486e3, -6201130, 135452, 1477120, -6203270, 134628, 1480660, -6203830, 28410.4, 1513490, -6109520, 1027940, 1436110, -6140560, 951680, 1439310, -6147400, 901688, 1513490, -6109520, 1027940, 1439310, -6147400, 901688, 1511500, -6130050, 901688, 1464560, -6206270, 133461, 1477120, -6203270, 134628, 1439310, -6147400, 901688, 1464560, -6206270, 133461, 1439310, -6147400, 901688, 1434820, -6148450, 901688, 1464560, -6206270, 133461, 1434820, -6148450, 901688, 1417730, -6203910, 425357, 1480660, -6203830, 28410.4, 1477120, -6203270, 134628, 1464560, -6206270, 133461, 1439310, -6147400, 901688, 1436110, -6140560, 951680, 1434820, -6148450, 901688, 1409490, -6154300, 901688, 1395040, -6161510, 874691, 1417730, -6203910, 425357, 1409490, -6154300, 901688, 1417730, -6203910, 425357, 1434820, -6148450, 901688, 1436110, -6140560, 951680, 1409490, -6154300, 901688, 1434820, -6148450, 901688, 1417730, -6203910, 425357, 1395040, -6161510, 874691, 1396770, -6201780, 515599, 1395040, -6161510, 874691, 1392940, -6190410, 645247, 1396770, -6201780, 515599, 1396770, -6201780, 515599, 1392940, -6190410, 645247, 1370380, -6198400, 616358, 2241530, -5969980, -124125, 2225530, -5976950, -60814.1, 2238680, -5969850, -172065, 2238680, -5969850, -172065, 2225530, -5976950, -60814.1, 2186450, -5972690, -474833, 2225530, -5976950, -60814.1, 2179270, -5994240, -20473.5, 2186450, -5972690, -474833, 2186450, -5972690, -474833, 2179270, -5994240, -20473.5, 2174020, -5988570, -301221, 2179720, -5993820, 59865.6, 2174020, -5988570, -301221, 2179270, -5994240, -20473.5, 2177120, -5991680, 200699, 2155790, -5953130, 767785, 2173140, -5993140, 200317, 2177120, -5991680, 200699, 2173140, -5993140, 200317, 2174020, -5988570, -301221, 2177120, -5991680, 200699, 2174020, -5988570, -301221, 2179720, -5993820, 59865.6, 2232560, -5936330, 673240, 2155790, -5953130, 767785, 2177120, -5991680, 200699, 2232560, -5936330, 673240, 2177120, -5991680, 200699, 2193890, -5985500, 202313, 2193890, -5985500, 202313, 2177120, -5991680, 200699, 2179720, -5993820, 59865.6, 2174020, -5988570, -301221, 2104360, -6006670, -413577, 2135590, -5995460, -416194, 2186450, -5972690, -474833, 2174020, -5988570, -301221, 2135590, -5995460, -416194, 2273930, -5919250, 684998, 2232560, -5936330, 673240, 2390370, -5909100, 221351, 2273930, -5919250, 684998, 2390370, -5909100, 221351, 2393420, -5907850, 221648, 2401810, -5905650, 187116, 2393420, -5907850, 221648, 2390370, -5909100, 221351, 2390370, -5909100, 221351, 2232560, -5936330, 673240, 2200690, -5982980, 202968, 2200690, -5982980, 202968, 2199600, -5983830, 189586, 2401810, -5905650, 187116, 2200690, -5982980, 202968, 2401810, -5905650, 187116, 2390370, -5909100, 221351, 2232560, -5936330, 673240, 2193890, -5985500, 202313, 2200690, -5982980, 202968, 2193890, -5985500, 202313, 2179720, -5993820, 59865.6, 2199600, -5983830, 189586, 2193890, -5985500, 202313, 2199600, -5983830, 189586, 2200690, -5982980, 202968, 2201480, -5984940, 120417, 2199600, -5983830, 189586, 2179720, -5993820, 59865.6, 2238460, -5971920, 78081.1, 2201480, -5984940, 120417, 2179720, -5993820, 59865.6, 2262650, -5962300, 108985, 2201480, -5984940, 120417, 2238460, -5971920, 78081.1, 2262650, -5962300, 108985, 2238460, -5971920, 78081.1, 2259340, -5964190, 66636.5, 2477300, -5872850, 229856, 2471650, -5874460, 248800, 2473790, -5874350, 229511, 2477300, -5872850, 229856, 2473790, -5874350, 229511, 2484990, -5872800, 124953, 2477300, -5872850, 229856, 2484990, -5872800, 124953, 2504210, -5864320, 138579, 2473790, -5874350, 229511, 2471650, -5874460, 248800, 2469220, -5876290, 229063, 2469220, -5876290, 229063, 2464360, -5879720, 190160, 2484990, -5872800, 124953, 2469220, -5876290, 229063, 2484990, -5872800, 124953, 2473790, -5874350, 229511, 2471650, -5874460, 248800, 2443740, -5884350, 287427, 2456460, -5881680, 227811, 2471650, -5874460, 248800, 2456460, -5881680, 227811, 2469220, -5876290, 229063, 2469220, -5876290, 229063, 2456460, -5881680, 227811, 2464360, -5879720, 190160, 2456460, -5881680, 227811, 2443740, -5884350, 287427, 2435460, -5890490, 225756, 2435460, -5890490, 225756, 2435390, -5890540, 225211, 2464360, -5879720, 190160, 2435460, -5890490, 225756, 2464360, -5879720, 190160, 2456460, -5881680, 227811, 2443740, -5884350, 287427, 2406e3, -5898640, 311769, 2435220, -5890590, 225731, 2443740, -5884350, 287427, 2435220, -5890590, 225731, 2435460, -5890490, 225756, 2435460, -5890490, 225756, 2435220, -5890590, 225731, 2435390, -5890540, 225211, 2435220, -5890590, 225731, 2406e3, -5898640, 311769, 2403100, -5903890, 222592, 2403100, -5903890, 222592, 2401810, -5905650, 187116, 2435390, -5890540, 225211, 2403100, -5903890, 222592, 2435390, -5890540, 225211, 2435220, -5890590, 225731, 2400160, -5888180, 497517, 2401910, -5904370, 222477, 2403100, -5903890, 222592, 2400160, -5888180, 497517, 2403100, -5903890, 222592, 2406e3, -5898640, 311769, 2403100, -5903890, 222592, 2401910, -5904370, 222477, 2401810, -5905650, 187116, 2400160, -5888180, 497517, 2348390, -5890790, 679112, 2398480, -5905780, 222142, 2400160, -5888180, 497517, 2398480, -5905780, 222142, 2401910, -5904370, 222477, 2401910, -5904370, 222477, 2398480, -5905780, 222142, 2401810, -5905650, 187116, 2406360, -5865870, 691651, 2348390, -5890790, 679112, 2400160, -5888180, 497517, 2456930, -5874410, 366734, 2452840, -5874520, 391447, 2422860, -5884660, 424236, 2456930, -5874410, 366734, 2422860, -5884660, 424236, 2406e3, -5898640, 311769, 2422860, -5884660, 424236, 2400160, -5888180, 497517, 2406e3, -5898640, 311769, 2443310, -5852800, 672757, 2406360, -5865870, 691651, 2427210, -5866030, 613503, 2427210, -5866030, 613503, 2406360, -5865870, 691651, 2405660, -5878670, 576540, 2406360, -5865870, 691651, 2400160, -5888180, 497517, 2405660, -5878670, 576540, 2155790, -5953130, 767785, 2094750, -5973050, 781769, 2145250, -6003270, 197637, 2155790, -5953130, 767785, 2145250, -6003270, 197637, 2173140, -5993140, 200317, 2174020, -5988570, -301221, 2173140, -5993140, 200317, 2145250, -6003270, 197637, 2145250, -6003270, 197637, 2094750, -5973050, 781769, 2101440, -6018880, 193437, 2101440, -6018880, 193437, 2094520, -6019210, -249487, 2174020, -5988570, -301221, 2101440, -6018880, 193437, 2174020, -5988570, -301221, 2145250, -6003270, 197637, 2094750, -5973050, 781769, 2065570, -6031390, 190007, 2101440, -6018880, 193437, 2065570, -6031390, 190007, 2031240, -6040460, -258983, 2094520, -6019210, -249487, 2065570, -6031390, 190007, 2094520, -6019210, -249487, 2101440, -6018880, 193437, 2094750, -5973050, 781769, 2042450, -6039330, 187799, 2065570, -6031390, 190007, 2042450, -6039330, 187799, 1993360, -6053860, -239867, 2031240, -6040460, -258983, 2042450, -6039330, 187799, 2031240, -6040460, -258983, 2065570, -6031390, 190007, 2094750, -5973050, 781769, 1960580, -6019800, 771213, 1985790, -6058360, 182402, 2094750, -5973050, 781769, 1985790, -6058360, 182402, 2042450, -6039330, 187799, 2042450, -6039330, 187799, 1985790, -6058360, 182402, 1993360, -6053860, -239867, 1907810, -6030440, 818630, 1903200, -6028730, 841515, 1929130, -6076800, 177022, 1907810, -6030440, 818630, 1929130, -6076800, 177022, 1930520, -6076360, 177154, 1934690, -6071630, -269083, 1930520, -6076360, 177154, 1929130, -6076800, 177022, 1934070, -6023310, 809488, 1907810, -6030440, 818630, 1930520, -6076360, 177154, 1934070, -6023310, 809488, 1930520, -6076360, 177154, 1941260, -6072900, 178172, 1941260, -6072900, 178172, 1930520, -6076360, 177154, 1934690, -6071630, -269083, 1976020, -6061590, 181473, 1934070, -6023310, 809488, 1941260, -6072900, 178172, 1941260, -6072900, 178172, 1934690, -6071630, -269083, 1993360, -6053860, -239867, 1941260, -6072900, 178172, 1993360, -6053860, -239867, 1976020, -6061590, 181473, 1960580, -6019800, 771213, 1934070, -6023310, 809488, 1976020, -6061590, 181473, 1960580, -6019800, 771213, 1976020, -6061590, 181473, 1985790, -6058360, 182402, 1993360, -6053860, -239867, 1985790, -6058360, 182402, 1976020, -6061590, 181473, 1815860, -6046880, 901688, 1810350, -6048530, 901688, 1846230, -6102720, 169178, 1815860, -6046880, 901688, 1846230, -6102720, 169178, 1848260, -6102100, 169370, 1855790, -6096810, -255243, 1848260, -6102100, 169370, 1846230, -6102720, 169178, 1809120, -6032020, 1007760, 1785970, -5996570, 1233640, 1810350, -6048530, 901688, 1809120, -6032020, 1007760, 1810350, -6048530, 901688, 1815860, -6046880, 901688, 1865830, -6031650, 901688, 1815860, -6046880, 901688, 1848260, -6102100, 169370, 1865830, -6031650, 901688, 1848260, -6102100, 169370, 1866760, -6096420, 171118, 1866760, -6096420, 171118, 1848260, -6102100, 169370, 1855790, -6096810, -255243, 1863750, -6016600, 1000450, 1809120, -6032020, 1007760, 1815860, -6046880, 901688, 1863750, -6016600, 1000450, 1815860, -6046880, 901688, 1865830, -6031650, 901688, 1865830, -6031650, 901688, 1866760, -6096420, 171118, 1918520, -6080190, 176016, 1865830, -6031650, 901688, 1918520, -6080190, 176016, 1872e3, -6029740, 901688, 1866760, -6096420, 171118, 1855790, -6096810, -255243, 1934690, -6071630, -269083, 1866760, -6096420, 171118, 1934690, -6071630, -269083, 1918520, -6080190, 176016, 1872e3, -6029740, 901688, 1863750, -6016600, 1000450, 1865830, -6031650, 901688, 1883080, -6026280, 901688, 1872e3, -6029740, 901688, 1918520, -6080190, 176016, 1883080, -6026280, 901688, 1918520, -6080190, 176016, 1922750, -6078840, 176417, 1934690, -6071630, -269083, 1922750, -6078840, 176417, 1918520, -6080190, 176016, 1879540, -6019880, 950209, 1863750, -6016600, 1000450, 1872e3, -6029740, 901688, 1879540, -6019880, 950209, 1872e3, -6029740, 901688, 1883080, -6026280, 901688, 1922750, -6078840, 176417, 1929130, -6076800, 177022, 1903200, -6028730, 841515, 1922750, -6078840, 176417, 1903200, -6028730, 841515, 1890170, -6024060, 901688, 1922750, -6078840, 176417, 1890170, -6024060, 901688, 1883080, -6026280, 901688, 1934690, -6071630, -269083, 1929130, -6076800, 177022, 1922750, -6078840, 176417, 1890170, -6024060, 901688, 1879540, -6019880, 950209, 1883080, -6026280, 901688, 1903660, -6019820, 901688, 1890170, -6024060, 901688, 1903200, -6028730, 841515, 1903790, -6016040, 926144, 1879540, -6019880, 950209, 1890170, -6024060, 901688, 1903790, -6016040, 926144, 1890170, -6024060, 901688, 1903660, -6019820, 901688, 1903660, -6019820, 901688, 1903200, -6028730, 841515, 1914010, -6019460, 882069, 1903660, -6019820, 901688, 1914010, -6019460, 882069, 1909480, -6017970, 901688, 1909480, -6017970, 901688, 1903790, -6016040, 926144, 1903660, -6019820, 901688, 1721390, -6074450, 901688, 1714890, -6076290, 901688, 1741060, -6133820, 159275, 1721390, -6074450, 901688, 1741060, -6133820, 159275, 1742810, -6133320, 159439, 1744690, -6133870, -110882, 1742810, -6133320, 159439, 1741060, -6133820, 159275, 1703430, -6018660, 1242700, 1696280, -6025330, 1220080, 1714890, -6076290, 901688, 1703430, -6018660, 1242700, 1714890, -6076290, 901688, 1721390, -6074450, 901688, 1783550, -6056490, 901688, 1721390, -6074450, 901688, 1742810, -6133320, 159439, 1783550, -6056490, 901688, 1742810, -6133320, 159439, 1759620, -6128480, 161018, 1759620, -6128480, 161018, 1742810, -6133320, 159439, 1744690, -6133870, -110882, 1785970, -5996570, 1233640, 1703430, -6018660, 1242700, 1721390, -6074450, 901688, 1785970, -5996570, 1233640, 1721390, -6074450, 901688, 1783550, -6056490, 901688, 1783550, -6056490, 901688, 1759620, -6128480, 161018, 1799610, -6116760, 164782, 1783550, -6056490, 901688, 1799610, -6116760, 164782, 1795880, -6052850, 901688, 1759620, -6128480, 161018, 1744690, -6133870, -110882, 1794030, -6119030, -139367, 1759620, -6128480, 161018, 1794030, -6119030, -139367, 1799610, -6116760, 164782, 1785970, -5996570, 1233640, 1783550, -6056490, 901688, 1795880, -6052850, 901688, 1795880, -6052850, 901688, 1799610, -6116760, 164782, 1846230, -6102720, 169178, 1795880, -6052850, 901688, 1846230, -6102720, 169178, 1810350, -6048530, 901688, 1799610, -6116760, 164782, 1794030, -6119030, -139367, 1855790, -6096810, -255243, 1799610, -6116760, 164782, 1855790, -6096810, -255243, 1846230, -6102720, 169178, 1810350, -6048530, 901688, 1785970, -5996570, 1233640, 1795880, -6052850, 901688, 1638470, -6097340, 901688, 1641580, -6161430, 149953, 1701910, -6144900, 155600, 1638470, -6097340, 901688, 1701910, -6144900, 155600, 1656360, -6092500, 901688, 1641580, -6161430, 149953, 1639320, -6163860, -6325.46, 1710670, -6144160, -58694.2, 1641580, -6161430, 149953, 1710670, -6144160, -58694.2, 1701910, -6144900, 155600, 1656360, -6092500, 901688, 1630020, -6044010, 1218020, 1638470, -6097340, 901688, 1706550, -6078630, 901688, 1656360, -6092500, 901688, 1701910, -6144900, 155600, 1706550, -6078630, 901688, 1701910, -6144900, 155600, 1713190, -6141740, 156658, 1713190, -6141740, 156658, 1701910, -6144900, 155600, 1710670, -6144160, -58694.2, 1696280, -6025330, 1220080, 1630020, -6044010, 1218020, 1656360, -6092500, 901688, 1696280, -6025330, 1220080, 1656360, -6092500, 901688, 1706550, -6078630, 901688, 1706550, -6078630, 901688, 1713190, -6141740, 156658, 1741060, -6133820, 159275, 1706550, -6078630, 901688, 1741060, -6133820, 159275, 1714890, -6076290, 901688, 1713190, -6141740, 156658, 1710670, -6144160, -58694.2, 1744690, -6133870, -110882, 1713190, -6141740, 156658, 1744690, -6133870, -110882, 1741060, -6133820, 159275, 1714890, -6076290, 901688, 1696280, -6025330, 1220080, 1706550, -6078630, 901688, 1560350, -6117800, 901688, 1565820, -6181290, 142879, 1605190, -6171090, 146552, 1560350, -6117800, 901688, 1605190, -6171090, 146552, 1566400, -6116250, 901688, 1565820, -6181290, 142879, 1564440, -6183290, 9376.84, 1610610, -6171410, -16810.8, 1565820, -6181290, 142879, 1610610, -6171410, -16810.8, 1605190, -6171090, 146552, 1566400, -6116250, 901688, 1556890, -6096620, 1039550, 1560350, -6117800, 901688, 1568220, -6115780, 901688, 1566400, -6116250, 901688, 1605190, -6171090, 146552, 1568220, -6115780, 901688, 1605190, -6171090, 146552, 1605520, -6171010, 146582, 1610610, -6171410, -16810.8, 1605520, -6171010, 146582, 1605190, -6171090, 146552, 1556430, -6090440, 1075620, 1556890, -6096620, 1039550, 1566400, -6116250, 901688, 1556430, -6090440, 1075620, 1566400, -6116250, 901688, 1568220, -6115780, 901688, 1585480, -6111330, 901688, 1568230, -6115780, 901688, 1605520, -6171010, 146582, 1585480, -6111330, 901688, 1605520, -6171010, 146582, 1608600, -6170200, 146871, 1610610, -6171410, -16810.8, 1608600, -6170200, 146871, 1605520, -6171010, 146582, 1571860, -6069380, 1167610, 1556430, -6090440, 1075620, 1568230, -6115780, 901688, 1571860, -6069380, 1167610, 1568230, -6115780, 901688, 1585480, -6111330, 901688, 1631190, -6099290, 901688, 1585480, -6111330, 901688, 1608600, -6170200, 146871, 1631190, -6099290, 901688, 1608600, -6170200, 146871, 1616830, -6168030, 147639, 1616830, -6168030, 147639, 1608600, -6170200, 146871, 1610610, -6171410, -16810.8, 1630020, -6044010, 1218020, 1571860, -6069380, 1167610, 1585480, -6111330, 901688, 1630020, -6044010, 1218020, 1585480, -6111330, 901688, 1631190, -6099290, 901688, 1631190, -6099290, 901688, 1616830, -6168030, 147639, 1641580, -6161430, 149953, 1631190, -6099290, 901688, 1641580, -6161430, 149953, 1638470, -6097340, 901688, 1616830, -6168030, 147639, 1610610, -6171410, -16810.8, 1639320, -6163860, -6325.46, 1616830, -6168030, 147639, 1639320, -6163860, -6325.46, 1641580, -6161430, 149953, 1630020, -6044010, 1218020, 1631190, -6099290, 901688, 1638470, -6097340, 901688, 1386e3, -6224440, 126179, 1377040, -6216790, 367460, 1363940, -6229350, 124138, 1363940, -6229350, 124138, 1362010, -6230340, 91319.4, 1388600, -6224990, 43752.5, 1363940, -6229350, 124138, 1388600, -6224990, 43752.5, 1386e3, -6224440, 126179, 1417730, -6203910, 425357, 1377040, -6216790, 367460, 1386e3, -6224440, 126179, 1417730, -6203910, 425357, 1386e3, -6224440, 126179, 1395400, -6222320, 127050, 1395400, -6222320, 127050, 1386e3, -6224440, 126179, 1388600, -6224990, 43752.5, 1464560, -6206270, 133461, 1417730, -6203910, 425357, 1395400, -6222320, 127050, 1395400, -6222320, 127050, 1388600, -6224990, 43752.5, 1480660, -6203830, 28410.4, 1395400, -6222320, 127050, 1480660, -6203830, 28410.4, 1464560, -6206270, 133461, 1258150, -6249740, 195288, 1232460, -6256050, 152680, 1293240, -6244540, 117609, 1258150, -6249740, 195288, 1293240, -6244540, 117609, 1317820, -6239350, 119878, 1341730, -6234770, 89554, 1317820, -6239350, 119878, 1293240, -6244540, 117609, 1278150, -6241950, 290662, 1258150, -6249740, 195288, 1317820, -6239350, 119878, 1278150, -6241950, 290662, 1317820, -6239350, 119878, 1331840, -6236350, 121171, 1341730, -6234770, 89554, 1331840, -6236350, 121171, 1317820, -6239350, 119878, 1332080, -6230310, 298068, 1278150, -6241950, 290662, 1331840, -6236350, 121171, 1332080, -6230310, 298068, 1331840, -6236350, 121171, 1340330, -6234510, 121956, 1341730, -6234770, 89554, 1340330, -6234510, 121956, 1331840, -6236350, 121171, 1377040, -6216790, 367460, 1332080, -6230310, 298068, 1340330, -6234510, 121956, 1377040, -6216790, 367460, 1340330, -6234510, 121956, 1346060, -6233270, 122486, 1346060, -6233270, 122486, 1340330, -6234510, 121956, 1341730, -6234770, 89554, 1377040, -6216790, 367460, 1346060, -6233270, 122486, 1363940, -6229350, 124138, 1346060, -6233270, 122486, 1341730, -6234770, 89554, 1362010, -6230340, 91319.4, 1346060, -6233270, 122486, 1362010, -6230340, 91319.4, 1363940, -6229350, 124138, 1998890, -5916200, 1293190, 1950410, -5916220, 1364680, 1933600, -5941810, 1275030, 1998890, -5916200, 1293190, 1987420, -5905430, 1358060, 1950410, -5916220, 1364680, 2016430, -5902100, 1329630, 1987420, -5905430, 1358060, 1998890, -5916200, 1293190, 1843970, -5995890, 1149260, 1809120, -6032020, 1007760, 1835200, -6013040, 1071560, 1864840, -5960860, 1288390, 1809120, -6032020, 1007760, 1843970, -5995890, 1149260, 1872090, -5979220, 1189670, 1864840, -5960860, 1288390, 1843970, -5995890, 1149260, 1903790, -5943210, 1312590, 1864840, -5960860, 1288390, 1872090, -5979220, 1189670, 1910600, -5960690, 1220810, 1903790, -5943210, 1312590, 1872090, -5979220, 1189670, 1950410, -5916220, 1364680, 1903790, -5943210, 1312590, 1910600, -5960690, 1220810, 1950410, -5916220, 1364680, 1910600, -5960690, 1220810, 1933600, -5941810, 1275030, 1395040, -6161510, 874691, 1390210, -6158690, 901688, 1383760, -6160140, 901688, 1380560, -6152740, 955152, 1368050, -6158010, 939163, 1383760, -6160140, 901688, 1380560, -6152740, 955152, 1383760, -6160140, 901688, 1390210, -6158690, 901688, 1409490, -6154300, 901688, 1390210, -6158690, 901688, 1395040, -6161510, 874691, 1436110, -6140560, 951680, 1380560, -6152740, 955152, 1390210, -6158690, 901688, 1436110, -6140560, 951680, 1390210, -6158690, 901688, 1409490, -6154300, 901688, 1373660, -6184260, 738219, 1340780, -6177020, 849991, 1328420, -6186840, 796691, 1375740, -6170420, 842124, 1340780, -6177020, 849991, 1373660, -6184260, 738219, 1392940, -6190410, 645247, 1375740, -6170420, 842124, 1373660, -6184260, 738219, 1395040, -6161510, 874691, 1375740, -6170420, 842124, 1392940, -6190410, 645247, 1278150, -6241950, 290662, 1252930, -6248800, 250648, 1258150, -6249740, 195288, 1864840, -5960860, 1288390, 1785970, -5996570, 1233640, 1809120, -6032020, 1007760, 1258150, -6249740, 195288, 1217470, -6258050, 186995, 1232460, -6256050, 152680, 1560350, -6117800, 901688, 1521980, -6127450, 901688, 1560060, -6182750, 142343, 1560350, -6117800, 901688, 1560060, -6182750, 142343, 1565820, -6181290, 142879, 1565820, -6181290, 142879, 1560060, -6182750, 142343, 1564440, -6183290, 9376.84, 1556890, -6096620, 1039550, 1513490, -6109520, 1027940, 1521980, -6127450, 901688, 1556890, -6096620, 1039550, 1521980, -6127450, 901688, 1560350, -6117800, 901688, 2348390, -5890790, 679112, 2273930, -5919250, 684998, 2393420, -5907850, 221648, 2348390, -5890790, 679112, 2393420, -5907850, 221648, 2398480, -5905780, 222142, 2401810, -5905650, 187116, 2398480, -5905780, 222142, 2393420, -5907850, 221648, 1417730, -6203910, 425357, 1396770, -6201780, 515599, 1377390, -6211130, 451609, 557522, -6260980, 1078020, 550009, -6256070, 1109690, 536096, -6267310, 1051970, 556393, -6237960, 1203830, 536096, -6267310, 1051970, 550009, -6256070, 1109690, 578970, -6256900, 1090230, 556393, -6237960, 1203830, 550009, -6256070, 1109690, 581162, -6232930, 1217980, 556393, -6237960, 1203830, 578970, -6256900, 1090230, 586656, -6261690, 1058350, 581162, -6232930, 1217980, 578970, -6256900, 1090230, 615834, -6231380, 1208920, 581162, -6232930, 1217980, 586656, -6261690, 1058350, 624496, -6260400, 1044360, 615834, -6231380, 1208920, 586656, -6261690, 1058350, 634288, -6233850, 1186580, 615834, -6231380, 1208920, 624496, -6260400, 1044360, 667852, -6259490, 1022920, 634288, -6233850, 1186580, 624496, -6260400, 1044360, 666533, -6231870, 1179330, 634288, -6233850, 1186580, 667852, -6259490, 1022920, 698607, -6260380, 996776, 666533, -6231870, 1179330, 667852, -6259490, 1022920, 698607, -6260380, 996776, 692090, -6224650, 1202360, 666533, -6231870, 1179330, 720880, -6232580, 1143290, 692090, -6224650, 1202360, 698607, -6260380, 996776, 774073, -6243860, 1043210, 763875, -6235390, 1099480, 773097, -6265450, 906418, 775578, -6250910, 999281, 774073, -6243860, 1043210, 773097, -6265450, 906418, 778456, -6261580, 928140, 775578, -6250910, 999281, 773097, -6265450, 906418, 782530, -6254660, 970103, 775578, -6250910, 999281, 778456, -6261580, 928140, 787154, -6257140, 950319, 782530, -6254660, 970103, 778456, -6261580, 928140, 773097, -6265450, 906418, 763875, -6235390, 1099480, 720880, -6232580, 1143290, 773097, -6265450, 906418, 720880, -6232580, 1143290, 713326, -6268950, 930701, 720880, -6232580, 1143290, 702997, -6263710, 972635, 713326, -6268950, 930701, 720880, -6232580, 1143290, 698607, -6260380, 996776, 702997, -6263710, 972635, 474319, -6248870, 1182320, 467993, -6242320, 1218600, 443306, -6248210, 1197640, 484186, -6238330, 1232570, 467993, -6242320, 1218600, 474319, -6248870, 1182320, 510667, -6264240, 1082220, 484186, -6238330, 1232570, 474319, -6248870, 1182320, 556393, -6237960, 1203830, 484186, -6238330, 1232570, 510667, -6264240, 1082220, 556393, -6237960, 1203830, 510667, -6264240, 1082220, 536096, -6267310, 1051970, 475389, -6265140, 1092990, 460347, -6256340, 1148070, 460166, -6262380, 1114940, 474319, -6248870, 1182320, 460347, -6256340, 1148070, 475389, -6265140, 1092990, 510667, -6264240, 1082220, 474319, -6248870, 1182320, 475389, -6265140, 1092990, 713326, -6268950, 930701, 702997, -6263710, 972635, 690721, -6268010, 953658, 815984, -6236880, 1052960, 763875, -6235390, 1099480, 774073, -6243860, 1043210, 798591, -6250600, 983046, 775578, -6250910, 999281, 782530, -6254660, 970103, 1631800, -5758240, 2197280, 1551570, -5763950, 2239720, 1622300, -5770210, 2172940, 1622300, -5770210, 2172940, 1551570, -5763950, 2239720, 1556470, -5793290, 2159730, 1551570, -5763950, 2239720, 1488770, -5812980, 2154560, 1556470, -5793290, 2159730, 1551570, -5763950, 2239720, 1476890, -5781870, 2243990, 1488770, -5812980, 2154560, 1488770, -5812980, 2154560, 1476890, -5781870, 2243990, 1419400, -5776430, 2294180, 1488770, -5812980, 2154560, 1419400, -5776430, 2294180, 1418050, -5827570, 2162800, 1419400, -5776430, 2294180, 1386320, -5785030, 2292760, 1418050, -5827570, 2162800, 1418050, -5827570, 2162800, 1386320, -5785030, 2292760, 1336560, -5828750, 2210650, 1386320, -5785030, 2292760, 1319320, -5781960, 2339250, 1336560, -5828750, 2210650, 1336560, -5828750, 2210650, 1319320, -5781960, 2339250, 1292870, -5828260, 2237570, 1319320, -5781960, 2339250, 1228380, -5775740, 2402840, 1292870, -5828260, 2237570, 1292870, -5828260, 2237570, 1228380, -5775740, 2402840, 1226690, -5839880, 2244490, 1228380, -5775740, 2402840, 1190660, -5773510, 2426900, 1226690, -5839880, 2244490, 1226690, -5839880, 2244490, 1190660, -5773510, 2426900, 1189170, -5836010, 2274350, 1190660, -5773510, 2426900, 1160530, -5818400, 2333090, 1189170, -5836010, 2274350, 1190660, -5773510, 2426900, 1097260, -5796850, 2415340, 1160530, -5818400, 2333090, 1160530, -5818400, 2333090, 1097260, -5796850, 2415340, 1103380, -5831120, 2329090, 1097260, -5796850, 2415340, 1054180, -5789010, 2452770, 1103380, -5831120, 2329090, 1103380, -5831120, 2329090, 1054180, -5789010, 2452770, 1006470, -5837490, 2356670, 1054180, -5789010, 2452770, 974465, -5834120, 2378220, 1006470, -5837490, 2356670, 840550, -5829410, 2439670, 789177, -5812590, 2495930, 765223, -5820610, 2484740, 877170, -5803100, 2488670, 789177, -5812590, 2495930, 840550, -5829410, 2439670, 974465, -5834120, 2378220, 877170, -5803100, 2488670, 840550, -5829410, 2439670, 974465, -5834120, 2378220, 956744, -5791010, 2487520, 877170, -5803100, 2488670, 1054180, -5789010, 2452770, 956744, -5791010, 2487520, 974465, -5834120, 2378220, 840550, -5829410, 2439670, 803822, -5845280, 2414100, 840587, -5848380, 2394120, 974465, -5834120, 2378220, 840550, -5829410, 2439670, 840587, -5848380, 2394120, 669534, -5871420, 2391700, 637611, -5848580, 2455100, 627123, -5876680, 2390280, 688732, -5834330, 2474990, 637611, -5848580, 2455100, 669534, -5871420, 2391700, 740358, -5840780, 2444900, 688732, -5834330, 2474990, 669534, -5871420, 2391700, 765223, -5820610, 2484740, 688732, -5834330, 2474990, 740358, -5840780, 2444900, 840550, -5829410, 2439670, 765223, -5820610, 2484740, 740358, -5840780, 2444900, 613463, -5888320, 2365230, 571681, -5880220, 2395440, 563019, -5897880, 2353990, 613463, -5888320, 2365230, 592386, -5862880, 2432390, 571681, -5880220, 2395440, 637611, -5848580, 2455100, 592386, -5862880, 2432390, 613463, -5888320, 2365230, 637611, -5848580, 2455100, 613463, -5888320, 2365230, 627123, -5876680, 2390280, 571681, -5880220, 2395440, 518614, -5898030, 2363730, 563019, -5897880, 2353990, 1481480, -5769230, 2273110, 1419400, -5776430, 2294180, 1476890, -5781870, 2243990, 1418050, -5827570, 2162800, 1336560, -5828750, 2210650, 1272780, -5864770, 2152660, 4334480, 2920740, 3643180, 4328260, 2908550, 3660170, 4338080, 2911380, 3646370, 4328260, 2908550, 3660170, 4351770, 2899570, 3639490, 4338080, 2911380, 3646370, 4328260, 2908550, 3660170, 4333280, 2886360, 3671710, 4351770, 2899570, 3639490, 4351770, 2899570, 3639490, 4333280, 2886360, 3671710, 4358230, 2887460, 3641380, 4333280, 2886360, 3671710, 4362780, 2885010, 3637890, 4358230, 2887460, 3641380, 4333280, 2886360, 3671710, 4358410, 2879950, 3647080, 4362780, 2885010, 3637890, 4333280, 2886360, 3671710, 4358760, 2872310, 3652640, 4358410, 2879950, 3647080, 4333280, 2886360, 3671710, 4367850, 2857260, 3653580, 4358760, 2872310, 3652640, 4333280, 2886360, 3671710, 4368490, 2831190, 3672930, 4367850, 2857260, 3653580, 4385900, 2839500, 3645840, 4388600, 2828530, 3651080, 4392380, 2823300, 3650580, 4368490, 2831190, 3672930, 4388600, 2828530, 3651080, 4385900, 2839500, 3645840, 4367850, 2857260, 3653580, 4368490, 2831190, 3672930, 4385900, 2839500, 3645840, 4271090, 2943840, 3698650, 4333280, 2886360, 3671710, 4328260, 2908550, 3660170, 4337120, 2925970, 3635880, 4362780, 2885010, 3637890, 4410340, 2861900, 3598860, 4337120, 2925970, 3635880, 4351770, 2899570, 3639490, 4362780, 2885010, 3637890, 4337120, 2925970, 3635880, 4338080, 2911380, 3646370, 4351770, 2899570, 3639490, 4337120, 2925970, 3635880, 4334480, 2920740, 3643180, 4338080, 2911380, 3646370, 4410340, 2861900, 3598860, 4385900, 2839500, 3645840, 4392380, 2823300, 3650580, 4367850, 2857260, 3653580, 4385900, 2839500, 3645840, 4410340, 2861900, 3598860, 4362780, 2885010, 3637890, 4367850, 2857260, 3653580, 4410340, 2861900, 3598860, 4362780, 2885010, 3637890, 4358760, 2872310, 3652640, 4367850, 2857260, 3653580, 4362780, 2885010, 3637890, 4358410, 2879950, 3647080, 4358760, 2872310, 3652640, 4392380, 2823300, 3650580, 4417630, 2788040, 3647240, 4427720, 2819720, 3610710, 4410340, 2861900, 3598860, 4392380, 2823300, 3650580, 4427720, 2819720, 3610710, 4351770, 2899570, 3639490, 4358230, 2887460, 3641380, 4362780, 2885010, 3637890, 3927950, 1341250, 4826580, 3898940, 1296470, 4861970, 3934970, 1320820, 4826500, 3934970, 1320820, 4826500, 3898940, 1296470, 4861970, 3952950, 1314970, 4813470, 3952950, 1314970, 4813470, 3898940, 1296470, 4861970, 3961670, 1300270, 4810310, 3898940, 1296470, 4861970, 3989470, 1289600, 4790300, 3961670, 1300270, 4810310, 3898940, 1296470, 4861970, 3910530, 1244200, 4866290, 3989470, 1289600, 4790300, 3997500, 1290120, 4783510, 3887070, 1229660, 4888580, 4013390, 1268880, 4775940, 3997500, 1290120, 4783510, 3910530, 1244200, 4866290, 3887070, 1229660, 4888580, 3989470, 1289600, 4790300, 3910530, 1244200, 4866290, 3997500, 1290120, 4783510, 4042350, 1232810, 4761040, 3892320, 1180260, 4896510, 3916570, 1176480, 4878180, 3887070, 1229660, 4888580, 3892320, 1180260, 4896510, 4042350, 1232810, 4761040, 3887070, 1229660, 4888580, 4042350, 1232810, 4761040, 4021720, 1237400, 4777180, 3887070, 1229660, 4888580, 4021720, 1237400, 4777180, 4013390, 1268880, 4775940, 4097870, 1047500, 4757970, 3887450, 991406, 4941750, 3907730, 978379, 4928420, 3892480, 1011790, 4933710, 3887450, 991406, 4941750, 4097870, 1047500, 4757970, 4054330, 1078880, 4787960, 3892480, 1011790, 4933710, 4097870, 1047500, 4757970, 3875760, 1039740, 4941010, 3892480, 1011790, 4933710, 4054330, 1078880, 4787960, 4041580, 1102120, 4793410, 3875760, 1039740, 4941010, 4054330, 1078880, 4787960, 3893830, 1079200, 4918440, 3875760, 1039740, 4941010, 4041580, 1102120, 4793410, 4050850, 1163830, 4771090, 3893830, 1079200, 4918440, 4041580, 1102120, 4793410, 3910540, 1134360, 4892870, 3893830, 1079200, 4918440, 4050850, 1163830, 4771090, 4037010, 1195760, 4774900, 3910540, 1134360, 4892870, 4050850, 1163830, 4771090, 3916570, 1176480, 4878180, 3910540, 1134360, 4892870, 4037010, 1195760, 4774900, 4042350, 1232810, 4761040, 3916570, 1176480, 4878180, 4037010, 1195760, 4774900, 4059300, 939499, 4812900, 3962770, 912460, 4897230, 4047690, 898907, 4830280, 3935940, 933181, 4914810, 3962770, 912460, 4897230, 4059300, 939499, 4812900, 4084960, 987947, 4781590, 3935940, 933181, 4914810, 4059300, 939499, 4812900, 3907730, 978379, 4928420, 3935940, 933181, 4914810, 4084960, 987947, 4781590, 4097870, 1047500, 4757970, 3907730, 978379, 4928420, 4084960, 987947, 4781590, 3962770, 912460, 4897230, 3992260, 866083, 4881780, 4014370, 883734, 4860580, 3962770, 912460, 4897230, 4014370, 883734, 4860580, 4047690, 898907, 4830280, 3886610, 1132010, 4912310, 3893830, 1079200, 4918440, 3910540, 1134360, 4892870, 3961670, 1300270, 4810310, 3989470, 1289600, 4790300, 3981350, 1301690, 4793770, 4194790, 970440, 4689820, 4144730, 948059, 4738330, 4209950, 966730, 4677060, 4209950, 966730, 4677060, 4144730, 948059, 4738330, 4198750, 940133, 4692430, 4059300, 939499, 4812900, 4198750, 940133, 4692430, 4144730, 948059, 4738330, 4128430, 971614, 4747710, 4059300, 939499, 4812900, 4144730, 948059, 4738330, 3907730, 978379, 4928420, 3644520, 884902, 5141680, 3935940, 933181, 4914810, 3732820, 935852, 5069290, 3644520, 884902, 5141680, 3907730, 978379, 4928420, 3887450, 991406, 4941750, 3732820, 935852, 5069290, 3907730, 978379, 4928420, 3757400, 967366, 5045310, 3732820, 935852, 5069290, 3887450, 991406, 4941750, 3892480, 1011790, 4933710, 3757400, 967366, 5045310, 3887450, 991406, 4941750, 3829350, 997979, 4985300, 3757400, 967366, 5045310, 3892480, 1011790, 4933710, 3875760, 1039740, 4941010, 3829350, 997979, 4985300, 3892480, 1011790, 4933710, 3664890, 921896, 5120800, 3644520, 884902, 5141680, 3732820, 935852, 5069290, 3705200, 948116, 5087120, 3664890, 921896, 5120800, 3732820, 935852, 5069290, 3992260, 866083, 4881780, 3658370, 774695, 5149570, 4204e3, 904438, 4694720, 3626420, 805179, 5167350, 3658370, 774695, 5149570, 3992260, 866083, 4881780, 3962770, 912460, 4897230, 3626420, 805179, 5167350, 3992260, 866083, 4881780, 3644520, 884902, 5141680, 3626420, 805179, 5167350, 3962770, 912460, 4897230, 3644520, 884902, 5141680, 3962770, 912460, 4897230, 3935940, 933181, 4914810, 4254460, 719147, 4681380, 3633790, 593887, 5190560, 3711130, 574561, 5138100, 3613270, 632041, 5200300, 3633790, 593887, 5190560, 4254460, 719147, 4681380, 3613270, 632041, 5200300, 4254460, 719147, 4681380, 4246160, 740773, 4685520, 3647700, 639223, 5175500, 3613270, 632041, 5200300, 4246160, 740773, 4685520, 4261820, 782351, 4664640, 3647700, 639223, 5175500, 4246160, 740773, 4685520, 3656590, 707464, 5160430, 3647700, 639223, 5175500, 4261820, 782351, 4664640, 3656590, 707464, 5160430, 4261820, 782351, 4664640, 4238620, 788987, 4684480, 3656590, 707464, 5160430, 4238620, 788987, 4684480, 3688170, 712867, 5137310, 4229400, 854824, 4681280, 3688170, 712867, 5137310, 4238620, 788987, 4684480, 3658370, 774695, 5149570, 3688170, 712867, 5137310, 4229400, 854824, 4681280, 4204e3, 904438, 4694720, 3658370, 774695, 5149570, 4229400, 854824, 4681280, 4198750, 940133, 4692430, 3992260, 866083, 4881780, 4204e3, 904438, 4694720, 4198750, 940133, 4692430, 4014370, 883734, 4860580, 3992260, 866083, 4881780, 4198750, 940133, 4692430, 4047690, 898907, 4830280, 4014370, 883734, 4860580, 4059300, 939499, 4812900, 4047690, 898907, 4830280, 4198750, 940133, 4692430, 4149140, 590457, 4791860, 3743640, 521887, 5120230, 3755700, 467825, 5116640, 3761500, 536794, 5105680, 3743640, 521887, 5120230, 4149140, 590457, 4791860, 4262240, 623108, 4688020, 3761500, 536794, 5105680, 4149140, 590457, 4791860, 3711130, 574561, 5138100, 3761500, 536794, 5105680, 4262240, 623108, 4688020, 3711130, 574561, 5138100, 4262240, 623108, 4688020, 4242310, 635729, 4704270, 4254460, 719147, 4681380, 3711130, 574561, 5138100, 4242310, 635729, 4704270, 4262240, 623108, 4688020, 4210870, 561378, 4741570, 4270450, 559695, 4688550, 4262240, 623108, 4688020, 4149140, 590457, 4791860, 4210870, 561378, 4741570, 3755700, 467825, 5116640, 3776100, 457302, 5102660, 3804540, 473344, 5080170, 4149140, 590457, 4791860, 3755700, 467825, 5116640, 3804540, 473344, 5080170, 4149140, 590457, 4791860, 3804540, 473344, 5080170, 3887020, 466449, 5018410, 4149140, 590457, 4791860, 3887020, 466449, 5018410, 4147290, 484130, 4805270, 3887020, 466449, 5018410, 3921840, 453038, 4992650, 4147290, 484130, 4805270, 4147290, 484130, 4805270, 3921840, 453038, 4992650, 4091780, 447599, 4855790, 3921840, 453038, 4992650, 4015680, 433170, 4919770, 4091780, 447599, 4855790, 4091780, 447599, 4855790, 4015680, 433170, 4919770, 4074170, 431309, 4871940, 3633790, 593887, 5190560, 3629430, 544121, 5199e3, 3679930, 554706, 5162500, 3633790, 593887, 5190560, 3679930, 554706, 5162500, 3711130, 574561, 5138100, 3921840, 453038, 4992650, 3926410, 411897, 4992620, 4015680, 433170, 4919770, 4147290, 484130, 4805270, 4091780, 447599, 4855790, 4129180, 447575, 4824240, 4084960, 987947, 4781590, 4059300, 939499, 4812900, 4128430, 971614, 4747710, 3798790, 995532, 5008960, 3757400, 967366, 5045310, 3829350, 997979, 4985300, 4561420, 4275270, 1259130, 4588860, 4236840, 1288780, 4597250, 4253660, 1201070, 4597250, 4253660, 1201070, 4588860, 4236840, 1288780, 4610920, 4233270, 1220420, 4571900, 4230610, 1366640, 4583430, 4231650, 1324440, 4581120, 4234050, 1324740, 4583430, 4231650, 1324440, 4610920, 4233270, 1220420, 4588860, 4236840, 1288780, 4583430, 4231650, 1324440, 4588860, 4236840, 1288780, 4581120, 4234050, 1324740, 4550500, 4265700, 1328710, 4571900, 4230610, 1366640, 4581120, 4234050, 1324740, 4581120, 4234050, 1324740, 4588860, 4236840, 1288780, 4542490, 4278590, 1314690, 4581120, 4234050, 1324740, 4542490, 4278590, 1314690, 4550500, 4265700, 1328710, 4545270, 4250600, 1393e3, 4571900, 4230610, 1366640, 4550500, 4265700, 1328710, 4545270, 4250600, 1393e3, 4550500, 4265700, 1328710, 4543090, 4273290, 1329670, 4542490, 4278590, 1314690, 4543090, 4273290, 1329670, 4550500, 4265700, 1328710, 4533090, 4274440, 1359580, 4545270, 4250600, 1393e3, 4543090, 4273290, 1329670, 4533090, 4274440, 1359580, 4543090, 4273290, 1329670, 4539280, 4277180, 1330160, 4539280, 4277180, 1330160, 4543090, 4273290, 1329670, 4542490, 4278590, 1314690, 4571900, 4230610, 1366640, 4601840, 4194940, 1376010, 4605380, 4208660, 1321560, 4571900, 4230610, 1366640, 4605380, 4208660, 1321560, 4583430, 4231650, 1324440, 4583430, 4231650, 1324440, 4605380, 4208660, 1321560, 4610920, 4233270, 1220420, 4605380, 4208660, 1321560, 4601840, 4194940, 1376010, 4611670, 4202030, 1320740, 4611670, 4202030, 1320740, 4629790, 4214870, 1212720, 4610920, 4233270, 1220420, 4611670, 4202030, 1320740, 4610920, 4233270, 1220420, 4605380, 4208660, 1321560, 4601840, 4194940, 1376010, 4635260, 4173600, 1328220, 4634840, 4177430, 1317680, 4601840, 4194940, 1376010, 4634840, 4177430, 1317680, 4611670, 4202030, 1320740, 4611670, 4202030, 1320740, 4634840, 4177430, 1317680, 4629790, 4214870, 1212720, 4634840, 4177430, 1317680, 4635260, 4173600, 1328220, 4638740, 4173260, 1317160, 4638740, 4173260, 1317160, 4670390, 4169300, 1214530, 4629790, 4214870, 1212720, 4638740, 4173260, 1317160, 4629790, 4214870, 1212720, 4634840, 4177430, 1317680, 4635260, 4173600, 1328220, 4639660, 4172280, 1317050, 4638740, 4173260, 1317160, 4639660, 4172280, 1317050, 4666670, 4163640, 1247540, 4670390, 4169300, 1214530, 4639660, 4172280, 1317050, 4670390, 4169300, 1214530, 4638740, 4173260, 1317160, 4635260, 4173600, 1328220, 4642710, 4169e3, 1316650, 4639660, 4172280, 1317050, 4642710, 4169e3, 1316650, 4667780, 4153260, 1277470, 4666670, 4163640, 1247540, 4642710, 4169e3, 1316650, 4666670, 4163640, 1247540, 4639660, 4172280, 1317050, 3522560, 793197, 5240040, 3481790, 763667, 5271370, 3603080, 771776, 5188580, 3481790, 763667, 5271370, 3565960, 695963, 5224580, 3603080, 771776, 5188580, 3481790, 763667, 5271370, 3530220, 680062, 5250710, 3565960, 695963, 5224580, 3633790, 593887, 5190560, 3433190, 515754, 5332560, 3629430, 544121, 5199e3, 3419120, 567532, 5336310, 3433190, 515754, 5332560, 3633790, 593887, 5190560, 3572340, 607422, 5231220, 3419120, 567532, 5336310, 3633790, 593887, 5190560, 3613270, 632041, 5200300, 3572340, 607422, 5231220, 3633790, 593887, 5190560, 3433190, 515754, 5332560, 3463440, 502581, 5314350, 3629430, 544121, 5199e3, 3629430, 544121, 5199e3, 3463440, 502581, 5314350, 3582950, 511224, 5234230, 3463440, 502581, 5314350, 3489760, 496044, 5297830, 3582950, 511224, 5234230, 3406410, 586211, 5342380, 3572340, 607422, 5231220, 3499180, 640326, 5276240, 3406410, 586211, 5342380, 3499180, 640326, 5276240, 3405440, 591795, 5342380, 3405440, 591795, 5342380, 3390100, 584083, 5352900, 3406410, 586211, 5342380, 3404760, 595729, 5342380, 3405440, 591795, 5342380, 3499180, 640326, 5276240, 3404760, 595729, 5342380, 3499180, 640326, 5276240, 3436520, 621424, 5319220, 3404760, 595729, 5342380, 3390100, 584083, 5352900, 3405440, 591795, 5342380, 3460860, 633314, 5302120, 3436520, 621424, 5319220, 3499180, 640326, 5276240, 3468520, 668698, 5292830, 3460860, 633314, 5302120, 3499180, 640326, 5276240, 3468520, 668698, 5292830, 3499180, 640326, 5276240, 3505670, 660363, 5269500, 3399690, 623985, 5342380, 3404760, 595729, 5342380, 3436520, 621424, 5319220, 3355500, 626752, 5369740, 3390100, 584083, 5352900, 3404760, 595729, 5342380, 3355500, 626752, 5369740, 3404760, 595729, 5342380, 3399690, 623985, 5342380, 3399690, 623985, 5342380, 3436520, 621424, 5319220, 3403340, 633605, 5338940, 3399690, 623985, 5342380, 3403340, 633605, 5338940, 3398050, 632853, 5342380, 3355500, 626752, 5369740, 3399690, 623985, 5342380, 3398050, 632853, 5342380, 3408550, 573612, 5342380, 3419120, 567532, 5336310, 3572340, 607422, 5231220, 3408550, 573612, 5342380, 3572340, 607422, 5231220, 3406410, 586211, 5342380, 3390100, 584083, 5352900, 3408550, 573612, 5342380, 3406410, 586211, 5342380, 2136070, -5629790, 2096100, 2082470, -5650620, 2094020, 2108140, -5675900, 1998420, 2136070, -5629790, 2096100, 2108140, -5675900, 1998420, 2136740, -5641120, 2064940, 2153030, -5657450, 2002820, 2136740, -5641120, 2064940, 2108140, -5675900, 1998420, 2180950, -5625570, 2061160, 2136740, -5641120, 2064940, 2153030, -5657450, 2002820, 2180950, -5625570, 2061160, 2153030, -5657450, 2002820, 2184430, -5650540, 1988370, 2180950, -5625570, 2061160, 2184430, -5650540, 1988370, 2200030, -5643950, 1989900, 2202670, -5646430, 1979960, 2200030, -5643950, 1989900, 2184430, -5650540, 1988370, 2233960, -5618820, 2022720, 2180950, -5625570, 2061160, 2200030, -5643950, 1989900, 2233960, -5618820, 2022720, 2200030, -5643950, 1989900, 2210730, -5639390, 1990950, 2210730, -5639390, 1990950, 2200030, -5643950, 1989900, 2202670, -5646430, 1979960, 2108140, -5675900, 1998420, 2082470, -5650620, 2094020, 2060060, -5644890, 2131040, 2108140, -5675900, 1998420, 2060060, -5644890, 2131040, 2074950, -5686340, 2003410, 2060060, -5644890, 2131040, 2059210, -5698820, 1984250, 2074950, -5686340, 2003410, 2060060, -5644890, 2131040, 2034390, -5655190, 2128420, 2059210, -5698820, 1984250, 2059210, -5698820, 1984250, 2034390, -5655190, 2128420, 2021690, -5714490, 1977770, 2034390, -5655190, 2128420, 2003710, -5711890, 2003270, 2021690, -5714490, 1977770, 2034390, -5655190, 2128420, 1972650, -5666820, 2155240, 2003710, -5711890, 2003270, 2003710, -5711890, 2003270, 1972650, -5666820, 2155240, 1972350, -5728090, 1988180, 1972650, -5666820, 2155240, 1946870, -5744730, 1965290, 1962740, -5738800, 1966810, 1972650, -5666820, 2155240, 1962740, -5738800, 1966810, 1972350, -5728090, 1988180, 1962740, -5738800, 1966810, 1946870, -5744730, 1965290, 1939730, -5763850, 1916080, 1903080, -5750250, 1991690, 1903960, -5759840, 1963120, 1904480, -5760330, 1961210, 1903080, -5750250, 1991690, 1904480, -5760330, 1961210, 1907740, -5759140, 1961520, 1912120, -5767440, 1932850, 1907740, -5759140, 1961520, 1904480, -5760330, 1961210, 1899820, -5719360, 2081110, 1903080, -5750250, 1991690, 1907740, -5759140, 1961520, 1899820, -5719360, 2081110, 1907740, -5759140, 1961520, 1909830, -5758380, 1961720, 1909830, -5758380, 1961720, 1907740, -5759140, 1961520, 1912120, -5767440, 1932850, 1928400, -5751570, 1963510, 1899820, -5719360, 2081110, 1909830, -5758380, 1961720, 1909830, -5758380, 1961720, 1912120, -5767440, 1932850, 1939730, -5763850, 1916080, 1909830, -5758380, 1961720, 1939730, -5763850, 1916080, 1928400, -5751570, 1963510, 1895210, -5693010, 2155720, 1899820, -5719360, 2081110, 1928400, -5751570, 1963510, 1895210, -5693010, 2155720, 1928400, -5751570, 1963510, 1931120, -5750560, 1963770, 1939730, -5763850, 1916080, 1931120, -5750560, 1963770, 1928400, -5751570, 1963510, 1972650, -5666820, 2155240, 1895210, -5693010, 2155720, 1931120, -5750560, 1963770, 1972650, -5666820, 2155240, 1931120, -5750560, 1963770, 1946870, -5744730, 1965290, 1946870, -5744730, 1965290, 1931120, -5750560, 1963770, 1939730, -5763850, 1916080, 1903080, -5750250, 1991690, 1896530, -5735030, 2040880, 1873970, -5748730, 2023210, 1899820, -5719360, 2081110, 1896530, -5735030, 2040880, 1903080, -5750250, 1991690, 1895210, -5693010, 2155720, 1884780, -5703200, 2137970, 1899820, -5719360, 2081110, 5241680, 692359, 3555400, 5050460, 649700, 3827880, 5062210, 555459, 3827200, 5061120, 687626, 3807260, 5050460, 649700, 3827880, 5241680, 692359, 3555400, 5199350, 743772, 3606460, 5061120, 687626, 3807260, 5241680, 692359, 3555400, 5084840, 734352, 3766970, 5061120, 687626, 3807260, 5199350, 743772, 3606460, 5144240, 757467, 3681350, 5084840, 734352, 3766970, 5199350, 743772, 3606460, 5868030, 884616, 2329760, 5740800, 861702, 2633360, 5740820, 861551, 2633360, 5325800, 790160, 3407910, 5311600, 787236, 3430510, 5705180, 855197, 2711210, 5325800, 790160, 3407910, 5705180, 855197, 2711210, 5705150, 855386, 2711220, 5705150, 855386, 2711220, 5705180, 855197, 2711210, 5740820, 861551, 2633360, 5705150, 855386, 2711220, 5740820, 861551, 2633360, 5740800, 861702, 2633360, 5738170, 879027, 2633360, 5740800, 861702, 2633360, 5868030, 884616, 2329760, 5340610, 851183, 3370080, 5325800, 790160, 3407910, 5705150, 855386, 2711220, 5340610, 851183, 3370080, 5705150, 855386, 2711220, 5700910, 877028, 2713210, 5700910, 877028, 2713210, 5705150, 855386, 2711220, 5740800, 861702, 2633360, 5700910, 877028, 2713210, 5740800, 861702, 2633360, 5738170, 879027, 2633360, 5732620, 914532, 2633360, 5738170, 879027, 2633360, 5868030, 884616, 2329760, 5340610, 851183, 3370080, 5700910, 877028, 2713210, 5691800, 922073, 2717370, 5340610, 851183, 3370080, 5691800, 922073, 2717370, 5656080, 928186, 2788450, 5700910, 877028, 2713210, 5738170, 879027, 2633360, 5732620, 914532, 2633360, 5700910, 877028, 2713210, 5732620, 914532, 2633360, 5691800, 922073, 2717370, 5435830, 907904, 3199860, 5340610, 851183, 3370080, 5656080, 928186, 2788450, 5599760, 950049, 2892130, 5435830, 907904, 3199860, 5656080, 928186, 2788450, 5548e3, 946731, 2990610, 5435830, 907904, 3199860, 5599760, 950049, 2892130, 5570120, 957734, 2945960, 5548e3, 946731, 2990610, 5599760, 950049, 2892130, 5478650, 946881, 3114980, 5435830, 907904, 3199860, 5548e3, 946731, 2990610, 5502490, 956380, 3070020, 5478650, 946881, 3114980, 5548e3, 946731, 2990610, 5720600, 986941, 2633360, 5732620, 914532, 2633360, 5868030, 884616, 2329760, 5681810, 969446, 2721740, 5656080, 928186, 2788450, 5691800, 922073, 2717370, 5720600, 986941, 2633360, 5699950, 999748, 2672750, 5681810, 969446, 2721740, 5720600, 986941, 2633360, 5681810, 969446, 2721740, 5691800, 922073, 2717370, 5720600, 986941, 2633360, 5691800, 922073, 2717370, 5732620, 914532, 2633360, 5720600, 986941, 2633360, 5868030, 884616, 2329760, 5718990, 1039710, 2616610, 5720600, 986941, 2633360, 5718990, 1039710, 2616610, 5713400, 1027790, 2633360, 5713400, 1027790, 2633360, 5699950, 999748, 2672750, 5720600, 986941, 2633360, 5725600, 1216960, 2524720, 5718990, 1039710, 2616610, 5868030, 884616, 2329760, 5703650, 1080580, 2633360, 5718990, 1039710, 2616610, 5725600, 1216960, 2524720, 5703650, 1080580, 2633360, 5725600, 1216960, 2524720, 5702460, 1086830, 2633360, 5702460, 1086830, 2633360, 5702060, 1084780, 2635080, 5703650, 1080580, 2633360, 5702280, 1087810, 2633360, 5702460, 1086830, 2633360, 5725600, 1216960, 2524720, 5702280, 1087810, 2633360, 5725600, 1216960, 2524720, 5707350, 1167470, 2588190, 5702280, 1087810, 2633360, 5702060, 1084780, 2635080, 5702460, 1086830, 2633360, 5774950, 590932, 2633360, 5981300, 594649, 2126160, 5868030, 884616, 2329760, 5774950, 590932, 2633360, 5868030, 884616, 2329760, 5746770, 820945, 2633360, 5714620, 805322, 2706620, 5062210, 555459, 3827200, 5750140, 590195, 2686920, 5750140, 590195, 2686920, 5774950, 590932, 2633360, 5746770, 820945, 2633360, 5750140, 590195, 2686920, 5746770, 820945, 2633360, 5714620, 805322, 2706620, 5868030, 884616, 2329760, 5743960, 840370, 2633360, 5746770, 820945, 2633360, 5241680, 692359, 3555400, 5062210, 555459, 3827200, 5714620, 805322, 2706620, 5241680, 692359, 3555400, 5714620, 805322, 2706620, 5710190, 829035, 2708800, 5710190, 829035, 2708800, 5714620, 805322, 2706620, 5746770, 820945, 2633360, 5710190, 829035, 2708800, 5746770, 820945, 2633360, 5743960, 840370, 2633360, 5868030, 884616, 2329760, 5743870, 841007, 2633360, 5743960, 840370, 2633360, 5286580, 706568, 3485900, 5241680, 692359, 3555400, 5710190, 829035, 2708800, 5286580, 706568, 3485900, 5710190, 829035, 2708800, 5710050, 829818, 2708870, 5710050, 829818, 2708870, 5710190, 829035, 2708800, 5743960, 840370, 2633360, 5710050, 829818, 2708870, 5743960, 840370, 2633360, 5743870, 841007, 2633360, 5868030, 884616, 2329760, 5740820, 861551, 2633360, 5743870, 841007, 2633360, 5311600, 787236, 3430510, 5286580, 706568, 3485900, 5710050, 829818, 2708870, 5311600, 787236, 3430510, 5710050, 829818, 2708870, 5705180, 855197, 2711210, 5705180, 855197, 2711210, 5710050, 829818, 2708870, 5743870, 841007, 2633360, 5705180, 855197, 2711210, 5743870, 841007, 2633360, 5740820, 861551, 2633360, 5796290, 319927, 2633360, 6021560, 332243, 2069360, 6010460, 448492, 2079600, 5796290, 319927, 2633360, 6010460, 448492, 2079600, 5791460, 397801, 2633360, 5775210, 394428, 2669090, 5106600, 282079, 3798210, 5783020, 319199, 2662270, 5783020, 319199, 2662270, 5796290, 319927, 2633360, 5791460, 397801, 2633360, 5783020, 319199, 2662270, 5791460, 397801, 2633360, 5775210, 394428, 2669090, 5787730, 448828, 2633360, 5791460, 397801, 2633360, 6010460, 448492, 2079600, 5090960, 428910, 3805420, 5106600, 282079, 3798210, 5775210, 394428, 2669090, 5090960, 428910, 3805420, 5775210, 394428, 2669090, 5768950, 448640, 2674020, 5768950, 448640, 2674020, 5775210, 394428, 2669090, 5791460, 397801, 2633360, 5768950, 448640, 2674020, 5791460, 397801, 2633360, 5787730, 448828, 2633360, 5787730, 448828, 2633360, 6010460, 448492, 2079600, 5981300, 594649, 2126160, 5787730, 448828, 2633360, 5981300, 594649, 2126160, 5779050, 549411, 2633360, 5756560, 544786, 2682780, 5090960, 428910, 3805420, 5768950, 448640, 2674020, 5768950, 448640, 2674020, 5787730, 448828, 2633360, 5779050, 549411, 2633360, 5768950, 448640, 2674020, 5779050, 549411, 2633360, 5756560, 544786, 2682780, 5981300, 594649, 2126160, 5777660, 563889, 2633360, 5779050, 549411, 2633360, 5096810, 474622, 3792220, 5090960, 428910, 3805420, 5756560, 544786, 2682780, 5096810, 474622, 3792220, 5756560, 544786, 2682780, 5754380, 560545, 2684210, 5754380, 560545, 2684210, 5756560, 544786, 2682780, 5779050, 549411, 2633360, 5754380, 560545, 2684210, 5779050, 549411, 2633360, 5777660, 563889, 2633360, 5774950, 590932, 2633360, 5777660, 563889, 2633360, 5981300, 594649, 2126160, 5062210, 555459, 3827200, 5096810, 474622, 3792220, 5754380, 560545, 2684210, 5062210, 555459, 3827200, 5754380, 560545, 2684210, 5750140, 590195, 2686920, 5750140, 590195, 2686920, 5754380, 560545, 2684210, 5777660, 563889, 2633360, 5750140, 590195, 2686920, 5777660, 563889, 2633360, 5774950, 590932, 2633360, 5796330, 319086, 2633360, 5998300, 329755, 2135790, 6021560, 332243, 2069360, 5796330, 319086, 2633360, 6021560, 332243, 2069360, 5796290, 319927, 2633360, 5106600, 282079, 3798210, 5783100, 318383, 2662190, 5783020, 319199, 2662270, 5783100, 318383, 2662190, 5796330, 319086, 2633360, 5796290, 319927, 2633360, 5783100, 318383, 2662190, 5796290, 319927, 2633360, 5783020, 319199, 2662270, 5798100, 285200, 2633360, 5994680, 280981, 2152730, 5998300, 329755, 2135790, 5798100, 285200, 2633360, 5998300, 329755, 2135790, 5796330, 319086, 2633360, 5106600, 282079, 3798210, 5786210, 285350, 2659190, 5783100, 318383, 2662190, 5786210, 285350, 2659190, 5798100, 285200, 2633360, 5796330, 319086, 2633360, 5786210, 285350, 2659190, 5796330, 319086, 2633360, 5783100, 318383, 2662190, 5800220, 238257, 2633360, 5986560, 215436, 2182480, 5994680, 280981, 2152730, 5800220, 238257, 2633360, 5994680, 280981, 2152730, 5798100, 285200, 2633360, 5106600, 282079, 3798210, 5790230, 239287, 2655020, 5786210, 285350, 2659190, 5790230, 239287, 2655020, 5800220, 238257, 2633360, 5798100, 285200, 2633360, 5790230, 239287, 2655020, 5798100, 285200, 2633360, 5786210, 285350, 2659190, 5801030, 217668, 2633360, 5969350, 190017, 2231110, 5986560, 215436, 2182480, 5801030, 217668, 2633360, 5986560, 215436, 2182480, 5800220, 238257, 2633360, 5106600, 282079, 3798210, 5791880, 218973, 2653180, 5790230, 239287, 2655020, 5791880, 218973, 2653180, 5801030, 217668, 2633360, 5800220, 238257, 2633360, 5791880, 218973, 2653180, 5800220, 238257, 2633360, 5790230, 239287, 2655020, 5801030, 217668, 2633360, 5802450, 175819, 2633360, 5969350, 190017, 2231110, 5106600, 282079, 3798210, 5124530, 131230, 3782350, 5795200, 175244, 2649210, 5106600, 282079, 3798210, 5795200, 175244, 2649210, 5791880, 218973, 2653180, 5791880, 218973, 2653180, 5795200, 175244, 2649210, 5802450, 175819, 2633360, 5791880, 218973, 2653180, 5802450, 175819, 2633360, 5801030, 217668, 2633360, 5805110, 0, 2633360, 5803110, -152491, 2633360, 5809390, -153011, 2619530, 5809390, -153011, 2619530, 5880890, -159137, 2455570, 5925150, -684454e-9, 2352850, 5809390, -153011, 2619530, 5925150, -684454e-9, 2352850, 5805110, 0, 2633360, 5805110, 0, 2633360, 5925150, -684454e-9, 2352850, 5969350, 190017, 2231110, 5805110, 0, 2633360, 5969350, 190017, 2231110, 5804590, 77599.1, 2633360, 5397150, -123223, 3385120, 5803110, -152491, 2633360, 5805110, 0, 2633360, 5397150, -123223, 3385120, 5805110, 0, 2633360, 5666850, .00122907, 2917210, 5801490, 75707.9, 2640200, 5666850, .00122907, 2917210, 5805110, 0, 2633360, 5804590, 77599.1, 2633360, 5801490, 75707.9, 2640200, 5805110, 0, 2633360, 5969350, 190017, 2231110, 5804460, 87126.1, 2633360, 5804590, 77599.1, 2633360, 5374390, -105497, 3421480, 5397150, -123223, 3385120, 5666850, .00122907, 2917210, 5374390, -105497, 3421480, 5666850, .00122907, 2917210, 5632690, 828663e-9, 2982190, 5632690, 828663e-9, 2982190, 5666850, .00122907, 2917210, 5801490, 75707.9, 2640200, 5632690, 828663e-9, 2982190, 5801490, 75707.9, 2640200, 5800960, 85177.7, 2641060, 5800960, 85177.7, 2641060, 5801490, 75707.9, 2640200, 5804590, 77599.1, 2633360, 5800960, 85177.7, 2641060, 5804590, 77599.1, 2633360, 5804460, 87126.1, 2633360, 5969350, 190017, 2231110, 5803570, 133814, 2633360, 5804460, 87126.1, 2633360, 5173240, -11507.8, 3718190, 5374390, -105497, 3421480, 5632690, 247769e-9, 2982190, 5173240, -11507.8, 3718190, 5632690, 247769e-9, 2982190, 5237390, -790933e-10, 3627900, 5237390, -790933e-10, 3627900, 5632690, 247769e-9, 2982190, 5800960, 85177.7, 2641060, 5237390, -790933e-10, 3627900, 5800960, 85177.7, 2641060, 5798130, 132155, 2645320, 5798130, 132155, 2645320, 5800960, 85177.7, 2641060, 5804460, 87126.1, 2633360, 5798130, 132155, 2645320, 5804460, 87126.1, 2633360, 5803570, 133814, 2633360, 5969350, 190017, 2231110, 5803140, 151188, 2633360, 5803570, 133814, 2633360, 5167820, -106672e-9, 3725680, 5173240, -11507.8, 3718190, 5237390, -133042e-9, 3627900, 5798130, 132155, 2645320, 5796960, 149881, 2646920, 5146080, 45257.4, 3755190, 5798130, 132155, 2645320, 5146080, 45257.4, 3755190, 5167820, -106672e-9, 3725680, 5798130, 132155, 2645320, 5167820, -106672e-9, 3725680, 5237390, -133042e-9, 3627900, 5796960, 149881, 2646920, 5798130, 132155, 2645320, 5803570, 133814, 2633360, 5796960, 149881, 2646920, 5803570, 133814, 2633360, 5803140, 151188, 2633360, 5969350, 190017, 2231110, 5802450, 175819, 2633360, 5803140, 151188, 2633360, 5124530, 131230, 3782350, 5146080, 45257.4, 3755190, 5796960, 149881, 2646920, 5124530, 131230, 3782350, 5796960, 149881, 2646920, 5795200, 175244, 2649210, 5795200, 175244, 2649210, 5796960, 149881, 2646920, 5803140, 151188, 2633360, 5795200, 175244, 2649210, 5803140, 151188, 2633360, 5802450, 175819, 2633360, 5800420, -233233, 2633360, 5789070, -431209, 2633360, 5808270, -379164, 2599100, 5800420, -233233, 2633360, 5808270, -379164, 2599100, 581e4, -224833, 2613040, 5880890, -159137, 2455570, 581e4, -224833, 2613040, 5808270, -379164, 2599100, 5480490, -465956, 3218370, 5763860, -496502, 2676520, 5789070, -431209, 2633360, 5480490, -465956, 3218370, 5789070, -431209, 2633360, 5800420, -233233, 2633360, 5801530, -203910, 2633360, 5800420, -233233, 2633360, 581e4, -224833, 2613040, 5801530, -203910, 2633360, 581e4, -224833, 2613040, 5809890, -199412, 2615330, 5880890, -159137, 2455570, 5809890, -199412, 2615330, 581e4, -224833, 2613040, 5466500, -352587, 3256100, 5480490, -465956, 3218370, 5800420, -233233, 2633360, 5466500, -352587, 3256100, 5800420, -233233, 2633360, 5801530, -203910, 2633360, 5801690, -199124, 2633360, 5801530, -203910, 2633360, 5809890, -199412, 2615330, 5801690, -199124, 2633360, 5809890, -199412, 2615330, 5809860, -195192, 2615720, 5880890, -159137, 2455570, 5809860, -195192, 2615720, 5809890, -199412, 2615330, 5424250, -345780, 3326260, 5466500, -352587, 3256100, 5801530, -203910, 2633360, 5424250, -345780, 3326260, 5801530, -203910, 2633360, 5801690, -199124, 2633360, 5802090, -187217, 2633360, 5801690, -199124, 2633360, 5809860, -195192, 2615720, 5802090, -187217, 2633360, 5809860, -195192, 2615720, 5809770, -184608, 2616680, 5880890, -159137, 2455570, 5809770, -184608, 2616680, 5809860, -195192, 2615720, 5422400, -290722, 3334490, 5424250, -345780, 3326260, 5801690, -199124, 2633360, 5422400, -290722, 3334490, 5801690, -199124, 2633360, 5802090, -187217, 2633360, 5802400, -177384, 2633360, 5802090, -187217, 2633360, 5809770, -184608, 2616680, 5802400, -177384, 2633360, 5809770, -184608, 2616680, 5809680, -175773, 2617470, 5880890, -159137, 2455570, 5809680, -175773, 2617470, 5809770, -184608, 2616680, 5402870, -246912, 3369290, 5422400, -290722, 3334490, 5802090, -187217, 2633360, 5402870, -246912, 3369290, 5802090, -187217, 2633360, 5802400, -177384, 2633360, 5803110, -152491, 2633360, 5802400, -177384, 2633360, 5809680, -175773, 2617470, 5803110, -152491, 2633360, 5809680, -175773, 2617470, 5809390, -153011, 2619530, 5809390, -153011, 2619530, 5809680, -175773, 2617470, 5880890, -159137, 2455570, 5397150, -123223, 3385120, 5402870, -246912, 3369290, 5802400, -177384, 2633360, 5397150, -123223, 3385120, 5802400, -177384, 2633360, 5803110, -152491, 2633360, 5763860, -496502, 2676520, 5592360, -852268, 2936260, 5601880, -855646, 2917210, 5763860, -496502, 2676520, 5509350, -682245, 3129890, 5592360, -852268, 2936260, 5763860, -496502, 2676520, 5512080, -585241, 3144580, 5509350, -682245, 3129890, 5763860, -496502, 2676520, 5505110, -505086, 3170410, 5512080, -585241, 3144580, 5480490, -465956, 3218370, 5505110, -505086, 3170410, 5763860, -496502, 2676520, 5173240, -11507.8, 3718190, 5183380, -109355, 3702540, 5374390, -105497, 3421480, 5374390, -105497, 3421480, 5183380, -109355, 3702540, 5361100, -129904, 3441300, 5183380, -109355, 3702540, 5295810, -160270, 3539060, 5361100, -129904, 3441300, 5183380, -109355, 3702540, 5257710, -164586, 3594840, 5295810, -160270, 3539060, 5183380, -109355, 3702540, 5215950, -197633, 3653160, 5257710, -164586, 3594840, 5509350, -682245, 3129890, 5527390, -843255, 3058510, 5588960, -851796, 2942830, 5509350, -682245, 3129890, 5588960, -851796, 2942830, 5592360, -852268, 2936260, 5629290, 963880, 2829950, 5599760, 950049, 2892130, 5656080, 928186, 2788450, 5678260, 985860, 2723260, 5656080, 928186, 2788450, 5681810, 969446, 2721740, 5678260, 985860, 2723260, 5681810, 969446, 2721740, 5699950, 999748, 2672750, 5678260, 985860, 2723260, 5699950, 999748, 2672750, 5680730, 992538, 2715710, 5048550, 747392, 3812640, 5061120, 687626, 3807260, 5084840, 734352, 3766970, 1341900, -6226480, -331908, 1341730, -6234770, 89554, 1274080, -6234820, -427946, 1341730, -6234770, 89554, 1252400, -6233620, -502350, 1274080, -6234820, -427946, 1293240, -6244540, 117609, 1232460, -6256050, 152680, 1234080, -6256600, 112157, 1293240, -6244540, 117609, 1234080, -6256600, 112157, 1252400, -6233620, -502350, 1293240, -6244540, 117609, 1252400, -6233620, -502350, 1341730, -6234770, 89554, 1234080, -6256600, 112157, 1232460, -6256050, 152680, 1230400, -6257330, 111818, 1230400, -6257330, 111818, 1190120, -6241980, -547682, 1252400, -6233620, -502350, 1230400, -6257330, 111818, 1252400, -6233620, -502350, 1234080, -6256600, 112157, 1232460, -6256050, 152680, 1157470, -6271280, 108682, 1157690, -6271300, 105132, 1232460, -6256050, 152680, 1157690, -6271300, 105132, 1230400, -6257330, 111818, 1230400, -6257330, 111818, 1157690, -6271300, 105132, 1190120, -6241980, -547682, 1157690, -6271300, 105132, 1157470, -6271280, 108682, 1157430, -6271350, 105109, 1157430, -6271350, 105109, 1145190, -6255030, -492034, 1190120, -6241980, -547682, 1157430, -6271350, 105109, 1190120, -6241980, -547682, 1157690, -6271300, 105132, 1157470, -6271280, 108682, 1157260, -6271380, 105093, 1157430, -6271350, 105109, 1157260, -6271380, 105093, 1131510, -6270040, -293749, 1145190, -6255030, -492034, 1157260, -6271380, 105093, 1145190, -6255030, -492034, 1157430, -6271350, 105109, 1145190, -6255030, -492034, 1131510, -6270040, -293749, 1101230, -6263850, -480114, 1131510, -6270040, -293749, 1084970, -6270880, -422215, 1101230, -6263850, -480114, 1101230, -6263850, -480114, 1084970, -6270880, -422215, 1055900, -6270970, -488894, 1084970, -6270880, -422215, 1053430, -6274420, -448485, 1055900, -6270970, -488894, 1065930, -6281380, -296803, 1023010, -6291790, -217242, 1000540, -6294240, -248391, 1065930, -6281380, -296803, 1043410, -6291410, -100250, 1023010, -6291790, -217242, 1065930, -6281380, -296803, 1063740, -6288730, -31370.1, 1043410, -6291410, -100250, 1105240, -6281520, 39844.1, 1063740, -6288730, -31370.1, 1065930, -6281380, -296803, 1108190, -6276290, -245502, 1105240, -6281520, 39844.1, 1065930, -6281380, -296803, 1591520, -6173950, -172653, 1480660, -6203830, 28410.4, 1472770, -6199020, -288355, 1591520, -6173950, -172653, 1511380, -6196310, 46003.7, 1480660, -6203830, 28410.4, 1591520, -6173950, -172653, 1564440, -6183290, 9376.84, 1511380, -6196310, 46003.7, 1610610, -6171410, -16810.8, 1564440, -6183290, 9376.84, 1591520, -6173950, -172653, 1625440, -6166710, -100775, 1610610, -6171410, -16810.8, 1591520, -6173950, -172653, 1472770, -6199020, -288355, 1362010, -6230340, 91319.4, 1341900, -6226480, -331908, 1472770, -6199020, -288355, 1388600, -6224990, 43752.5, 1362010, -6230340, 91319.4, 1480660, -6203830, 28410.4, 1388600, -6224990, 43752.5, 1472770, -6199020, -288355, 1157470, -6271280, 108682, 1156990, -6271440, 105068, 1157260, -6271380, 105093, 1156990, -6271440, 105068, 1108190, -6276290, -245502, 1131510, -6270040, -293749, 1156990, -6271440, 105068, 1131510, -6270040, -293749, 1157260, -6271380, 105093, 1157470, -6271280, 108682, 1154570, -6271880, 104845, 1156990, -6271440, 105068, 1154570, -6271880, 104845, 1105240, -6281520, 39844.1, 1108190, -6276290, -245502, 1154570, -6271880, 104845, 1108190, -6276290, -245502, 1156990, -6271440, 105068, 1157470, -6271280, 108682, 1145740, -6273520, 104034, 1154570, -6271880, 104845, 1145740, -6273520, 104034, 1097520, -6282420, 84966, 1105240, -6281520, 39844.1, 1145740, -6273520, 104034, 1105240, -6281520, 39844.1, 1154570, -6271880, 104845, 1043410, -6291410, -100250, 1004880, -6297390, -116920, 1023010, -6291790, -217242, 1362010, -6230340, 91319.4, 1341730, -6234770, 89554, 1341900, -6226480, -331908, 1131510, -6270040, -293749, 1072480, -6275980, -376273, 1084970, -6270880, -422215, 5259340, 2457370, 2633360, 5261220, 2453350, 2633360, 5362160, 2500410, 2374410, 4922970, 2312880, 3319830, 5160860, 2410050, 2860540, 5158500, 2414560, 2860990, 5259340, 2457370, 2633360, 5158500, 2414560, 2860990, 5160860, 2410050, 2860540, 5259340, 2457370, 2633360, 5160860, 2410050, 2860540, 5212770, 2430750, 2747400, 5259340, 2457370, 2633360, 5212770, 2430750, 2747400, 5261220, 2453350, 2633360, 5048100, 2353970, 3097010, 5162330, 2407240, 2860250, 5160860, 2410050, 2860540, 5048100, 2353970, 3097010, 5160860, 2410050, 2860540, 4922970, 2312880, 3319830, 5160860, 2410050, 2860540, 5162330, 2407240, 2860250, 5212770, 2430750, 2747400, 4922970, 2312880, 3319830, 4978450, 2317010, 3233680, 5048100, 2353970, 3097010, 5048100, 2353970, 3097010, 4978450, 2317010, 3233680, 5020240, 2309060, 3174620, 4733420, 3549590, 2374410, 4737430, 3529970, 2395420, 4777040, 3410700, 2487150, 4733420, 3549590, 2374410, 4777040, 3410700, 2487150, 4967600, 3213680, 2374410, 4863030, 3170220, 2633360, 4967600, 3213680, 2374410, 4777040, 3410700, 2487150, 4863030, 3170220, 2633360, 4777040, 3410700, 2487150, 4764400, 3316600, 2633360, 4722750, 3114610, 2935550, 4720720, 3106690, 2947100, 4726560, 3109370, 2934970, 4726560, 3109370, 2934970, 4863030, 3170220, 2633360, 4764400, 3316600, 2633360, 4726560, 3109370, 2934970, 4764400, 3316600, 2633360, 4722750, 3114610, 2935550, 4777040, 3410700, 2487150, 4763900, 3317310, 2633360, 4764400, 3316600, 2633360, 4722670, 3114710, 2935560, 4720720, 3106690, 2947100, 4722750, 3114610, 2935550, 4764400, 3316600, 2633360, 4763900, 3317310, 2633360, 4744030, 3212490, 2793220, 4764400, 3316600, 2633360, 4744030, 3212490, 2793220, 4722670, 3114710, 2935560, 4764400, 3316600, 2633360, 4722670, 3114710, 2935560, 4722750, 3114610, 2935550, 4777040, 3410700, 2487150, 4760040, 3322850, 2633360, 4763900, 3317310, 2633360, 4744890, 3257890, 2739030, 4744030, 3212490, 2793220, 4763900, 3317310, 2633360, 4744890, 3257890, 2739030, 4763900, 3317310, 2633360, 4760040, 3322850, 2633360, 4777040, 3410700, 2487150, 4756440, 3328010, 2633360, 4760040, 3322850, 2633360, 4748520, 3299710, 2682470, 4744890, 3257890, 2739030, 4760040, 3322850, 2633360, 4748520, 3299710, 2682470, 4760040, 3322850, 2633360, 4756440, 3328010, 2633360, 4751700, 3334760, 2633360, 4756440, 3328010, 2633360, 4777040, 3410700, 2487150, 4751700, 3334760, 2633360, 4777040, 3410700, 2487150, 4755660, 3391390, 2553210, 4751700, 3334760, 2633360, 4748520, 3299710, 2682470, 4756440, 3328010, 2633360, 5067220, 2832420, 2633360, 5173670, 2870180, 2374410, 4967600, 3213680, 2374410, 5067220, 2832420, 2633360, 4967600, 3213680, 2374410, 4922540, 3077e3, 2633360, 4857660, 2921250, 2914250, 4744630, 2704470, 3283640, 4945060, 2786040, 2899710, 4945060, 2786040, 2899710, 5067220, 2832420, 2633360, 4922540, 3077e3, 2633360, 4945060, 2786040, 2899710, 4922540, 3077e3, 2633360, 4857660, 2921250, 2914250, 4967600, 3213680, 2374410, 4915140, 3088800, 2633360, 4922540, 3077e3, 2633360, 4710790, 2730200, 3310770, 4744630, 2704470, 3283640, 4857660, 2921250, 2914250, 4710790, 2730200, 3310770, 4857660, 2921250, 2914250, 4842090, 2944470, 2916770, 4842090, 2944470, 2916770, 4857660, 2921250, 2914250, 4922540, 3077e3, 2633360, 4842090, 2944470, 2916770, 4922540, 3077e3, 2633360, 4915140, 3088800, 2633360, 4967600, 3213680, 2374410, 4902080, 3109480, 2633360, 4915140, 3088800, 2633360, 4664110, 2799920, 3318570, 4710790, 2730200, 3310770, 4842090, 2944470, 2916770, 4664110, 2799920, 3318570, 4842090, 2944470, 2916770, 4814120, 2985570, 2921270, 4814120, 2985570, 2921270, 4842090, 2944470, 2916770, 4915140, 3088800, 2633360, 4814120, 2985570, 2921270, 4915140, 3088800, 2633360, 4902080, 3109480, 2633360, 4967600, 3213680, 2374410, 4892010, 3125300, 2633360, 4902080, 3109480, 2633360, 4635230, 2861430, 3306630, 4664110, 2799920, 3318570, 4814120, 2985570, 2921270, 4635230, 2861430, 3306630, 4814120, 2985570, 2921270, 4792110, 3017360, 2924760, 4792110, 3017360, 2924760, 4814120, 2985570, 2921270, 4902080, 3109480, 2633360, 4792110, 3017360, 2924760, 4902080, 3109480, 2633360, 4892010, 3125300, 2633360, 4967600, 3213680, 2374410, 4888760, 3130380, 2633360, 4892010, 3125300, 2633360, 4645730, 2898510, 3259580, 4635230, 2861430, 3306630, 4792110, 3017360, 2924760, 4645730, 2898510, 3259580, 4792110, 3017360, 2924760, 4784940, 3027620, 2925890, 4784940, 3027620, 2925890, 4792110, 3017360, 2924760, 4892010, 3125300, 2633360, 4784940, 3027620, 2925890, 4892010, 3125300, 2633360, 4888760, 3130380, 2633360, 4967600, 3213680, 2374410, 4884760, 3136620, 2633360, 4888760, 3130380, 2633360, 4618120, 2907340, 3290600, 4645730, 2898510, 3259580, 4784940, 3027620, 2925890, 4618120, 2907340, 3290600, 4784940, 3027620, 2925890, 4776020, 3040310, 2927290, 4776020, 3040310, 2927290, 4784940, 3027620, 2925890, 4888760, 3130380, 2633360, 4776020, 3040310, 2927290, 4888760, 3130380, 2633360, 4884760, 3136620, 2633360, 4967600, 3213680, 2374410, 4884520, 3137e3, 2633360, 4884760, 3136620, 2633360, 4682950, 2962780, 3147340, 4618120, 2907340, 3290600, 4776020, 3040310, 2927290, 4682950, 2962780, 3147340, 4776020, 3040310, 2927290, 4775490, 3041070, 2927370, 4775490, 3041070, 2927370, 4776020, 3040310, 2927290, 4884760, 3136620, 2633360, 4775490, 3041070, 2927370, 4884760, 3136620, 2633360, 4884520, 3137e3, 2633360, 4967600, 3213680, 2374410, 4877530, 3147850, 2633360, 4884520, 3137e3, 2633360, 4709450, 3027450, 3045280, 4682950, 2962780, 3147340, 4775490, 3041070, 2927370, 4709450, 3027450, 3045280, 4775490, 3041070, 2927370, 4759780, 3063230, 2929830, 4759780, 3063230, 2929830, 4775490, 3041070, 2927370, 4884520, 3137e3, 2633360, 4759780, 3063230, 2929830, 4884520, 3137e3, 2633360, 4877530, 3147850, 2633360, 4863030, 3170220, 2633360, 4877530, 3147850, 2633360, 4967600, 3213680, 2374410, 4720720, 3106690, 2947100, 4709450, 3027450, 3045280, 4759780, 3063230, 2929830, 4720720, 3106690, 2947100, 4759780, 3063230, 2929830, 4726560, 3109370, 2934970, 4726560, 3109370, 2934970, 4759780, 3063230, 2929830, 4877530, 3147850, 2633360, 4726560, 3109370, 2934970, 4877530, 3147850, 2633360, 4863030, 3170220, 2633360, 5259340, 2457370, 2633360, 5362160, 2500410, 2374410, 5173670, 2870180, 2374410, 5259340, 2457370, 2633360, 5173670, 2870180, 2374410, 5125870, 2724840, 2633360, 5066790, 2582260, 2878260, 4922970, 2312880, 3319830, 5158500, 2414560, 2860990, 5158500, 2414560, 2860990, 5259340, 2457370, 2633360, 5125870, 2724840, 2633360, 5158500, 2414560, 2860990, 5125870, 2724840, 2633360, 5066790, 2582260, 2878260, 5173670, 2870180, 2374410, 5108880, 2756560, 2633360, 5125870, 2724840, 2633360, 4867090, 2426140, 3321390, 4922970, 2312880, 3319830, 5066790, 2582260, 2878260, 4867090, 2426140, 3321390, 5066790, 2582260, 2878260, 5032960, 2640880, 2884370, 5032960, 2640880, 2884370, 5066790, 2582260, 2878260, 5125870, 2724840, 2633360, 5032960, 2640880, 2884370, 5125870, 2724840, 2633360, 5108880, 2756560, 2633360, 5173670, 2870180, 2374410, 5097110, 2778260, 2633360, 5108880, 2756560, 2633360, 4839230, 2514590, 3296380, 4867090, 2426140, 3321390, 5032960, 2640880, 2884370, 4839230, 2514590, 3296380, 5032960, 2640880, 2884370, 5008850, 2681690, 2888660, 5008850, 2681690, 2888660, 5032960, 2640880, 2884370, 5108880, 2756560, 2633360, 5008850, 2681690, 2888660, 5108880, 2756560, 2633360, 5097110, 2778260, 2633360, 5173670, 2870180, 2374410, 5084150, 2801910, 2633360, 5097110, 2778260, 2633360, 4809840, 2606150, 3268350, 4839230, 2514590, 3296380, 5008850, 2681690, 2888660, 4809840, 2606150, 3268350, 5008850, 2681690, 2888660, 4981660, 2726790, 2893420, 4981660, 2726790, 2893420, 5008850, 2681690, 2888660, 5097110, 2778260, 2633360, 4981660, 2726790, 2893420, 5097110, 2778260, 2633360, 5084150, 2801910, 2633360, 5173670, 2870180, 2374410, 5077780, 2813430, 2633360, 5084150, 2801910, 2633360, 4796390, 2649220, 3253540, 4809840, 2606150, 3268350, 4981660, 2726790, 2893420, 4796390, 2649220, 3253540, 4981660, 2726790, 2893420, 4968030, 2749040, 2895780, 4968030, 2749040, 2895780, 4981660, 2726790, 2893420, 5084150, 2801910, 2633360, 4968030, 2749040, 2895780, 5084150, 2801910, 2633360, 5077780, 2813430, 2633360, 5067220, 2832420, 2633360, 5077780, 2813430, 2633360, 5173670, 2870180, 2374410, 4744630, 2704470, 3283640, 4796390, 2649220, 3253540, 4968030, 2749040, 2895780, 4744630, 2704470, 3283640, 4968030, 2749040, 2895780, 4945060, 2786040, 2899710, 4945060, 2786040, 2899710, 4968030, 2749040, 2895780, 5077780, 2813430, 2633360, 4945060, 2786040, 2899710, 5077780, 2813430, 2633360, 5067220, 2832420, 2633360, 4555250, 3180460, 3122380, 4511880, 3073800, 3286720, 4588730, 3170480, 3083530, 4588730, 3170480, 3083530, 4511880, 3073800, 3286720, 4633780, 3175980, 3010110, 4633780, 3175980, 3010110, 4511880, 3073800, 3286720, 4671290, 3169190, 2959200, 4511880, 3073800, 3286720, 4691620, 3155180, 2942080, 4671290, 3169190, 2959200, 4511880, 3073800, 3286720, 4550090, 3042960, 3262800, 4691620, 3155180, 2942080, 4691620, 3155180, 2942080, 4550090, 3042960, 3262800, 4696e3, 3118610, 2973710, 4550090, 3042960, 3262800, 4700850, 3068750, 3017300, 4696e3, 3118610, 2973710, 4550090, 3042960, 3262800, 4588360, 2979020, 3268180, 4700850, 3068750, 3017300, 4700850, 3068750, 3017300, 4588360, 2979020, 3268180, 4673410, 2968490, 3156070, 4588360, 2979020, 3268180, 4682950, 2962780, 3147340, 4673410, 2968490, 3156070, 4588360, 2979020, 3268180, 4618120, 2907340, 3290600, 4682950, 2962780, 3147340, 4744150, 3345500, 2633360, 4751700, 3334760, 2633360, 4755660, 3391390, 2553210, 4744150, 3345500, 2633360, 4755660, 3391390, 2553210, 4737530, 3403310, 2570860, 4744150, 3345500, 2633360, 4748520, 3299710, 2682470, 4751700, 3334760, 2633360, 4922970, 2312880, 3319830, 4962600, 2293350, 3274380, 4978450, 2317010, 3233680, 4545270, 4250600, 1393e3, 4576130, 4206430, 1425450, 4571900, 4230610, 1366640, 4571900, 4230610, 1366640, 4576130, 4206430, 1425450, 4601840, 4194940, 1376010, 4576130, 4206430, 1425450, 4592620, 4175560, 1462460, 4601840, 4194940, 1376010, 4601840, 4194940, 1376010, 4592620, 4175560, 1462460, 4620940, 4162140, 1410940, 4592620, 4175560, 1462460, 4620670, 4121930, 1524500, 4620940, 4162140, 1410940, 4620940, 4162140, 1410940, 4620670, 4121930, 1524500, 4639650, 4119070, 1474100, 4620670, 4121930, 1524500, 4648780, 4066730, 1585650, 4639650, 4119070, 1474100, 4639650, 4119070, 1474100, 4648780, 4066730, 1585650, 4665090, 4077540, 1508630, 4648780, 4066730, 1585650, 4676480, 4050410, 1545710, 4665090, 4077540, 1508630, 4900040, 3772700, 1555850, 4855040, 3680830, 1880660, 4883180, 3660070, 1848240, 4803040, 3739600, 1898030, 4855040, 3680830, 1880660, 4900040, 3772700, 1555850, 4863e3, 3786570, 1635760, 4803040, 3739600, 1898030, 4900040, 3772700, 1555850, 4754760, 3769940, 1958210, 4803040, 3739600, 1898030, 4863e3, 3786570, 1635760, 4832610, 3845820, 1587190, 4754760, 3769940, 1958210, 4863e3, 3786570, 1635760, 4746130, 3842060, 1835960, 4754760, 3769940, 1958210, 4832610, 3845820, 1587190, 4787900, 3890940, 1612360, 4746130, 3842060, 1835960, 4832610, 3845820, 1587190, 4749780, 3882960, 1738500, 4746130, 3842060, 1835960, 4787900, 3890940, 1612360, 4776e3, 3914760, 1589990, 4749780, 3882960, 1738500, 4787900, 3890940, 1612360, 4723610, 3937560, 1686610, 4749780, 3882960, 1738500, 4776e3, 3914760, 1589990, 4729070, 3971850, 1588700, 4723610, 3937560, 1686610, 4776e3, 3914760, 1589990, 4648780, 4066730, 1585650, 4723610, 3937560, 1686610, 4729070, 3971850, 1588700, 4648780, 4066730, 1585650, 4729070, 3971850, 1588700, 4676480, 4050410, 1545710, 4900040, 3772700, 1555850, 4883180, 3660070, 1848240, 4906340, 3664260, 1777760, 4900040, 3772700, 1555850, 4906340, 3664260, 1777760, 4971090, 3668960, 1578250, 4906340, 3664260, 1777760, 4968880, 3653100, 1621120, 4971090, 3668960, 1578250, 4825600, -124534, 4154800, 4825070, -143772, 4154800, 4836280, -143098, 4141850, 4825600, -124534, 4154800, 4836280, -143098, 4141850, 4835350, -124655, 4143520, 5068650, -127272, 3856550, 4835350, -124655, 4143520, 4836280, -143098, 4141850, 4667770, -122456, 4330260, 4637240, -153942, 4361740, 4825070, -143772, 4154800, 4667770, -122456, 4330260, 4825070, -143772, 4154800, 4825600, -124534, 4154800, 4827170, -20192.6, 4154800, 4825600, -124534, 4154800, 4835350, -124655, 4143520, 4827170, -20192.6, 4154800, 4835350, -124655, 4143520, 4828800, -20855.2, 4152910, 4828800, -20855.2, 4152910, 4835350, -124655, 4143520, 5068650, -127272, 3856550, 4697400, -172966e-9, 4300050, 4667770, -122456, 4330260, 4825600, -124534, 4154800, 4697400, -172966e-9, 4300050, 4825600, -124534, 4154800, 4827170, -20192.6, 4154800, 4697400, -172966e-9, 4300050, 4827170, -20192.6, 4154800, 4776460, -224192e-9, 4212660, 4703600, 27751.7, 4293220, 4697400, -104271e-9, 4300050, 4776460, -743459e-10, 4212660, 4827170, -20192.6, 4154800, 4828800, -20855.2, 4152910, 4827260, -648.101, 4154740, 4827170, -20192.6, 4154800, 4827260, -648.101, 4154740, 4827210, -635.905, 4154800, 4828800, -20855.2, 4152910, 5068650, -127272, 3856550, 5056410, -60312.6, 3874090, 4828800, -20855.2, 4152910, 5056410, -60312.6, 3874090, 4827260, -648.101, 4154740, 4776460, -339015e-9, 4212660, 4827170, -20192.6, 4154800, 4827210, -635.905, 4154800, 4776460, -339015e-9, 4212660, 4827210, -635.905, 4154800, 4824550, 461435e-10, 4157860, 4703600, 27751.7, 4293220, 4776460, -177301e-9, 4212660, 4824550, -216697e-9, 4157860, 4827210, 0, 4154800, 4827210, -635.905, 4154800, 4827260, -648.101, 4154740, 4827260, -648.101, 4154740, 5056410, -60312.6, 3874090, 4941540, -24037.9, 4019e3, 4827260, -648.101, 4154740, 4941540, -24037.9, 4019e3, 4836040, -225766e-10, 4144580, 4827260, -648.101, 4154740, 4836040, -225766e-10, 4144580, 4827210, 0, 4154800, 4827210, 1932.56, 4154800, 4827210, 0, 4154800, 4836040, -225766e-10, 4144580, 4824550, 370858e-10, 4157860, 4827210, -635.905, 4154800, 4827210, 0, 4154800, 4824550, -216697e-9, 4157860, 4827210, 0, 4154800, 4827050, 1966.21, 4154980, 4824550, -216697e-9, 4157860, 4827050, 1966.21, 4154980, 4703600, 27751.7, 4293220, 4827050, 1966.21, 4154980, 4827210, 0, 4154800, 4827210, 1932.56, 4154800, 4941540, -24037.9, 4019e3, 5056410, -60312.6, 3874090, 5012220, -40864.8, 3930970, 4941540, -24037.9, 4019e3, 5012220, -40864.8, 3930970, 4987500, -448354e-10, 3962280, 4941540, -24037.9, 4019e3, 4987500, -448354e-10, 3962280, 4970190, 170371e-9, 3983820, 4981540, 9676.12, 3969720, 4970190, 170371e-9, 3983820, 4987500, -448354e-10, 3962280, 4827180, 15221.1, 4154800, 4883840, 9094.35, 4088520, 4843570, 60981.8, 4135400, 4827180, 15221.1, 4154800, 4843570, 60981.8, 4135400, 4826870, 56851.7, 4154800, 4822500, 55778, 4159850, 4703600, 27751.7, 4293220, 4825980, 15348.8, 4156190, 4825980, 15348.8, 4156190, 4827180, 15221.1, 4154800, 4826870, 56851.7, 4154800, 4825980, 15348.8, 4156190, 4826870, 56851.7, 4154800, 4822500, 55778, 4159850, 4843570, 60981.8, 4135400, 4826830, 60589.8, 4154800, 4826870, 56851.7, 4154800, 4687050, 57396.1, 4310880, 4703600, 27751.7, 4293220, 4822500, 55778, 4159850, 4687050, 57396.1, 4310880, 4822500, 55778, 4159850, 4822080, 60478.9, 4160280, 4822080, 60478.9, 4160280, 4822500, 55778, 4159850, 4826870, 56851.7, 4154800, 4822080, 60478.9, 4160280, 4826870, 56851.7, 4154800, 4826830, 60589.8, 4154800, 4826760, 65925.4, 4154800, 4826830, 60589.8, 4154800, 4843570, 60981.8, 4135400, 4819040, 68176.2, 4163660, 4687050, 57396.1, 4310880, 4822080, 60478.9, 4160280, 4819040, 68176.2, 4163660, 4822080, 60478.9, 4160280, 4821430, 67479.3, 4160910, 4821430, 67479.3, 4160910, 4822080, 60478.9, 4160280, 4826830, 60589.8, 4154800, 4821430, 67479.3, 4160910, 4826830, 60589.8, 4154800, 4826760, 65925.4, 4154800, 4718990, 150509, 4273870, 4687050, 57396.1, 4310880, 4819040, 68176.2, 4163660, 4800880, 175356, 4181340, 4718990, 150509, 4273870, 4819040, 68176.2, 4163660, 4705280, 245441, 4284500, 4718990, 150509, 4273870, 4800880, 175356, 4181340, 4748320, 252130, 4236690, 4705280, 245441, 4284500, 4800880, 175356, 4181340, 4818310, -292962, 4154800, 4815430, -336992, 4154800, 4841700, -334614, 4124560, 4818310, -292962, 4154800, 4841700, -334614, 4124560, 4841190, -293953, 4128220, 5113580, -305216, 3787090, 4841190, -293953, 4128220, 4841700, -334614, 4124560, 4628530, -284514, 4364410, 4627910, -351860, 4360180, 4815430, -336992, 4154800, 4628530, -284514, 4364410, 4815430, -336992, 4154800, 4818310, -292962, 4154800, 4822740, -207544, 4154800, 4818310, -292962, 4154800, 4841190, -293953, 4128220, 4822740, -207544, 4154800, 4841190, -293953, 4128220, 4839130, -212582, 4135570, 4839130, -212582, 4135570, 4841190, -293953, 4128220, 5113580, -305216, 3787090, 4637240, -153942, 4361740, 4628530, -284514, 4364410, 4818310, -292962, 4154800, 4637240, -153942, 4361740, 4818310, -292962, 4154800, 4822740, -207544, 4154800, 4822740, -207544, 4154800, 4839130, -212582, 4135570, 4837460, -168864, 4139520, 4822740, -207544, 4154800, 4837460, -168864, 4139520, 4824290, -167848, 4154800, 4839130, -212582, 4135570, 5113580, -305216, 3787090, 5118080, -191827, 3788450, 4839130, -212582, 4135570, 5118080, -191827, 3788450, 4837460, -168864, 4139520, 4637240, -153942, 4361740, 4822740, -207544, 4154800, 4824290, -167848, 4154800, 4824290, -167848, 4154800, 4837460, -168864, 4139520, 4836280, -143098, 4141850, 4824290, -167848, 4154800, 4836280, -143098, 4141850, 4825070, -143772, 4154800, 4837460, -168864, 4139520, 5118080, -191827, 3788450, 5068650, -127272, 3856550, 4837460, -168864, 4139520, 5068650, -127272, 3856550, 4836280, -143098, 4141850, 4825070, -143772, 4154800, 4637240, -153942, 4361740, 4824290, -167848, 4154800, 4813270, -366613, 4154800, 4841860, -368897, 4121460, 4841700, -334614, 4124560, 4813270, -366613, 4154800, 4841700, -334614, 4124560, 4815430, -336992, 4154800, 4841860, -368897, 4121460, 5106550, -390139, 3788780, 5113580, -305216, 3787090, 4841860, -368897, 4121460, 5113580, -305216, 3787090, 4841700, -334614, 4124560, 4815430, -336992, 4154800, 4627910, -351860, 4360180, 4813270, -366613, 4154800, 4811820, -385118, 4154800, 4841840, -390783, 4119480, 4841860, -368897, 4121460, 4811820, -385118, 4154800, 4841860, -368897, 4121460, 4813270, -366613, 4154800, 4841840, -390783, 4119480, 5125200, -447966, 3757280, 5106550, -390139, 3788780, 4841840, -390783, 4119480, 5106550, -390139, 3788780, 4841860, -368897, 4121460, 4627910, -351860, 4360180, 4811820, -385118, 4154800, 4813270, -366613, 4154800, 4811030, -394877, 4154800, 4841790, -402475, 4118430, 4841840, -390783, 4119480, 4811030, -394877, 4154800, 4841840, -390783, 4119480, 4811820, -385118, 4154800, 4841790, -402475, 4118430, 5146720, -484438, 3723410, 5125200, -447966, 3757280, 4841790, -402475, 4118430, 5125200, -447966, 3757280, 4841840, -390783, 4119480, 4627910, -351860, 4360180, 4811030, -394877, 4154800, 4811820, -385118, 4154800, 4811030, -394877, 4154800, 4805790, -454259, 4154800, 4841150, -457412, 4113470, 4811030, -394877, 4154800, 4841150, -457412, 4113470, 4841790, -402475, 4118430, 4841790, -402475, 4118430, 4841150, -457412, 4113470, 5146720, -484438, 3723410, 4627910, -351860, 4360180, 4607580, -436510, 4373940, 4805790, -454259, 4154800, 4627910, -351860, 4360180, 4805790, -454259, 4154800, 4811030, -394877, 4154800, 4792710, -576116, 4154800, 4834110, -581912, 4106060, 4837400, -581913, 4102220, 4792710, -576116, 4154800, 4837400, -581913, 4102220, 4837660, -575666, 4102790, 4792710, -576116, 4154800, 4837660, -575666, 4102790, 4792900, -574496, 4154800, 5070790, -579554, 3812330, 4837660, -575666, 4102790, 4837400, -581913, 4102220, 4792900, -574496, 4154800, 4778120, -574082, 4171730, 4792710, -576116, 4154800, 4797100, -538339, 4154800, 4792900, -574496, 4154800, 4837660, -575666, 4102790, 4797100, -538339, 4154800, 4837660, -575666, 4102790, 4838860, -544501, 4105600, 4838860, -544501, 4105600, 4837660, -575666, 4102790, 5070790, -579554, 3812330, 4762900, -533326, 4194330, 4778120, -574082, 4171730, 4792900, -574496, 4154800, 4762900, -533326, 4194330, 4792900, -574496, 4154800, 4797100, -538339, 4154800, 4797100, -538339, 4154800, 4838860, -544501, 4105600, 4839050, -539123, 4106090, 4797100, -538339, 4154800, 4839050, -539123, 4106090, 4797360, -535967, 4154800, 4838860, -544501, 4105600, 5070790, -579554, 3812330, 5111480, -558596, 3761120, 4838860, -544501, 4105600, 5111480, -558596, 3761120, 4839050, -539123, 4106090, 4797360, -535967, 4154800, 4762900, -533326, 4194330, 4797100, -538339, 4154800, 4803200, -480856, 4154800, 4797360, -535967, 4154800, 4839050, -539123, 4106090, 4803200, -480856, 4154800, 4839050, -539123, 4106090, 4840490, -489718, 4110550, 4840490, -489718, 4110550, 4839050, -539123, 4106090, 5111480, -558596, 3761120, 4607580, -436510, 4373940, 4762900, -533326, 4194330, 4797360, -535967, 4154800, 4607580, -436510, 4373940, 4797360, -535967, 4154800, 4803200, -480856, 4154800, 4803200, -480856, 4154800, 4840490, -489718, 4110550, 4840820, -474915, 4111880, 4803200, -480856, 4154800, 4840820, -474915, 4111880, 4804400, -468744, 4154800, 4840490, -489718, 4110550, 5111480, -558596, 3761120, 5137010, -527817, 3730870, 4840490, -489718, 4110550, 5137010, -527817, 3730870, 4840820, -474915, 4111880, 4607580, -436510, 4373940, 4803200, -480856, 4154800, 4804400, -468744, 4154800, 4804400, -468744, 4154800, 4840820, -474915, 4111880, 4841150, -457412, 4113470, 4804400, -468744, 4154800, 4841150, -457412, 4113470, 4805790, -454259, 4154800, 4840820, -474915, 4111880, 5137010, -527817, 3730870, 5146720, -484438, 3723410, 4840820, -474915, 4111880, 5146720, -484438, 3723410, 4841150, -457412, 4113470, 4805790, -454259, 4154800, 4607580, -436510, 4373940, 4804400, -468744, 4154800, 4723480, -552258, 4235970, 4596570, -544405, 4373430, 4715050, -599940, 4238860, 4607580, -436510, 4373940, 4596570, -544405, 4373430, 4723480, -552258, 4235970, 4607580, -436510, 4373940, 4723480, -552258, 4235970, 4762900, -533326, 4194330, 4722510, -615234, 4228420, 4570190, -640525, 4387930, 4716010, -663898, 4228320, 4596570, -544405, 4373430, 4570190, -640525, 4387930, 4722510, -615234, 4228420, 4596570, -544405, 4373430, 4722510, -615234, 4228420, 4715050, -599940, 4238860, 4570190, -640525, 4387930, 4677020, -679291, 4268710, 4716010, -663898, 4228320, 4570190, -640525, 4387930, 4682820, -714226, 4256710, 4677020, -679291, 4268710, 4570190, -640525, 4387930, 4644990, -734400, 4294310, 4682820, -714226, 4256710, 4570190, -640525, 4387930, 4607320, -762150, 4329660, 4644990, -734400, 4294310, 4837400, -581913, 4102220, 4834110, -581912, 4106060, 4837170, -587121, 4101740, 4837170, -587121, 4101740, 4842870, -596896, 4093660, 5070790, -579554, 3812330, 4837170, -587121, 4101740, 5070790, -579554, 3812330, 4837400, -581913, 4102220, 5070790, -579554, 3812330, 4842870, -596896, 4093660, 4989460, -615217, 3912070, 4842870, -596896, 4093660, 4875890, -604437, 4053430, 4989460, -615217, 3912070, 4989460, -615217, 3912070, 4875890, -604437, 4053430, 4923200, -613046, 3994910, 4875890, -604437, 4053430, 4876970, -641947, 4046400, 4923200, -613046, 3994910, 5070790, -579554, 3812330, 4989460, -615217, 3912070, 5006380, -629480, 3888270, 5070790, -579554, 3812330, 5006380, -629480, 3888270, 5050410, -660751, 3826060, 5006380, -629480, 3888270, 5027390, -665181, 3855300, 5050410, -660751, 3826060, 4989460, -615217, 3912070, 4923200, -613046, 3994910, 4965420, -642612, 3938e3, 4682820, -714226, 4256710, 4644990, -734400, 4294310, 4696860, -746835, 4235740, 4836040, -2928e-8, 4144580, 4941540, -24037.9, 4019e3, 4899940, -11288e-8, 4069350, 4883840, 9094.35, 4088520, 4827180, 15221.1, 4154800, 4827210, 1932.56, 4154800, 4883840, 9094.35, 4088520, 4827210, 1932.56, 4154800, 4836040, -2928e-8, 4144580, 4883840, 9094.35, 4088520, 4836040, -2928e-8, 4144580, 4899940, -11288e-8, 4069350, 4703600, 27751.7, 4293220, 4827050, 1966.21, 4154980, 4825980, 15348.8, 4156190, 4827050, 1966.21, 4154980, 4827210, 1932.56, 4154800, 4827180, 15221.1, 4154800, 4827050, 1966.21, 4154980, 4827180, 15221.1, 4154800, 4825980, 15348.8, 4156190, 3077200, 1531790, 5354610, 2910550, 1411040, 5478690, 3068370, 1470300, 5376720, 2897460, 1473090, 5469350, 2910550, 1411040, 5478690, 3077200, 1531790, 5354610, 3054990, 1576e3, 5354500, 2897460, 1473090, 5469350, 3077200, 1531790, 5354610, 2946430, 1528600, 5428070, 2897460, 1473090, 5469350, 3054990, 1576e3, 5354500, 3016690, 1584920, 5373420, 2946430, 1528600, 5428070, 3054990, 1576e3, 5354500, 2867950, 1523700, 5471020, 2897460, 1473090, 5469350, 2946430, 1528600, 5428070, 2878700, 1539130, 5461120, 2867950, 1523700, 5471020, 2946430, 1528600, 5428070, 3069050, 1441870, 5383980, 3051710, 1386170, 5408250, 3105340, 1402960, 5373510, 3069050, 1441870, 5383980, 2953550, 1352500, 5470490, 3051710, 1386170, 5408250, 2910550, 1411040, 5478690, 2953550, 1352500, 5470490, 3069050, 1441870, 5383980, 2910550, 1411040, 5478690, 3069050, 1441870, 5383980, 3068370, 1470300, 5376720, 2953550, 1352500, 5470490, 3071440, 1371430, 5400880, 3051710, 1386170, 5408250, 2953550, 1352500, 5470490, 3055500, 1323920, 5421600, 3071440, 1371430, 5400880, 2953550, 1352500, 5470490, 3007190, 1297580, 5454650, 3055500, 1323920, 5421600, 5283550, 3456340, 901688, 5302930, 3437740, 858224, 5266670, 3494970, 850374, 5283550, 3456340, 901688, 5266670, 3494970, 850374, 5272840, 3472640, 901688, 5272840, 3472640, 901688, 5275010, 3464350, 920597, 5283550, 3456340, 901688, 5249650, 3507610, 901688, 5272840, 3472640, 901688, 5266670, 3494970, 850374, 5242370, 3512840, 923286, 5275010, 3464350, 920597, 5272840, 3472640, 901688, 5242370, 3512840, 923286, 5272840, 3472640, 901688, 5249650, 3507610, 901688, 5249650, 3507610, 901688, 5266670, 3494970, 850374, 5241350, 3545340, 796930, 5249650, 3507610, 901688, 5241350, 3545340, 796930, 5242360, 3518500, 901688, 5242360, 3518500, 901688, 5242370, 3512840, 923286, 5249650, 3507610, 901688, 5241350, 3545340, 796930, 5233660, 3531410, 901688, 5242360, 3518500, 901688, 5229030, 3523700, 956689, 5242370, 3512840, 923286, 5242360, 3518500, 901688, 5229030, 3523700, 956689, 5242360, 3518500, 901688, 5233660, 3531410, 901688, 5226450, 3542080, 901688, 5233660, 3531410, 901688, 5241350, 3545340, 796930, 5181750, 3529120, 1168820, 5229030, 3523700, 956689, 5233660, 3531410, 901688, 5181750, 3529120, 1168820, 5233660, 3531410, 901688, 5226450, 3542080, 901688, 5181750, 3529120, 1168820, 5216760, 3513660, 1054860, 5229030, 3523700, 956689, 4597040, 4387030, 547507, 4586960, 4338420, 901688, 4602870, 4321540, 901688, 4578280, 4313900, 1050160, 4599340, 4278170, 1102630, 4602870, 4321540, 901688, 4578280, 4313900, 1050160, 4602870, 4321540, 901688, 4586960, 4338420, 901688, 4566500, 4359950, 901688, 4586960, 4338420, 901688, 4597040, 4387030, 547507, 4554080, 4348740, 1011210, 4578280, 4313900, 1050160, 4586960, 4338420, 901688, 4554080, 4348740, 1011210, 4586960, 4338420, 901688, 4566500, 4359950, 901688, 4566500, 4359950, 901688, 4597040, 4387030, 547507, 4495820, 4490110, 552362, 4566500, 4359950, 901688, 4495820, 4490110, 552362, 4542690, 4384760, 901688, 4542690, 4384760, 901688, 4554080, 4348740, 1011210, 4566500, 4359950, 901688, 4350920, 4575110, 901688, 4542690, 4384760, 901688, 4495820, 4490110, 552362, 4350920, 4575110, 901688, 4495820, 4490110, 552362, 4312020, 4615720, 881438, 4350920, 4575110, 901688, 4554080, 4348740, 1011210, 4542690, 4384760, 901688, 4243740, 4678450, 882108, 4312020, 4615720, 881438, 4495820, 4490110, 552362, 4674490, 4243970, 901688, 4717460, 4266840, 467768, 4669320, 4319250, 469804, 4674490, 4243970, 901688, 4669320, 4319250, 469804, 4654480, 4265900, 901688, 4654480, 4265900, 901688, 4629790, 4214870, 1212720, 4674490, 4243970, 901688, 4669320, 4319250, 469804, 4644580, 4276680, 901688, 4654480, 4265900, 901688, 4618790, 4241070, 1162570, 4629790, 4214870, 1212720, 4654480, 4265900, 901688, 4618790, 4241070, 1162570, 4654480, 4265900, 901688, 4644580, 4276680, 901688, 4626700, 4296020, 901688, 4644580, 4276680, 901688, 4669320, 4319250, 469804, 4599340, 4278170, 1102630, 4618790, 4241070, 1162570, 4644580, 4276680, 901688, 4599340, 4278170, 1102630, 4644580, 4276680, 901688, 4626700, 4296020, 901688, 4626700, 4296020, 901688, 4669320, 4319250, 469804, 4597040, 4387030, 547507, 4626700, 4296020, 901688, 4597040, 4387030, 547507, 4602870, 4321540, 901688, 4602870, 4321540, 901688, 4599340, 4278170, 1102630, 4626700, 4296020, 901688, 4618790, 4241070, 1162570, 4610920, 4233270, 1220420, 4629790, 4214870, 1212720, 4597250, 4253660, 1201070, 4610920, 4233270, 1220420, 4618790, 4241070, 1162570, 4738660, 4172200, 901688, 4789920, 4189100, 433020, 4739620, 4245920, 433e3, 4738660, 4172200, 901688, 4739620, 4245920, 433e3, 4711050, 4203350, 901688, 4663790, 4146310, 1313840, 4639650, 4119070, 1474100, 4671670, 4137760, 1312790, 4671670, 4137760, 1312790, 4738660, 4172200, 901688, 4711050, 4203350, 901688, 4671670, 4137760, 1312790, 4711050, 4203350, 901688, 4663790, 4146310, 1313840, 4739620, 4245920, 433e3, 4710470, 4203990, 901688, 4711050, 4203350, 901688, 4662930, 4147240, 1313960, 4639650, 4119070, 1474100, 4663790, 4146310, 1313840, 4711050, 4203350, 901688, 4710470, 4203990, 901688, 4667780, 4153260, 1277470, 4711050, 4203350, 901688, 4667780, 4153260, 1277470, 4662930, 4147240, 1313960, 4711050, 4203350, 901688, 4662930, 4147240, 1313960, 4663790, 4146310, 1313840, 4739620, 4245920, 433e3, 4707490, 4207340, 901688, 4710470, 4203990, 901688, 4666670, 4163640, 1247540, 4667780, 4153260, 1277470, 4710470, 4203990, 901688, 4666670, 4163640, 1247540, 4710470, 4203990, 901688, 4707490, 4207340, 901688, 4739620, 4245920, 433e3, 4706990, 4207890, 901688, 4707490, 4207340, 901688, 4670390, 4169300, 1214530, 4666670, 4163640, 1247540, 4707490, 4207340, 901688, 4670390, 4169300, 1214530, 4707490, 4207340, 901688, 4706990, 4207890, 901688, 4682350, 4235300, 901688, 4706990, 4207890, 901688, 4739620, 4245920, 433e3, 4629790, 4214870, 1212720, 4670390, 4169300, 1214530, 4706990, 4207890, 901688, 4629790, 4214870, 1212720, 4706990, 4207890, 901688, 4682350, 4235300, 901688, 4682350, 4235300, 901688, 4739620, 4245920, 433e3, 4717460, 4266840, 467768, 4682350, 4235300, 901688, 4717460, 4266840, 467768, 4674490, 4243970, 901688, 4629790, 4214870, 1212720, 4682350, 4235300, 901688, 4674490, 4243970, 901688, 4841870, 4051960, 901688, 4885390, 4078290, 424160, 4817270, 4153540, 470293, 4841870, 4051960, 901688, 4817270, 4153540, 470293, 4802040, 4099090, 901688, 4767230, 4031500, 1299890, 4729070, 3971850, 1588700, 4784260, 4012040, 1297550, 4784260, 4012040, 1297550, 4841870, 4051960, 901688, 4802040, 4099090, 901688, 4784260, 4012040, 1297550, 4802040, 4099090, 901688, 4767230, 4031500, 1299890, 4777990, 4127090, 901688, 4802040, 4099090, 901688, 4817270, 4153540, 470293, 4676480, 4050410, 1545710, 4729070, 3971850, 1588700, 4767230, 4031500, 1299890, 4676480, 4050410, 1545710, 4767230, 4031500, 1299890, 4720360, 4084240, 1306270, 4720360, 4084240, 1306270, 4767230, 4031500, 1299890, 4802040, 4099090, 901688, 4720360, 4084240, 1306270, 4802040, 4099090, 901688, 4777990, 4127090, 901688, 4777990, 4127090, 901688, 4817270, 4153540, 470293, 4789920, 4189100, 433020, 4777990, 4127090, 901688, 4789920, 4189100, 433020, 4760860, 4146850, 901688, 4713900, 4091420, 1307130, 4676480, 4050410, 1545710, 4720360, 4084240, 1306270, 4720360, 4084240, 1306270, 4777990, 4127090, 901688, 4760860, 4146850, 901688, 4720360, 4084240, 1306270, 4760860, 4146850, 901688, 4713900, 4091420, 1307130, 4789920, 4189100, 433020, 4753050, 4155800, 901688, 4760860, 4146850, 901688, 4665090, 4077540, 1508630, 4676480, 4050410, 1545710, 4713900, 4091420, 1307130, 4665090, 4077540, 1508630, 4713900, 4091420, 1307130, 4699130, 4107740, 1309120, 4699130, 4107740, 1309120, 4713900, 4091420, 1307130, 4760860, 4146850, 901688, 4699130, 4107740, 1309120, 4760860, 4146850, 901688, 4753050, 4155800, 901688, 4738660, 4172200, 901688, 4753050, 4155800, 901688, 4789920, 4189100, 433020, 4639650, 4119070, 1474100, 4665090, 4077540, 1508630, 4699130, 4107740, 1309120, 4639650, 4119070, 1474100, 4699130, 4107740, 1309120, 4671670, 4137760, 1312790, 4671670, 4137760, 1312790, 4699130, 4107740, 1309120, 4753050, 4155800, 901688, 4671670, 4137760, 1312790, 4753050, 4155800, 901688, 4738660, 4172200, 901688, 4908100, 3971480, 901688, 4955060, 3997160, 386856, 4908610, 4054900, 378171, 4908100, 3971480, 901688, 4908610, 4054900, 378171, 4881150, 4004560, 901688, 4838400, 3949060, 1290060, 4787900, 3890940, 1612360, 4850860, 3934320, 1288310, 4850860, 3934320, 1288310, 4908100, 3971480, 901688, 4881150, 4004560, 901688, 4850860, 3934320, 1288310, 4881150, 4004560, 901688, 4838400, 3949060, 1290060, 4908610, 4054900, 378171, 4874170, 4013050, 901688, 4881150, 4004560, 901688, 4776e3, 3914760, 1589990, 4787900, 3890940, 1612360, 4838400, 3949060, 1290060, 4776e3, 3914760, 1589990, 4838400, 3949060, 1290060, 4826100, 3963510, 1291770, 4826100, 3963510, 1291770, 4838400, 3949060, 1290060, 4881150, 4004560, 901688, 4826100, 3963510, 1291770, 4881150, 4004560, 901688, 4874170, 4013050, 901688, 4853520, 4038e3, 901688, 4874170, 4013050, 901688, 4908610, 4054900, 378171, 4729070, 3971850, 1588700, 4776e3, 3914760, 1589990, 4826100, 3963510, 1291770, 4729070, 3971850, 1588700, 4826100, 3963510, 1291770, 4789310, 4006240, 1296860, 4789310, 4006240, 1296860, 4826100, 3963510, 1291770, 4874170, 4013050, 901688, 4789310, 4006240, 1296860, 4874170, 4013050, 901688, 4853520, 4038e3, 901688, 4853520, 4038e3, 901688, 4908610, 4054900, 378171, 4885390, 4078290, 424160, 4853520, 4038e3, 901688, 4885390, 4078290, 424160, 4841870, 4051960, 901688, 4729070, 3971850, 1588700, 4789310, 4006240, 1296860, 4784260, 4012040, 1297550, 4789310, 4006240, 1296860, 4853520, 4038e3, 901688, 4841870, 4051960, 901688, 4789310, 4006240, 1296860, 4841870, 4051960, 901688, 4784260, 4012040, 1297550, 4943240, 3927650, 901688, 4986210, 3957270, 396543, 4969860, 3977490, 399584, 4943240, 3927650, 901688, 4969860, 3977490, 399584, 4933910, 3939370, 901688, 4885120, 3893310, 1283480, 4832610, 3845820, 1587190, 4889330, 3888210, 1282890, 4889330, 3888210, 1282890, 4943240, 3927650, 901688, 4933910, 3939370, 901688, 4889330, 3888210, 1282890, 4933910, 3939370, 901688, 4885120, 3893310, 1283480, 4917220, 3960180, 901688, 4933910, 3939370, 901688, 4969860, 3977490, 399584, 4787900, 3890940, 1612360, 4832610, 3845820, 1587190, 4885120, 3893310, 1283480, 4787900, 3890940, 1612360, 4885120, 3893310, 1283480, 4855120, 3929260, 1287720, 4855120, 3929260, 1287720, 4885120, 3893310, 1283480, 4933910, 3939370, 901688, 4855120, 3929260, 1287720, 4933910, 3939370, 901688, 4917220, 3960180, 901688, 4917220, 3960180, 901688, 4969860, 3977490, 399584, 4955060, 3997160, 386856, 4917220, 3960180, 901688, 4955060, 3997160, 386856, 4908100, 3971480, 901688, 4787900, 3890940, 1612360, 4855120, 3929260, 1287720, 4850860, 3934320, 1288310, 4855120, 3929260, 1287720, 4917220, 3960180, 901688, 4908100, 3971480, 901688, 4855120, 3929260, 1287720, 4908100, 3971480, 901688, 4850860, 3934320, 1288310, 5033170, 3811740, 901688, 5088230, 3814120, 491335, 5007920, 3929660, 397656, 5033170, 3811740, 901688, 5007920, 3929660, 397656, 4982450, 3877800, 901688, 4942400, 3823090, 1275300, 4900040, 3772700, 1555850, 4964750, 3795110, 1272060, 4964750, 3795110, 1272060, 5033170, 3811740, 901688, 4982450, 3877800, 901688, 4964750, 3795110, 1272060, 4982450, 3877800, 901688, 4942400, 3823090, 1275300, 5007920, 3929660, 397656, 4972900, 3890040, 901688, 4982450, 3877800, 901688, 4863e3, 3786570, 1635760, 4900040, 3772700, 1555850, 4942400, 3823090, 1275300, 4863e3, 3786570, 1635760, 4942400, 3823090, 1275300, 4925540, 3843970, 1277720, 4925540, 3843970, 1277720, 4942400, 3823090, 1275300, 4982450, 3877800, 901688, 4925540, 3843970, 1277720, 4982450, 3877800, 901688, 4972900, 3890040, 901688, 4955780, 3911830, 901688, 4972900, 3890040, 901688, 5007920, 3929660, 397656, 4832610, 3845820, 1587190, 4863e3, 3786570, 1635760, 4925540, 3843970, 1277720, 4832610, 3845820, 1587190, 4925540, 3843970, 1277720, 4895030, 3881310, 1282070, 4895030, 3881310, 1282070, 4925540, 3843970, 1277720, 4972900, 3890040, 901688, 4895030, 3881310, 1282070, 4972900, 3890040, 901688, 4955780, 3911830, 901688, 4955780, 3911830, 901688, 5007920, 3929660, 397656, 4986210, 3957270, 396543, 4955780, 3911830, 901688, 4986210, 3957270, 396543, 4943240, 3927650, 901688, 4832610, 3845820, 1587190, 4895030, 3881310, 1282070, 4889330, 3888210, 1282890, 4895030, 3881310, 1282070, 4955780, 3911830, 901688, 4943240, 3927650, 901688, 4895030, 3881310, 1282070, 4943240, 3927650, 901688, 4889330, 3888210, 1282890, 5118340, 3696570, 901688, 5154100, 3719630, 527610, 5134190, 3752030, 491335, 5118340, 3696570, 901688, 5134190, 3752030, 491335, 5106330, 3713150, 901688, 5064170, 3666490, 1257390, 5045670, 3647580, 1379910, 5067310, 3662310, 1256910, 5067310, 3662310, 1256910, 5118340, 3696570, 901688, 5106330, 3713150, 901688, 5067310, 3662310, 1256910, 5106330, 3713150, 901688, 5064170, 3666490, 1257390, 5094560, 3729280, 901688, 5106330, 3713150, 901688, 5134190, 3752030, 491335, 4999790, 3668710, 1486060, 5045670, 3647580, 1379910, 5064170, 3666490, 1257390, 4999790, 3668710, 1486060, 5064170, 3666490, 1257390, 5041770, 3696080, 1260740, 5041770, 3696080, 1260740, 5064170, 3666490, 1257390, 5106330, 3713150, 901688, 5041770, 3696080, 1260740, 5106330, 3713150, 901688, 5094560, 3729280, 901688, 5094560, 3729280, 901688, 5134190, 3752030, 491335, 5088230, 3814120, 491335, 5094560, 3729280, 901688, 5088230, 3814120, 491335, 5067690, 3765720, 901688, 5031280, 3709810, 1262300, 4999790, 3668710, 1486060, 5041770, 3696080, 1260740, 5041770, 3696080, 1260740, 5094560, 3729280, 901688, 5067690, 3765720, 901688, 5041770, 3696080, 1260740, 5067690, 3765720, 901688, 5031280, 3709810, 1262300, 5088230, 3814120, 491335, 5062400, 3772820, 901688, 5067690, 3765720, 901688, 4971090, 3668960, 1578250, 4999790, 3668710, 1486060, 5031280, 3709810, 1262300, 4971090, 3668960, 1578250, 5031280, 3709810, 1262300, 5021260, 3722860, 1263780, 5021260, 3722860, 1263780, 5031280, 3709810, 1262300, 5067690, 3765720, 901688, 5021260, 3722860, 1263780, 5067690, 3765720, 901688, 5062400, 3772820, 901688, 5033170, 3811740, 901688, 5062400, 3772820, 901688, 5088230, 3814120, 491335, 4900040, 3772700, 1555850, 4971090, 3668960, 1578250, 5021260, 3722860, 1263780, 4900040, 3772700, 1555850, 5021260, 3722860, 1263780, 4964750, 3795110, 1272060, 4964750, 3795110, 1272060, 5021260, 3722860, 1263780, 5062400, 3772820, 901688, 4964750, 3795110, 1272060, 5062400, 3772820, 901688, 5033170, 3811740, 901688, 5181710, 3668580, 607904, 5153900, 3646830, 901688, 5166560, 3628870, 901688, 5105860, 3610410, 1251080, 5093340, 3601020, 1326370, 5132590, 3573760, 1246980, 5166560, 3628870, 901688, 5153900, 3646830, 901688, 5105860, 3610410, 1251080, 5166560, 3628870, 901688, 5105860, 3610410, 1251080, 5132590, 3573760, 1246980, 5166560, 3628870, 901688, 5132590, 3573760, 1246980, 5134230, 3572580, 1243630, 5139270, 3667430, 901688, 5153900, 3646830, 901688, 5181710, 3668580, 607904, 5045670, 3647580, 1379910, 5093340, 3601020, 1326370, 5105860, 3610410, 1251080, 5045670, 3647580, 1379910, 5105860, 3610410, 1251080, 5072860, 3654910, 1256070, 5072860, 3654910, 1256070, 5105860, 3610410, 1251080, 5153900, 3646830, 901688, 5072860, 3654910, 1256070, 5153900, 3646830, 901688, 5139270, 3667430, 901688, 5139270, 3667430, 901688, 5181710, 3668580, 607904, 5149660, 3716430, 589434, 5139270, 3667430, 901688, 5149660, 3716430, 589434, 5118470, 3696400, 901688, 5045670, 3647580, 1379910, 5072860, 3654910, 1256070, 5067340, 3662270, 1256910, 5072860, 3654910, 1256070, 5139270, 3667430, 901688, 5118470, 3696400, 901688, 5072860, 3654910, 1256070, 5118470, 3696400, 901688, 5067340, 3662270, 1256910, 5149660, 3716430, 589434, 5154100, 3719630, 527610, 5118340, 3696570, 901688, 5149660, 3716430, 589434, 5118340, 3696570, 901688, 5118470, 3696400, 901688, 5045670, 3647580, 1379910, 5067340, 3662270, 1256910, 5067310, 3662310, 1256910, 5067340, 3662270, 1256910, 5118470, 3696400, 901688, 5118340, 3696570, 901688, 5067340, 3662270, 1256910, 5118340, 3696570, 901688, 5067310, 3662310, 1256910, 5181710, 3668580, 607904, 5166560, 3628870, 901688, 5170740, 3622920, 901688, 5134230, 3572580, 1243630, 5147640, 3568540, 1199250, 5170740, 3622920, 901688, 5134230, 3572580, 1243630, 5170740, 3622920, 901688, 5166560, 3628870, 901688, 5189730, 3595670, 901688, 5208850, 3607720, 727575, 5181710, 3668580, 607904, 5189730, 3595670, 901688, 5181710, 3668580, 607904, 5170740, 3622920, 901688, 5170740, 3622920, 901688, 5147640, 3568540, 1199250, 5189730, 3595670, 901688, 5189730, 3595670, 901688, 5201350, 3578830, 901688, 5208850, 3607720, 727575, 5147640, 3568540, 1199250, 5181750, 3529120, 1168820, 5201350, 3578830, 901688, 5147640, 3568540, 1199250, 5201350, 3578830, 901688, 5189730, 3595670, 901688, 5218610, 3553610, 901688, 5234960, 3564400, 753039, 5208850, 3607720, 727575, 5218610, 3553610, 901688, 5208850, 3607720, 727575, 5201350, 3578830, 901688, 5201350, 3578830, 901688, 5181750, 3529120, 1168820, 5218610, 3553610, 901688, 5226450, 3542080, 901688, 5241350, 3545340, 796930, 5234960, 3564400, 753039, 5226450, 3542080, 901688, 5234960, 3564400, 753039, 5218610, 3553610, 901688, 5181750, 3529120, 1168820, 5226450, 3542080, 901688, 5218610, 3553610, 901688, 4601840, 4194940, 1376010, 4620940, 4162140, 1410940, 4635260, 4173600, 1328220, 4620940, 4162140, 1410940, 4654830, 4155980, 1315030, 4642710, 4169e3, 1316650, 4620940, 4162140, 1410940, 4642710, 4169e3, 1316650, 4635260, 4173600, 1328220, 4642710, 4169e3, 1316650, 4654830, 4155980, 1315030, 4667780, 4153260, 1277470, 4620940, 4162140, 1410940, 4639650, 4119070, 1474100, 4662930, 4147240, 1313960, 4620940, 4162140, 1410940, 4662930, 4147240, 1313960, 4654830, 4155980, 1315030, 4654830, 4155980, 1315030, 4662930, 4147240, 1313960, 4667780, 4153260, 1277470, 2613120, 1521550, 5596960, 2073700, 1123390, 5906210, 2778060, 1481480, 5528310, 2613120, 1521550, 5596960, 2189720, 1216510, 5845980, 2073700, 1123390, 5906210, 2613120, 1521550, 5596960, 2356010, 1335380, 5755290, 2189720, 1216510, 5845980, 2613120, 1521550, 5596960, 2465810, 1425700, 5687690, 2356010, 1335380, 5755290, 2486270, 1524550, 5653270, 2465810, 1425700, 5687690, 2613120, 1521550, 5596960, 2486270, 1524550, 5653270, 2613120, 1521550, 5596960, 2539420, 1534300, 5627120, 1934710, 1073110, 5962080, 1921360, 1010120, 5977280, 2006930, 1093850, 5934560, 2006930, 1093850, 5934560, 1921360, 1010120, 5977280, 2073700, 1123390, 5906210, 2073700, 1123390, 5906210, 1921360, 1010120, 5977280, 2778060, 1481480, 5528310, 2778060, 1481480, 5528310, 1921360, 1010120, 5977280, 2830500, 1396170, 5523950, 1921360, 1010120, 5977280, 1979910, 973359, 5964350, 2830500, 1396170, 5523950, 2830500, 1396170, 5523950, 2464020, 1134910, 5753100, 2904290, 1323350, 5503670, 2830500, 1396170, 5523950, 2431540, 1154480, 5762950, 2464020, 1134910, 5753100, 2830500, 1396170, 5523950, 2057190, 989579, 5935650, 2431540, 1154480, 5762950, 2830500, 1396170, 5523950, 1979910, 973359, 5964350, 2057190, 989579, 5935650, 2923130, 1198310, 5522180, 2819370, 1113130, 5593020, 2913290, 1137150, 5540160, 2608100, 1077260, 5700780, 2819370, 1113130, 5593020, 2923130, 1198310, 5522180, 2959430, 1248270, 5491900, 2608100, 1077260, 5700780, 2923130, 1198310, 5522180, 2464020, 1134910, 5753100, 2608100, 1077260, 5700780, 2959430, 1248270, 5491900, 2464020, 1134910, 5753100, 2959430, 1248270, 5491900, 2904290, 1323350, 5503670, 2819370, 1113130, 5593020, 2683110, 1058850, 5669550, 2745750, 1057250, 5639980, 2608100, 1077260, 5700780, 2683110, 1058850, 5669550, 2819370, 1113130, 5593020, 2377730, 1053830, 5804260, 2110050, 924585, 5927620, 2347500, 1023940, 5821770, 2115190, 974474, 5917850, 2110050, 924585, 5927620, 2377730, 1053830, 5804260, 2394900, 1131760, 5782630, 2115190, 974474, 5917850, 2377730, 1053830, 5804260, 2057190, 989579, 5935650, 2115190, 974474, 5917850, 2394900, 1131760, 5782630, 2057190, 989579, 5935650, 2394900, 1131760, 5782630, 2431540, 1154480, 5762950, 2162770, 872873, 5916520, 2100630, 816674, 5946660, 2134840, 804374, 5936210, 2135350, 878219, 5925620, 2100630, 816674, 5946660, 2162770, 872873, 5916520, 2202860, 959639, 5888420, 2135350, 878219, 5925620, 2162770, 872873, 5916520, 2110050, 924585, 5927620, 2135350, 878219, 5925620, 2202860, 959639, 5888420, 2110050, 924585, 5927620, 2202860, 959639, 5888420, 2347500, 1023940, 5821770, 2102640, 1212850, 5878410, 2073700, 1123390, 5906210, 2189720, 1216510, 5845980, 2265070, 1319240, 5795120, 2189720, 1216510, 5845980, 2356010, 1335380, 5755290, 2399340, 1410200, 5719670, 2356010, 1335380, 5755290, 2465810, 1425700, 5687690, -6130570, -.535951, -1753860, -6120600, 62600.7, -1787020, -6115400, -.534625, -1805700, -6115400, -.534625, -1805700, -6120600, 62600.7, -1787020, -6107200, 67794.2, -1831800, -6120600, 62600.7, -1787020, -6118450, 96436.1, -1792840, -6107200, 67794.2, -1831800, -6107200, 67794.2, -1831800, -6118450, 96436.1, -1792840, -6099290, 135748, -1854100, -6118450, 96436.1, -1792840, -6110910, 149667, -1814610, -6099290, 135748, -1854100, -6054040, 218500, -1988680, -6083690, 247430, -1893130, -6055930, 277010, -1975670, -6081360, 198976, -1906190, -6083690, 247430, -1893130, -6054040, 218500, -1988680, -6060800, 153098, -1974230, -6081360, 198976, -1906190, -6054040, 218500, -1988680, -6060800, 153098, -1974230, -6087630, 172808, -1888770, -6081360, 198976, -1906190, -6078970, 136040, -1919240, -6087630, 172808, -1888770, -6060800, 153098, -1974230, -6131940, -22153.3, -1748950, -6130570, .535951, -1753860, -6115400, .534625, -1805700, -6131940, -22153.3, -1748950, -6115400, .534625, -1805700, -6117070, -8860.01, -1800040, -6083690, 247430, -1893130, -6070440, 287866, -1929370, -6055930, 277010, -1975670, 2086930, -3346290, -4995950, 2040220, -3415720, -4968360, 1994120, -3371870, -5016470, 2086930, -3346290, -4995950, 2094e3, -3423800, -4940540, 2040220, -3415720, -4968360, 2120740, -3361170, -4971820, 2094e3, -3423800, -4940540, 2086930, -3346290, -4995950, 1982990, -3413970, -4992510, 2000190, -3464430, -4951e3, 1912800, -3408570, -5023290, 2040220, -3415720, -4968360, 2000190, -3464430, -4951e3, 1982990, -3413970, -4992510, 2040220, -3415720, -4968360, 1982990, -3413970, -4992510, 1994120, -3371870, -5016470, 2000190, -3464430, -4951e3, 1902010, -3459750, -4992510, 1912800, -3408570, -5023290, 4545840, 602476, 4418300, 4541580, 558245, 4428410, 4580210, 597725, 4383560, 4580210, 597725, 4383560, 4541580, 558245, 4428410, 4631940, 530138, 4337960, 4541580, 558245, 4428410, 4484050, 530719, 4489590, 4631940, 530138, 4337960, 4430150, 528449, 4542690, 4631940, 530138, 4337960, 4484050, 530719, 4489590, 4456930, 554876, 4513450, 4430150, 528449, 4542690, 4484050, 530719, 4489590, 4645380, 714661, 4297200, 4675420, 702434, 4266730, 4713690, 724210, 4221040, 4645380, 714661, 4297200, 4713690, 724210, 4221040, 4712960, 727266, 4221330, 4721890, 728938, 4211120, 4712960, 727266, 4221330, 4713690, 724210, 4221040, 4608600, 762123, 4328310, 4645380, 714661, 4297200, 4712960, 727266, 4221330, 4608600, 762123, 4328310, 4712960, 727266, 4221330, 4711820, 732037, 4221770, 4711820, 732037, 4221770, 4712960, 727266, 4221330, 4721890, 728938, 4211120, 4608600, 762123, 4328310, 4711820, 732037, 4221770, 4703240, 767342, 4225050, 4711820, 732037, 4221770, 4721890, 728938, 4211120, 4730750, 768735, 4194180, 4711820, 732037, 4221770, 4730750, 768735, 4194180, 4703240, 767342, 4225050, 4608600, 762123, 4328310, 4703240, 767342, 4225050, 4700680, 777646, 4226e3, 4608600, 762123, 4328310, 4700680, 777646, 4226e3, 4669880, 786500, 4258180, 4700680, 777646, 4226e3, 4703240, 767342, 4225050, 4730750, 768735, 4194180, 4407400, 528952, 4564560, 4375530, 498536, 4598300, 4430150, 528449, 4542690, 4430150, 528449, 4542690, 4375530, 498536, 4598300, 4631940, 530138, 4337960, 4631940, 530138, 4337960, 4375530, 498536, 4598300, 4392070, 463377, 4586280, 4631940, 530138, 4337960, 4392070, 463377, 4586280, 4094700, 343786, 4861740, 4392070, 463377, 4586280, 4127490, 410090, 4828990, 4094700, 343786, 4861740, 4304030, 510841, 4663520, 4283660, 505987, 4682640, 4129180, 447575, 4824240, 4304030, 510841, 4663520, 4129180, 447575, 4824240, 4355640, 460670, 4620920, 4129180, 447575, 4824240, 4133160, 426957, 4822720, 4355640, 460670, 4620920, 4355640, 460670, 4620920, 4133160, 426957, 4822720, 4392070, 463377, 4586280, 4392070, 463377, 4586280, 4133160, 426957, 4822720, 4127490, 410090, 4828990, 4626880, 368772, 4359870, 4034980, 220169, 4918130, 4659420, 252379, 4333610, 4626880, 368772, 4359870, 4067490, 255062, 4889780, 4034980, 220169, 4918130, 4626880, 368772, 4359870, 4104230, 307592, 4856170, 4067490, 255062, 4889780, 4094700, 343786, 4861740, 4104230, 307592, 4856170, 4626880, 368772, 4359870, 4631940, 530138, 4337960, 4094700, 343786, 4861740, 4626880, 368772, 4359870, 4705280, 245441, 4284500, 4005320, 175827, 4943920, 4718990, 150509, 4273870, 4705280, 245441, 4284500, 4035230, 187362, 4919290, 4005320, 175827, 4943920, 4034980, 220169, 4918130, 4035230, 187362, 4919290, 4705280, 245441, 4284500, 4034980, 220169, 4918130, 4705280, 245441, 4284500, 4659420, 252379, 4333610, 4718990, 150509, 4273870, 4095900, 95721.2, 4871870, 4687050, 57396.1, 4310880, 4718990, 150509, 4273870, 4025e3, 115170, 4929800, 4095900, 95721.2, 4871870, 4005320, 175827, 4943920, 4025e3, 115170, 4929800, 4718990, 150509, 4273870, 4592390, -110971, 4409900, 4667770, -122456, 4330260, 4697400, -701881e-10, 4300050, 4592390, -110971, 4409900, 4697400, -701881e-10, 4300050, 4682330, 52881e-9, 4316340, 4703600, 27751.7, 4293220, 4682330, 52881e-9, 4316340, 4697400, -701881e-10, 4300050, 4436170, -92444.2, 4566400, 4592390, -110971, 4409900, 4682330, 873839e-10, 4316340, 4436170, -92444.2, 4566400, 4682330, 873839e-10, 4316340, 4646290, -660695e-10, 4354860, 4703600, 27751.7, 4293220, 4646290, -660695e-10, 4354860, 4682330, 873839e-10, 4316340, 4162580, -71892.8, 4815820, 4436170, -92444.2, 4566400, 4646290, -107996e-9, 4354860, 4162580, -71892.8, 4815820, 4646290, -107996e-9, 4354860, 4572030, -494845e-9, 4432240, 4703600, 27751.7, 4293220, 4572030, -494845e-9, 4432240, 4646290, -107996e-9, 4354860, 4135170, -842344e-9, 4839750, 4162580, -71892.8, 4815820, 4572030, -445389e-9, 4432240, 4135170, -842344e-9, 4839750, 4572030, -445389e-9, 4432240, 4703600, 27751.7, 4293220, 4135170, -842344e-9, 4839750, 4703600, 27751.7, 4293220, 4095900, 95721.2, 4871870, 4095900, 95721.2, 4871870, 4703600, 27751.7, 4293220, 4687050, 57396.1, 4310880, 4162580, -71892.8, 4815820, 4124540, -139239, 4846760, 4220520, -119107, 4764520, 4162580, -71892.8, 4815820, 4220520, -119107, 4764520, 4436170, -92444.2, 4566400, 4436170, -92444.2, 4566400, 4220520, -119107, 4764520, 4349160, -169033, 4646640, 4220520, -119107, 4764520, 4305340, -222866, 4684780, 4349160, -169033, 4646640, 4220520, -119107, 4764520, 4193730, -241501, 4783380, 4305340, -222866, 4684780, 4193730, -241501, 4783380, 4205330, -337788, 4767450, 4266290, -335131, 4713530, 4305340, -222866, 4684780, 4193730, -241501, 4783380, 4266290, -335131, 4713530, 4283660, 505987, 4682640, 4147290, 484130, 4805270, 4129180, 447575, 4824240, 4149140, 590457, 4791860, 4147290, 484130, 4805270, 4283660, 505987, 4682640, 4149140, 590457, 4791860, 4283660, 505987, 4682640, 4210870, 561378, 4741570, 4210870, 561378, 4741570, 4283660, 505987, 4682640, 4286980, 540979, 4675730, 3929830, -4998100, 504333, 3903440, -5029760, 379889, 3909360, -5025110, 380570, 3929830, -4998100, 504333, 3909360, -5025110, 380570, 3946380, -4989430, 459177, 3909360, -5025110, 380570, 3903440, -5029760, 379889, 3898660, -5035070, 358194, 3929830, -4998100, 504333, 3899960, -5032490, 379490, 3903440, -5029760, 379889, 3899960, -5032490, 379490, 3874100, -5059130, 276870, 3898660, -5035070, 358194, 3899960, -5032490, 379490, 3898660, -5035070, 358194, 3903440, -5029760, 379889, 3929830, -4998100, 504333, 3831900, -5063390, 597320, 3862210, -5061840, 375172, 3929830, -4998100, 504333, 3862210, -5061840, 375172, 3899960, -5032490, 379490, 3899960, -5032490, 379490, 3862210, -5061840, 375172, 3874100, -5059130, 276870, 3862210, -5061840, 375172, 3831900, -5063390, 597320, 3839150, -5079550, 372546, 3839150, -5079550, 372546, 3841190, -5086290, 234902, 3874100, -5059130, 276870, 3839150, -5079550, 372546, 3874100, -5059130, 276870, 3862210, -5061840, 375172, 3831900, -5063390, 597320, 3813110, -5099350, 369592, 3839150, -5079550, 372546, 3813110, -5099350, 369592, 3798730, -5118440, 227004, 3841190, -5086290, 234902, 3813110, -5099350, 369592, 3841190, -5086290, 234902, 3839150, -5079550, 372546, 3733960, -5131440, 635477, 3740500, -5150530, 400302, 3747650, -5148170, 362218, 3733960, -5131440, 635477, 3747650, -5148170, 362218, 3758380, -5140260, 363424, 3765670, -5141090, 262728, 3758380, -5140260, 363424, 3747650, -5148170, 362218, 3765010, -5110200, 623371, 3733960, -5131440, 635477, 3758380, -5140260, 363424, 3765010, -5110200, 623371, 3758380, -5140260, 363424, 3766730, -5134070, 364362, 3766730, -5134070, 364362, 3758380, -5140260, 363424, 3765670, -5141090, 262728, 3780990, -5123470, 365966, 3765010, -5110200, 623371, 3766730, -5134070, 364361, 3766730, -5134070, 364361, 3765670, -5141090, 262728, 3785830, -5126500, 258110, 3766730, -5134070, 364361, 3785830, -5126500, 258110, 3780990, -5123470, 365966, 3831900, -5063390, 597320, 3765010, -5110200, 623371, 3780990, -5123470, 365966, 3831900, -5063390, 597320, 3780990, -5123470, 365966, 3802080, -5107670, 368346, 3802080, -5107670, 368346, 3780990, -5123470, 365966, 3785830, -5126500, 258110, 3831900, -5063390, 597320, 3802080, -5107670, 368346, 3813110, -5099350, 369592, 3802080, -5107670, 368346, 3785830, -5126500, 258110, 3798730, -5118440, 227004, 3802080, -5107670, 368346, 3798730, -5118440, 227004, 3813110, -5099350, 369592, 3738530, -5162320, 232769, 3720280, -5171830, 302722, 3698560, -5189940, 255563, 3738530, -5162320, 232769, 3726600, -5164070, 353014, 3720280, -5171830, 302722, 3740500, -5150530, 400302, 3728700, -5162060, 360096, 3740280, -5153590, 361392, 3728700, -5162060, 360096, 3726600, -5164070, 353014, 3738530, -5162320, 232769, 3728700, -5162060, 360096, 3738530, -5162320, 232769, 3740280, -5153590, 361392, 3747650, -5148170, 362218, 3740500, -5150530, 400302, 3740280, -5153590, 361392, 3740280, -5153590, 361392, 3738530, -5162320, 232769, 3765670, -5141090, 262728, 3740280, -5153590, 361392, 3765670, -5141090, 262728, 3747650, -5148170, 362218, 3733960, -5131440, 635477, 3692310, -5172340, 540810, 3702940, -5172120, 465395, 3733960, -5131440, 635477, 3702940, -5172120, 465395, 3740500, -5150530, 400302, 4210870, 561378, 4741570, 4286980, 540979, 4675730, 4270450, 559695, 4688550, 4592390, -110971, 4409900, 4637240, -153942, 4361740, 4667770, -122456, 4330260, 6271580, 1113310, -328204, 6283410, 1088750, 118074, 6289820, 1051750, 111688, 6253760, 1247930, 116943, 6283410, 1088750, 118074, 6271580, 1113310, -328204, 6253760, 1247930, 116943, 6271580, 1113310, -328204, 6243970, 1224320, -439610, 6243350, 1267730, -305690, 6253760, 1247930, 116943, 6243970, 1224320, -439610, 6231010, 1307980, -378702, 6243350, 1267730, -305690, 6243970, 1224320, -439610, 6288020, 1041570, -237051, 6301960, 978985, -86142.9, 6301910, 975362, -122874, 6288020, 1041570, -237051, 6298560, 1003050, -50792, 6301960, 978985, -86142.9, 6288020, 1041570, -237051, 6294390, 1029770, 29707.4, 6298560, 1003050, -50792, 6289820, 1051750, 111688, 6294390, 1029770, 29707.4, 6288020, 1041570, -237051, 6271580, 1113310, -328204, 6289820, 1051750, 111688, 6288020, 1041570, -237051, 6175390, 1588500, -147428, 6179780, 1577090, -61105.4, 6176800, 1574360, -220914, 6179780, 1577090, -61105.4, 6183170, 1540770, -273124, 6176800, 1574360, -220914, 6179780, 1577090, -61105.4, 6192870, 1526080, 4285.59, 6183170, 1540770, -273124, 6183170, 1540770, -273124, 6192870, 1526080, 4285.59, 6205890, 1465020, 145302, 6186140, 1545440, 154311, 6205890, 1465020, 145302, 6192870, 1526080, 4285.59, 6206370, 1445360, -268477, 6210820, 1428320, 256643, 6221550, 1387870, -215414, 6206370, 1445360, -268477, 6211440, 1434380, 202417, 6210820, 1428320, 256643, 6205890, 1465020, 145302, 6211440, 1434380, 202417, 6206370, 1445360, -268477, 6183170, 1540770, -273124, 6205890, 1465020, 145302, 6206370, 1445360, -268477, 6236900, 1305340, -277914, 6239330, 1297980, 257211, 6243350, 1267730, -305690, 6225790, 1364200, 242410, 6239330, 1297980, 257211, 6236900, 1305340, -277914, 6221660, 1378820, -264384, 6225790, 1364200, 242410, 6236900, 1305340, -277914, 6210820, 1428320, 256643, 6225790, 1364200, 242410, 6221660, 1378820, -264384, 6210820, 1428320, 256643, 6221660, 1378820, -264384, 6221550, 1387870, -215414, 6239330, 1297980, 257211, 6250170, 1246230, 249950, 6253760, 1247930, 116943, 6239330, 1297980, 257211, 6253760, 1247930, 116943, 6243350, 1267730, -305690, 6207930, 1441870, 250619, 6210820, 1428320, 256643, 6211440, 1434380, 202417, 6179830, 1572500, 132340, 6186140, 1545440, 154311, 6192870, 1526080, 4285.59, 3978010, -237372, 4963230, 3897870, -287770, 5023380, 3955490, -344973, 4974830, 3805090, -205549, 5097500, 3897870, -287770, 5023380, 3978010, -237372, 4963230, 4042790, -208780, 4912260, 3805090, -205549, 5097500, 3978010, -237372, 4963230, 3753600, -193106, 5135760, 3805090, -205549, 5097500, 4042790, -208780, 4912260, 4061270, -176608, 4898350, 3753600, -193106, 5135760, 4042790, -208780, 4912260, 3580770, -130363, 5258830, 3753600, -193106, 5135760, 4061270, -176608, 4898350, 4041070, -55547.1, 4917750, 3580770, -130363, 5258830, 4061270, -176608, 4898350, 4041070, -55547.1, 4917750, 3700010, -72012.2, 5177330, 3580770, -130363, 5258830, 3715170, -27914, 5166960, 3700010, -72012.2, 5177330, 4041070, -55547.1, 4917750, 4080220, -257954, 4879080, 3992520, -300900, 4948210, 4065860, -323025, 4887140, 3978010, -237372, 4963230, 3992520, -300900, 4948210, 4080220, -257954, 4879080, 4042790, -208780, 4912260, 3978010, -237372, 4963230, 4080220, -257954, 4879080, 3992520, -300900, 4948210, 4073450, -412083, 4874190, 4094060, -375832, 4859930, 3992520, -300900, 4948210, 4094060, -375832, 4859930, 4065860, -323025, 4887140, 3715170, -27914, 5166960, 4041070, -55547.1, 4917750, 4041930, -113313e-9, 4917370, 3715170, -27914, 5166960, 4041930, -113313e-9, 4917370, 3860800, 171952e-9, 5059880, 4042070, 38825.8, 4917100, 3860800, 171952e-9, 5059880, 4041930, -113313e-9, 4917370, 3787090, -504629e-10, 5114900, 3715170, -27914, 5166960, 3860800, 208831e-9, 5059880, 3787090, -504629e-10, 5114900, 3860800, 208831e-9, 5059880, 4042070, 38825.8, 4917100, 3787090, -504629e-10, 5114900, 4042070, 38825.8, 4917100, 3817710, 12325.6, 5092230, 4042070, 38825.8, 4917100, 3852770, 31603.6, 5065850, 3817710, 12325.6, 5092230, 3951210, 72456.5, 4989540, 3852770, 31603.6, 5065850, 4042070, 38825.8, 4917100, 3995680, 101132, 4953740, 3951210, 72456.5, 4989540, 4042070, 38825.8, 4917100, 3868130, 113555, 5053040, 3852770, 31603.6, 5065850, 3951210, 72456.5, 4989540, 3868130, 113555, 5053040, 3951210, 72456.5, 4989540, 3924730, 106885, 5009650, 3580770, -130363, 5258830, 3571960, -194639, 5262810, 3753600, -193106, 5135760, 3753600, -193106, 5135760, 3571960, -194639, 5262810, 3694190, -234361, 5176680, 3451310, -188912, 5342380, 3478190, -193682, 5324870, 3477650, -187187, 5325450, 3451310, -188912, 5342380, 3477650, -187187, 5325450, 3451520, -185149, 5342380, 3478190, -193682, 5324870, 3694190, -234361, 5176680, 3571960, -194639, 5262810, 3478190, -193682, 5324870, 3571960, -194639, 5262810, 3477650, -187187, 5325450, 3412440, -182123, 5367360, 3451310, -188912, 5342380, 3451520, -185149, 5342380, 3451520, -185149, 5342380, 3477650, -187187, 5325450, 3473890, -146037, 5329170, 3451520, -185149, 5342380, 3473890, -146037, 5329170, 3452840, -158608, 5342380, 3477650, -187187, 5325450, 3571960, -194639, 5262810, 3491500, -135350, 5318e3, 3477650, -187187, 5325450, 3491500, -135350, 5318e3, 3473890, -146037, 5329170, 3452840, -158608, 5342380, 3412440, -182123, 5367360, 3451520, -185149, 5342380, 3451310, -188912, 5342380, 3447930, -243007, 5342380, 3481870, -242064, 5320510, 3451310, -188912, 5342380, 3481870, -242064, 5320510, 3478190, -193682, 5324870, 3478190, -193682, 5324870, 3481870, -242064, 5320510, 3694190, -234361, 5176680, 3412440, -182123, 5367360, 3421510, -243686, 5359190, 3447930, -243007, 5342380, 3412440, -182123, 5367360, 3447930, -243007, 5342380, 3451310, -188912, 5342380, 3447360, -250878, 5342380, 3483130, -260996, 5318800, 3481870, -242064, 5320510, 3447360, -250878, 5342380, 3481870, -242064, 5320510, 3447930, -243007, 5342380, 3483130, -260996, 5318800, 3607810, -297827, 5233650, 3694190, -234361, 5176680, 3483130, -260996, 5318800, 3694190, -234361, 5176680, 3481870, -242064, 5320510, 3447930, -243007, 5342380, 3421510, -243686, 5359190, 3447360, -250878, 5342380, 3446180, -266667, 5342380, 3483910, -273756, 5317660, 3483130, -260996, 5318800, 3446180, -266667, 5342380, 3483130, -260996, 5318800, 3447360, -250878, 5342380, 3483130, -260996, 5318800, 3483910, -273756, 5317660, 3607810, -297827, 5233650, 3326870, -244981, 5418e3, 3446180, -266667, 5342380, 3447360, -250878, 5342380, 3326870, -244981, 5418e3, 3447360, -250878, 5342380, 3421510, -243686, 5359190, 3323300, -174458, 5422880, 3326870, -244981, 5418e3, 3421510, -243686, 5359190, 3607810, -297827, 5233650, 3646580, -324328, 5205310, 3672460, -311237, 5188e3, 3694190, -234361, 5176680, 3607810, -297827, 5233650, 3672460, -311237, 5188e3, 3689010, -365738, 5172790, 3625620, -428085, 5212400, 3747100, -406925, 5128070, 3747100, -406925, 5128070, 3625620, -428085, 5212400, 3722990, -454074, 5141560, 3625620, -428085, 5212400, 3672800, -474799, 5175450, 3722990, -454074, 5141560, 3722990, -454074, 5141560, 3672800, -474799, 5175450, 3719090, -494394, 5140670, 3897870, -287770, 5023380, 3790400, -303637, 5103510, 3847510, -321057, 5059810, 3805090, -205549, 5097500, 3790400, -303637, 5103510, 3897870, -287770, 5023380, 3446180, -266667, 5342380, 3443930, -294251, 5342380, 3485130, -295258, 5315720, 3446180, -266667, 5342380, 3485130, -295258, 5315720, 3483910, -273756, 5317660, 3483910, -273756, 5317660, 3485130, -295258, 5315720, 3607810, -297827, 5233650, 3326870, -244981, 5418e3, 3315640, -290664, 5422600, 3443930, -294251, 5342380, 3326870, -244981, 5418e3, 3443930, -294251, 5342380, 3446180, -266667, 5342380, 3443180, -302941, 5342380, 3485740, -307061, 5314660, 3485130, -295258, 5315720, 3443180, -302941, 5342380, 3485130, -295258, 5315720, 3443930, -294251, 5342380, 3485740, -307061, 5314660, 3580810, -316302, 5250960, 3607810, -297827, 5233650, 3485740, -307061, 5314660, 3607810, -297827, 5233650, 3485130, -295258, 5315720, 3443930, -294251, 5342380, 3315640, -290664, 5422600, 3443180, -302941, 5342380, 3442e3, -316016, 5342380, 3486610, -325276, 5313020, 3485740, -307061, 5314660, 3442e3, -316016, 5342380, 3485740, -307061, 5314660, 3443180, -302941, 5342380, 3486610, -325276, 5313020, 3620890, -354164, 5221170, 3580810, -316302, 5250960, 3486610, -325276, 5313020, 3580810, -316302, 5250960, 3485740, -307061, 5314660, 3315640, -290664, 5422600, 3442e3, -316016, 5342380, 3443180, -302941, 5342380, 3441280, -323841, 5342380, 3487090, -336449, 5312010, 3486610, -325276, 5313020, 3441280, -323841, 5342380, 3486610, -325276, 5313020, 3442e3, -316016, 5342380, 3487090, -336449, 5312010, 3532200, -349137, 5281500, 3620890, -354164, 5221170, 3487090, -336449, 5312010, 3620890, -354164, 5221170, 3486610, -325276, 5313020, 3315640, -290664, 5422600, 3441280, -323841, 5342380, 3442e3, -316016, 5342380, 3441280, -323841, 5342380, 3439170, -345497, 5342380, 3487530, -347434, 5311020, 3441280, -323841, 5342380, 3487530, -347434, 5311020, 3487090, -336449, 5312010, 3487090, -336449, 5312010, 3487530, -347434, 5311020, 3532200, -349137, 5281500, 3315640, -290664, 5422600, 3387810, -343334, 5375020, 3439170, -345497, 5342380, 3315640, -290664, 5422600, 3439170, -345497, 5342380, 3441280, -323841, 5342380, 3437680, -360020, 5342380, 3481890, -375179, 5312820, 3488380, -371885, 5308820, 3437680, -360020, 5342380, 3488380, -371885, 5308820, 3487530, -347434, 5311020, 3437680, -360020, 5342380, 3487530, -347434, 5311020, 3439170, -345497, 5342380, 3532200, -349137, 5281500, 3487530, -347434, 5311020, 3488380, -371885, 5308820, 3439170, -345497, 5342380, 3387810, -343334, 5375020, 3437680, -360020, 5342380, 3897870, -287770, 5023380, 3919090, -361308, 5002210, 3955490, -344973, 4974830, 3625620, -428085, 5212400, 3622710, -481582, 5209770, 3672800, -474799, 5175450, 3454180, -126124, 5342380, 3452840, -158608, 5342380, 3473890, -146037, 5329170, 3454180, -126124, 5342380, 3473890, -146037, 5329170, 3472350, -130589, 5330560, 3472350, -130589, 5330560, 3473890, -146037, 5329170, 3491500, -135350, 5318e3, 3415780, -116851, 5367050, 3412440, -182123, 5367360, 3452840, -158608, 5342380, 3415780, -116851, 5367050, 3452840, -158608, 5342380, 3454180, -126124, 5342380, 3300740, 3495070, 4177630, 3303100, 3437880, 4222670, 3314950, 3493420, 4167820, 3314950, 3493420, 4167820, 3303100, 3437880, 4222670, 3344640, 3458960, 4172800, 3303100, 3437880, 4222670, 3306050, 3396880, 4253230, 3344640, 3458960, 4172800, 3280460, 3445410, 4234090, 3306050, 3396880, 4253230, 3303100, 3437880, 4222670, 3344640, 3458960, 4172800, 3306050, 3396880, 4253230, 3302640, 3357300, 4286940, 3344640, 3458960, 4172800, 3302640, 3357300, 4286940, 3374510, 3400210, 4196810, 3302640, 3357300, 4286940, 3397490, 3394230, 4183180, 3374510, 3400210, 4196810, 3302640, 3357300, 4286940, 3345630, 3292060, 4304050, 3397490, 3394230, 4183180, 3397490, 3394230, 4183180, 3388660, 3244620, 4306400, 3487070, 3318690, 4170140, 3397490, 3394230, 4183180, 3388800, 3264670, 4291220, 3388660, 3244620, 4306400, 3397490, 3394230, 4183180, 3345630, 3292060, 4304050, 3388800, 3264670, 4291220, 3515860, 3235210, 4211090, 3546170, 3159880, 4242540, 3578030, 3171600, 4207140, 3515860, 3235210, 4211090, 3437980, 3138700, 4345370, 3546170, 3159880, 4242540, 3388660, 3244620, 4306400, 3437980, 3138700, 4345370, 3515860, 3235210, 4211090, 3388660, 3244620, 4306400, 3515860, 3235210, 4211090, 3487070, 3318690, 4170140, 3521680, 3110630, 4298580, 3508170, 3041250, 4358460, 3531840, 3056730, 4328610, 3437980, 3138700, 4345370, 3508170, 3041250, 4358460, 3521680, 3110630, 4298580, 3437980, 3138700, 4345370, 3521680, 3110630, 4298580, 3546170, 3159880, 4242540, 3554580, 3016790, 4337940, 3542650, 2980760, 4372240, 3555910, 2979010, 4362720, 3508170, 3041250, 4358460, 3542650, 2980760, 4372240, 3554580, 3016790, 4337940, 3508170, 3041250, 4358460, 3554580, 3016790, 4337940, 3531840, 3056730, 4328610, 6342490, -311387, 595030, 6317080, -329249, 813796, 6330310, -358837, 689799, 6307240, -284332, 901688, 6310420, -298090, 874765, 6310860, -285046, 875943, 6307240, -284332, 901688, 6310860, -285046, 875943, 6307320, -282609, 901688, 6310420, -298090, 874765, 6317080, -329249, 813796, 6342490, -311387, 595030, 6310420, -298090, 874765, 6342490, -311387, 595030, 6310860, -285046, 875943, 6306740, -282217, 905827, 6307240, -284332, 901688, 6307320, -282609, 901688, 6307320, -282609, 901688, 6310860, -285046, 875943, 6311100, -277403, 876634, 6307320, -282609, 901688, 6311100, -277403, 876634, 6307360, -281535, 901688, 6310860, -285046, 875943, 6342490, -311387, 595030, 6353e3, -217934, 520281, 6310860, -285046, 875943, 6353e3, -217934, 520281, 6311100, -277403, 876634, 6307360, -281535, 901688, 6306740, -282217, 905827, 6307320, -282609, 901688, 6311350, -170245, 901688, 6307360, -281535, 901688, 6311100, -277403, 876634, 6311350, -170245, 901688, 6311100, -277403, 876634, 6313510, -172197, 886138, 6313510, -172197, 886138, 6311100, -277403, 876634, 6353e3, -217934, 520281, 6260130, -131498, 1210070, 6306740, -282217, 905827, 6307360, -281535, 901688, 6260130, -131498, 1210070, 6307360, -281535, 901688, 6311350, -170245, 901688, 6311350, -170245, 901688, 6313510, -172197, 886138, 6314020, -125116, 890390, 6311350, -170245, 901688, 6314020, -125116, 890390, 6312400, -125348, 901688, 6313510, -172197, 886138, 6353e3, -217934, 520281, 6352930, -117947, 552245, 6313510, -172197, 886138, 6352930, -117947, 552245, 6314020, -125116, 890390, 6312400, -125348, 901688, 6260130, -131498, 1210070, 6311350, -170245, 901688, 6312860, -99364.2, 901688, 6312400, -125348, 901688, 6314020, -125116, 890390, 6312860, -99364.2, 901688, 6314020, -125116, 890390, 6314140, -99846.3, 892671, 6314140, -99846.3, 892671, 6314020, -125116, 890390, 6352930, -117947, 552245, 6262490, -83246, 1202150, 6260130, -131498, 1210070, 6312400, -125348, 901688, 6262490, -83246, 1202150, 6312400, -125348, 901688, 6312860, -99364.2, 901688, 6312860, -99364.2, 901688, 6314140, -99846.3, 892671, 6314160, -69858.3, 895379, 6312860, -99364.2, 901688, 6314160, -69858.3, 895379, 6313260, -70136.5, 901688, 6314140, -99846.3, 892671, 6352930, -117947, 552245, 6350360, -56265.3, 590011, 6314140, -99846.3, 892671, 6350360, -56265.3, 590011, 6314160, -69858.3, 895379, 6313260, -70136.5, 901688, 6262490, -83246, 1202150, 6312860, -99364.2, 901688, 6313430, -52191.4, 901688, 6313260, -70136.5, 901688, 6314160, -69858.3, 895379, 6313430, -52191.4, 901688, 6314160, -69858.3, 895379, 6314110, -52253.9, 896969, 6314110, -52253.9, 896969, 6314160, -69858.3, 895379, 6350360, -56265.3, 590011, 6259450, -47928.2, 1219680, 6262490, -83246, 1202150, 6313260, -70136.5, 901688, 6259450, -47928.2, 1219680, 6313260, -70136.5, 901688, 6313430, -52191.4, 901688, 6313640, 0, 901688, 6313430, -52191.4, 901688, 6314110, -52253.9, 896969, 6314110, -52253.9, 896969, 6350360, -56265.3, 590011, 6342460, -624037e-9, 671408, 6314110, -52253.9, 896969, 6342460, -624037e-9, 671408, 6313640, 0, 901688, 6313640, 0, 901688, 6342460, -624037e-9, 671408, 6331740, 63035.1, 762733, 6313640, 0, 901688, 6331740, 63035.1, 762733, 6313580, 29168.3, 901688, 6259450, -47928.2, 1219680, 6313430, -52191.4, 901688, 6313640, 0, 901688, 6259450, -47928.2, 1219680, 6313640, 0, 901688, 6295220, -787038e-9, 1021670, 6313210, 28540.9, 904265, 6295220, -787038e-9, 1021670, 6313640, 0, 901688, 6313580, 29168.3, 901688, 6313210, 28540.9, 904265, 6313640, 0, 901688, 6331740, 63035.1, 762733, 6313520, 40014, 901688, 6313580, 29168.3, 901688, 6267820, -5446.15, 1177170, 6259450, -47928.2, 1219680, 6295220, -787038e-9, 1021670, 6267820, -5446.15, 1177170, 6295220, -787038e-9, 1021670, 6273990, -380573e-9, 1144060, 6273990, -380573e-9, 1144060, 6295220, -787038e-9, 1021670, 6313210, 28540.9, 904265, 6273990, -380573e-9, 1144060, 6313210, 28540.9, 904265, 6313010, 39424.7, 905248, 6313010, 39424.7, 905248, 6313210, 28540.9, 904265, 6313580, 29168.3, 901688, 6313010, 39424.7, 905248, 6313580, 29168.3, 901688, 6313520, 40014, 901688, 6313520, 40175.1, 901688, 6313520, 40014, 901688, 6331740, 63035.1, 762733, 6313520, 40175.1, 901688, 6331740, 63035.1, 762733, 6324970, 54198.8, 817310, 6273970, 264423e-10, 1144170, 6267820, -5446.15, 1177170, 6273990, -172345e-10, 1144060, 6273970, 264423e-10, 1144170, 6273990, -172345e-10, 1144060, 6313010, 39424.7, 905248, 6273970, 264423e-10, 1144170, 6313010, 39424.7, 905248, 6313010, 39581.4, 905262, 6313010, 39581.4, 905262, 6313010, 39424.7, 905248, 6313520, 40014, 901688, 6313010, 39581.4, 905262, 6313520, 40014, 901688, 6313520, 40175.1, 901688, 6324970, 54198.8, 817310, 6313460, 48931.7, 901688, 6313520, 40175.1, 901688, 6270860, -104485e-9, 1161e3, 6267820, -5446.15, 1177170, 6273970, 350588e-10, 1144170, 6313010, 39581.4, 905262, 6312820, 48657.4, 906082, 6291750, 40180.8, 1041930, 6313010, 39581.4, 905262, 6291750, 40180.8, 1041930, 6270860, -104485e-9, 1161e3, 6313010, 39581.4, 905262, 6270860, -104485e-9, 1161e3, 6273970, 350588e-10, 1144170, 6312820, 48657.4, 906082, 6313010, 39581.4, 905262, 6313520, 40175.1, 901688, 6312820, 48657.4, 906082, 6313520, 40175.1, 901688, 6313460, 48931.7, 901688, 6324970, 54198.8, 817310, 6313430, 52103.9, 901688, 6313460, 48931.7, 901688, 6305410, 50755.3, 955887, 6291750, 40180.8, 1041930, 6312820, 48657.4, 906082, 6305410, 50755.3, 955887, 6312820, 48657.4, 906082, 6312750, 51987.2, 906383, 6312750, 51987.2, 906383, 6312820, 48657.4, 906082, 6313460, 48931.7, 901688, 6312750, 51987.2, 906383, 6313460, 48931.7, 901688, 6313430, 52103.9, 901688, 6342460, -.00105997, 671408, 6350360, -56265.3, 590011, 6346840, -.00103301, 628930, 6342460, -.00105997, 671408, 6346840, -.00103301, 628930, 6339440, 92608.1, 693042, 6342460, -.00105997, 671408, 6339440, 92608.1, 693042, 6331740, 63035.1, 762733, 6346840, -.00112476, 628930, 6350360, -56265.3, 590011, 6348620, -195663e-9, 610877, 6346840, -.00112476, 628930, 6348620, -195663e-9, 610877, 6343160, 117378, 654431, 6346840, -.00112476, 628930, 6343160, 117378, 654431, 6339440, 92608.1, 693042, 6280960, -310212, 1061280, 6254260, -321250, 1204960, 6265740, -324415, 1143280, 6260130, -131498, 1210070, 6254260, -321250, 1204960, 6280960, -310212, 1061280, 6260130, -131498, 1210070, 6280960, -310212, 1061280, 6306740, -282217, 905827, 6261230, 490261e-10, 1211480, 6259450, -47928.2, 1219680, 6267820, -5446.15, 1177170, 6261230, 490261e-10, 1211480, 6267820, -5446.15, 1177170, 6263440, -145212e-10, 1200080, 6261320, 2601.15, 1211040, 6261230, 490261e-10, 1211480, 6263440, -145212e-10, 1200080, 6269080, -106794e-10, 1170480, 6267820, -5446.15, 1177170, 6270860, -121815e-9, 1161e3, 6269080, -106794e-10, 1170480, 6270860, -121815e-9, 1161e3, 6291750, 40180.8, 1041930, 6269080, -106794e-10, 1170480, 6291750, 40180.8, 1041930, 6278040, 40277.2, 1121070, 6313200, 74926, 901688, 6313430, 52103.9, 901688, 6324970, 54198.8, 817310, 6311080, 78433.5, 915987, 6305410, 50755.3, 955887, 6312750, 51987.2, 906383, 6311080, 78433.5, 915987, 6312750, 51987.2, 906383, 6312180, 76623.8, 908609, 6312180, 76623.8, 908609, 6312750, 51987.2, 906383, 6313430, 52103.9, 901688, 6312180, 76623.8, 908609, 6313430, 52103.9, 901688, 6313200, 74926, 901688, 6353e3, -217934, 520281, 6342490, -311387, 595030, 6346190, -316613, 551576, 6247740, -958507, 850191, 6240510, -958216, 901688, 6240300, -959560, 901688, 6170670, -953737, 1297120, 6162430, -965591, 1326970, 6240300, -959560, 901688, 6170670, -953737, 1297120, 6240300, -959560, 901688, 6240510, -958216, 901688, 6240890, -955735, 901688, 6240510, -958216, 901688, 6247740, -958507, 850191, 6194890, -939137, 1188470, 6170670, -953737, 1297120, 6240510, -958216, 901688, 6194890, -939137, 1188470, 6240510, -958216, 901688, 6240890, -955735, 901688, 6240890, -955735, 901688, 6247740, -958507, 850191, 6252770, -927711, 847382, 6240890, -955735, 901688, 6252770, -927711, 847382, 6244810, -929731, 901688, 6244810, -929731, 901688, 6194890, -939137, 1188470, 6240890, -955735, 901688, 6245360, -926064, 901688, 6244810, -929731, 901688, 6252770, -927711, 847382, 6196310, -915799, 1199160, 6194890, -939137, 1188470, 6244810, -929731, 901688, 6196310, -915799, 1199160, 6244810, -929731, 901688, 6245360, -926064, 901688, 6245360, -926064, 901688, 6252770, -927711, 847382, 6255290, -910397, 847507, 6245360, -926064, 901688, 6255290, -910397, 847507, 6247510, -911429, 901688, 6247510, -911429, 901688, 6196310, -915799, 1199160, 6245360, -926064, 901688, 6255290, -910397, 847507, 6247590, -910882, 901688, 6247510, -911429, 901688, 6245420, -911002, 916423, 6196310, -915799, 1199160, 6247510, -911429, 901688, 6245420, -911002, 916423, 6247510, -911429, 901688, 6247590, -910882, 901688, 6248380, -905437, 901688, 6247590, -910882, 901688, 6255290, -910397, 847507, 6248380, -905437, 901688, 6255290, -910397, 847507, 6249660, -903016, 895285, 6248380, -905437, 901688, 6245420, -911002, 916423, 6247590, -910882, 901688, 6248460, -859499, 944786, 6231020, -884488, 1032240, 6244710, -900265, 931633, 6231020, -884488, 1032240, 6245420, -911002, 916423, 6244710, -900265, 931633, 6231020, -884488, 1032240, 6219880, -908449, 1077320, 6245420, -911002, 916423, 6245420, -911002, 916423, 6219880, -908449, 1077320, 6205880, -909254, 1154100, 6214720, -898804, 1114300, 6205880, -909254, 1154100, 6219880, -908449, 1077320, 6216310, -876959, 1122740, 6205880, -909254, 1154100, 6214720, -898804, 1114300, 6200700, -902635, 1186480, 6196310, -915799, 1199160, 6205880, -909254, 1154100, 6245420, -911002, 916423, 6205880, -909254, 1154100, 6196310, -915799, 1199160, 6188760, -933897, 1223790, 6170670, -953737, 1297120, 6194890, -939137, 1188470, 6186560, -910936, 1251720, 6170670, -953737, 1297120, 6188760, -933897, 1223790, 6209750, -1120680, 926246, 6199510, -1148370, 960076, 6205200, -1150680, 919975, 6145220, -1101850, 1300530, 6199510, -1148370, 960076, 6209750, -1120680, 926246, 6213530, -1097470, 928684, 6145220, -1101850, 1300530, 6209750, -1120680, 926246, 6145540, -1071570, 1323950, 6145220, -1101850, 1300530, 6213530, -1097470, 928684, 6216660, -1068810, 940997, 6145540, -1071570, 1323950, 6213530, -1097470, 928684, 6148420, -1036390, 1338410, 6145540, -1071570, 1323950, 6216660, -1068810, 940997, 6233860, -1025e3, 873952, 6229750, -1025850, 901688, 6226870, -1043160, 901688, 6148420, -1036390, 1338410, 6216660, -1068810, 940997, 6226870, -1043160, 901688, 6148420, -1036390, 1338410, 6226870, -1043160, 901688, 6229750, -1025850, 901688, 623e4, -1024300, 901688, 6229750, -1025850, 901688, 6233860, -1025e3, 873952, 6149470, -1010060, 1353550, 6148420, -1036390, 1338410, 6229750, -1025850, 901688, 6149470, -1010060, 1353550, 6229750, -1025850, 901688, 623e4, -1024300, 901688, 6244510, -1013080, 809889, 6244610, -1012470, 809945, 6231910, -1012620, 901688, 6244510, -1013080, 809889, 6231910, -1012620, 901688, 623e4, -1024300, 901688, 6244510, -1013080, 809889, 623e4, -1024300, 901688, 6233860, -1025e3, 873952, 6245050, -1012460, 806581, 6244610, -1012470, 809945, 6244510, -1013080, 809889, 6231910, -1012620, 901688, 6149470, -1010060, 1353550, 623e4, -1024300, 901688, 6232520, -1008850, 901688, 6231910, -1012620, 901688, 6244610, -1012470, 809945, 6232520, -1008850, 901688, 6244610, -1012470, 809945, 6244630, -1012340, 809957, 6244630, -1012340, 809957, 6244610, -1012470, 809945, 6245050, -1012460, 806581, 6153570, -988668, 1350720, 6149470, -1010060, 1353550, 6231910, -1012620, 901688, 6153570, -988668, 1350720, 6231910, -1012620, 901688, 6232520, -1008850, 901688, 6232520, -1008850, 901688, 6244630, -1012340, 809957, 6249140, -981777, 812746, 6232520, -1008850, 901688, 6249140, -981777, 812746, 6236580, -983452, 901688, 6244630, -1012340, 809957, 6245050, -1012460, 806581, 6250030, -981642, 806045, 6244630, -1012340, 809957, 6250030, -981642, 806045, 6249140, -981777, 812746, 6236580, -983452, 901688, 6153570, -988668, 1350720, 6232520, -1008850, 901688, 6237250, -979211, 901688, 6236580, -983452, 901688, 6249140, -981777, 812746, 6237250, -979211, 901688, 6249140, -981777, 812746, 6249180, -981479, 812773, 6249180, -981479, 812773, 6249140, -981777, 812746, 6250030, -981642, 806045, 6162430, -965591, 1326970, 6153570, -988668, 1350720, 6236580, -983452, 901688, 6162430, -965591, 1326970, 6236580, -983452, 901688, 6237250, -979211, 901688, 6249690, -977951, 813096, 6247740, -958507, 850191, 6240300, -959560, 901688, 6249690, -977951, 813096, 6240300, -959560, 901688, 6237250, -979211, 901688, 6249690, -977951, 813096, 6237250, -979211, 901688, 6249180, -981479, 812773, 6249690, -977951, 813096, 6249180, -981479, 812773, 6250030, -981642, 806045, 6240300, -959560, 901688, 6162430, -965591, 1326970, 6237250, -979211, 901688, 6145220, -1101850, 1300530, 6135030, -1147390, 1309180, 6199510, -1148370, 960076, 6199510, -1148370, 960076, 6135030, -1147390, 1309180, 6187540, -1160470, 1020420, 6135030, -1147390, 1309180, 6175590, -1182440, 1066270, 6187540, -1160470, 1020420, 6135030, -1147390, 1309180, 6123640, -1175990, 1336650, 6175590, -1182440, 1066270, 6163120, -1211110, 1105250, 6116990, -1222030, 1325840, 6113610, -1238960, 1325710, 6119450, -1193560, 1340250, 6116990, -1222030, 1325840, 6163120, -1211110, 1105250, 6175590, -1182440, 1066270, 6119450, -1193560, 1340250, 6163120, -1211110, 1105250, 6175590, -1182440, 1066270, 6123640, -1175990, 1336650, 6119450, -1193560, 1340250, 6113610, -1238960, 1325710, 6103930, -1243400, 1365300, 6102090, -1259050, 1359200, 6163120, -1211110, 1105250, 6113610, -1238960, 1325710, 6102090, -1259050, 1359200, 6163120, -1211110, 1105250, 6102090, -1259050, 1359200, 6145590, -1297020, 1105370, 6102090, -1259050, 1359200, 6143790, -1322760, 1084840, 6145590, -1297020, 1105370, 6102090, -1259050, 1359200, 6088e3, -1316670, 1367740, 6143790, -1322760, 1084840, 6143790, -1322760, 1084840, 6088e3, -1316670, 1367740, 6088850, -1325200, 1355730, 6143790, -1322760, 1084840, 6088850, -1325200, 1355730, 6137780, -1352390, 1082360, 6088850, -1325200, 1355730, 6084220, -1348740, 1353320, 6137780, -1352390, 1082360, 6137780, -1352390, 1082360, 6084220, -1348740, 1353320, 6137650, -1371560, 1058850, 6084220, -1348740, 1353320, 6139810, -1385020, 1028580, 6137650, -1371560, 1058850, 6084220, -1348740, 1353320, 6061160, -1423620, 1379650, 6139810, -1385020, 1028580, 6139810, -1385020, 1028580, 6061160, -1423620, 1379650, 6134120, -1444010, 980570, 6061160, -1423620, 1379650, 6112720, -1488450, 1045170, 6134120, -1444010, 980570, 6061160, -1423620, 1379650, 6048710, -1474570, 1380760, 6112720, -1488450, 1045170, 6112720, -1488450, 1045170, 6064e3, -1500780, 1282620, 6095420, -1528120, 1087850, 6112720, -1488450, 1045170, 6065210, -1483380, 1296980, 6064e3, -1500780, 1282620, 6112720, -1488450, 1045170, 6056080, -1478410, 1344140, 6065210, -1483380, 1296980, 6112720, -1488450, 1045170, 6048710, -1474570, 1380760, 6056080, -1478410, 1344140, 6064e3, -1500780, 1282620, 6058210, -1524120, 1282440, 6095420, -1528120, 1087850, 6095420, -1528120, 1087850, 6058210, -1524120, 1282440, 6086120, -1554740, 1101960, 6058210, -1524120, 1282440, 6054830, -1552610, 1264260, 6086120, -1554740, 1101960, 6086120, -1554740, 1101960, 6054830, -1552610, 1264260, 6075560, -1580270, 1123610, 6054830, -1552610, 1264260, 6046120, -1584560, 1266260, 6075560, -1580270, 1123610, 6075560, -1580270, 1123610, 6046120, -1584560, 1266260, 6063850, -1590050, 1171670, 6046120, -1584560, 1266260, 6055370, -1604380, 1195600, 6063850, -1590050, 1171670, 6056080, -1478410, 1344140, 6055610, -1490570, 1332830, 6065210, -1483380, 1296980, 6046120, -1584560, 1266260, 6043830, -1634180, 1213390, 6055370, -1604380, 1195600, 6199510, -1148370, 960076, 6187540, -1160470, 1020420, 6191890, -1164910, 988669, 6233860, -1025e3, 873952, 6238570, -1033160, 829938, 6244190, -1015220, 809694, 6233860, -1025e3, 873952, 6244190, -1015220, 809694, 6244510, -1013080, 809889, 6245050, -1012460, 806581, 6244510, -1013080, 809889, 6244190, -1015220, 809694, 6016890, -1531190, 1455640, 5997080, -1571850, 1493270, 6004670, -1576660, 1457530, 6016890, -1531190, 1455640, 6005630, -1539380, 1492770, 5997080, -1571850, 1493270, 6010100, -1503720, 1510870, 6005630, -1539380, 1492770, 6016890, -1531190, 1455640, 6022700, -1484330, 1479790, 6010100, -1503720, 1510870, 6016890, -1531190, 1455640, 5997080, -1571850, 1493270, 5979860, -1611440, 1519720, 6004670, -1576660, 1457530, 6004670, -1576660, 1457530, 5979860, -1611440, 1519720, 5987460, -1620160, 1480270, 5979860, -1611440, 1519720, 5971270, -1644630, 1517990, 5987460, -1620160, 1480270, 5987460, -1620160, 1480270, 5971270, -1644630, 1517990, 5982560, -1660440, 1455420, 5971270, -1644630, 1517990, 5970730, -1669820, 1492540, 5982560, -1660440, 1455420, 5982560, -1660440, 1455420, 5970730, -1669820, 1492540, 5977540, -1679200, 1454540, 5970730, -1669820, 1492540, 5973850, -1705220, 1439450, 5977540, -1679200, 1454540, 5973850, -1705220, 1439450, 5938630, -1783220, 1489470, 5945500, -1799750, 1441720, 5970730, -1669820, 1492540, 5938630, -1783220, 1489470, 5973850, -1705220, 1439450, 6065210, -1483380, 1296980, 6055610, -1490570, 1332830, 6064e3, -1500780, 1282620, 6055610, -1490570, 1332830, 6058210, -1524120, 1282440, 6064e3, -1500780, 1282620, 6048710, -1474570, 1380760, 6058210, -1524120, 1282440, 6055610, -1490570, 1332830, 6048710, -1474570, 1380760, 6054830, -1552610, 1264260, 6058210, -1524120, 1282440, 6048710, -1474570, 1380760, 6046120, -1584560, 1266260, 6054830, -1552610, 1264260, 6048710, -1474570, 1380760, 5997040, -1668590, 1385300, 6046120, -1584560, 1266260, 6046120, -1584560, 1266260, 5997040, -1668590, 1385300, 6043830, -1634180, 1213390, 6043830, -1634180, 1213390, 5997040, -1668590, 1385300, 6019650, -1687990, 1258750, 5997040, -1668590, 1385300, 5991770, -1697380, 1373140, 6019650, -1687990, 1258750, 6005680, -1731770, 1265920, 5989500, -1752460, 1312930, 5992650, -1754050, 1296460, 6005680, -1731770, 1265920, 5981120, -1731760, 1376620, 5989500, -1752460, 1312930, 5991770, -1697380, 1373140, 5981120, -1731760, 1376620, 6005680, -1731770, 1265920, 6019650, -1687990, 1258750, 5991770, -1697380, 1373140, 6005680, -1731770, 1265920, 5981120, -1731760, 1376620, 5968580, -1788100, 1359020, 5975390, -1782910, 1335890, 5981120, -1731760, 1376620, 5975390, -1782910, 1335890, 5989500, -1752460, 1312930, 6048710, -1474570, 1380760, 6055610, -1490570, 1332830, 6056080, -1478410, 1344140, 6253760, 1247930, 116943, 6250170, 1246230, 249950, 6283410, 1088750, 118074, 6250170, 1246230, 249950, 6289820, 1051750, 111688, 6283410, 1088750, 118074, 6250170, 1246230, 249950, 6292920, 1031140, 128358, 6289820, 1051750, 111688, 6250170, 1246230, 249950, 6282940, 1068230, 252472, 6292920, 1031140, 128358, 4745630, 2186260, 3645590, 4747580, 2138300, 3671240, 4779670, 2079750, 3663270, 4714780, 2201040, 3676390, 4747580, 2138300, 3671240, 4745630, 2186260, 3645590, 4694170, 2306260, 3638320, 4714780, 2201040, 3676390, 4745630, 2186260, 3645590, 4694170, 2306260, 3638320, 4700890, 2266940, 3654210, 4714780, 2201040, 3676390, 4672230, 2308150, 3665080, 4700890, 2266940, 3654210, 4694170, 2306260, 3638320, 4485920, 1782820, 4154800, 4749160, 1887040, 3803640, 4748280, 1965830, 3764900, 4485920, 1782820, 4154800, 4748280, 1965830, 3764900, 4485790, 1783140, 4154800, 4485790, 1783140, 4154800, 4484420, 1782230, 4156660, 4485920, 1782820, 4154800, 4748280, 1965830, 3764900, 4473260, 1814360, 4154800, 4485790, 1783140, 4154800, 4457690, 1806040, 4174970, 4484420, 1782230, 4156660, 4485790, 1783140, 4154800, 4457690, 1806040, 4174970, 4485790, 1783140, 4154800, 4473260, 1814360, 4154800, 4456780, 1854470, 4154800, 4473260, 1814360, 4154800, 4748280, 1965830, 3764900, 4441720, 1848660, 4173350, 4457690, 1806040, 4174970, 4473260, 1814360, 4154800, 4441720, 1848660, 4173350, 4473260, 1814360, 4154800, 4456780, 1854470, 4154800, 4456780, 1854470, 4154800, 4748280, 1965830, 3764900, 4499180, 1875250, 4099770, 4456780, 1854470, 4154800, 4499180, 1875250, 4099770, 4456380, 1855440, 4154800, 4456380, 1855440, 4154800, 4441720, 1848660, 4173350, 4456780, 1854470, 4154800, 4683510, 1966360, 3844370, 4499180, 1875250, 4099770, 4748280, 1965830, 3764900, 4724410, 2020420, 3766020, 4683510, 1966360, 3844370, 4748280, 1965830, 3764900, 4674540, 1805630, 3932530, 4510490, 1733220, 4149220, 4528860, 1738460, 4127110, 4491e3, 1769980, 4154800, 4510490, 1733220, 4149220, 4674540, 1805630, 3932530, 4491e3, 1769980, 4154800, 4674540, 1805630, 3932530, 4486070, 1782460, 4154800, 4484420, 1782230, 4156660, 4491e3, 1769980, 4154800, 4486070, 1782460, 4154800, 4486070, 1782460, 4154800, 4674540, 1805630, 3932530, 4711340, 1836400, 3874320, 4486070, 1782460, 4154800, 4711340, 1836400, 3874320, 4486e3, 1782620, 4154800, 4484420, 1782230, 4156660, 4486070, 1782460, 4154800, 4486e3, 1782620, 4154800, 4486e3, 1782620, 4154800, 4711340, 1836400, 3874320, 4749160, 1887040, 3803640, 4486e3, 1782620, 4154800, 4749160, 1887040, 3803640, 4485920, 1782820, 4154800, 4484420, 1782230, 4156660, 4486e3, 1782620, 4154800, 4485920, 1782820, 4154800, 4656990, 1762520, 3972440, 4572060, 1719890, 4087330, 4635130, 1707020, 4021600, 4656990, 1762520, 3972440, 4548430, 1716440, 4114870, 4572060, 1719890, 4087330, 4528860, 1738460, 4127110, 4548430, 1716440, 4114870, 4656990, 1762520, 3972440, 4674540, 1805630, 3932530, 4528860, 1738460, 4127110, 4656990, 1762520, 3972440, 4654940, 2015340, 3853630, 4633440, 1977760, 3898440, 4683510, 1966360, 3844370, 4633440, 1977760, 3898440, 4531090, 1909320, 4048940, 4683510, 1966360, 3844370, 4633440, 1977760, 3898440, 4571550, 1937970, 3989810, 4531090, 1909320, 4048940, 4581850, 1995100, 3949900, 4571550, 1937970, 3989810, 4633440, 1977760, 3898440, 4617370, 2059650, 3875200, 4581850, 1995100, 3949900, 4633440, 1977760, 3898440, 4447290, 2018130, 4088610, 4434340, 1947910, 4136140, 4475660, 1983340, 4074750, 4475660, 1983340, 4074750, 4434340, 1947910, 4136140, 4494790, 1939760, 4074670, 4423860, 1931680, 4154800, 4494790, 1939760, 4074670, 4434340, 1947910, 4136140, 4423860, 1931680, 4154800, 4434340, 1947910, 4136140, 4419870, 1940800, 4154800, 4419870, 1940800, 4154800, 4393620, 1927940, 4188270, 4423860, 1931680, 4154800, 4413040, 1956260, 4154800, 4419870, 1940800, 4154800, 4434340, 1947910, 4136140, 4347870, 1980760, 4211150, 4393620, 1927940, 4188270, 4419870, 1940800, 4154800, 4347870, 1980760, 4211150, 4419870, 1940800, 4154800, 4413040, 1956260, 4154800, 4383830, 2020870, 4154800, 4413040, 1956260, 4154800, 4434340, 1947910, 4136140, 4347870, 1980760, 4211150, 4413040, 1956260, 4154800, 4383830, 2020870, 4154800, 4347870, 1980760, 4211150, 4383830, 2020870, 4154800, 4375070, 2033230, 4157990, 4423860, 1931680, 4154800, 4441030, 1891880, 4154800, 4494790, 1939760, 4074670, 4393620, 1927940, 4188270, 4416190, 1870230, 4190680, 4441030, 1891880, 4154800, 4393620, 1927940, 4188270, 4441030, 1891880, 4154800, 4423860, 1931680, 4154800, 4447290, 1877100, 4154800, 4478470, 1883860, 4118330, 4494790, 1939760, 4074670, 4447290, 1877100, 4154800, 4494790, 1939760, 4074670, 4441030, 1891880, 4154800, 4441030, 1891880, 4154800, 4416190, 1870230, 4190680, 4447290, 1877100, 4154800, 4447290, 1877100, 4154800, 4450460, 1869590, 4154800, 4478470, 1883860, 4118330, 4416190, 1870230, 4190680, 4424630, 1856470, 4187910, 4450460, 1869590, 4154800, 4416190, 1870230, 4190680, 4450460, 1869590, 4154800, 4447290, 1877100, 4154800, 4452940, 1863670, 4154800, 4499180, 1875250, 4099770, 4478470, 1883860, 4118330, 4452940, 1863670, 4154800, 4478470, 1883860, 4118330, 4450460, 1869590, 4154800, 4450460, 1869590, 4154800, 4424630, 1856470, 4187910, 4452940, 1863670, 4154800, 4452940, 1863670, 4154800, 4456380, 1855440, 4154800, 4499180, 1875250, 4099770, 4424630, 1856470, 4187910, 4441720, 1848660, 4173350, 4456380, 1855440, 4154800, 4424630, 1856470, 4187910, 4456380, 1855440, 4154800, 4452940, 1863670, 4154800, 4329880, 2134040, 4154800, 4336250, 2121040, 4154800, 4342110, 2123130, 4147660, 4307210, 2110650, 4189920, 4336250, 2121040, 4154800, 4329880, 2134040, 4154800, 4307210, 2110650, 4189920, 4329880, 2134040, 4154800, 4325950, 2137510, 4157080, 4325950, 2137510, 4157080, 4273850, 2095310, 4231300, 4307210, 2110650, 4189920, 4273370, 2140340, 4209340, 4273850, 2095310, 4231300, 4325950, 2137510, 4157080, 4362580, 2075960, 4150050, 4360200, 2071370, 4154800, 4370100, 2050410, 4154800, 4346400, 2045e3, 4182040, 4375070, 2033230, 4157990, 4370100, 2050410, 4154800, 4346400, 2045e3, 4182040, 4370100, 2050410, 4154800, 4360200, 2071370, 4154800, 4356030, 2080130, 4154800, 4360200, 2071370, 4154800, 4362580, 2075960, 4150050, 4307210, 2110650, 4189920, 4346400, 2045e3, 4182040, 4360200, 2071370, 4154800, 4307210, 2110650, 4189920, 4360200, 2071370, 4154800, 4356030, 2080130, 4154800, 4356030, 2080130, 4154800, 4362580, 2075960, 4150050, 4342110, 2123130, 4147660, 4356030, 2080130, 4154800, 4342110, 2123130, 4147660, 4336250, 2121040, 4154800, 4307210, 2110650, 4189920, 4356030, 2080130, 4154800, 4336250, 2121040, 4154800, 4346400, 2045e3, 4182040, 4347870, 1980760, 4211150, 4375070, 2033230, 4157990, 4544620, 1961930, 4008690, 4531090, 1909320, 4048940, 4571550, 1937970, 3989810, 4617370, 2059650, 3875200, 4582690, 2042740, 3924660, 4581850, 1995100, 3949900, 4531090, 1909320, 4048940, 4499180, 1875250, 4099770, 4683510, 1966360, 3844370, 4572060, 1719890, 4087330, 4618270, 1694620, 4046e3, 4635130, 1707020, 4021600, 4747580, 2138300, 3671240, 4747870, 2084170, 3701660, 4779670, 2079750, 3663270, 4689900, 2264080, 3669970, 4714780, 2201040, 3676390, 4700890, 2266940, 3654210, 4694170, 2306260, 3638320, 4745630, 2186260, 3645590, 4755550, 2189820, 3630590, 2223590, -2031610, 5603320, 2152710, -1994780, 5643820, 2266930, -2104080, 5559340, 2152710, -1994780, 5643820, 2316910, -2189340, 5505910, 2266930, -2104080, 5559340, 1353380, -1190510, 6097630, 1641760, -1473650, 5964380, 1643840, -1469740, 5964770, 1353380, -1190510, 6097630, 1643840, -1469740, 5964770, 1355020, -1188650, 6097630, 1641760, -1473650, 5964380, 2316910, -2189340, 5505910, 2152710, -1994780, 5643820, 1641760, -1473650, 5964380, 2152710, -1994780, 5643820, 1643840, -1469740, 5964770, 582988, -487410, 6311480, 1353380, -1190510, 6097630, 1355020, -1188650, 6097630, 1355020, -1188650, 6097630, 1643840, -1469740, 5964770, 1662620, -1433420, 5968380, 1355020, -1188650, 6097630, 1662620, -1433420, 5968380, 1370150, -1171170, 6097630, 1643840, -1469740, 5964770, 2152710, -1994780, 5643820, 2148750, -1880340, 5684190, 1643840, -1469740, 5964770, 2148750, -1880340, 5684190, 1662620, -1433420, 5968380, 582988, -487410, 6311480, 1355020, -1188650, 6097630, 1370150, -1171170, 6097630, 1611400, -807677, 6097630, 1594610, -840342, 6097630, 1832450, -964852, 6012340, 1611400, -807677, 6097630, 1832450, -964852, 6012340, 1837400, -942655, 6014330, 1837400, -942655, 6014330, 1832450, -964852, 6012340, 2077520, -1092920, 5910550, 829538, -384083, 6291120, 774502, -409329, 6296510, 1594610, -840342, 6097630, 829538, -384083, 6291120, 1594610, -840342, 6097630, 1611400, -807677, 6097630, 1611400, -807677, 6097630, 1837400, -942655, 6014330, 1844460, -908709, 6017380, 1611400, -807677, 6097630, 1844460, -908709, 6017380, 1621240, -787752, 6097630, 1837400, -942655, 6014330, 2077520, -1092920, 5910550, 1939090, -961005, 5979640, 1837400, -942655, 6014330, 1939090, -961005, 5979640, 1844460, -908709, 6017380, 829538, -384083, 6291120, 1611400, -807677, 6097630, 1621240, -787752, 6097630, 2052700, -958467, 5942260, 1939090, -961005, 5979640, 2077520, -1092920, 5910550, 1985310, -872624, 5978030, 1939090, -961005, 5979640, 2052700, -958467, 5942260, 2011020, -826789, 5975970, 1985310, -872624, 5978030, 2052700, -958467, 5942260, 1811010, -742731, 605e4, 1767020, -725181, 6065020, 1684500, -734748, 6087160, 1811010, -742731, 605e4, 1684500, -734748, 6087160, 1744160, -786726, 6063970, 1644810, -737265, 6097630, 1744160, -786726, 6063970, 1684500, -734748, 6087160, 1644810, -737265, 6097630, 1684500, -734748, 6087160, 1652370, -720162, 6097630, 904808, -387233, 6280620, 1644810, -737265, 6097630, 1652370, -720162, 6097630, 1639510, -748985, 6097630, 1762890, -814307, 6054970, 1744160, -786726, 6063970, 1639510, -748985, 6097630, 1744160, -786726, 6063970, 1644810, -737265, 6097630, 904808, -387233, 6280620, 1639510, -748985, 6097630, 1644810, -737265, 6097630, 1639510, -748985, 6097630, 1636260, -756060, 6097630, 1762890, -814307, 6054970, 904808, -387233, 6280620, 829538, -384083, 6291120, 1636260, -756060, 6097630, 904808, -387233, 6280620, 1636260, -756060, 6097630, 1639510, -748985, 6097630, 1628320, -772997, 6097630, 1838120, -878448, 6023760, 1762890, -814307, 6054970, 1628320, -772997, 6097630, 1762890, -814307, 6054970, 1636260, -756060, 6097630, 1636260, -756060, 6097630, 829538, -384083, 6291120, 1628320, -772997, 6097630, 1848680, -886850, 6019330, 1838120, -878448, 6023760, 1628320, -772997, 6097630, 1848680, -886850, 6019330, 1628320, -772997, 6097630, 1621240, -787752, 6097630, 1848680, -886850, 6019330, 1621240, -787752, 6097630, 1844460, -908709, 6017380, 1848680, -886850, 6019330, 1844460, -908709, 6017380, 1939090, -961005, 5979640, 829538, -384083, 6291120, 1621240, -787752, 6097630, 1628320, -772997, 6097630, 1849630, -881722, 6019790, 1838120, -878448, 6023760, 1848680, -886850, 6019330, 1848680, -886850, 6019330, 1939090, -961005, 5979640, 1908140, -897957, 5999230, 1848680, -886850, 6019330, 1908140, -897957, 5999230, 1849630, -881722, 6019790, 1687210, -634264, 6097630, 1683320, -644506, 6097630, 1702650, -645493, 6092190, 1670920, -622555, 6103280, 1617400, -640186, 6115780, 1683320, -644506, 6097630, 1670920, -622555, 6103280, 1683320, -644506, 6097630, 1687210, -634264, 6097630, 1671640, -674220, 6097630, 1701590, -693443, 6087250, 1702650, -645493, 6092190, 1671640, -674220, 6097630, 1702650, -645493, 6092190, 1683320, -644506, 6097630, 1683320, -644506, 6097630, 1617400, -640186, 6115780, 1671640, -674220, 6097630, 1671640, -674220, 6097630, 1669780, -678830, 6097630, 1701590, -693443, 6087250, 1375110, -546651, 6183300, 1669780, -678830, 6097630, 1671640, -674220, 6097630, 1375110, -546651, 6183300, 1671640, -674220, 6097630, 1617400, -640186, 6115780, 1446080, -521592, 6169350, 1375110, -546651, 6183300, 1617400, -640186, 6115780, 1446080, -521592, 6169350, 1617400, -640186, 6115780, 1533650, -578547, 6143250, 1633730, -574454, 6117950, 1533650, -578547, 6143250, 1617400, -640186, 6115780, 1357940, -495188, 6191370, 882692, -332197, 6286870, 1375110, -546651, 6183300, 1357940, -495188, 6191370, 1025550, -374205, 6262950, 882692, -332197, 6286870, 1175100, -420864, 6233840, 1025550, -374205, 6262950, 1357940, -495188, 6191370, 1289840, -461155, 6208420, 1175100, -420864, 6233840, 1357940, -495188, 6191370, 1366670, -456563, 6192410, 1289840, -461155, 6208420, 1357940, -495188, 6191370, 1113620, -381276, 6247560, 1025550, -374205, 6262950, 1175100, -420864, 6233840, 1044860, -334068, 6262030, 1025550, -374205, 6262950, 1113620, -381276, 6247560, 882692, -332197, 6286870, 904808, -387233, 6280620, 1375110, -546651, 6183300, 1669780, -678830, 6097630, 1668710, -681455, 6097630, 1701590, -693443, 6087250, 1375110, -546651, 6183300, 904808, -387233, 6280620, 1668710, -681455, 6097630, 1375110, -546651, 6183300, 1668710, -681455, 6097630, 1669780, -678830, 6097630, 1652370, -720162, 6097630, 1684500, -734748, 6087160, 1701590, -693443, 6087250, 1652370, -720162, 6097630, 1701590, -693443, 6087250, 1668710, -681455, 6097630, 1668710, -681455, 6097630, 904808, -387233, 6280620, 1652370, -720162, 6097630, 946960, -204889, 6282980, 898880, -203729, 6290030, 866390, -244644, 6293110, 946960, -204889, 6282980, 866390, -244644, 6293110, 1005310, -293692, 6270470, 866390, -244644, 6293110, 1026600, -310928, 6266210, 1005310, -293692, 6270470, 866390, -244644, 6293110, 1025550, -374205, 6262950, 1026600, -310928, 6266210, 866390, -244644, 6293110, 882692, -332197, 6286870, 1025550, -374205, 6262950, 810886, -342587, 6295920, 829538, -384083, 6291120, 904808, -387233, 6280620, 852524, -345686, 6290280, 810886, -342587, 6295920, 904808, -387233, 6280620, 1866920, -769925, 6029710, 1805950, -783115, 6046450, 1865e3, -784903, 6028380, 1866920, -769925, 6029710, 1865e3, -784903, 6028380, 1967360, -785039, 5995960, 1866920, -769925, 6029710, 1967360, -785039, 5995960, 1883390, -766022, 6025120, 1865e3, -784903, 6028380, 1805950, -783115, 6046450, 1861700, -808578, 6026290, 1861700, -808578, 6026290, 1960570, -853947, 5988810, 1967360, -785039, 5995960, 1861700, -808578, 6026290, 1967360, -785039, 5995960, 1865e3, -784903, 6028380, 1805950, -783115, 6046450, 1859520, -823127, 6025e3, 1861700, -808578, 6026290, 1859520, -823127, 6025e3, 1911920, -863546, 6003050, 1960570, -853947, 5988810, 1859520, -823127, 6025e3, 1960570, -853947, 5988810, 1861700, -808578, 6026290, 1805950, -783115, 6046450, 1762890, -814307, 6054970, 1855980, -845407, 6023020, 1805950, -783115, 6046450, 1855980, -845407, 6023020, 1859520, -823127, 6025e3, 1859520, -823127, 6025e3, 1855980, -845407, 6023020, 1911920, -863546, 6003050, 1521230, -966868, 6097630, 1783380, -1141670, 5996210, 1792930, -1111650, 5998980, 1521230, -966868, 6097630, 1792930, -1111650, 5998980, 1531510, -950500, 6097630, 1783380, -1141670, 5996210, 2036880, -1313240, 5879980, 2026400, -1255280, 5896130, 1783380, -1141670, 5996210, 2026400, -1255280, 5896130, 1792930, -1111650, 5998980, 1531510, -950500, 6097630, 737307, -458933, 6297550, 1521230, -966868, 6097630, 1534800, -945169, 6097630, 1531510, -950500, 6097630, 1792930, -1111650, 5998980, 1534800, -945169, 6097630, 1792930, -1111650, 5998980, 1794e3, -1108200, 5999290, 1794e3, -1108200, 5999290, 1792930, -1111650, 5998980, 2026400, -1255280, 5896130, 758165, -462722, 6294810, 737307, -458933, 6297550, 1531510, -950500, 6097630, 758165, -462722, 6294810, 1531510, -950500, 6097630, 1534800, -945169, 6097630, 1534800, -945169, 6097630, 1794e3, -1108200, 5999290, 1803680, -1075830, 6002260, 1534800, -945169, 6097630, 1803680, -1075830, 6002260, 1545680, -927282, 6097630, 1794e3, -1108200, 5999290, 2026400, -1255280, 5896130, 2049810, -1215820, 5896300, 1794e3, -1108200, 5999290, 2049810, -1215820, 5896300, 1803680, -1075830, 6002260, 1545680, -927282, 6097630, 758165, -462722, 6294810, 1534800, -945169, 6097630, 1567790, -889375, 6097630, 1545680, -927282, 6097630, 1803680, -1075830, 6002260, 1567790, -889375, 6097630, 1803680, -1075830, 6002260, 1810860, -1050390, 6004590, 1810860, -1050390, 6004590, 1803680, -1075830, 6002260, 2049810, -1215820, 5896300, 774502, -409329, 6296510, 758165, -462722, 6294810, 1545680, -927282, 6097630, 774502, -409329, 6296510, 1545680, -927282, 6097630, 1567790, -889375, 6097630, 1567790, -889375, 6097630, 1810860, -1050390, 6004590, 1832450, -964852, 6012340, 1567790, -889375, 6097630, 1832450, -964852, 6012340, 1594610, -840342, 6097630, 1810860, -1050390, 6004590, 2049810, -1215820, 5896300, 2077520, -1092920, 5910550, 1810860, -1050390, 6004590, 2077520, -1092920, 5910550, 1832450, -964852, 6012340, 1594610, -840342, 6097630, 774502, -409329, 6296510, 1567790, -889375, 6097630, 1508770, -986192, 6097630, 1484310, -1022630, 6097630, 1761160, -1205970, 5990220, 1508770, -986192, 6097630, 1761160, -1205970, 5990220, 1771180, -1177810, 5992850, 1771180, -1177810, 5992850, 1761160, -1205970, 5990220, 2094180, -1423310, 5834360, 737307, -458933, 6297550, 579598, -407165, 6317430, 1484310, -1022630, 6097630, 737307, -458933, 6297550, 1484310, -1022630, 6097630, 1508770, -986192, 6097630, 642942, -329017, 6315870, 579598, -407165, 6317430, 737307, -458933, 6297550, 767432, -382920, 6299020, 642942, -329017, 6315870, 737307, -458933, 6297550, 757130, -288293, 6305260, 642942, -329017, 6315870, 767432, -382920, 6299020, 757130, -288293, 6305260, 767432, -382920, 6299020, 786779, -328984, 6299680, 1461850, -1054490, 6097630, 1738630, -1265e3, 5984660, 1761160, -1205970, 5990220, 1461850, -1054490, 6097630, 1761160, -1205970, 5990220, 1484310, -1022630, 6097630, 1738630, -1265e3, 5984660, 2096930, -1543330, 5802990, 2094180, -1423310, 5834360, 1738630, -1265e3, 5984660, 2094180, -1423310, 5834360, 1761160, -1205970, 5990220, 1484310, -1022630, 6097630, 579598, -407165, 6317430, 1461850, -1054490, 6097630, 1454660, -1064390, 6097630, 1731050, -1283740, 5982880, 1738630, -1265e3, 5984660, 1454660, -1064390, 6097630, 1738630, -1265e3, 5984660, 1461850, -1054490, 6097630, 1731050, -1283740, 5982880, 2081520, -1571030, 5801120, 2096930, -1543330, 5802990, 1731050, -1283740, 5982880, 2096930, -1543330, 5802990, 1738630, -1265e3, 5984660, 579598, -407165, 6317430, 1454660, -1064390, 6097630, 1461850, -1054490, 6097630, 1441030, -1082770, 6097630, 1716190, -1319040, 5979510, 1731050, -1283740, 5982880, 1441030, -1082770, 6097630, 1731050, -1283740, 5982880, 1454660, -1064390, 6097630, 1716190, -1319040, 5979510, 2064040, -1634470, 5789900, 2081520, -1571030, 5801120, 1716190, -1319040, 5979510, 2081520, -1571030, 5801120, 1731050, -1283740, 5982880, 579598, -407165, 6317430, 1441030, -1082770, 6097630, 1454660, -1064390, 6097630, 1441030, -1082770, 6097630, 1410940, -1121710, 6097630, 1702120, -1350860, 5976440, 1441030, -1082770, 6097630, 1702120, -1350860, 5976440, 1716190, -1319040, 5979510, 1716190, -1319040, 5979510, 1702120, -1350860, 5976440, 2064040, -1634470, 5789900, 579598, -407165, 6317430, 561729, -448777, 6316230, 1410940, -1121710, 6097630, 579598, -407165, 6317430, 1410940, -1121710, 6097630, 1441030, -1082770, 6097630, 2062410, -1772020, 5750150, 2148750, -1880340, 5684190, 2115470, -1818490, 5716490, 1370150, -1171170, 6097630, 1662620, -1433420, 5968380, 1668150, -1422400, 5969470, 1370150, -1171170, 6097630, 1668150, -1422400, 5969470, 1374720, -1165810, 6097630, 1662620, -1433420, 5968380, 2148750, -1880340, 5684190, 2062410, -1772020, 5750150, 1662620, -1433420, 5968380, 2062410, -1772020, 5750150, 1668150, -1422400, 5969470, 582988, -487410, 6311480, 1370150, -1171170, 6097630, 1374720, -1165810, 6097630, 1374720, -1165810, 6097630, 1668150, -1422400, 5969470, 1678900, -1400500, 5971620, 1374720, -1165810, 6097630, 1678900, -1400500, 5971620, 1383780, -1155040, 6097630, 1668150, -1422400, 5969470, 2062410, -1772020, 5750150, 2040610, -1700910, 5779130, 1668150, -1422400, 5969470, 2040610, -1700910, 5779130, 1678900, -1400500, 5971620, 1383780, -1155040, 6097630, 582988, -487410, 6311480, 1374720, -1165810, 6097630, 1395350, -1141030, 6097630, 1383780, -1155040, 6097630, 1678900, -1400500, 5971620, 1395350, -1141030, 6097630, 1678900, -1400500, 5971620, 1684400, -1389030, 5972740, 1684400, -1389030, 5972740, 1678900, -1400500, 5971620, 2040610, -1700910, 5779130, 561729, -448777, 6316230, 582988, -487410, 6311480, 1383780, -1155040, 6097630, 561729, -448777, 6316230, 1383780, -1155040, 6097630, 1395350, -1141030, 6097630, 1395350, -1141030, 6097630, 1684400, -1389030, 5972740, 1702120, -1350860, 5976440, 1395350, -1141030, 6097630, 1702120, -1350860, 5976440, 1410940, -1121710, 6097630, 1684400, -1389030, 5972740, 2040610, -1700910, 5779130, 2064040, -1634470, 5789900, 1684400, -1389030, 5972740, 2064040, -1634470, 5789900, 1702120, -1350860, 5976440, 1410940, -1121710, 6097630, 561729, -448777, 6316230, 1395350, -1141030, 6097630, 661706, -650779, 6289090, 562454, -598195, 6303860, 593410, -634148, 6297540, 548438, -518748, 6312070, 562454, -598195, 6303860, 661706, -650779, 6289090, 1309750, -1238350, 6097630, 1294480, -1254310, 6097630, 1603560, -1542350, 5957450, 1309750, -1238350, 6097630, 1603560, -1542350, 5957450, 1613410, -1525190, 5959190, 2316910, -2189340, 5505910, 1613410, -1525190, 5959190, 1603560, -1542350, 5957450, 548438, -518748, 6312070, 661706, -650779, 6289090, 1294480, -1254310, 6097630, 548438, -518748, 6312070, 1294480, -1254310, 6097630, 1309750, -1238350, 6097630, 1353380, -1190510, 6097630, 1309750, -1238350, 6097630, 1613410, -1525190, 5959190, 1353380, -1190510, 6097630, 1613410, -1525190, 5959190, 1641760, -1473650, 5964380, 1641760, -1473650, 5964380, 1613410, -1525190, 5959190, 2316910, -2189340, 5505910, 582988, -487410, 6311480, 548438, -518748, 6312070, 1309750, -1238350, 6097630, 582988, -487410, 6311480, 1309750, -1238350, 6097630, 1353380, -1190510, 6097630, 1241500, -1306760, 6097630, 1222090, -1324940, 6097630, 1538410, -1647560, 5946530, 1241500, -1306760, 6097630, 1538410, -1647560, 5946530, 1550820, -1628520, 5948530, 2153130, -2250250, 5547400, 1550820, -1628520, 5948530, 1538410, -1647560, 5946530, 612989, -648213, 6294260, 591083, -656554, 6295480, 1222090, -1324940, 6097630, 612989, -648213, 6294260, 1222090, -1324940, 6097630, 1241500, -1306760, 6097630, 1270220, -1278870, 6097630, 1241500, -1306760, 6097630, 1550820, -1628520, 5948530, 1270220, -1278870, 6097630, 1550820, -1628520, 5948530, 1569360, -1599250, 5951590, 1569360, -1599250, 5951590, 1550820, -1628520, 5948530, 2153130, -2250250, 5547400, 661706, -650779, 6289090, 612989, -648213, 6294260, 1241500, -1306760, 6097630, 661706, -650779, 6289090, 1241500, -1306760, 6097630, 1270220, -1278870, 6097630, 1270220, -1278870, 6097630, 1569360, -1599250, 5951590, 1587570, -1569430, 5954670, 1270220, -1278870, 6097630, 1587570, -1569430, 5954670, 1282950, -1266100, 6097630, 1569360, -1599250, 5951590, 2153130, -2250250, 5547400, 2266540, -2249790, 5502530, 1569360, -1599250, 5951590, 2266540, -2249790, 5502530, 1587570, -1569430, 5954670, 661706, -650779, 6289090, 1270220, -1278870, 6097630, 1282950, -1266100, 6097630, 1282950, -1266100, 6097630, 1587570, -1569430, 5954670, 1603560, -1542350, 5957450, 1282950, -1266100, 6097630, 1603560, -1542350, 5957450, 1294480, -1254310, 6097630, 1587570, -1569430, 5954670, 2266540, -2249790, 5502530, 2316910, -2189340, 5505910, 1587570, -1569430, 5954670, 2316910, -2189340, 5505910, 1603560, -1542350, 5957450, 1294480, -1254310, 6097630, 661706, -650779, 6289090, 1282950, -1266100, 6097630, 1203600, -1341760, 6097630, 1511210, -1687840, 5942230, 1538410, -1647560, 5946530, 1203600, -1341760, 6097630, 1538410, -1647560, 5946530, 1222090, -1324940, 6097630, 1511210, -1687840, 5942230, 2072980, -2323630, 5547680, 2153130, -2250250, 5547400, 1511210, -1687840, 5942230, 2153130, -2250250, 5547400, 1538410, -1647560, 5946530, 1222090, -1324940, 6097630, 591083, -656554, 6295480, 1203600, -1341760, 6097630, 1194240, -1350100, 6097630, 1496990, -1708140, 5940040, 1511210, -1687840, 5942230, 1194240, -1350100, 6097630, 1511210, -1687840, 5942230, 1203600, -1341760, 6097630, 1496990, -1708140, 5940040, 1998390, -2317870, 5577180, 2072980, -2323630, 5547680, 1496990, -1708140, 5940040, 2072980, -2323630, 5547680, 1511210, -1687840, 5942230, 591083, -656554, 6295480, 1194240, -1350100, 6097630, 1203600, -1341760, 6097630, 1186900, -1356550, 6097630, 1485640, -1724010, 5938320, 1496990, -1708140, 5940040, 1186900, -1356550, 6097630, 1496990, -1708140, 5940040, 1194240, -1350100, 6097630, 1485640, -1724010, 5938320, 1909430, -2267550, 5628450, 1998390, -2317870, 5577180, 1485640, -1724010, 5938320, 1998390, -2317870, 5577180, 1496990, -1708140, 5940040, 591083, -656554, 6295480, 1186900, -1356550, 6097630, 1194240, -1350100, 6097630, 1186900, -1356550, 6097630, 1154380, -1384330, 6097630, 1465880, -1750950, 5935370, 1186900, -1356550, 6097630, 1465880, -1750950, 5935370, 1485640, -1724010, 5938320, 1485640, -1724020, 5938320, 1465880, -1750950, 5935370, 1909430, -2267550, 5628450, 591083, -656554, 6295480, 536844, -648717, 6301110, 1154380, -1384330, 6097630, 591083, -656554, 6295480, 1154380, -1384330, 6097630, 1186900, -1356550, 6097630, 1441310, -1783290, 5931780, 1430490, -1771580, 5937860, 1436600, -1789370, 5931100, 1436600, -1789370, 5931100, 1445360, -1815460, 5921100, 1909430, -2267550, 5628450, 1436600, -1789370, 5931100, 1909430, -2267550, 5628450, 1441310, -1783290, 5931780, 1385420, -1703e3, 5968330, 1430490, -1771580, 5937860, 1441310, -1783290, 5931780, 1385420, -1703e3, 5968330, 1441310, -1783290, 5931780, 1448810, -1773550, 5932860, 1909430, -2267550, 5628450, 1448810, -1773550, 5932860, 1441310, -1783290, 5931780, 1140960, -1395410, 6097630, 1385420, -1703e3, 5968330, 1448810, -1773550, 5932860, 1140960, -1395410, 6097630, 1448810, -1773550, 5932860, 1465880, -1750950, 5935370, 1140960, -1395410, 6097630, 1465880, -1750950, 5935370, 1154380, -1384330, 6097630, 1909430, -2267550, 5628450, 1465880, -1750950, 5935370, 1448810, -1773550, 5932860, 1154380, -1384330, 6097630, 536844, -648717, 6301110, 1140960, -1395410, 6097630, 1131110, -1403400, 6097630, 1327960, -1662910, 5992480, 1385420, -1703e3, 5968330, 1131110, -1403400, 6097630, 1385420, -1703e3, 5968330, 1140960, -1395410, 6097630, 536844, -648717, 6301110, 1131110, -1403400, 6097630, 1140960, -1395410, 6097630, 1131110, -1403400, 6097630, 1113730, -1417240, 6097630, 1327960, -1662910, 5992480, 536844, -648717, 6301110, 542860, -721533, 6292730, 1113730, -1417240, 6097630, 536844, -648717, 6301110, 1113730, -1417240, 6097630, 1131110, -1403400, 6097630, 1082390, -1441310, 6097630, 1237280, -1648470, 6015680, 1327960, -1662910, 5992480, 1082390, -1441310, 6097630, 1327960, -1662910, 5992480, 1113730, -1417240, 6097630, 1113730, -1417240, 6097630, 542860, -721533, 6292730, 1082390, -1441310, 6097630, 1064300, -1454720, 6097630, 1190110, -1638300, 6027880, 1237280, -1648470, 6015680, 1064300, -1454720, 6097630, 1237280, -1648470, 6015680, 1082390, -1441310, 6097630, 542860, -721533, 6292730, 1064300, -1454720, 6097630, 1082390, -1441310, 6097630, 1909430, -2267550, 5628450, 1445360, -1815460, 5921100, 1763330, -2227420, 5691360, 1445360, -1815460, 5921100, 1703510, -2191420, 5723250, 1763330, -2227420, 5691360, 1445360, -1815460, 5921100, 1642870, -2123840, 5766010, 1703510, -2191420, 5723250, 1445360, -1815460, 5921100, 1420430, -1883630, 5905920, 1642870, -2123840, 5766010, 1420430, -1883630, 5905920, 1458680, -2005430, 5856620, 1503570, -2017320, 5841260, 1642870, -2123840, 5766010, 1420430, -1883630, 5905920, 1503570, -2017320, 5841260, 1642870, -2123840, 5766010, 1503570, -2017320, 5841260, 1535510, -2087420, 5808460, 433232, -876167, 6281670, 409423, -971665, 6269290, 474999, -1033860, 6254800, 684782, -1366980, 6171420, 433232, -876167, 6281670, 474999, -1033860, 6254800, 684782, -1366980, 6171420, 474999, -1033860, 6254800, 484437, -1073440, 6247450, 684782, -1366980, 6171420, 484437, -1073440, 6247450, 622069, -1401420, 6170340, 484437, -1073440, 6247450, 551703, -1284990, 6202080, 622069, -1401420, 6170340, 622069, -1401420, 6170340, 551703, -1284990, 6202080, 564758, -1434040, 6168370, 551703, -1284990, 6202080, 508319, -1308950, 6200790, 564758, -1434040, 6168370, 564758, -1434040, 6168370, 508319, -1308950, 6200790, 523605, -1412820, 6176830, 508319, -1308950, 6200790, 458734, -1363300, 6192990, 523605, -1412820, 6176830, 1004010, -1495250, 6098050, 470921, -730933, 6297410, 910895, -1420150, 6130320, 470921, -730933, 6297410, 834032, -1365570, 6153460, 910895, -1420150, 6130320, 470921, -730933, 6297410, 439646, -770235, 6295e3, 834032, -1365570, 6153460, 834032, -1365570, 6153460, 439646, -770235, 6295e3, 738747, -1347600, 6169470, 439646, -770235, 6295e3, 449832, -854425, 6283480, 738747, -1347600, 6169470, 738747, -1347600, 6169470, 449832, -854425, 6283480, 684782, -1366980, 6171420, 449832, -854425, 6283480, 433232, -876167, 6281670, 684782, -1366980, 6171420, 445088, -1295780, 6208360, 371717, -1228040, 6226800, 380971, -1269600, 6217960, 433433, -1151510, 6237350, 371717, -1228040, 6226800, 445088, -1295780, 6208360, 551703, -1284990, 6202080, 433433, -1151510, 6237350, 445088, -1295780, 6208360, 484437, -1073440, 6247450, 433433, -1151510, 6237350, 551703, -1284990, 6202080, 1385420, -1703e3, 5968330, 1327960, -1662910, 5992480, 1374e3, -1759510, 5954660, 1327960, -1662910, 5992480, 1366670, -1784820, 5948850, 1374e3, -1759510, 5954660, 1327960, -1662910, 5992480, 1251190, -1686660, 6002290, 1366670, -1784820, 5948850, 1366670, -1784820, 5948850, 1251190, -1686660, 6002290, 1347380, -1817980, 5943240, 1251190, -1686660, 6002290, 1224620, -1707930, 6001760, 1347380, -1817980, 5943240, 1347380, -1817980, 5943240, 1224620, -1707930, 6001760, 1288430, -1818600, 5956020, 1224620, -1707930, 6001760, 1245230, -1761960, 5982e3, 1288430, -1818600, 5956020, 1064300, -1454720, 6097630, 1058720, -1458790, 6097630, 1190110, -1638300, 6027880, 542860, -721533, 6292730, 508850, -703839, 6297540, 1058720, -1458790, 6097630, 542860, -721533, 6292730, 1058720, -1458790, 6097630, 1064300, -1454720, 6097630, 1042750, -1470250, 6097630, 1105880, -1562950, 6063580, 1190110, -1638300, 6027880, 1042750, -1470250, 6097630, 1190110, -1638300, 6027880, 1058720, -1458790, 6097630, 1058720, -1458790, 6097630, 508850, -703839, 6297540, 1042750, -1470250, 6097630, 1027700, -1480810, 6097630, 1066660, -1541960, 6075890, 1105880, -1562950, 6063580, 1027700, -1480810, 6097630, 1105880, -1562950, 6063580, 1042750, -1470250, 6097630, 508850, -703839, 6297540, 1027700, -1480810, 6097630, 1042750, -1470250, 6097630, 1027700, -1480810, 6097630, 1005210, -1496170, 6097630, 1066660, -1541960, 6075890, 508850, -703839, 6297540, 1004010, -1495250, 6098050, 1005210, -1496170, 6097630, 508850, -703839, 6297540, 1005210, -1496170, 6097630, 1027700, -1480810, 6097630, 508850, -703839, 6297540, 470921, -730933, 6297410, 1004010, -1495250, 6098050, 1105880, -1562950, 6063580, 1130790, -1666080, 6031660, 1169990, -1670920, 6022900, 1190110, -1638300, 6027880, 1105880, -1562950, 6063580, 1169990, -1670920, 6022900, 474999, -1033860, 6254800, 409423, -971665, 6269290, 411012, -1018470, 6261800, 439646, -770235, 6295e3, 420805, -813594, 6290860, 449832, -854425, 6283480, 910895, -1420150, 6130320, 834032, -1365570, 6153460, 857311, -1404320, 6141600, 1508770, -986192, 6097630, 1771180, -1177810, 5992850, 1783380, -1141670, 5996210, 1508770, -986192, 6097630, 1783380, -1141670, 5996210, 1521230, -966868, 6097630, 1771180, -1177810, 5992850, 2094180, -1423310, 5834360, 2036880, -1313240, 5879980, 1771180, -1177810, 5992850, 2036880, -1313240, 5879980, 1783380, -1141670, 5996210, 737307, -458933, 6297550, 1508770, -986192, 6097630, 1521230, -966868, 6097630, 1762890, -814307, 6054970, 1838120, -878448, 6023760, 1850660, -876118, 6020290, 1762890, -814307, 6054970, 1850660, -876118, 6020290, 1855980, -845407, 6023020, 1911920, -863546, 6003050, 1855980, -845407, 6023020, 1850660, -876118, 6020290, 1534780, -546480, 6145880, 1446080, -521592, 6169350, 1533650, -578547, 6143250, 141647, -6150530, 1677070, 114519, -6134980, 1734740, 90870, -6159610, 1647200, 114519, -6134980, 1734740, 83376.1, -6165210, 1626660, 90870, -6159610, 1647200, 114519, -6134980, 1734740, 82556, -6135500, 1734690, 83376.1, -6165210, 1626660, 83376.1, -6165210, 1626660, 82556, -6135500, 1734690, 69733.6, -6177980, 1578470, 90844.2, -6073750, 1938190, 82393.7, -6118660, 1792820, 84956, -6118560, 1793050, 82393.7, -6118660, 1792820, 69733.6, -6177980, 1578470, 82556, -6135500, 1734690, 82393.7, -6118660, 1792820, 82556, -6135500, 1734690, 84956, -6118560, 1793050, 90844.2, -6073750, 1938190, 72475.6, -6119050, 1791920, 82393.7, -6118660, 1792820, 72475.6, -6119050, 1791920, 44513.8, -6179900, 1571880, 69733.6, -6177980, 1578470, 72475.6, -6119050, 1791920, 69733.6, -6177980, 1578470, 82393.7, -6118660, 1792820, 90844.2, -6073750, 1938190, 68194.2, -6119210, 1791540, 72475.6, -6119050, 1791920, 68194.2, -6119210, 1791540, 30026.2, -6186210, 1547380, 44513.8, -6179900, 1571880, 68194.2, -6119210, 1791540, 44513.8, -6179900, 1571880, 72475.6, -6119050, 1791920, 50267.4, -6183080, 1559250, 44513.8, -6179900, 1571880, 30026.2, -6186210, 1547380, 190211, -6137910, 1717740, 158678, -6134960, 1731340, 149557, -6139670, 1715470, 190211, -6137910, 1717740, 149557, -6139670, 1715470, 141647, -6150530, 1677070, 149557, -6139670, 1715470, 114519, -6134980, 1734740, 141647, -6150530, 1677070, -45725.4, -6122450, 1781240, -46880.6, -6119770, 1790310, -47595.2, -6122480, 1781070, -47595.2, -6122480, 1781070, -49700, -6130290, 1754130, -10339.6, -6196900, 1504550, -47595.2, -6122480, 1781070, -10339.6, -6196900, 1504550, -45725.4, -6122450, 1781240, -7198.67, -6074050, 1939350, -46880.6, -6119770, 1790310, -45725.4, -6122450, 1781240, -7198.67, -6074050, 1939350, -45725.4, -6122450, 1781240, -8312.28, -6121620, 1784630, -8312.28, -6121620, 1784630, -45725.4, -6122450, 1781240, -10339.6, -6196900, 1504550, -7127.03, -6121590, 1784730, -7198.67, -6074050, 1939350, -8312.28, -6121620, 1784630, -8312.28, -6121620, 1784630, -10339.6, -6196900, 1504550, -6993.32, -6193030, 1520310, -8312.28, -6121620, 1784630, -6993.32, -6193030, 1520310, -7127.03, -6121590, 1784730, 90844.2, -6073750, 1938190, -7198.67, -6074050, 1939350, -7127.03, -6121590, 1784730, 90844.2, -6073750, 1938190, -7127.03, -6121590, 1784730, 56513.2, -6119640, 1790480, 56513.2, -6119640, 1790480, -7127.03, -6121590, 1784730, -6993.32, -6193030, 1520310, 90844.2, -6073750, 1938190, 56513.2, -6119640, 1790480, 68194.2, -6119210, 1791540, 56513.2, -6119640, 1790480, -6993.32, -6193030, 1520310, 30026.2, -6186210, 1547380, 56513.2, -6119640, 1790480, 30026.2, -6186210, 1547380, 68194.2, -6119210, 1791540, -75919.4, -6110740, 1819730, -106168, -6073190, 1939170, -106580, -6091960, 1879770, -7198.67, -6074050, 1939350, -106168, -6073190, 1939170, -75919.4, -6110740, 1819730, -7198.67, -6074050, 1939350, -75919.4, -6110740, 1819730, -64152.6, -6117720, 1796750, -7198.67, -6074050, 1939350, -64152.6, -6117720, 1796750, -46880.6, -6119770, 1790310, -106580, -6091960, 1879770, -154595, -6091010, 1879510, -115229, -6102730, 1844210, -75919.4, -6110740, 1819730, -106580, -6091960, 1879770, -115229, -6102730, 1844210, -10339.6, -6196900, 1504550, -49700, -6130290, 1754130, -65773.7, -6191950, 1523300, -49700, -6130290, 1754130, -133172, -6190390, 1525230, -65773.7, -6191950, 1523300, -49700, -6130290, 1754130, -182419, -6183810, 1546530, -133172, -6190390, 1525230, -49700, -6130290, 1754130, -187005, -6127730, 1753810, -182419, -6183810, 1546530, -187005, -6127730, 1753810, -239409, -6150270, 1666950, -224362, -6156250, 1647e3, -182419, -6183810, 1546530, -187005, -6127730, 1753810, -224362, -6156250, 1647e3, -182419, -6183810, 1546530, -224362, -6156250, 1647e3, -237083, -6162470, 1621930, -182419, -6183810, 1546530, -237083, -6162470, 1621930, -240046, -6170530, 1590760, 90844.2, -6073750, 1938190, 84956, -6118560, 1793050, 86407.3, -6118500, 1793180, 90844.2, -6073750, 1938190, 86407.3, -6118500, 1793180, 90416.4, -6100010, 1854480, 86407.3, -6118500, 1793180, 84956, -6118560, 1793050, 82556, -6135500, 1734690, 92034.3, -6170630, 1605660, 83376.1, -6165210, 1626660, 69733.6, -6177980, 1578470, 3411680, -5376280, 368523, 3367260, -5398110, 448658, 3388640, -5393770, 322931, 3411680, -5376280, 368523, 3388640, -5393770, 322931, 3411630, -5379110, 325394, 3411630, -5379110, 325394, 3388640, -5393770, 322931, 3410380, -5386570, 186025, 3388640, -5393770, 322931, 3367260, -5398110, 448658, 3368430, -5406540, 320773, 3368430, -5406540, 320773, 3368030, -5413780, 166639, 3410380, -5386570, 186025, 3368430, -5406540, 320773, 3410380, -5386570, 186025, 3388640, -5393770, 322931, 3348890, -5375640, 751175, 3365770, -5408220, 320489, 3368430, -5406540, 320773, 3348890, -5375640, 751175, 3368430, -5406540, 320773, 3367260, -5398110, 448658, 3368430, -5406540, 320773, 3365770, -5408220, 320489, 3368030, -5413780, 166639, 3376120, -5384980, 531540, 3348890, -5375640, 751175, 3367260, -5398110, 448658, 3382340, -5383600, 505549, 3376120, -5384980, 531540, 3367260, -5398110, 448658, 3441350, -5329180, 659305, 3402330, -5349290, 697581, 3431640, -5346810, 560288, 3431640, -5346810, 560288, 3402330, -5349290, 697581, 3376120, -5384980, 531540, 3402330, -5349290, 697581, 3348890, -5375640, 751175, 3376120, -5384980, 531540, 3156050, -5468220, 901688, 3107170, -5503240, 857636, 3136820, -5498480, 776954, 3156050, -5468220, 901688, 3136820, -5498480, 776954, 3172700, -5458580, 901688, 3178380, -5451860, 921959, 3156050, -5468220, 901688, 3172700, -5458580, 901688, 3172700, -5458580, 901688, 3136820, -5498480, 776954, 3155270, -5512470, 579112, 3172700, -5458580, 901688, 3155270, -5512470, 579112, 3177290, -5455910, 901688, 3178380, -5451860, 921959, 3172700, -5458580, 901688, 3177290, -5455910, 901688, 3155270, -5512470, 579112, 3136820, -5498480, 776954, 3114200, -5514200, 756389, 3155270, -5512470, 579112, 3114200, -5514200, 756389, 3105340, -5541260, 574244, 3114200, -5514200, 756389, 3060520, -5553140, 688021, 3105340, -5541260, 574244, 3105340, -5541260, 574244, 3060520, -5553140, 688021, 3035770, -5570380, 657756, 3333900, -5428120, 317094, 3306980, -5392910, 810285, 3326060, -5432980, 316264, 3326060, -5432980, 316264, 3327960, -5439260, 140207, 3338170, -5432390, 161857, 3326060, -5432980, 316264, 3338170, -5432390, 161857, 3333900, -5428120, 317094, 3306980, -5392910, 810285, 3291140, -5454420, 312563, 3326060, -5432980, 316264, 3291140, -5454420, 312563, 3281170, -5467460, 145691, 3327960, -5439260, 140207, 3291140, -5454420, 312563, 3327960, -5439260, 140207, 3326060, -5432980, 316264, 3306980, -5392910, 810285, 3243620, -5420050, 881692, 3276600, -5463260, 311026, 3306980, -5392910, 810285, 3276600, -5463260, 311026, 3291140, -5454420, 312563, 3291140, -5454420, 312563, 3276600, -5463260, 311026, 3281170, -5467460, 145691, 3243620, -5420050, 881692, 3225840, -5484700, 437400, 3251190, -5478570, 308347, 3243620, -5420050, 881692, 3251190, -5478570, 308347, 3276600, -5463260, 311026, 3281170, -5467460, 145691, 3276600, -5463260, 311026, 3251190, -5478570, 308347, 3211280, -5435970, 901688, 3180740, -5453900, 901688, 3225840, -5484700, 437400, 3211280, -5435970, 901688, 3225840, -5484700, 437400, 3243620, -5420050, 881692, 3211280, -5435970, 901688, 3178380, -5451860, 921959, 3180740, -5453900, 901688, 3179820, -5454430, 901688, 3201960, -5494330, 488649, 3225840, -5484700, 437400, 3179820, -5454430, 901688, 3225840, -5484700, 437400, 3180740, -5453900, 901688, 3180740, -5453900, 901688, 3178380, -5451860, 921959, 3179820, -5454430, 901688, 3178690, -5455090, 901688, 3178770, -5501580, 553733, 3201960, -5494330, 488649, 3178690, -5455090, 901688, 3201960, -5494330, 488649, 3179820, -5454430, 901688, 3178380, -5451860, 921959, 3178690, -5455090, 901688, 3179820, -5454430, 901688, 3201960, -5494330, 488649, 3178770, -5501580, 553733, 3168300, -5512300, 505347, 3441670, -5357130, 368394, 3411680, -5376280, 368523, 3419810, -5373860, 326272, 3441670, -5357130, 368394, 3419810, -5373860, 326272, 3441530, -5359830, 328607, 3441530, -5359830, 328607, 3419810, -5373860, 326272, 3440400, -5366340, 215418, 3450480, -5354010, 329570, 3441670, -5357130, 368394, 3441530, -5359830, 328607, 3441530, -5359830, 328607, 3440400, -5366340, 215418, 3455740, -5352020, 306056, 3441530, -5359830, 328607, 3455740, -5352020, 306056, 3450480, -5354010, 329570, 3492210, -5333140, 206043, 3455740, -5352020, 306056, 3440400, -5366340, 215418, 3514750, -5318150, 21e4, 3455740, -5352020, 306056, 3492210, -5333140, 206043, 3313300, -5397280, 753777, 3306980, -5392910, 810285, 3333900, -5428120, 317094, 3313300, -5397280, 753777, 3333900, -5428120, 317094, 3334470, -5427770, 317156, 3338170, -5432390, 161857, 3334470, -5427770, 317156, 3333900, -5428120, 317094, 3348890, -5375640, 751175, 3313300, -5397280, 753777, 3334470, -5427770, 317156, 3348890, -5375640, 751175, 3334470, -5427770, 317156, 3343880, -5421920, 318157, 3343880, -5421920, 318157, 3334470, -5427770, 317156, 3338170, -5432390, 161857, 3348890, -5375640, 751175, 3343880, -5421920, 318157, 3365770, -5408220, 320489, 3343880, -5421920, 318157, 3338170, -5432390, 161857, 3368030, -5413780, 166639, 3343880, -5421920, 318157, 3368030, -5413780, 166639, 3365770, -5408220, 320489, 3200540, -5502480, 398528, 3187860, -5515870, 304543, 3189120, -5515290, 301835, 3200540, -5502480, 398528, 3189120, -5515290, 301835, 3209060, -5503600, 303922, 3213710, -5503680, 248689, 3209060, -5503600, 303922, 3189120, -5515290, 301835, 3225840, -5484700, 437400, 3200540, -5502480, 398528, 3209060, -5503600, 303922, 3225840, -5484700, 437400, 3209060, -5503600, 303922, 3217610, -5498550, 304820, 3217610, -5498550, 304820, 3209060, -5503600, 303922, 3213710, -5503680, 248689, 3225840, -5484700, 437400, 3217610, -5498550, 304820, 3224060, -5494730, 305497, 3217610, -5498550, 304820, 3213710, -5503680, 248689, 3221580, -5501160, 197553, 3217610, -5498550, 304820, 3221580, -5501160, 197553, 3224060, -5494730, 305497, 3251190, -5478570, 308347, 3225840, -5484700, 437400, 3224060, -5494730, 305497, 3224060, -5494730, 305497, 3221580, -5501160, 197553, 3281170, -5467460, 145691, 3224060, -5494730, 305497, 3281170, -5467460, 145691, 3251190, -5478570, 308347, 3136820, -5498480, 776954, 3107170, -5503240, 857636, 3101390, -5512620, 817667, 3177290, -5455910, 901688, 3155270, -5512470, 579112, 3178770, -5501580, 553733, 3177290, -5455910, 901688, 3178770, -5501580, 553733, 3178690, -5455090, 901688, 3178380, -5451860, 921959, 3177290, -5455910, 901688, 3178690, -5455090, 901688, 3419810, -5373860, 326272, 3411680, -5376280, 368523, 3411630, -5379110, 325394, 3411630, -5379110, 325394, 3410380, -5386570, 186025, 3440400, -5366340, 215418, 3411630, -5379110, 325394, 3440400, -5366340, 215418, 3419810, -5373860, 326272, 3114200, -5514200, 756389, 3055810, -5549160, 738764, 3060520, -5553140, 688021, 337892, -6200130, 1452790, 331701, -6131020, 1720830, 324644, -6206590, 1428190, 381109, -6127360, 1723610, 331701, -6131020, 1720830, 337892, -6200130, 1452790, 381109, -6127360, 1723610, 337892, -6200130, 1452790, 350741, -6186460, 1506650, 353764, -6199020, 1453750, 350741, -6186460, 1506650, 337892, -6200130, 1452790, 735280, -6118290, 1639650, 706255, -6113700, 1669040, 698595, -6121990, 1641840, 706255, -6113700, 1669040, 684215, -6127530, 1627280, 698595, -6121990, 1641840, 706255, -6113700, 1669040, 666956, -6113600, 1685380, 684215, -6127530, 1627280, 684215, -6127530, 1627280, 666956, -6113600, 1685380, 647470, -6135240, 1613300, 666956, -6113600, 1685380, 635413, -6110280, 1709270, 647470, -6135240, 1613300, 647470, -6135240, 1613300, 635413, -6110280, 1709270, 620417, -6138050, 1613240, 635413, -6110280, 1709270, 602306, -6108e3, 1729190, 620417, -6138050, 1613240, 620417, -6138050, 1613240, 602306, -6108e3, 1729190, 597082, -6143950, 1599620, 602306, -6108e3, 1729190, 585322, -6108980, 1731530, 597082, -6143950, 1599620, 597082, -6143950, 1599620, 585322, -6108980, 1731530, 575482, -6144740, 1604460, 585322, -6108980, 1731530, 556816, -6142140, 1620810, 575482, -6144740, 1604460, 545686, -6143960, 1617700, 536241, -6109250, 1746290, 532504, -6151840, 1592120, 585322, -6108980, 1731530, 536241, -6109250, 1746290, 545686, -6143960, 1617700, 585322, -6108980, 1731530, 545686, -6143960, 1617700, 556816, -6142140, 1620810, 483937, -6168820, 1541460, 461705, -6116630, 1741800, 464330, -6173520, 1528700, 487411, -6116700, 1734570, 461705, -6116630, 1741800, 483937, -6168820, 1541460, 520872, -6158300, 1571e3, 487411, -6116700, 1734570, 483937, -6168820, 1541460, 520872, -6158300, 1571e3, 515273, -6113700, 1737070, 487411, -6116700, 1734570, 522175, -6152480, 1593050, 515273, -6113700, 1737070, 520872, -6158300, 1571e3, 536241, -6109250, 1746290, 515273, -6113700, 1737070, 522175, -6152480, 1593050, 536241, -6109250, 1746290, 522175, -6152480, 1593050, 532504, -6151840, 1592120, 398533, -6183130, 1508430, 381109, -6127360, 1723610, 376009, -6184350, 1509190, 415280, -6121790, 1735390, 381109, -6127360, 1723610, 398533, -6183130, 1508430, 421336, -6174510, 1537080, 415280, -6121790, 1735390, 398533, -6183130, 1508430, 427565, -6117530, 1747300, 415280, -6121790, 1735390, 421336, -6174510, 1537080, 453516, -6177630, 1515380, 427565, -6117530, 1747300, 421336, -6174510, 1537080, 461705, -6116630, 1741800, 427565, -6117530, 1747300, 453516, -6177630, 1515380, 461705, -6116630, 1741800, 453516, -6177630, 1515380, 464330, -6173520, 1528700, 271946, -6202270, 1457460, 265317, -6133030, 1725160, 255281, -6130990, 1733830, 281850, -6130790, 1730440, 265317, -6133030, 1725160, 271946, -6202270, 1457460, 291008, -6209280, 1423760, 281850, -6130790, 1730440, 271946, -6202270, 1457460, 331701, -6131020, 1720830, 281850, -6130790, 1730440, 291008, -6209280, 1423760, 331701, -6131020, 1720830, 291008, -6209280, 1423760, 324644, -6206590, 1428190, 209005, -6187310, 1529180, 201368, -6138720, 1713590, 190211, -6137910, 1717740, 224680, -6132620, 1732310, 201368, -6138720, 1713590, 209005, -6187310, 1529180, 231299, -6188420, 1521520, 224680, -6132620, 1732310, 209005, -6187310, 1529180, 255281, -6130990, 1733830, 224680, -6132620, 1732310, 231299, -6188420, 1521520, 255281, -6130990, 1733830, 231299, -6188420, 1521520, 246101, -6190710, 1509900, 271946, -6202270, 1457460, 255281, -6130990, 1733830, 246101, -6190710, 1509900, 271946, -6202270, 1457460, 246101, -6190710, 1509900, 238982, -6201410, 1466820, 92034.3, -6170630, 1605660, 90870, -6159610, 1647200, 83376.1, -6165210, 1626660, 141647, -6150530, 1677070, 90870, -6159610, 1647200, 92034.3, -6170630, 1605660, 141647, -6150530, 1677070, 92034.3, -6170630, 1605660, 101558, -6179850, 1569460, 101558, -6179850, 1569460, 92034.3, -6170630, 1605660, 69733.6, -6177980, 1578470, 209005, -6187310, 1529180, 190211, -6137910, 1717740, 161708, -6191890, 1516390, 190211, -6137910, 1717740, 157596, -6188420, 1530860, 161708, -6191890, 1516390, 190211, -6137910, 1717740, 141647, -6150530, 1677070, 157596, -6188420, 1530860, 157596, -6188420, 1530860, 141647, -6150530, 1677070, 124899, -6184850, 1548060, 141647, -6150530, 1677070, 101558, -6179850, 1569460, 124899, -6184850, 1548060, 381109, -6127360, 1723610, 350741, -6186460, 1506650, 376009, -6184350, 1509190, 4215350, 1253830, 4603960, 4335300, 1269220, 4487670, 4314800, 1280960, 4503950, 4215350, 1253830, 4603960, 4325770, 1237080, 4505680, 4335300, 1269220, 4487670, 4215350, 1253830, 4603960, 4252930, 1200950, 4583590, 4325770, 1237080, 4505680, 4325770, 1237080, 4505680, 4252930, 1200950, 4583590, 4361670, 1230120, 4473080, 4252930, 1200950, 4583590, 4286080, 1202460, 4552430, 4361670, 1230120, 4473080, 4361670, 1230120, 4473080, 4286080, 1202460, 4552430, 4407250, 1212e3, 4433430, 4286080, 1202460, 4552430, 4322480, 1184740, 4522750, 4407250, 1212e3, 4433430, 4407250, 1212e3, 4433430, 4322480, 1184740, 4522750, 4329010, 1154710, 4524260, 4359880, 1160200, 4493320, 4323260, 1125730, 4536970, 4339800, 1115240, 4523840, 4329010, 1154710, 4524260, 4323260, 1125730, 4536970, 4359880, 1160200, 4493320, 4329010, 1154710, 4524260, 4359880, 1160200, 4493320, 4385090, 1168450, 4466750, 4407250, 1212e3, 4433430, 4329010, 1154710, 4524260, 4385090, 1168450, 4466750, 4399370, 1093e3, 4471770, 4350420, 1061730, 4526490, 4352330, 1059330, 4525230, 4339800, 1115240, 4523840, 4350420, 1061730, 4526490, 4399370, 1093e3, 4471770, 4339800, 1115240, 4523840, 4399370, 1093e3, 4471770, 4360580, 1108150, 4505680, 4359880, 1160200, 4493320, 4339800, 1115240, 4523840, 4360580, 1108150, 4505680, 4454230, 1355850, 4344540, 4421100, 1344600, 4381460, 4404170, 1300930, 4411380, 4428240, 1379020, 4363630, 4421100, 1344600, 4381460, 4454230, 1355850, 4344540, 4466300, 1409080, 4315300, 4428240, 1379020, 4363630, 4454230, 1355850, 4344540, 4449350, 1417820, 4329820, 4428240, 1379020, 4363630, 4466300, 1409080, 4315300, 4449350, 1417820, 4329820, 4466300, 1409080, 4315300, 4468520, 1471810, 4292150, 4449350, 1417820, 4329820, 4468520, 1471810, 4292150, 4465740, 1478350, 4292800, 4469e3, 1490970, 4285080, 4465740, 1478350, 4292800, 4468520, 1471810, 4292150, 4454020, 1495480, 4298980, 4449350, 1417820, 4329820, 4465740, 1478350, 4292800, 4454020, 1495480, 4298980, 4465740, 1478350, 4292800, 4459050, 1493980, 4294330, 4459050, 1493980, 4294330, 4465740, 1478350, 4292800, 4469e3, 1490970, 4285080, 4453510, 1278320, 4368540, 4361670, 1230120, 4473080, 4407250, 1212e3, 4433430, 4386020, 1277550, 4436070, 4361670, 1230120, 4473080, 4453510, 1278320, 4368540, 4454230, 1355850, 4344540, 4386020, 1277550, 4436070, 4453510, 1278320, 4368540, 4454230, 1355850, 4344540, 4404170, 1300930, 4411380, 4386020, 1277550, 4436070, 4302540, 1315590, 4505680, 4217820, 1280070, 4594530, 4215350, 1253830, 4603960, 4233530, 1345400, 4561520, 4217820, 1280070, 4594530, 4302540, 1315590, 4505680, 4294770, 1384010, 4492670, 4233530, 1345400, 4561520, 4302540, 1315590, 4505680, 4228240, 1411150, 4546640, 4233530, 1345400, 4561520, 4294770, 1384010, 4492670, 4276720, 1435390, 4493760, 4228240, 1411150, 4546640, 4294770, 1384010, 4492670, 4207680, 1434850, 4558210, 4228240, 1411150, 4546640, 4276720, 1435390, 4493760, 4281700, 1474770, 4476350, 4207680, 1434850, 4558210, 4276720, 1435390, 4493760, 4230690, 1462760, 4528140, 4207680, 1434850, 4558210, 4281700, 1474770, 4476350, 4243780, 1493680, 4505900, 4230690, 1462760, 4528140, 4281700, 1474770, 4476350, 4286080, 1202460, 4552430, 4301160, 1178600, 4544490, 4322480, 1184740, 4522750, 4302540, 1315590, 4505680, 4215350, 1253830, 4603960, 4314800, 1280960, 4503950, 4453510, 1278320, 4368540, 4407250, 1212e3, 4433430, 4417090, 1197990, 4427490, 4399370, 1093e3, 4471770, 4352330, 1059330, 4525230, 4379400, 1064100, 4498090, 1788360, -5793150, 1973700, 1723310, -5799020, 2013680, 1725850, -5809480, 1981310, 1800370, -5778510, 2005250, 1723310, -5799020, 2013680, 1788360, -5793150, 1973700, 1835290, -5775940, 1981e3, 1800370, -5778510, 2005250, 1788360, -5793150, 1973700, 1834260, -5759610, 2028610, 1800370, -5778510, 2005250, 1835290, -5775940, 1981e3, 1903960, -5759840, 1963120, 1834260, -5759610, 2028610, 1835290, -5775940, 1981e3, 1903960, -5759840, 1963120, 1873970, -5748730, 2023210, 1834260, -5759610, 2028610, 1903080, -5750250, 1991690, 1873970, -5748730, 2023210, 1903960, -5759840, 1963120, 1680150, -5829560, 1961650, 1628610, -5821230, 2028240, 1622700, -5834640, 1994410, 1723310, -5799020, 2013680, 1628610, -5821230, 2028240, 1680150, -5829560, 1961650, 1723310, -5799020, 2013680, 1680150, -5829560, 1961650, 1725850, -5809480, 1981310, 1899820, -5719360, 2081110, 1884780, -5703200, 2137970, 1896530, -5735030, 2040880, 1896530, -5735030, 2040880, 1884780, -5703200, 2137970, 1873970, -5748730, 2023210, 1884780, -5703200, 2137970, 1834260, -5759610, 2028610, 1873970, -5748730, 2023210, 1884780, -5703200, 2137970, 1796480, -5725460, 2154320, 1834260, -5759610, 2028610, 1780320, -5745640, 2113890, 1734930, -5742670, 2158920, 1715300, -5759360, 2130160, 1796480, -5725460, 2154320, 1734930, -5742670, 2158920, 1780320, -5745640, 2113890, 1834260, -5759610, 2028610, 1796480, -5725460, 2154320, 1780320, -5745640, 2113890, 1834260, -5759610, 2028610, 1780320, -5745640, 2113890, 1783700, -5759220, 2073980, 4233530, 1345400, 4561520, 4113470, 1250070, 4695610, 4217820, 1280070, 4594530, 4113470, 1250070, 4695610, 4215350, 1253830, 4603960, 4217820, 1280070, 4594530, 4113470, 1250070, 4695610, 4138660, 1228620, 4679210, 4215350, 1253830, 4603960, 4215350, 1253830, 4603960, 4138660, 1228620, 4679210, 4193390, 1231840, 4629720, 4138660, 1228620, 4679210, 4196120, 1219270, 4630560, 4193390, 1231840, 4629720, 3986600, 1618770, 4692430, 3943340, 1582990, 4740610, 4051370, 1606220, 4641320, 3986600, 1618770, 4692430, 3929540, 1594470, 4748170, 3943340, 1582990, 4740610, 3934750, 1641170, 4728040, 3929540, 1594470, 4748170, 3986600, 1618770, 4692430, 3953180, 1654500, 4708100, 3934750, 1641170, 4728040, 3986600, 1618770, 4692430, 4119260, 1583050, 4589590, 3986260, 1469750, 4741170, 4155220, 1530490, 4575080, 4119260, 1583050, 4589590, 3961870, 1479200, 4758530, 3986260, 1469750, 4741170, 4119260, 1583050, 4589590, 3948590, 1500030, 4763020, 3961870, 1479200, 4758530, 3943340, 1582990, 4740610, 3948590, 1500030, 4763020, 4119260, 1583050, 4589590, 3943340, 1582990, 4740610, 4119260, 1583050, 4589590, 4051370, 1606220, 4641320, 4207680, 1434850, 4558210, 4041750, 1374120, 4722960, 4059390, 1373750, 4708010, 4029810, 1401310, 4725160, 4041750, 1374120, 4722960, 4207680, 1434850, 4558210, 4168300, 1483940, 4578480, 4029810, 1401310, 4725160, 4207680, 1434850, 4558210, 4005640, 1431180, 4736660, 4029810, 1401310, 4725160, 4168300, 1483940, 4578480, 4155220, 1530490, 4575080, 4005640, 1431180, 4736660, 4168300, 1483940, 4578480, 4155220, 1530490, 4575080, 4007920, 1440530, 4731930, 4005640, 1431180, 4736660, 3986260, 1469750, 4741170, 4007920, 1440530, 4731930, 4155220, 1530490, 4575080, 4233530, 1345400, 4561520, 4088510, 1288200, 4707010, 4079560, 1245670, 4726050, 4088700, 1317230, 4698860, 4088510, 1288200, 4707010, 4233530, 1345400, 4561520, 4228240, 1411150, 4546640, 4088700, 1317230, 4698860, 4233530, 1345400, 4561520, 4059390, 1373750, 4708010, 4088700, 1317230, 4698860, 4228240, 1411150, 4546640, 4207680, 1434850, 4558210, 4059390, 1373750, 4708010, 4228240, 1411150, 4546640, 4113470, 1250070, 4695610, 4125720, 1209620, 4695460, 4138660, 1228620, 4679210, 4233530, 1345400, 4561520, 4079560, 1245670, 4726050, 4113470, 1250070, 4695610, -3437210, 5349900, -493133, -3399120, 5382700, -390030, -3343190, 5405060, -535804, -3478160, 5321060, -517331, -3399120, 5382700, -390030, -3437210, 5349900, -493133, -3478160, 5321060, -517331, -3437210, 5349900, -493133, -3473850, 5316290, -589695, -3473850, 5316290, -589695, -3437210, 5349900, -493133, -3422570, 5345760, -622057, -3437210, 5349900, -493133, -3387790, 5372230, -583345, -3422570, 5345760, -622057, -3853570, 5067890, -382255, -3832860, 5086200, -345854, -3819020, 5091080, -418885, -3832860, 5086200, -345854, -3758120, 5137820, -398625, -3819020, 5091080, -418885, -3832860, 5086200, -345854, -3742260, 5152860, -351148, -3758120, 5137820, -398625, -3470620, 5227660, -1139440, -3472820, 5236930, -1089360, -3460970, 5236890, -1126380, -3518310, 5220040, -1022830, -3472820, 5236930, -1089360, -3470620, 5227660, -1139440, -3550780, 5178790, -1115500, -3518310, 5220040, -1022830, -3470620, 5227660, -1139440, -3611870, 5164230, -979449, -3518310, 5220040, -1022830, -3550780, 5178790, -1115500, -3617620, 5149460, -1034090, -3611870, 5164230, -979449, -3550780, 5178790, -1115500, -3617620, 5149460, -1034090, -3619010, 5155060, -1000990, -3611870, 5164230, -979449, -3334980, 5416910, -462734, -3278880, 5463020, -290450, -3268820, 5462230, -398044, -3334980, 5416910, -462734, -3331500, 5434810, -210548, -3278880, 5463020, -290450, -3417490, 5373690, -352118, -3331500, 5434810, -210548, -3334980, 5416910, -462734, -3417490, 5373690, -352118, -3334980, 5416910, -462734, -3399120, 5382700, -390030, -3399120, 5382700, -390030, -3334980, 5416910, -462734, -3343190, 5405060, -535804, -3343190, 5405060, -535804, -3334980, 5416910, -462734, -3320980, 5421680, -505301, -3154060, 5507960, -626328, -3146160, 5526120, -492609, -3114160, 5534200, -594020, -3172270, 5533270, 17056.5, -3146160, 5526120, -492609, -3154060, 5507960, -626328, -3215600, 5474070, -610352, -3172270, 5533270, 17056.5, -3154060, 5507960, -626328, -3215600, 5474070, -610352, -3192890, 5521120, -57460, -3172270, 5533270, 17056.5, -3215600, 5474070, -610352, -3214240, 5499420, -324021, -3192890, 5521120, -57460, -3277890, 5469150, -155774, -3192890, 5521120, -57460, -3214240, 5499420, -324021, -3278880, 5463020, -290450, -3277890, 5469150, -155774, -3214240, 5499420, -324021, -3329830, 5438900, -105700, -3277890, 5469150, -155774, -3278880, 5463020, -290450, -3331500, 5434810, -210548, -3329830, 5438900, -105700, -3278880, 5463020, -290450, -3456790, 5359160, -102935, -3329830, 5438900, -105700, -3331500, 5434810, -210548, -3456790, 5359160, -102935, -3331500, 5434810, -210548, -3415350, 5384020, -167706, -3166370, 5419670, -1128410, -3137360, 5456030, -1030620, -3046470, 5503210, -1052070, -3184490, 5422200, -1063840, -3137360, 5456030, -1030620, -3166370, 5419670, -1128410, -3206300, 5396580, -1126340, -3184490, 5422200, -1063840, -3166370, 5419670, -1128410, -3214630, 5397720, -1096950, -3184490, 5422200, -1063840, -3206300, 5396580, -1126340, -2948010, 5583130, -901688, -2926230, 5589750, -930960, -2955570, 5565650, -980962, -2948010, 5583130, -901688, -2955570, 5565650, -980962, -2955020, 5579420, -901688, -2955020, 5579420, -901688, -2954970, 5580970, -892258, -2948010, 5583130, -901688, -2965630, 5573790, -901688, -2955020, 5579420, -901688, -2955570, 5565650, -980962, -2965630, 5573790, -901688, -2955570, 5565650, -980962, -2988080, 5558530, -921450, -2965630, 5573790, -901688, -2954970, 5580970, -892258, -2955020, 5579420, -901688, -3069010, 5507810, -959013, -2988080, 5558530, -921450, -2955570, 5565650, -980962, -3069010, 5507810, -959013, -3048400, 5527170, -912509, -2988080, 5558530, -921450, -2887080, 5598880, -995629, -2872570, 5617370, -931820, -2834440, 5625870, -994760, -2926230, 5589750, -930960, -2872570, 5617370, -931820, -2887080, 5598880, -995629, -2955570, 5565650, -980962, -2926230, 5589750, -930960, -2887080, 5598880, -995629, -3269310, 5386800, -983916, -3224360, 5427210, -907724, -3144440, 5463060, -970447, -3281040, 5387470, -940525, -3224360, 5427210, -907724, -3269310, 5386800, -983916, -3412070, 5303230, -952890, -3281040, 5387470, -940525, -3269310, 5386800, -983916, -3412070, 5303230, -952890, -3344010, 5350080, -932198, -3281040, 5387470, -940525, -3409870, 5313650, -901688, -3344010, 5350080, -932198, -3412070, 5303230, -952890, -3409870, 5313650, -901688, -3412070, 5303230, -952890, -3427560, 5302260, -901688, -3430530, 5301970, -892099, -3409870, 5313650, -901688, -3427560, 5302260, -901688, -2699680, 5707350, -901688, -2619630, 5744530, -901688, -2620880, 5733760, -964042, -2699680, 5707350, -901688, -2620880, 5733760, -964042, -2737260, 5686080, -922372, -2699680, 5707350, -901688, -2618700, 5751790, -857299, -2619630, 5744530, -901688, -2543910, 5778460, -901688, -2512960, 5789090, -919980, -2620880, 5733760, -964042, -2543910, 5778460, -901688, -2620880, 5733760, -964042, -2619630, 5744530, -901688, -2619630, 5744530, -901688, -2618700, 5751790, -857299, -2543910, 5778460, -901688, -2543910, 5778460, -901688, -2503100, 5796260, -901688, -2512960, 5789090, -919980, -2618700, 5751790, -857299, -2468290, 5820860, -837317, -2503100, 5796260, -901688, -2618700, 5751790, -857299, -2503100, 5796260, -901688, -2543910, 5778460, -901688, -2432810, 5826110, -901688, -2421050, 5827660, -922960, -2512960, 5789090, -919980, -2432810, 5826110, -901688, -2512960, 5789090, -919980, -2503100, 5796260, -901688, -2503100, 5796260, -901688, -2468290, 5820860, -837317, -2432810, 5826110, -901688, -2432810, 5826110, -901688, -2422950, 5830220, -901688, -2421050, 5827660, -922960, -2434750, 5844790, -766211, -2422950, 5830220, -901688, -2432810, 5826110, -901688, -2434750, 5844790, -766211, -2432810, 5826110, -901688, -2468290, 5820860, -837317, -2326150, 5869510, -901688, -2315510, 5871660, -914857, -2421050, 5827660, -922960, -2326150, 5869510, -901688, -2421050, 5827660, -922960, -2422950, 5830220, -901688, -2434750, 5844790, -766211, -2326150, 5869510, -901688, -2422950, 5830220, -901688, -2326150, 5869510, -901688, -2311090, 5875460, -901688, -2315510, 5871660, -914857, -2434750, 5844790, -766211, -2246480, 5926350, -713398, -2311090, 5875460, -901688, -2434750, 5844790, -766211, -2311090, 5875460, -901688, -2326150, 5869510, -901688, -2315510, 5871660, -914857, -2311090, 5875460, -901688, -2251800, 5898430, -901688, -2246480, 5926350, -713398, -2220290, 5911360, -895205, -2251800, 5898430, -901688, -2246480, 5926350, -713398, -2251800, 5898430, -901688, -2311090, 5875460, -901688, -2246480, 5926350, -713398, -2221740, 5930010, -758671, -2220290, 5911360, -895205, -2220290, 5911360, -895205, -2221740, 5930010, -758671, -2102310, 5960520, -853368, -2221740, 5930010, -758671, -2026250, 5988350, -842512, -2102310, 5960520, -853368, -1982130, 6001140, -856218, -1966530, 6026580, -700273, -1882830, 6058100, -657308, -2009830, 6011290, -708651, -1966530, 6026580, -700273, -1982130, 6001140, -856218, -2026250, 5988350, -842512, -2009830, 6011290, -708651, -1982130, 6001140, -856218, -2026250, 5988350, -842512, -2022650, 6002220, -747724, -2009830, 6011290, -708651, -2221740, 5930010, -758671, -2022650, 6002220, -747724, -2026250, 5988350, -842512, -1775140, 6078e3, -763890, -1754350, 6097250, -650810, -1678010, 6106540, -755823, -1882830, 6058100, -657308, -1754350, 6097250, -650810, -1775140, 6078e3, -763890, -1882830, 6058100, -657308, -1775140, 6078e3, -763890, -1791810, 6066940, -811076, -1982130, 6001140, -856218, -1882830, 6058100, -657308, -1791810, 6066940, -811076, -4462130, 4505170, -685833, -4431270, 4542480, -638394, -4415460, 4538930, -760634, -4462130, 4505170, -685833, -4450460, 4528820, -601194, -4431270, 4542480, -638394, -4466150, 4508910, -633390, -4450460, 4528820, -601194, -4462130, 4505170, -685833, -4091660, 4877800, -380847, -4041100, 4924790, -309725, -4020400, 4937410, -371612, -4133820, 4845040, -341927, -4041100, 4924790, -309725, -4091660, 4877800, -380847, -4161170, 4814810, -426332, -4133820, 4845040, -341927, -4091660, 4877800, -380847, -3971330, 4976400, -378902, -3933880, 5010570, -314308, -3911080, 5024190, -375012, -4041100, 4924790, -309725, -3933880, 5010570, -314308, -3971330, 4976400, -378902, -4041100, 4924790, -309725, -3971330, 4976400, -378902, -4020400, 4937410, -371612, -4672290, 4246390, -901688, -4660680, 4253690, -926844, -4753970, 4149930, -923480, -4672290, 4246390, -901688, -4753970, 4149930, -923480, -4740820, 4169750, -901688, -4740820, 4169750, -901688, -4701420, 4227380, -837719, -4672290, 4246390, -901688, -4753970, 4149930, -923480, -4753530, 4155250, -901688, -4740820, 4169750, -901688, -4750610, 4178070, -807272, -4701420, 4227380, -837719, -4740820, 4169750, -901688, -4750610, 4178070, -807272, -4740820, 4169750, -901688, -4753530, 4155250, -901688, -4757080, 4151180, -901688, -4753530, 4155250, -901688, -4753970, 4149930, -923480, -4824050, 4166220, -226774, -4750610, 4178070, -807272, -4753530, 4155250, -901688, -4824050, 4166220, -226774, -4753530, 4155250, -901688, -4757080, 4151180, -901688, -4824050, 4166220, -226774, -4742140, 4209080, -687862, -4750610, 4178070, -807272, -4824050, 4166220, -226774, -4762290, 4238580, -188247, -4742140, 4209080, -687862, -4742140, 4209080, -687862, -4762290, 4238580, -188247, -4713690, 4254960, -595505, -4762290, 4238580, -188247, -4695950, 4311950, -188337, -4713690, 4254960, -595505, -4713690, 4254960, -595505, -4695950, 4311950, -188337, -4606930, 4403560, -255032, -4845240, 4045080, -914314, -4846360, 4046590, -901688, -4845450, 4047690, -901688, -4876420, 4102400, -266302, -4824050, 4166220, -226774, -4845450, 4047690, -901688, -4876420, 4102400, -266302, -4845450, 4047690, -901688, -4846360, 4046590, -901688, -4847920, 4044730, -901688, -4846360, 4046590, -901688, -4845240, 4045080, -914314, -4951670, 4009790, -287413, -4876420, 4102400, -266302, -4846360, 4046590, -901688, -4951670, 4009790, -287413, -4846360, 4046590, -901688, -4847920, 4044730, -901688, -4847920, 4044730, -901688, -4845240, 4045080, -914314, -4896870, 3960600, -1004040, -4847920, 4044730, -901688, -4896870, 3960600, -1004040, -4908630, 3970820, -901688, -4908630, 3970820, -901688, -4951670, 4009790, -287413, -4847920, 4044730, -901688, -4896870, 3960600, -1004040, -4908630, 3970820, -901688, -4908630, 3970820, -901688, -4932210, 3991600, -646751, -4951670, 4009790, -287413, -4908630, 3970820, -901688, -4932210, 3991600, -646751, -4908630, 3970820, -901688, -4908630, 3970820, -901688, -4768870, 4137630, -901688, -4757080, 4151180, -901688, -4753970, 4149930, -923480, -4824050, 4166220, -226774, -4757080, 4151180, -901688, -4768870, 4137630, -901688, -4824050, 4166220, -226774, -4768870, 4137630, -901688, -4775230, 4132350, -892297, -4845240, 4045080, -914314, -4845450, 4047690, -901688, -4805300, 4095270, -901688, -4824050, 4166220, -226774, -4775230, 4132350, -892297, -4805300, 4095270, -901688, -4824050, 4166220, -226774, -4805300, 4095270, -901688, -4845450, 4047690, -901688, -4283790, 4719060, -244589, -4256560, 4749350, -76898.2, -4252540, 4750200, -178793, -4299060, 4711370, -40861.1, -4256560, 4749350, -76898.2, -4283790, 4719060, -244589, -4402950, 4608070, -244811, -4299060, 4711370, -40861.1, -4283790, 4719060, -244589, -4429100, 4588710, -86268.5, -4299060, 4711370, -40861.1, -4402950, 4608070, -244811, -4429100, 4588710, -86268.5, -4402950, 4608070, -244811, -4408870, 4600740, -274124, -4459200, 4549930, -306083, -4429100, 4588710, -86268.5, -4408870, 4600740, -274124, -4509370, 4483470, -492996, -4459200, 4549930, -306083, -4408870, 4600740, -274124, -4538130, 4466150, -372176, -4459200, 4549930, -306083, -4509370, 4483470, -492996, -4572860, 4417660, -502214, -4538130, 4466150, -372176, -4509370, 4483470, -492996, -4606930, 4403560, -255032, -4538130, 4466150, -372176, -4572860, 4417660, -502214, -4713690, 4254960, -595505, -4606930, 4403560, -255032, -4572860, 4417660, -502214, -4509370, 4483470, -492996, -4408870, 4600740, -274124, -4395220, 4605290, -391062, -4408870, 4600740, -274124, -4369020, 4625280, -444683, -4395220, 4605290, -391062, -4408870, 4600740, -274124, -4351340, 4655320, -271977, -4369020, 4625280, -444683, -4369020, 4625280, -444683, -4351340, 4655320, -271977, -4337450, 4653950, -454407, -4351340, 4655320, -271977, -4320870, 4673140, -413953, -4337450, 4653950, -454407, -4351340, 4655320, -271977, -4261850, 4734920, -311757, -4322630, 4675540, -365999, -4351340, 4655320, -271977, -4322630, 4675540, -365999, -4320870, 4673140, -413953, -4256560, 4749350, -76898.2, -4143410, 4847880, -103683, -4178350, 4816310, -158384, -4256560, 4749350, -76898.2, -4178350, 4816310, -158384, -4252540, 4750200, -178793, -3959660, 4999430, -86245.8, -3923930, 5028180, -27873.1, -3935060, 5018560, -99512.4, -3935060, 5018560, -99512.4, -3923930, 5028180, -27873.1, -3900010, 5046750, -29478.8, -3923930, 5028180, -27873.1, -3918e3, 5027100, 240398, -3900010, 5046750, -29478.8, -3925550, 5023750, 180050, -3918e3, 5027100, 240398, -3923930, 5028180, -27873.1, -3937220, 5017710, 39409.9, -3925550, 5023750, 180050, -3923930, 5028180, -27873.1, -3900010, 5046750, -29478.8, -3889750, 5050760, 200183, -3873240, 5066170, 111865, -3918e3, 5027100, 240398, -3889750, 5050760, 200183, -3900010, 5046750, -29478.8, -3986070, 4977560, 125205, -3977330, 4983200, 170354, -3982280, 4982090, 28581.8, -3982280, 4982090, 28581.8, -3977330, 4983200, 170354, -3937220, 5017710, 39409.9, -3977330, 4983200, 170354, -3925550, 5023750, 180050, -3937220, 5017710, 39409.9, -3091510, 5577920, 99758.2, -2980650, 5635180, 202056, -2975580, 5640830, 86714.3, -2980650, 5635180, 202056, -2942920, 5658600, 11331.1, -2975580, 5640830, 86714.3, -2952450, 5646790, 277385, -2921990, 5658090, 357459, -2927830, 5659720, 274869, -2952450, 5646790, 277385, -2927830, 5659720, 274869, -2942920, 5658600, 11331.1, -2952450, 5646790, 277385, -2942920, 5658600, 11331.1, -2980650, 5635180, 202056, -2927830, 5659720, 274869, -2921990, 5658090, 357459, -2927730, 5659770, 274862, -2927830, 5659720, 274869, -2927730, 5659770, 274862, -2946980, 5655790, -88868.2, -2927830, 5659720, 274869, -2946980, 5655790, -88868.2, -2942920, 5658600, 11331.1, -2921990, 5658090, 357459, -2888980, 5666270, 475704, -2912440, 5667730, 273306, -2921990, 5658090, 357459, -2912440, 5667730, 273306, -2927730, 5659770, 274862, -2946980, 5655790, -88868.2, -2927730, 5659770, 274862, -2912440, 5667730, 273306, -2912440, 5667730, 273306, -2888980, 5666270, 475704, -2880010, 5684430, 270011, -2880010, 5684430, 270011, -2850930, 5703120, -164479, -2946980, 5655790, -88868.2, -2880010, 5684430, 270011, -2946980, 5655790, -88868.2, -2912440, 5667730, 273306, -2888980, 5666270, 475704, -2875260, 5686860, 269526, -2880010, 5684430, 270011, -2875260, 5686860, 269526, -2803950, 5711450, -443349, -2850930, 5703120, -164479, -2875260, 5686860, 269526, -2850930, 5703120, -164479, -2880010, 5684430, 270011, -2850930, 5703120, -164479, -2803950, 5711450, -443349, -2846640, 5701e3, -274529, -2714030, 5766290, 253299, -2705770, 5767280, 311860, -2704780, 5770670, 252377, -2704780, 5770670, 252377, -2675050, 5772130, -453745, -2790440, 5720990, -404106, -2704780, 5770670, 252377, -2790440, 5720990, -404106, -2714030, 5766290, 253299, -2743590, 5747160, 350261, -2705770, 5767280, 311860, -2714030, 5766290, 253299, -2743590, 5747160, 350261, -2714030, 5766290, 253299, -2751540, 5748320, 257053, -2790440, 5720990, -404106, -2751540, 5748320, 257053, -2714030, 5766290, 253299, -2774770, 5723060, 475756, -2743590, 5747160, 350261, -2751540, 5748320, 257053, -2774770, 5723060, 475756, -2751540, 5748320, 257053, -2783550, 5732740, 260266, -2790440, 5720990, -404106, -2783550, 5732740, 260266, -2751540, 5748320, 257053, -2888980, 5666270, 475704, -2774770, 5723060, 475756, -2783550, 5732740, 260266, -2888980, 5666270, 475704, -2783550, 5732740, 260266, -2870900, 5689080, 269086, -2870900, 5689080, 269086, -2783550, 5732740, 260266, -2790440, 5720990, -404106, -2888980, 5666270, 475704, -2870900, 5689080, 269086, -2875260, 5686860, 269526, -2870900, 5689080, 269086, -2790440, 5720990, -404106, -2803950, 5711450, -443349, -2870900, 5689080, 269086, -2803950, 5711450, -443349, -2875260, 5686860, 269526, -2705770, 5767280, 311860, -2686260, 5779400, 250532, -2704780, 5770670, 252377, -2686260, 5779400, 250532, -2656400, 5796460, 158181, -2675050, 5772130, -453745, -2686260, 5779400, 250532, -2675050, 5772130, -453745, -2704780, 5770670, 252377, -2675050, 5772130, -453745, -2656400, 5796460, 158181, -2636950, 5794560, -386300, -2656400, 5796460, 158181, -2573900, 5834160, 134620, -2636950, 5794560, -386300, -2636950, 5794560, -386300, -2573900, 5834160, 134620, -2564790, 5827270, -380060, -2573900, 5834160, 134620, -2514740, 5851250, -344690, -2564790, 5827270, -380060, -2287490, 5944210, -337033, -2234930, 5973140, 85485.9, -2202e3, 5977120, -324289, -2301900, 5947280, 107968, -2234930, 5973140, 85485.9, -2287490, 5944210, -337033, -2355410, 5917970, -330960, -2301900, 5947280, 107968, -2287490, 5944210, -337033, -2368140, 5921360, 100004, -2301900, 5947280, 107968, -2355410, 5917970, -330960, -2391920, 5900050, -384389, -2368140, 5921360, 100004, -2355410, 5917970, -330960, -2427730, 5895960, 155908, -2368140, 5921360, 100004, -2391920, 5900050, -384389, -2514740, 5851250, -344690, -2427730, 5895960, 155908, -2391920, 5900050, -384389, -2514740, 5851250, -344690, -2476940, 5875180, 165599, -2427730, 5895960, 155908, -2573900, 5834160, 134620, -2476940, 5875180, 165599, -2514740, 5851250, -344690, -2147740, 6002370, 197874, -2144860, 6002560, 221820, -2144500, 6003540, 197567, -2144500, 6003540, 197567, -2136060, 6008040, -145383, -2188040, 5988480, -176108, -2144500, 6003540, 197567, -2188040, 5988480, -176108, -2147740, 6002370, 197874, -2150780, 6001270, 198165, -2144860, 6002560, 221820, -2147740, 6002370, 197874, -2150780, 6001270, 198165, -2147740, 6002370, 197874, -2188040, 5988480, -176108, -2150780, 6001270, 198165, -2188040, 5988480, -176108, -2163070, 5998310, 147951, -2234930, 5973140, 85485.9, -2163070, 5998310, 147951, -2188040, 5988480, -176108, -2234930, 5973140, 85485.9, -2188040, 5988480, -176108, -2202e3, 5977120, -324289, -2086130, 6027110, -50809.1, -2083210, 6026500, 148370, -2071520, 6032190, 45929.4, -2144860, 6002560, 221820, -2122810, 6011310, 195487, -2139680, 6005270, 197107, -2122810, 6011310, 195487, -2083210, 6026500, 148370, -2086130, 6027110, -50809.1, -2122810, 6011310, 195487, -2086130, 6027110, -50809.1, -2139680, 6005270, 197107, -2144860, 6002560, 221820, -2139680, 6005270, 197107, -2144500, 6003540, 197567, -2139680, 6005270, 197107, -2086130, 6027110, -50809.1, -2136060, 6008040, -145383, -2139680, 6005270, 197107, -2136060, 6008040, -145383, -2144500, 6003540, 197567, -3662870, 5218310, 181678, -3573350, 5282180, 101404, -3606730, 5260210, 47312.2, -3606730, 5260210, 47312.2, -3573350, 5282180, 101404, -3537550, 5307140, 26050.5, -3573350, 5282180, 101404, -3466660, 5352900, 96770, -3537550, 5307140, 26050.5, -3537550, 5307140, 26050.5, -3466660, 5352900, 96770, -3447780, 5365740, 47672.2, -3466660, 5352900, 96770, -3347880, 5427680, 112110, -3447780, 5365740, 47672.2, -3447780, 5365740, 47672.2, -3347880, 5427680, 112110, -3290350, 5463740, 42152.5, -3347880, 5427680, 112110, -3273250, 5472240, 144754, -3290350, 5463740, 42152.5, -3290350, 5463740, 42152.5, -3273250, 5472240, 144754, -3206670, 5513370, 26233.3, -3273250, 5472240, 144754, -3192380, 5521360, 62636.8, -3206670, 5513370, 26233.3, -3206670, 5513370, 26233.3, -3192380, 5521360, 62636.8, -3192890, 5521120, -57460, -3192890, 5521120, -57460, -3192380, 5521360, 62636.8, -3172270, 5533270, 17056.5, -3134850, 5541050, -386157, -3107620, 5564760, -237360, -3094070, 5563980, -385342, -3134850, 5541050, -386157, -3122720, 5559380, -149610, -3107620, 5564760, -237360, -3172270, 5533270, 17056.5, -3122720, 5559380, -149610, -3134850, 5541050, -386157, -3172270, 5533270, 17056.5, -3134850, 5541050, -386157, -3146160, 5526120, -492609, -3505360, 5328080, -68076.3, -3329830, 5438900, -105700, -3456790, 5359160, -102935, -3505360, 5328080, -68076.3, -3456790, 5359160, -102935, -3497220, 5332520, -118994, -1611130, 6136920, -648320, -1600390, 6170920, -197053, -1582660, 6177490, -119948, -1637380, 6158920, -258721, -1600390, 6170920, -197053, -1611130, 6136920, -648320, -1729570, 6104840, -646018, -1637380, 6158920, -258721, -1611130, 6136920, -648320, -1729570, 6104840, -646018, -1716030, 6137040, -268488, -1637380, 6158920, -258721, -1737860, 6118230, -475641, -1716030, 6137040, -268488, -1729570, 6104840, -646018, -1767200, 6119010, -338396, -1716030, 6137040, -268488, -1737860, 6118230, -475641, -1611130, 6136920, -648320, -1582660, 6177490, -119948, -1543940, 6187330, -117115, -1611130, 6136920, -648320, -1543940, 6187330, -117115, -1522880, 6168460, -556294, -1543940, 6187330, -117115, -1482120, 6203040, -78720.9, -1522880, 6168460, -556294, -1522880, 6168460, -556294, -1482120, 6203040, -78720.9, -1443050, 6212440, 62071.1, -1525500, 6193010, 11559.7, -1443050, 6212440, 62071.1, -1482120, 6203040, -78720.9, -1298300, 6243480, 118074, -1287980, 6242460, 230354, -1282610, 6246750, 116634, -1282610, 6246750, 116634, -1259080, 6244910, -309463, -1340420, 6222810, -399372, -1282610, 6246750, 116634, -1340420, 6222810, -399372, -1298300, 6243480, 118074, -1379860, 6225160, 154645, -1287980, 6242460, 230354, -1298300, 6243480, 118074, -1379860, 6225160, 154645, -1298300, 6243480, 118074, -1378040, 6226220, 125446, -1378040, 6226220, 125446, -1298300, 6243480, 118074, -1340420, 6222810, -399372, -1380430, 6225680, 125667, -1379860, 6225160, 154645, -1378040, 6226220, 125446, -1378040, 6226220, 125446, -1340420, 6222810, -399372, -1385870, 6208150, -466239, -1378040, 6226220, 125446, -1385870, 6208150, -466239, -1380430, 6225680, 125667, -1398560, 6221600, 127342, -1379860, 6225160, 154645, -1380430, 6225680, 125667, -1398560, 6221600, 127342, -1380430, 6225680, 125667, -1385870, 6208150, -466239, -1398560, 6221600, 127342, -1385870, 6208150, -466239, -1443050, 6212440, 62071.1, -1522880, 6168460, -556294, -1443050, 6212440, 62071.1, -1385870, 6208150, -466239, -1011460, 6284830, 396746, -994299, 6299100, 115309, -1002650, 6298170, 90922.6, -1011460, 6284830, 396746, -1002650, 6298170, 90922.6, -1024070, 6294700, 92882.7, -1026740, 6294920, 20250.8, -1024070, 6294700, 92882.7, -1002650, 6298170, 90922.6, -1072350, 6277480, 350823, -1011460, 6284830, 396746, -1024070, 6294700, 92882.7, -1072350, 6277480, 350823, -1024070, 6294700, 92882.7, -1037190, 6292530, 94082.9, -1037190, 6292530, 94082.9, -1024070, 6294700, 92882.7, -1026740, 6294920, 20250.8, -1103010, 6281240, 100113, -1072350, 6277480, 350823, -1037190, 6292530, 94082.9, -1037190, 6292530, 94082.9, -1026740, 6294920, 20250.8, -1123040, 6278070, -71910.2, -1037190, 6292530, 94082.9, -1123040, 6278070, -71910.2, -1103010, 6281240, 100113, -1176970, 6264280, 232087, -1072350, 6277480, 350823, -1103010, 6281240, 100113, -1176970, 6264280, 232087, -1103010, 6281240, 100113, -1154720, 6271860, 104864, -1154720, 6271860, 104864, -1103010, 6281240, 100113, -1123040, 6278070, -71910.2, -1185350, 6266090, 107676, -1176970, 6264280, 232087, -1154720, 6271860, 104864, -1154720, 6271860, 104864, -1123040, 6278070, -71910.2, -1205640, 6259020, -226659, -1154720, 6271860, 104864, -1205640, 6259020, -226659, -1185350, 6266090, 107676, -1287980, 6242460, 230354, -1176970, 6264280, 232087, -1185350, 6266090, 107676, -1287980, 6242460, 230354, -1185350, 6266090, 107676, -1267900, 6249780, 115270, -1267900, 6249780, 115270, -1185350, 6266090, 107676, -1205640, 6259020, -226659, -1287980, 6242460, 230354, -1267900, 6249780, 115270, -1282610, 6246750, 116634, -1267900, 6249780, 115270, -1205640, 6259020, -226659, -1259080, 6244910, -309463, -1267900, 6249780, 115270, -1259080, 6244910, -309463, -1282610, 6246750, 116634, -853760, 6314880, 271177, -827390, 6297480, 579314, -795522, 6317690, 365668, -925788, 6292830, 471544, -827390, 6297480, 579314, -853760, 6314880, 271177, -953421, 6303230, 201600, -925788, 6292830, 471544, -853760, 6314880, 271177, -1011460, 6284830, 396746, -925788, 6292830, 471544, -953421, 6303230, 201600, -1011460, 6284830, 396746, -953421, 6303230, 201600, -994299, 6299100, 115309, -712004, 6323740, 427478, -656760, 6315550, 600585, -595884, 6326310, 548965, -827390, 6297480, 579314, -656760, 6315550, 600585, -712004, 6323740, 427478, -827390, 6297480, 579314, -712004, 6323740, 427478, -795522, 6317690, 365668, -656760, 6315550, 600585, -585706, 6322110, 605022, -595884, 6326310, 548965, -3679170, 5207640, 156982, -3662870, 5218310, 181678, -3606730, 5260210, 47312.2, -3107620, 5564760, -237360, -3065920, 5584280, -309708, -3094070, 5563980, -385342, -3215600, 5474070, -610352, -3218400, 5487820, -452709, -3214240, 5499420, -324021, -2975030, 5623120, 457117, -2888980, 5666270, 475704, -2921990, 5658090, 357459, -2977500, 5633490, 279947, -2921990, 5658090, 357459, -2952450, 5646790, 277385, -2977500, 5633490, 279947, -2952450, 5646790, 277385, -2980650, 5635180, 202056, -2977500, 5633490, 279947, -2980650, 5635180, 202056, -2996700, 5624590, 252894, -4459200, 4549930, -306083, -4441170, 4576060, -127359, -4429100, 4588710, -86268.5, -4431270, 4542480, -638394, -4414350, 4553180, -677925, -4415460, 4538930, -760634, -3224360, 5427210, -907724, -3147180, 5468480, -930474, -3144440, 5463060, -970447, 1129e3, 5694260, 2633360, 1146650, 5690740, 2633360, 1197280, 6034620, 1676780, 1129e3, 5694260, 2633360, 1197280, 6034620, 1676780, 1190020, 6035870, 1677450, 1212620, 6172410, 1050780, 1190020, 6035870, 1677450, 1197280, 6034620, 1676780, 1065040, 5326210, 3332110, 1075910, 5268680, 3418370, 1085370, 5323280, 3330250, 1065040, 5326210, 3332110, 1085370, 5323280, 3330250, 1146650, 5690740, 2633360, 1065040, 5326210, 3332110, 1146650, 5690740, 2633360, 1129e3, 5694260, 2633360, 1065040, 5326210, 3332110, 1129e3, 5694260, 2633360, 1062780, 5337530, 3314790, 1167590, 5686480, 2633360, 1245050, 6026170, 1672400, 1197280, 6034620, 1676780, 1167590, 5686480, 2633360, 1197280, 6034620, 1676780, 1146650, 5690740, 2633360, 1245050, 6026170, 1672400, 1280200, 6169870, 983848, 1212620, 6172410, 1050780, 1245050, 6026170, 1672400, 1212620, 6172410, 1050780, 1197280, 6034620, 1676780, 1085370, 5323280, 3330250, 1075910, 5268680, 3418370, 1087680, 5322940, 3330040, 1087680, 5322940, 3330040, 1167590, 5686480, 2633360, 1146650, 5690740, 2633360, 1087680, 5322940, 3330040, 1146650, 5690740, 2633360, 1085370, 5323280, 3330250, 1178480, 5684230, 2633360, 127e4, 6021600, 1670100, 1245050, 6026170, 1672400, 1178480, 5684230, 2633360, 1245050, 6026170, 1672400, 1167590, 5686480, 2633360, 127e4, 6021600, 1670100, 1318780, 6173230, 909476, 1280200, 6169870, 983848, 127e4, 6021600, 1670100, 1280200, 6169870, 983848, 1245050, 6026170, 1672400, 1075910, 5268680, 3418370, 1088890, 5322760, 3329930, 1087680, 5322940, 3330040, 1088890, 5322760, 3329930, 1178480, 5684230, 2633360, 1167590, 5686480, 2633360, 1088890, 5322760, 3329930, 1167590, 5686480, 2633360, 1087680, 5322940, 3330040, 1178480, 5684230, 2633360, 1218930, 5675690, 2633360, 1288580, 6018130, 1668400, 1178480, 5684230, 2633360, 1288580, 6018130, 1668400, 127e4, 6021600, 1670100, 127e4, 6021600, 1670100, 1288580, 6018130, 1668400, 1318780, 6173230, 909476, 1075910, 5268680, 3418370, 1095320, 5082100, 3682630, 1143940, 5314370, 3324900, 1075910, 5268680, 3418370, 1143940, 5314370, 3324900, 1088890, 5322760, 3329930, 1088890, 5322760, 3329930, 1143940, 5314370, 3324900, 1218930, 5675690, 2633360, 1088890, 5322760, 3329930, 1218930, 5675690, 2633360, 1178480, 5684230, 2633360, 1014100, 5174780, 3575990, 1095320, 5082100, 3682630, 1075910, 5268680, 3418370, 1014100, 5174780, 3575990, 1075910, 5268680, 3418370, 1033030, 5222500, 3500910, 1011340, 5289620, 3405810, 1033030, 5222500, 3500910, 1075910, 5268680, 3418370, 852626, 5451790, 3187970, 977586, 5390750, 3254740, 917109, 5466770, 3144410, 917109, 5466770, 3144410, 977586, 5390750, 3254740, 962860, 5510350, 3053960, 1004940, 5717460, 2633360, 1031100, 5712800, 2633360, 1085040, 6052930, 1687050, 1004940, 5717460, 2633360, 1085040, 6052930, 1687050, 1077490, 6054090, 1687740, 1077490, 6054090, 1687740, 1085040, 6052930, 1687050, 1098020, 6140970, 1323480, 962860, 5510350, 3053960, 977586, 5390750, 3254740, 1031100, 5712800, 2633360, 962860, 5510350, 3053960, 1031100, 5712800, 2633360, 1004940, 5717460, 2633360, 1004940, 5717460, 2633360, 1077490, 6054090, 1687740, 1064930, 6055990, 1688890, 1004940, 5717460, 2633360, 1064930, 6055990, 1688890, 1001190, 5718120, 2633360, 1077490, 6054090, 1687740, 1098020, 6140970, 1323480, 1066710, 6065180, 1654670, 1077490, 6054090, 1687740, 1066710, 6065180, 1654670, 1064930, 6055990, 1688890, 962860, 5510350, 3053960, 1004940, 5717460, 2633360, 1001190, 5718120, 2633360, 1048720, 6126450, 1426080, 1066710, 6065180, 1654670, 1098020, 6140970, 1323480, 1048720, 6126450, 1426080, 1050770, 6104490, 1515350, 1066710, 6065180, 1654670, 132036, 5817870, 2601910, 194117, 5803880, 2628950, 150002, 5844520, 2540900, 150002, 5844520, 2540900, 194117, 5803880, 2628950, 185346, 5925820, 2343910, 196054, 5801800, 2633360, 241614, 5800080, 2633360, 185346, 5925820, 2343910, 196054, 5801800, 2633360, 185346, 5925820, 2343910, 194117, 5803880, 2628950, 196054, 5801800, 2633360, 276526, 5710170, 2818620, 241614, 5800080, 2633360, 290429, 5797840, 2633360, 313242, 5928910, 2322540, 185346, 5925820, 2343910, 290429, 5797840, 2633360, 185346, 5925820, 2343910, 241614, 5800080, 2633360, 241614, 5800080, 2633360, 276526, 5710170, 2818620, 290429, 5797840, 2633360, 302652, 5797210, 2633360, 365748, 5978900, 2183460, 313242, 5928910, 2322540, 302652, 5797210, 2633360, 313242, 5928910, 2322540, 290429, 5797840, 2633360, 276526, 5710170, 2818620, 302652, 5797210, 2633360, 290429, 5797840, 2633360, 308845, 5959190, 2244840, 313242, 5928910, 2322540, 365748, 5978900, 2183460, 114985, 5928120, 2342610, 150002, 5844520, 2540900, 185346, 5925820, 2343910, 114985, 5928120, 2342610, 115300, 5878200, 2464390, 150002, 5844520, 2540900, 99913.9, 5913330, 2380130, 115300, 5878200, 2464390, 114985, 5928120, 2342610, -233233, 5800420, 2633360, -218933, 5842500, 2540540, -275809, 5908340, 2378640, -233233, 5800420, 2633360, -275809, 5908340, 2378640, -245097, 5799930, 2633360, -245097, 5799930, 2633360, -239854, 5780130, 2676740, -233233, 5800420, 2633360, -275809, 5908340, 2378640, -263357, 5799130, 2633360, -245097, 5799930, 2633360, -246365, 5635690, 2966410, -239854, 5780130, 2676740, -245097, 5799930, 2633360, -246365, 5635690, 2966410, -245097, 5799930, 2633360, -263357, 5799130, 2633360, -299141, 5797400, 2633360, -263357, 5799130, 2633360, -275809, 5908340, 2378640, -333535, 5592100, 3039e3, -246365, 5635690, 2966410, -263357, 5799130, 2633360, -333535, 5592100, 3039e3, -263357, 5799130, 2633360, -299141, 5797400, 2633360, -299141, 5797400, 2633360, -275809, 5908340, 2378640, -314283, 5878480, 2446420, -299141, 5797400, 2633360, -314283, 5878480, 2446420, -320995, 5796230, 2633360, -333535, 5592100, 3039e3, -299141, 5797400, 2633360, -320995, 5796230, 2633360, -326130, 5895850, 2402980, -314283, 5878480, 2446420, -275809, 5908340, 2378640, -515425, 5713060, 2779190, -509886, 5685360, 2836040, -463582, 5757750, 2695380, -525697, 5556320, 3076970, -463582, 5757750, 2695380, -509886, 5685360, 2836040, -634330, 5637940, 2904310, -525697, 5556320, 3076970, -509886, 5685360, 2836040, -634330, 5637940, 2904310, -611083, 5580840, 3016640, -525697, 5556320, 3076970, -717002, 5576140, 3002070, -611083, 5580840, 3016640, -634330, 5637940, 2904310, -705732, 5638670, 2886490, -693811, 5608550, 2947020, -634330, 5637940, 2904310, -717002, 5576140, 3002070, -634330, 5637940, 2904310, -693811, 5608550, 2947020, -726896, 5594800, 2965e3, -717002, 5576140, 3002070, -693811, 5608550, 2947020, -611083, 5580840, 3016640, -592359, 5526680, 3117700, -525697, 5556320, 3076970, -641418, 5554990, 3057510, -592359, 5526680, 3117700, -611083, 5580840, 3016640, -525697, 5556320, 3076970, -443244, 5550200, 3100760, -463582, 5757750, 2695380, -463582, 5757750, 2695380, -443244, 5550200, 3100760, -460311, 5780830, 2646420, -453696, 5787350, 2633360, -421670, 5789770, 2633360, -417987, 5821670, 2563170, -443244, 5550200, 3100760, -421670, 5789770, 2633360, -453696, 5787350, 2633360, -443244, 5550200, 3100760, -453696, 5787350, 2633360, -460311, 5780830, 2646420, -421670, 5789770, 2633360, -405571, 5790920, 2633360, -417987, 5821670, 2563170, -443244, 5550200, 3100760, -333535, 5592100, 3039e3, -405571, 5790920, 2633360, -443244, 5550200, 3100760, -405571, 5790920, 2633360, -421670, 5789770, 2633360, -337625, 5795280, 2633360, -337950, 5816590, 2586230, -417987, 5821670, 2563170, -337625, 5795280, 2633360, -417987, 5821670, 2563170, -405571, 5790920, 2633360, -405571, 5790920, 2633360, -333535, 5592100, 3039e3, -337625, 5795280, 2633360, -336229, 5795360, 2633360, -336627, 5862560, 2481170, -337950, 5816590, 2586230, -336229, 5795360, 2633360, -337950, 5816590, 2586230, -337625, 5795280, 2633360, -333535, 5592100, 3039e3, -336229, 5795360, 2633360, -337625, 5795280, 2633360, -320995, 5796230, 2633360, -314283, 5878480, 2446420, -336627, 5862560, 2481170, -320995, 5796230, 2633360, -336627, 5862560, 2481170, -336229, 5795360, 2633360, -333535, 5592100, 3039e3, -320995, 5796230, 2633360, -336229, 5795360, 2633360, -216892, 5801060, 2633360, -194632, 5820800, 2591470, -218933, 5842500, 2540540, -216892, 5801060, 2633360, -218933, 5842500, 2540540, -233233, 5800420, 2633360, -239854, 5780130, 2676740, -216892, 5801060, 2633360, -233233, 5800420, 2633360, -218933, 5842500, 2540540, -194632, 5820800, 2591470, -190781, 5843630, 2540210, -194632, 5820800, 2591470, -174948, 5872140, 2475220, -190781, 5843630, 2540210, -194632, 5820800, 2591470, -149241, 5824760, 2585630, -174948, 5872140, 2475220, 194117, 5803880, 2628950, 194099, 5801860, 2633360, 196054, 5801800, 2633360, 193484, 5712760, 2820270, 276526, 5710170, 2818620, 196054, 5801800, 2633360, 193484, 5712760, 2820270, 196054, 5801800, 2633360, 194099, 5801860, 2633360, 193877, 5801870, 2633360, 194099, 5801860, 2633360, 194117, 5803880, 2628950, 181432, 5693500, 2859480, 193484, 5712760, 2820270, 194099, 5801860, 2633360, 181432, 5693500, 2859480, 194099, 5801860, 2633360, 193877, 5801870, 2633360, 193603, 5801880, 2633360, 193877, 5801870, 2633360, 194117, 5803880, 2628950, 181432, 5693500, 2859480, 193877, 5801870, 2633360, 193603, 5801880, 2633360, 181432, 5693500, 2859480, 193603, 5801880, 2633360, 179552, 5744730, 2755950, 124779, 5629810, 2985e3, 181432, 5693500, 2859480, 179552, 5744730, 2755950, 124779, 5629810, 2985e3, 179552, 5744730, 2755950, 143305, 5712670, 2823440, 117374, 5670540, 2907730, 124779, 5629810, 2985e3, 143305, 5712670, 2823440, 115463, 5680720, 2887990, 117374, 5670540, 2907730, 143305, 5712670, 2823440, 680225, 5765120, 2633360, 720922, 6036160, 1923740, 639383, 6023660, 1990150, 680225, 5765120, 2633360, 639383, 6023660, 1990150, 656926, 5767820, 2633360, 656926, 5767820, 2633360, 660918, 5629770, 2914140, 680225, 5765120, 2633360, 561034, 5777940, 2633360, 656926, 5767820, 2633360, 639383, 6023660, 1990150, 526670, 5650530, 2901380, 660918, 5629770, 2914140, 656926, 5767820, 2633360, 526670, 5650530, 2901380, 656926, 5767820, 2633360, 561034, 5777940, 2633360, 561034, 5777940, 2633360, 639383, 6023660, 1990150, 517963, 5992990, 2113370, 561034, 5777940, 2633360, 517963, 5992990, 2113370, 525264, 5781300, 2633360, 525264, 5781300, 2633360, 526670, 5650530, 2901380, 561034, 5777940, 2633360, 486345, 5784700, 2633360, 525264, 5781300, 2633360, 517963, 5992990, 2113370, 471877, 5681030, 2851150, 526670, 5650530, 2901380, 525264, 5781300, 2633360, 471877, 5681030, 2851150, 525264, 5781300, 2633360, 486345, 5784700, 2633360, 486345, 5784700, 2633360, 517963, 5992990, 2113370, 365748, 5978900, 2183460, 486345, 5784700, 2633360, 365748, 5978900, 2183460, 438735, 5788510, 2633360, 438735, 5788510, 2633360, 471877, 5681030, 2851150, 486345, 5784700, 2633360, 365748, 5978900, 2183460, 387022, 5792190, 2633360, 438735, 5788510, 2633360, 395560, 5691600, 2841730, 471877, 5681030, 2851150, 438735, 5788510, 2633360, 395560, 5691600, 2841730, 438735, 5788510, 2633360, 387022, 5792190, 2633360, 302652, 5797210, 2633360, 387022, 5792190, 2633360, 365748, 5978900, 2183460, 276526, 5710170, 2818620, 395560, 5691600, 2841730, 387022, 5792190, 2633360, 276526, 5710170, 2818620, 387022, 5792190, 2633360, 302652, 5797210, 2633360, 801925, 5749450, 2633360, 802216, 5749410, 2633360, 830879, 6058640, 1805860, 801925, 5749450, 2633360, 830879, 6058640, 1805860, 828712, 6044100, 1854590, 801925, 5749450, 2633360, 784879, 5584710, 2969210, 802216, 5749410, 2633360, 707314, 5761860, 2633360, 801925, 5749450, 2633360, 828712, 6044100, 1854590, 660918, 5629770, 2914140, 784879, 5584710, 2969210, 801925, 5749450, 2633360, 660918, 5629770, 2914140, 801925, 5749450, 2633360, 707314, 5761860, 2633360, 707314, 5761860, 2633360, 828712, 6044100, 1854590, 720922, 6036160, 1923740, 707314, 5761860, 2633360, 720922, 6036160, 1923740, 680225, 5765120, 2633360, 660918, 5629770, 2914140, 707314, 5761860, 2633360, 680225, 5765120, 2633360, 910631, 5733240, 2633360, 981569, 6055040, 1741620, 884674, 6058820, 1779700, 910631, 5733240, 2633360, 884674, 6058820, 1779700, 882051, 5737710, 2633360, 882051, 5737710, 2633360, 872675, 5545680, 3017140, 910631, 5733240, 2633360, 816884, 5747350, 2633360, 882051, 5737710, 2633360, 884674, 6058820, 1779700, 784879, 5584710, 2969210, 872675, 5545680, 3017140, 882051, 5737710, 2633360, 784879, 5584710, 2969210, 882051, 5737710, 2633360, 816884, 5747350, 2633360, 816884, 5747350, 2633360, 884674, 6058820, 1779700, 830879, 6058640, 1805860, 816884, 5747350, 2633360, 830879, 6058640, 1805860, 802216, 5749410, 2633360, 802216, 5749410, 2633360, 784879, 5584710, 2969210, 816884, 5747350, 2633360, 1051230, 6058030, 1690140, 1031170, 6048410, 1736e3, 991449, 5719820, 2633360, 1051230, 6058030, 1690140, 991449, 5719820, 2633360, 1001190, 5718120, 2633360, 1051230, 6058030, 1690140, 1001190, 5718120, 2633360, 1064930, 6055990, 1688890, 1051230, 6058030, 1690140, 1064930, 6055990, 1688890, 1066710, 6065180, 1654670, 991449, 5719820, 2633360, 962860, 5510350, 3053960, 1001190, 5718120, 2633360, 925057, 5730930, 2633360, 991449, 5719820, 2633360, 1031170, 6048410, 1736e3, 872675, 5545680, 3017140, 962860, 5510350, 3053960, 991449, 5719820, 2633360, 872675, 5545680, 3017140, 991449, 5719820, 2633360, 925057, 5730930, 2633360, 925057, 5730930, 2633360, 1031170, 6048410, 1736e3, 981569, 6055040, 1741620, 925057, 5730930, 2633360, 981569, 6055040, 1741620, 910641, 5733240, 2633360, 872675, 5545680, 3017140, 925057, 5730930, 2633360, 910641, 5733240, 2633360, -246365, 5635690, 2966410, -167217, 5645080, 2954140, -207913, 5660120, 2922810, -246365, 5635690, 2966410, -207913, 5660120, 2922810, -239854, 5780130, 2676740, -239854, 5780130, 2676740, -207913, 5660120, 2922810, -202081, 5691410, 2862240, -239854, 5780130, 2676740, -202081, 5691410, 2862240, -181423, 5774240, 2693860, -202081, 5691410, 2862240, -121038, 5695200, 2859300, -181423, 5774240, 2693860, -181423, 5774240, 2693860, -121038, 5695200, 2859300, -87950.8, 5777120, 2692380, -121038, 5695200, 2859300, -37092.4, 5693e3, 2865940, -87950.8, 5777120, 2692380, -87950.8, 5777120, 2692380, -37092.4, 5693e3, 2865940, 7987.51, 5771310, 2706130, -37092.4, 5693e3, 2865940, 16774.7, 5737990, 2775590, 7987.51, 5771310, 2706130, 64556.2, 5735260, 2780500, 115463, 5680720, 2887990, 143305, 5712670, 2823440, 25422, 5700880, 2850480, 115463, 5680720, 2887990, 64556.2, 5735260, 2780500, 16774.7, 5737990, 2775590, 25422, 5700880, 2850480, 64556.2, 5735260, 2780500, -37092.4, 5693e3, 2865940, 25422, 5700880, 2850480, 16774.7, 5737990, 2775590, 181432, 5693500, 2859480, 185058, 5639100, 2964410, 193422, 5660990, 2922140, 124779, 5629810, 2985e3, 185058, 5639100, 2964410, 181432, 5693500, 2859480, 191345, 5801960, 2633360, 193603, 5801880, 2633360, 194117, 5803880, 2628950, 179552, 5744730, 2755950, 193603, 5801880, 2633360, 191345, 5801960, 2633360, 179552, 5744730, 2755950, 191345, 5801960, 2633360, 171129, 5787740, 2665620, 107639, 5771790, 2703020, 179552, 5744730, 2755950, 171129, 5787740, 2665620, 1031100, 5712800, 2633360, 1031640, 5712710, 2633360, 1086420, 6052720, 1686930, 1031100, 5712800, 2633360, 1086420, 6052720, 1686930, 1085040, 6052930, 1687050, 1085040, 6052930, 1687050, 1086420, 6052720, 1686930, 1104930, 6176840, 1139150, 1085040, 6052930, 1687050, 1104930, 6176840, 1139150, 1098020, 6140970, 1323480, 1031100, 5712800, 2633360, 977586, 5390750, 3254740, 1031640, 5712710, 2633360, 1047520, 5709820, 2633360, 1127720, 6046220, 1683150, 1086420, 6052720, 1686930, 1047520, 5709820, 2633360, 1086420, 6052720, 1686930, 1031640, 5712710, 2633360, 1127720, 6046220, 1683150, 1160860, 6167550, 1133880, 1104930, 6176840, 1139150, 1127720, 6046220, 1683150, 1104930, 6176840, 1139150, 1086420, 6052720, 1686930, 1031640, 5712710, 2633360, 977586, 5390750, 3254740, 1047530, 5709810, 2633360, 1060580, 5707400, 2633360, 1161750, 6040650, 1680040, 1127720, 6046220, 1683150, 1060580, 5707400, 2633360, 1127720, 6046220, 1683150, 1047520, 5709820, 2633360, 1161750, 6040650, 1680040, 1212620, 6172410, 1050780, 1160860, 6167550, 1133880, 1161750, 6040650, 1680040, 1160860, 6167550, 1133880, 1127720, 6046220, 1683150, 977586, 5390750, 3254740, 1060580, 5707400, 2633360, 1047520, 5709820, 2633360, 1060580, 5707400, 2633360, 1129e3, 5694260, 2633360, 1190020, 6035870, 1677450, 1060580, 5707400, 2633360, 1190020, 6035870, 1677450, 1161750, 6040650, 1680040, 1161750, 6040650, 1680040, 1190020, 6035870, 1677450, 1212620, 6172410, 1050780, 977586, 5390750, 3254740, 1062780, 5337530, 3314790, 1129e3, 5694260, 2633360, 977586, 5390750, 3254740, 1129e3, 5694260, 2633360, 1060580, 5707400, 2633360, 1362950, 6168220, 878005, 1362810, 6164810, 901688, 1385820, 6159680, 901688, 1329320, 5650860, 2633360, 1420730, 5991710, 1656230, 1347250, 6006770, 1663e3, 1329320, 5650860, 2633360, 1347250, 6006770, 1663e3, 1293540, 5659160, 2633360, 1385820, 6159680, 901688, 1362810, 6164810, 901688, 1347250, 6006770, 1663e3, 1385820, 6159680, 901688, 1347250, 6006770, 1663e3, 1420730, 5991710, 1656230, 1385820, 6159680, 901688, 1420730, 5991710, 1656230, 1461190, 6130120, 980158, 1228580, 5300340, 3317150, 1192990, 5115100, 3606310, 1239060, 5298500, 3316190, 1239060, 5298500, 3316190, 1329320, 5650860, 2633360, 1293540, 5659160, 2633360, 1239060, 5298500, 3316190, 1293540, 5659160, 2633360, 1228580, 5300340, 3317150, 1361980, 6164990, 901688, 1362810, 6164810, 901688, 1362950, 6168220, 878005, 1234770, 5672270, 2633360, 1293540, 5659160, 2633360, 1347250, 6006770, 1663e3, 1234770, 5672270, 2633360, 1347250, 6006770, 1663e3, 1319820, 6012160, 1665520, 1319820, 6012160, 1665520, 1347250, 6006770, 1663e3, 1362810, 6164810, 901688, 1319820, 6012160, 1665520, 1362810, 6164810, 901688, 1361980, 6164990, 901688, 1095320, 5082100, 3682630, 1192990, 5115100, 3606310, 1228590, 5300330, 3317150, 1095320, 5082100, 3682630, 1228590, 5300330, 3317150, 1149260, 5313530, 3324420, 1149260, 5313530, 3324420, 1228590, 5300330, 3317150, 1293540, 5659160, 2633360, 1149260, 5313530, 3324420, 1293540, 5659160, 2633360, 1234770, 5672270, 2633360, 1329730, 6172030, 901688, 1361980, 6164990, 901688, 1362950, 6168220, 878005, 1234770, 5672270, 2633360, 1319820, 6012160, 1665520, 1288580, 6018130, 1668400, 1234770, 5672270, 2633360, 1288580, 6018130, 1668400, 1218930, 5675690, 2633360, 1329730, 6172030, 901688, 1318780, 6173230, 909476, 1288580, 6018130, 1668400, 1329730, 6172030, 901688, 1288580, 6018130, 1668400, 1319820, 6012160, 1665520, 1329730, 6172030, 901688, 1319820, 6012160, 1665520, 1361980, 6164990, 901688, 1143940, 5314370, 3324900, 1095320, 5082100, 3682630, 1149250, 5313530, 3324420, 1149260, 5313530, 3324420, 1234770, 5672270, 2633360, 1218930, 5675690, 2633360, 1149260, 5313530, 3324420, 1218930, 5675690, 2633360, 1143940, 5314370, 3324900, 1428700, 5626550, 2633360, 1516550, 5970640, 1647370, 1484250, 5977930, 1650360, 1428700, 5626550, 2633360, 1484250, 5977930, 1650360, 1413180, 5630470, 2633360, 1516550, 5970640, 1647370, 1540090, 6062560, 1242460, 1504480, 6093040, 1132870, 1516550, 5970640, 1647370, 1504480, 6093040, 1132870, 1484250, 5977930, 1650360, 1335770, 5280560, 3307310, 1294560, 51e5, 3592740, 1340310, 5279680, 3306880, 1340310, 5279680, 3306880, 1428700, 5626550, 2633360, 1413180, 5630470, 2633360, 1340310, 5279680, 3306880, 1413180, 5630470, 2633360, 1335770, 5280560, 3307310, 1348880, 5646220, 2633360, 1413180, 5630470, 2633360, 1484250, 5977930, 1650360, 1348880, 5646220, 2633360, 1484250, 5977930, 1650360, 1461080, 5983030, 1652510, 1461080, 5983030, 1652510, 1484250, 5977930, 1650360, 1504480, 6093040, 1132870, 1192990, 5115100, 3606310, 1294560, 51e5, 3592740, 1335770, 5280560, 3307310, 1192990, 5115100, 3606310, 1335770, 5280560, 3307310, 1244820, 5297490, 3315660, 1244810, 5297490, 3315660, 1335770, 5280560, 3307310, 1413180, 5630470, 2633360, 1244810, 5297490, 3315660, 1413180, 5630470, 2633360, 1348880, 5646220, 2633360, 1348880, 5646220, 2633360, 1461080, 5983030, 1652510, 1420730, 5991710, 1656230, 1348880, 5646220, 2633360, 1420730, 5991710, 1656230, 1329320, 5650860, 2633360, 1461080, 5983030, 1652510, 1504480, 6093040, 1132870, 1461190, 6130120, 980158, 1461080, 5983030, 1652510, 1461190, 6130120, 980158, 1420730, 5991710, 1656230, 1192990, 5115100, 3606310, 1244820, 5297490, 3315660, 1239060, 5298500, 3316190, 1244810, 5297490, 3315660, 1348880, 5646220, 2633360, 1329320, 5650860, 2633360, 1244810, 5297490, 3315660, 1329320, 5650860, 2633360, 1239060, 5298500, 3316190, 1443780, 5622700, 2633360, 1548020, 5963370, 1644450, 1516550, 5970640, 1647370, 1443780, 5622700, 2633360, 1516550, 5970640, 1647370, 1428700, 5626550, 2633360, 1548020, 5963370, 1644450, 1574500, 6042900, 1293720, 1540090, 6062560, 1242460, 1548020, 5963370, 1644450, 1540090, 6062560, 1242460, 1516550, 5970640, 1647370, 1294560, 51e5, 3592740, 1344750, 5278810, 3306480, 1340310, 5279680, 3306880, 1344750, 5278810, 3306480, 1443780, 5622700, 2633360, 1428700, 5626550, 2633360, 1344750, 5278810, 3306480, 1428700, 5626550, 2633360, 1340310, 5279680, 3306880, 1443780, 5622700, 2633360, 1472060, 5615360, 2633360, 1555730, 5961570, 1643730, 1443780, 5622700, 2633360, 1555730, 5961570, 1643730, 1548020, 5963370, 1644450, 1548020, 5963370, 1644450, 1555730, 5961570, 1643730, 1574500, 6042900, 1293720, 1294560, 51e5, 3592740, 1373570, 5220390, 3385890, 1386170, 5270490, 3302660, 1294560, 51e5, 3592740, 1386170, 5270490, 3302660, 1344750, 5278810, 3306480, 1344750, 5278810, 3306480, 1386170, 5270490, 3302660, 1472060, 5615360, 2633360, 1344750, 5278810, 3306480, 1472060, 5615360, 2633360, 1443780, 5622700, 2633360, 1294560, 51e5, 3592740, 1439070, 5172160, 3432060, 1373570, 5220390, 3385890, 1294560, 51e5, 3592740, 1424940, 5049140, 3615010, 1439070, 5172160, 3432060, 1424940, 5049140, 3615010, 1475680, 5062790, 3575610, 1459170, 5123930, 3494920, 1439070, 5172160, 3432060, 1424940, 5049140, 3615010, 1459170, 5123930, 3494920, 1668e3, 5560310, 2633360, 1762640, 5808800, 1950870, 1738330, 5881390, 1745740, 1668e3, 5560310, 2633360, 1738330, 5881390, 1745740, 1650380, 5565570, 2633360, 1650380, 5565570, 2633360, 1575050, 5300500, 3168110, 1668e3, 5560310, 2633360, 1688060, 5554250, 2633360, 1765830, 5713120, 2211280, 1762640, 5808800, 1950870, 1688060, 5554250, 2633360, 1762640, 5808800, 1950870, 1668e3, 5560310, 2633360, 1575050, 5300500, 3168110, 1688060, 5554250, 2633360, 1668e3, 5560310, 2633360, 1688060, 5554250, 2633360, 1714280, 5546220, 2633360, 1765830, 5713120, 2211280, 1575050, 5300500, 3168110, 1649280, 5335820, 3070180, 1714280, 5546220, 2633360, 1575050, 5300500, 3168110, 1714280, 5546220, 2633360, 1688060, 5554250, 2633360, 1725170, 5542840, 2633360, 1774130, 5671830, 2308150, 1765830, 5713120, 2211280, 1725170, 5542840, 2633360, 1765830, 5713120, 2211280, 1714280, 5546220, 2633360, 1714280, 5546220, 2633360, 1649280, 5335820, 3070180, 1725170, 5542840, 2633360, 1725170, 5542840, 2633360, 1773080, 5527700, 2633360, 1774130, 5671830, 2308150, 1649280, 5335820, 3070180, 1763730, 5357370, 2968010, 1773080, 5527700, 2633360, 1649280, 5335820, 3070180, 1773080, 5527700, 2633360, 1725170, 5542840, 2633360, 1842550, 5504940, 2633360, 1925280, 5647480, 2246300, 1774130, 5671830, 2308150, 1842550, 5504940, 2633360, 1774130, 5671830, 2308150, 1773080, 5527700, 2633360, 1773080, 5527700, 2633360, 1763730, 5357370, 2968010, 1842550, 5504940, 2633360, 1882070, 5491550, 2633360, 1888630, 5498460, 2614310, 1925280, 5647480, 2246300, 1882070, 5491550, 2633360, 1925280, 5647480, 2246300, 1842550, 5504940, 2633360, 1763730, 5357370, 2968010, 1882070, 5491550, 2633360, 1842550, 5504940, 2633360, 1925280, 5647480, 2246300, 1888630, 5498460, 2614310, 1993020, 5618930, 2258710, 1888630, 5498460, 2614310, 2051410, 5529330, 2420620, 1993020, 5618930, 2258710, 1993020, 5618930, 2258710, 2051410, 5529330, 2420620, 2103130, 5526100, 2383580, 2073980, 5503020, 2460730, 2098330, 5421770, 2614570, 2172390, 5424940, 2547080, 1888630, 5498460, 2614310, 2098330, 5421770, 2614570, 2073980, 5503020, 2460730, 1888630, 5498460, 2614310, 2073980, 5503020, 2460730, 2051410, 5529330, 2420620, 1503720, 5606970, 2633360, 1631360, 5943270, 1636710, 1604280, 5949940, 1639220, 1503720, 5606970, 2633360, 1604280, 5949940, 1639220, 1492410, 5609990, 2633360, 1631360, 5943270, 1636710, 1642080, 5968320, 1532190, 1624570, 6006250, 1397570, 1631360, 5943270, 1636710, 1624570, 6006250, 1397570, 1604280, 5949940, 1639220, 1373570, 5220390, 3385890, 1389630, 5269780, 3302340, 1388390, 5270040, 3302460, 1389630, 5269780, 3302340, 1503720, 5606970, 2633360, 1492410, 5609990, 2633360, 1389630, 5269780, 3302340, 1492410, 5609990, 2633360, 1388390, 5270040, 3302460, 1512050, 5604730, 2633360, 1651370, 5938260, 1634840, 1631360, 5943270, 1636710, 1512050, 5604730, 2633360, 1631360, 5943270, 1636710, 1503720, 5606970, 2633360, 1651370, 5938260, 1634840, 1655490, 5946890, 1599150, 1642080, 5968320, 1532190, 1651370, 5938260, 1634840, 1642080, 5968320, 1532190, 1631360, 5943270, 1636710, 1373570, 5220390, 3385890, 1390550, 5269590, 3302260, 1389630, 5269780, 3302340, 1390550, 5269590, 3302260, 1512050, 5604730, 2633360, 1503720, 5606970, 2633360, 1390550, 5269590, 3302260, 1503720, 5606970, 2633360, 1389630, 5269780, 3302340, 1512050, 5604730, 2633360, 1558160, 5592090, 2633360, 1653030, 5937840, 1634690, 1512050, 5604730, 2633360, 1653030, 5937840, 1634690, 1651370, 5938260, 1634840, 1651370, 5938260, 1634840, 1653030, 5937840, 1634690, 1655490, 5946890, 1599150, 1373570, 5220390, 3385890, 1443510, 5258420, 3297370, 1390550, 5269590, 3302260, 1443510, 5258420, 3297370, 1469870, 5272080, 3263970, 1558160, 5592090, 2633360, 1443510, 5258420, 3297370, 1558160, 5592090, 2633360, 1512050, 5604730, 2633360, 1443510, 5258420, 3297370, 1512050, 5604730, 2633360, 1390550, 5269590, 3302260, 1674620, 5932340, 1632680, 1653030, 5937840, 1634690, 1558160, 5592090, 2633360, 1674620, 5932340, 1632680, 1558160, 5592090, 2633360, 1596160, 5581360, 2633360, 1674620, 5932340, 1632680, 1596160, 5581360, 2633360, 1738330, 5881390, 1745740, 1655490, 5946890, 1599150, 1653030, 5937840, 1634690, 1674620, 5932340, 1632680, 1558160, 5592090, 2633360, 1469870, 5272080, 3263970, 1596160, 5581360, 2633360, 1596160, 5581360, 2633360, 1650380, 5565570, 2633360, 1738330, 5881390, 1745740, 1469870, 5272080, 3263970, 1575050, 5300500, 3168110, 1650380, 5565570, 2633360, 1469870, 5272080, 3263970, 1650380, 5565570, 2633360, 1596160, 5581360, 2633360, 1894590, 5454220, 2700650, 1870620, 5316810, 2975450, 1939830, 5412640, 2751370, 1763730, 5357370, 2968010, 1870620, 5316810, 2975450, 1894590, 5454220, 2700650, 1882070, 5491550, 2633360, 1890010, 5488820, 2633360, 1888630, 5498460, 2614310, 1763730, 5357370, 2968010, 1894590, 5454220, 2700650, 1890010, 5488820, 2633360, 1763730, 5357370, 2968010, 1890010, 5488820, 2633360, 1882070, 5491550, 2633360, 1870620, 5316810, 2975450, 1991290, 5330030, 2872390, 1937860, 5373470, 2827940, 1870620, 5316810, 2975450, 1937860, 5373470, 2827940, 1939830, 5412640, 2751370, 1373570, 5220390, 3385890, 1460250, 5232090, 3331480, 1465440, 5253630, 3295340, 1373570, 5220390, 3385890, 1465440, 5253630, 3295340, 1443510, 5258420, 3297370, 1443510, 5258420, 3297370, 1465440, 5253630, 3295340, 1469870, 5272080, 3263970, 1492410, 5609990, 2633360, 1604280, 5949940, 1639220, 1555730, 5961570, 1643730, 1492410, 5609990, 2633360, 1555730, 5961570, 1643730, 1472060, 5615360, 2633360, 1604280, 5949940, 1639220, 1624570, 6006250, 1397570, 1574500, 6042900, 1293720, 1604280, 5949940, 1639220, 1574500, 6042900, 1293720, 1555730, 5961570, 1643730, 1386170, 5270490, 3302660, 1373570, 5220390, 3385890, 1388390, 5270040, 3302460, 1388390, 5270040, 3302460, 1492410, 5609990, 2633360, 1472060, 5615360, 2633360, 1388390, 5270040, 3302460, 1472060, 5615360, 2633360, 1386170, 5270490, 3302660, 1762640, 5808800, 1950870, 1765830, 5713120, 2211280, 1779610, 5756440, 2085130, -174948, 5872140, 2475220, -149241, 5824760, 2585630, -118370, 5850900, 2527950, 1002570, 5260120, 3453440, 1033030, 5222500, 3500910, 1011340, 5289620, 3405810, 1180930, 6184600, 1014810, 1212620, 6172410, 1050780, 1280200, 6169870, 983848, 3919720, -590116, 4980070, 3809430, -614692, 5061460, 3890930, -684473, 4990480, 3658140, -535490, 5179870, 3809430, -614692, 5061460, 3919720, -590116, 4980070, 3884680, -462454, 5020570, 3658140, -535490, 5179870, 3919720, -590116, 4980070, 3884680, -462454, 5020570, 3719090, -494394, 5140670, 3658140, -535490, 5179870, 3884680, -462454, 5020570, 3722990, -454074, 5141560, 3719090, -494394, 5140670, 3747100, -406925, 5128070, 3722990, -454074, 5141560, 3884680, -462454, 5020570, 3811820, -402858, 5080790, 3747100, -406925, 5128070, 3884680, -462454, 5020570, 3622710, -481582, 5209770, 3658140, -535490, 5179870, 3719090, -494394, 5140670, 3672800, -474799, 5175450, 3622710, -481582, 5209770, 3719090, -494394, 5140670, 3658140, -535490, 5179870, 3714150, -634105, 5128970, 3809430, -614692, 5061460, 2576180, 4997200, 3001880, 2648190, 4933050, 3044710, 2698640, 5048620, 2802940, 2594620, 5038930, 2915560, 2576180, 4997200, 3001880, 2698640, 5048620, 2802940, 2559230, 5092140, 2854150, 2594620, 5038930, 2915560, 2698640, 5048620, 2802940, 2559230, 5092140, 2854150, 2556150, 5067770, 2899620, 2594620, 5038930, 2915560, 2758370, 5079740, 2686920, 2695360, 4837470, 3153960, 2916440, 4974150, 2717190, 2758370, 5079740, 2686920, 2667240, 4885830, 3103260, 2695360, 4837470, 3153960, 2648190, 4933050, 3044710, 2667240, 4885830, 3103260, 2758370, 5079740, 2686920, 2698640, 5048620, 2802940, 2648190, 4933050, 3044710, 2758370, 5079740, 2686920, 2630800, 4719570, 3377610, 2634290, 4662940, 3452220, 2690910, 4824240, 3177770, 2630800, 4719570, 3377610, 2690910, 4824240, 3177770, 2688710, 4825330, 3177990, 2695360, 4837470, 3153960, 2688710, 4825330, 3177990, 2690910, 4824240, 3177770, 2690910, 4824240, 3177770, 2634290, 4662940, 3452220, 2748860, 4795360, 3171920, 2748860, 4795360, 3171920, 2916440, 4974150, 2717190, 2695360, 4837470, 3153960, 2748860, 4795360, 3171920, 2695360, 4837470, 3153960, 2690910, 4824240, 3177770, 2536350, 4460720, 3775380, 2770040, 4784590, 3169780, 2748860, 4795360, 3171920, 2536350, 4460720, 3775380, 2748860, 4795360, 3171920, 2634290, 4662940, 3452220, 2748860, 4795360, 3171920, 2770040, 4784590, 3169780, 2916440, 4974150, 2717190, 2634290, 4662940, 3452220, 2614070, 4625710, 3516630, 2536350, 4460720, 3775380, 2583250, 4653360, 3503e3, 2614070, 4625710, 3516630, 2634290, 4662940, 3452220, 2850950, 4149960, 3902300, 2924600, 4145940, 3852080, 3144730, 4574100, 3130940, 2850950, 4149960, 3902300, 3144730, 4574100, 3130940, 3129710, 4583300, 3132530, 3203770, 4700720, 2874720, 3129710, 4583300, 3132530, 3144730, 4574100, 3130940, 2803420, 4184590, 3899760, 2850950, 4149960, 3902300, 3129710, 4583300, 3132530, 2803420, 4184590, 3899760, 3129710, 4583300, 3132530, 3116320, 4591440, 3133950, 3116320, 4591440, 3133950, 3129710, 4583300, 3132530, 3203770, 4700720, 2874720, 3067690, 4620570, 3139080, 2803420, 4184590, 3899760, 3116320, 4591440, 3133950, 3116320, 4591440, 3133950, 3203770, 4700720, 2874720, 3135470, 4735760, 2892350, 3116320, 4591440, 3133950, 3135470, 4735760, 2892350, 3067690, 4620570, 3139080, 2764260, 4195310, 3916050, 2803420, 4184590, 3899760, 3067690, 4620570, 3139080, 2764260, 4195310, 3916050, 3067690, 4620570, 3139080, 3059130, 4625630, 3139970, 3059130, 4625630, 3139970, 3067690, 4620570, 3139080, 3135470, 4735760, 2892350, 3028820, 4643380, 3143140, 2764260, 4195310, 3916050, 3059130, 4625630, 3139970, 3059130, 4625630, 3139970, 3135470, 4735760, 2892350, 3100660, 4769270, 2874870, 3059130, 4625630, 3139970, 3100660, 4769270, 2874870, 3028820, 4643380, 3143140, 2715400, 4234600, 3908e3, 2764260, 4195310, 3916050, 3028820, 4643380, 3143140, 2715400, 4234600, 3908e3, 3028820, 4643380, 3143140, 3014010, 4651950, 3144690, 3014010, 4651950, 3144690, 3028820, 4643380, 3143140, 3100660, 4769270, 2874870, 2987570, 4667110, 3147440, 2715400, 4234600, 3908e3, 3014010, 4651950, 3144690, 3014010, 4651950, 3144690, 3100660, 4769270, 2874870, 3097560, 4843020, 2753130, 3014010, 4651950, 3144690, 3097560, 4843020, 2753130, 2987570, 4667110, 3147440, 2651210, 4315590, 3863530, 2715400, 4234600, 3908e3, 2987570, 4667110, 3147440, 2651210, 4315590, 3863530, 2987570, 4667110, 3147440, 2955570, 4685190, 3150760, 2955570, 4685190, 3150760, 2987570, 4667110, 3147440, 3097560, 4843020, 2753130, 2892970, 4719760, 3157220, 2651210, 4315590, 3863530, 2955570, 4685190, 3150760, 2955570, 4685190, 3150760, 3097560, 4843020, 2753130, 3004840, 4908410, 2740160, 2955570, 4685190, 3150760, 3004840, 4908410, 2740160, 2892970, 4719760, 3157220, 2594580, 4358460, 3853900, 2651210, 4315590, 3863530, 2892970, 4719760, 3157220, 2594580, 4358460, 3853900, 2892970, 4719760, 3157220, 2868380, 4733050, 3159740, 2868380, 4733050, 3159740, 2892970, 4719760, 3157220, 3004840, 4908410, 2740160, 2809550, 4764190, 3165760, 2594580, 4358460, 3853900, 2868380, 4733050, 3159740, 2868380, 4733050, 3159740, 3004840, 4908410, 2740160, 2916440, 4974150, 2717190, 2868380, 4733050, 3159740, 2916440, 4974150, 2717190, 2809550, 4764190, 3165760, 2536350, 4460720, 3775380, 2594580, 4358460, 3853900, 2809550, 4764190, 3165760, 2536350, 4460720, 3775380, 2809550, 4764190, 3165760, 2770040, 4784590, 3169780, 2770040, 4784590, 3169780, 2809550, 4764190, 3165760, 2916440, 4974150, 2717190, 3229580, 4520900, 3121900, 3011610, 4118730, 3814290, 3301290, 4474230, 3114170, 3301290, 4474230, 3114170, 3388840, 4578600, 2859680, 3299940, 4663280, 2826830, 3301290, 4474230, 3114170, 3299940, 4663280, 2826830, 3229580, 4520900, 3121900, 2995500, 4111110, 3835e3, 3011610, 4118730, 3814290, 3229580, 4520900, 3121900, 2995500, 4111110, 3835e3, 3229580, 4520900, 3121900, 3226930, 4522590, 3122180, 3299940, 4663280, 2826830, 3226930, 4522590, 3122180, 3229580, 4520900, 3121900, 2924600, 4145940, 3852080, 2995500, 4111110, 3835e3, 3226930, 4522590, 3122180, 2924600, 4145940, 3852080, 3226930, 4522590, 3122180, 3206680, 4535470, 3124350, 3206680, 4535470, 3124350, 3226930, 4522590, 3122180, 3299940, 4663280, 2826830, 3144730, 4574100, 3130940, 2924600, 4145940, 3852080, 3206680, 4535470, 3124350, 3206680, 4535470, 3124350, 3299940, 4663280, 2826830, 3203770, 4700720, 2874720, 3206680, 4535470, 3124350, 3203770, 4700720, 2874720, 3144730, 4574100, 3130940, 3392810, 4412320, 3104190, 3133520, 4049040, 3790790, 3456960, 4367300, 3097110, 3456960, 4367300, 3097110, 3511050, 4417290, 2963360, 3445280, 4487310, 2935410, 3456960, 4367300, 3097110, 3445280, 4487310, 2935410, 3392810, 4412320, 3104190, 3011610, 4118730, 3814290, 3133520, 4049040, 3790790, 3392810, 4412320, 3104190, 3011610, 4118730, 3814290, 3392810, 4412320, 3104190, 3369310, 4428470, 3106770, 3369310, 4428470, 3106770, 3392810, 4412320, 3104190, 3445280, 4487310, 2935410, 3011610, 4118730, 3814290, 3369310, 4428470, 3106770, 3301290, 4474230, 3114170, 3369310, 4428470, 3106770, 3445280, 4487310, 2935410, 3388840, 4578600, 2859680, 3369310, 4428470, 3106770, 3388840, 4578600, 2859680, 3301290, 4474230, 3114170, 3252020, 3895970, 3850510, 3539720, 4235710, 3184550, 3533420, 4311840, 3088580, 3252020, 3895970, 3850510, 3533420, 4311840, 3088580, 3521060, 4320940, 3089960, 3530800, 4337350, 3055900, 3521060, 4320940, 3089960, 3533420, 4311840, 3088580, 3225780, 3961170, 3806110, 3252020, 3895970, 3850510, 3521060, 4320940, 3089960, 3225780, 3961170, 3806110, 3521060, 4320940, 3089960, 3518820, 4322580, 3090210, 3530800, 4337350, 3055900, 3518820, 4322580, 3090210, 3521060, 4320940, 3089960, 3133520, 4049040, 3790790, 3225780, 3961170, 3806110, 3518820, 4322580, 3090210, 3133520, 4049040, 3790790, 3518820, 4322580, 3090210, 3513730, 4326310, 3090780, 3513730, 4326310, 3090780, 3518820, 4322580, 3090210, 3530800, 4337350, 3055900, 3133520, 4049040, 3790790, 3513730, 4326310, 3090780, 3456960, 4367300, 3097110, 3513730, 4326310, 3090780, 3530800, 4337350, 3055900, 3511050, 4417290, 2963360, 3513730, 4326310, 3090780, 3511050, 4417290, 2963360, 3456960, 4367300, 3097110, 3619540, 4155190, 3200770, 3294860, 3774740, 3933390, 3313490, 3762970, 3929050, 3306860, 3830980, 3868860, 3294860, 3774740, 3933390, 3619540, 4155190, 3200770, 3585180, 4209140, 3169e3, 3306860, 3830980, 3868860, 3619540, 4155190, 3200770, 3252020, 3895970, 3850510, 3306860, 3830980, 3868860, 3585180, 4209140, 3169e3, 3252020, 3895970, 3850510, 3585180, 4209140, 3169e3, 3539720, 4235710, 3184550, 3661710, 4067410, 3264480, 3644710, 4026500, 3333040, 3684340, 4046950, 3264460, 3330030, 3699760, 3974520, 3644710, 4026500, 3333040, 3661710, 4067410, 3264480, 3681190, 4090470, 3213720, 3330030, 3699760, 3974520, 3661710, 4067410, 3264480, 3313490, 3762970, 3929050, 3330030, 3699760, 3974520, 3681190, 4090470, 3213720, 3313490, 3762970, 3929050, 3681190, 4090470, 3213720, 3660900, 4147800, 3163340, 3619540, 4155190, 3200770, 3313490, 3762970, 3929050, 3660900, 4147800, 3163340, 2594480, 4834880, 3240750, 2583930, 4798750, 3301890, 2642400, 4755640, 3317830, 2642400, 4755640, 3317830, 2687760, 4825790, 3178090, 2664720, 4837020, 3180400, 2642400, 4755640, 3317830, 2664720, 4837020, 3180400, 2594480, 4834880, 3240750, 2664720, 4837020, 3180400, 2687760, 4825790, 3178090, 2695360, 4837470, 3153960, 2642400, 4755640, 3317830, 2630800, 4719570, 3377610, 2688710, 4825330, 3177990, 2642400, 4755640, 3317830, 2688710, 4825330, 3177990, 2687760, 4825790, 3178090, 2687760, 4825790, 3178090, 2688710, 4825330, 3177990, 2695360, 4837470, 3153960, 2498830, 4547380, 3696710, 2479240, 4495410, 3772190, 2569820, 4598750, 3583520, 2479240, 4495410, 3772190, 2614070, 4625710, 3516630, 2569820, 4598750, 3583520, 2479240, 4495410, 3772190, 2536350, 4460720, 3775380, 2614070, 4625710, 3516630, 3330030, 3699760, 3974520, 3317290, 3643750, 4036020, 3644710, 4026500, 3333040, 3289890, 3661510, 4042340, 3317290, 3643750, 4036020, 3330030, 3699760, 3974520, 3284720, 3693880, 4017180, 3289890, 3661510, 4042340, 3330030, 3699760, 3974520, 3627030, 3680670, 3726170, 3495840, 3490070, 4021220, 3486580, 3461590, 4053520, 3487620, 3543790, 3981450, 3495840, 3490070, 4021220, 3627030, 3680670, 3726170, 3598190, 3735980, 3699170, 3487620, 3543790, 3981450, 3627030, 3680670, 3726170, 3451350, 3591950, 3969950, 3487620, 3543790, 3981450, 3598190, 3735980, 3699170, 3619260, 3767780, 3646340, 3451350, 3591950, 3969950, 3598190, 3735980, 3699170, 3427170, 3612210, 3972490, 3451350, 3591950, 3969950, 3619260, 3767780, 3646340, 3650380, 3960690, 3404440, 3427170, 3612210, 3972490, 3619260, 3767780, 3646340, 3317290, 3643750, 4036020, 3427170, 3612210, 3972490, 3650380, 3960690, 3404440, 3644710, 4026500, 3333040, 3317290, 3643750, 4036020, 3650380, 3960690, 3404440, 3711440, 3858030, 3455570, 3667540, 3751520, 3614940, 3716980, 3771440, 3543480, 3619260, 3767780, 3646340, 3667540, 3751520, 3614940, 3711440, 3858030, 3455570, 3650380, 3960690, 3404440, 3619260, 3767780, 3646340, 3711440, 3858030, 3455570, 3612420, 3583870, 3832480, 3580450, 3508850, 393e4, 3607610, 3511410, 3902960, 3486580, 3461590, 4053520, 3580450, 3508850, 393e4, 3612420, 3583870, 3832480, 3627030, 3680670, 3726170, 3486580, 3461590, 4053520, 3612420, 3583870, 3832480, 3486580, 3461590, 4053520, 3542170, 3433700, 4029140, 3580450, 3508850, 393e4, 3701850, 4107640, 3168050, 3684340, 4046950, 3264460, 3746630, 4060560, 3176050, 3661710, 4067410, 3264480, 3684340, 4046950, 3264460, 3701850, 4107640, 3168050, 3681190, 4090470, 3213720, 3661710, 4067410, 3264480, 3701850, 4107640, 3168050, 3660900, 4147800, 3163340, 3681190, 4090470, 3213720, 3701850, 4107640, 3168050, 3644710, 4026500, 3333040, 3650380, 3960690, 3404440, 3684340, 4046950, 3264460, 3684340, 4046950, 3264460, 3650380, 3960690, 3404440, 3746630, 4060560, 3176050, 3650380, 3960690, 3404440, 3834450, 4050380, 3083490, 3746630, 4060560, 3176050, 3650380, 3960690, 3404440, 3711440, 3858030, 3455570, 3834450, 4050380, 3083490, 3834450, 4050380, 3083490, 3711440, 3858030, 3455570, 3716980, 3771440, 3543480, 3834450, 4050380, 3083490, 3716980, 3771440, 3543480, 3960780, 3920810, 3091230, 3716980, 3771440, 3543480, 3612420, 3583870, 3832480, 3960780, 3920810, 3091230, 3627030, 3680670, 3726170, 3612420, 3583870, 3832480, 3716980, 3771440, 3543480, 3667540, 3751520, 3614940, 3627030, 3680670, 3726170, 3716980, 3771440, 3543480, 3960780, 3920810, 3091230, 3757760, 3425250, 3837740, 4065400, 3646400, 3283930, 3960780, 3920810, 3091230, 3724310, 3446220, 3851460, 3757760, 3425250, 3837740, 3960780, 3920810, 3091230, 3659840, 3527150, 3840060, 3724310, 3446220, 3851460, 3960780, 3920810, 3091230, 3650360, 3561430, 3817530, 3659840, 3527150, 3840060, 3612420, 3583870, 3832480, 3650360, 3561430, 3817530, 3960780, 3920810, 3091230, 4065400, 3646400, 3283930, 3974760, 3455960, 3584920, 4127930, 3513140, 3350080, 4065400, 3646400, 3283930, 3894130, 3431210, 3694750, 3974760, 3455960, 3584920, 4065400, 3646400, 3283930, 3819240, 3419250, 3782370, 3894130, 3431210, 3694750, 3757760, 3425250, 3837740, 3819240, 3419250, 3782370, 4065400, 3646400, 3283930, 3974760, 3455960, 3584920, 4155480, 3340170, 3489110, 4188510, 3415520, 3375560, 3974760, 3455960, 3584920, 4188510, 3415520, 3375560, 4127930, 3513140, 3350080, 3598190, 3735980, 3699170, 3627030, 3680670, 3726170, 3667540, 3751520, 3614940, 3619260, 3767780, 3646340, 3598190, 3735980, 3699170, 3667540, 3751520, 3614940, 3819240, 3419250, 3782370, 3863980, 3393360, 3760330, 3894130, 3431210, 3694750, 2566e3, -1025210, 5729220, 2370970, -964434, 5822420, 2494910, -1017360, 5761710, 2461060, -923889, 5791730, 2370970, -964434, 5822420, 2566e3, -1025210, 5729220, 2668470, -969809, 5692190, 2461060, -923889, 5791730, 2566e3, -1025210, 5729220, 2432260, -840194, 5816420, 2461060, -923889, 5791730, 2668470, -969809, 5692190, 2703970, -912940, 5684880, 2432260, -840194, 5816420, 2668470, -969809, 5692190, 2477580, -795396, 5803670, 2432260, -840194, 5816420, 2703970, -912940, 5684880, 2700070, -866605, 5693920, 2477580, -795396, 5803670, 2703970, -912940, 5684880, 2446960, -709417, 5827590, 2477580, -795396, 5803670, 2700070, -866605, 5693920, 2673880, -711955, 5727390, 2446960, -709417, 5827590, 2700070, -866605, 5693920, 2534720, -666844, 5795240, 2446960, -709417, 5827590, 2673880, -711955, 5727390, 2614610, -633010, 5763670, 2534720, -666844, 5795240, 2673880, -711955, 5727390, 2466630, -1007990, 5775420, 2358480, -1032870, 5815790, 2406560, -1087930, 5786180, 2370970, -964434, 5822420, 2358480, -1032870, 5815790, 2466630, -1007990, 5775420, 2370970, -964434, 5822420, 2466630, -1007990, 5775420, 2494910, -1017360, 5761710, 2566e3, -1025210, 5729220, 2494910, -1017360, 5761710, 2480190, -1101920, 5752570, 2668470, -969809, 5692190, 2566e3, -1025210, 5729220, 2588900, -1086310, 5707770, 2473500, -640090, 5824440, 2446960, -709417, 5827590, 2534720, -666844, 5795240, 4454550, 3168130, 3275400, 4437580, 3153340, 3312260, 4469740, 3121310, 3299420, 4454550, 3168130, 3275400, 4469740, 3121310, 3299420, 4555250, 3180460, 3122380, 4469740, 3121310, 3299420, 4444780, 3083750, 3367280, 4555250, 3180460, 3122380, 4397040, 3073740, 3437890, 4444780, 3083750, 3367280, 4469740, 3121310, 3299420, 4454890, 3115930, 3324320, 4397040, 3073740, 3437890, 4469740, 3121310, 3299420, 4434410, 3131140, 3337300, 4442720, 3107890, 3347880, 4454890, 3115930, 3324320, 4442720, 3107890, 3347880, 4397040, 3073740, 3437890, 4454890, 3115930, 3324320, 4376860, 3075940, 3461440, 4397040, 3073740, 3437890, 4442720, 3107890, 3347880, 4399180, 3101430, 3410360, 4376860, 3075940, 3461440, 4442720, 3107890, 3347880, 4386220, 3133940, 3397400, 4356910, 3103250, 3462230, 4399180, 3101430, 3410360, 4343260, 3104060, 3478510, 4356910, 3103250, 3462230, 4386220, 3133940, 3397400, 4362110, 3134590, 3427500, 4343260, 3104060, 3478510, 4386220, 3133940, 3397400, 4361400, 3136280, 3426870, 4362110, 3134590, 3427500, 4386220, 3133940, 3397400, 4399180, 3101430, 3410360, 4374860, 3077680, 3462410, 4376860, 3075940, 3461440, 4356910, 3103250, 3462230, 4374860, 3077680, 3462410, 4399180, 3101430, 3410360, 4444780, 3083750, 3367280, 4481500, 3078680, 3323260, 4480540, 3085890, 3317900, 4555250, 3180460, 3122380, 4444780, 3083750, 3367280, 4480540, 3085890, 3317900, 4555250, 3180460, 3122380, 4480540, 3085890, 3317900, 4511880, 3073800, 3286720, 4328030, 3123900, 3479720, 4343260, 3104060, 3478510, 4362110, 3134590, 3427500, 4347280, 3139560, 3441680, 4328030, 3123900, 3479720, 4362110, 3134590, 3427500, 4948300, 1335150, 3783630, 4856820, 1279710, 3918020, 4941420, 1262790, 3817090, 4893740, 1325950, 3856630, 4856820, 1279710, 3918020, 4948300, 1335150, 3783630, 4910340, 1344230, 3829280, 4893740, 1325950, 3856630, 4948300, 1335150, 3783630, 4623550, 1387350, 4154800, 4641520, 1325970, 4154800, 4770820, 1377870, 3989250, 4602660, 1388310, 4177460, 4598280, 1308930, 4207590, 4641520, 1325970, 4154800, 4602660, 1388310, 4177460, 4641520, 1325970, 4154800, 4623550, 1387350, 4154800, 4623550, 1387350, 4154800, 4770820, 1377870, 3989250, 4706440, 1389530, 4060560, 4623550, 1387350, 4154800, 4706440, 1389530, 4060560, 4623140, 1388710, 4154800, 4602660, 1388310, 4177460, 4623550, 1387350, 4154800, 4623140, 1388710, 4154800, 4766050, 1424e3, 3978810, 4706440, 1389530, 4060560, 4770820, 1377870, 3989250, 4713610, 1456540, 4028850, 4706440, 1389530, 4060560, 4766050, 1424e3, 3978810, 4713610, 1456540, 4028850, 4766050, 1424e3, 3978810, 4751590, 1457500, 3983930, 4835950, 1395920, 3904210, 4830810, 1356790, 3924190, 4851050, 1362120, 3897460, 4835950, 1395920, 3904210, 4790320, 1363840, 3970790, 4830810, 1356790, 3924190, 4770820, 1377870, 3989250, 4790320, 1363840, 3970790, 4835950, 1395920, 3904210, 4766050, 1424e3, 3978810, 4770820, 1377870, 3989250, 4835950, 1395920, 3904210, 4623140, 1388710, 4154800, 4706440, 1389530, 4060560, 4651820, 1410640, 4115480, 4623140, 1388710, 4154800, 4651820, 1410640, 4115480, 4620790, 1396510, 4154800, 4620790, 1396510, 4154800, 4602660, 1388310, 4177460, 4623140, 1388710, 4154800, 4605270, 1446880, 4154800, 4620790, 1396510, 4154800, 4651820, 1410640, 4115480, 4605270, 1446880, 4154800, 4651820, 1410640, 4115480, 4605520, 1453810, 4152110, 4605270, 1446880, 4154800, 4602660, 1388310, 4177460, 4620790, 1396510, 4154800, 4641160, 1484610, 4101560, 4605520, 1453810, 4152110, 4651820, 1410640, 4115480, 4619030, 1534460, 4108150, 4605520, 1453810, 4152110, 4641160, 1484610, 4101560, 4619030, 1534460, 4108150, 4641160, 1484610, 4101560, 4658230, 1539970, 4061870, 4628950, 1547050, 4092330, 4619030, 1534460, 4108150, 4658230, 1539970, 4061870, 4644010, 1317220, 4154800, 4740910, 1334290, 4039080, 4770820, 1377870, 3989250, 4644010, 1317220, 4154800, 4770820, 1377870, 3989250, 4641520, 1325970, 4154800, 4641520, 1325970, 4154800, 4598280, 1308930, 4207590, 4644010, 1317220, 4154800, 4647390, 1305260, 4154800, 4713400, 1299490, 4082100, 4740910, 1334290, 4039080, 4647390, 1305260, 4154800, 4740910, 1334290, 4039080, 4644010, 1317220, 4154800, 4598280, 1308930, 4207590, 4647390, 1305260, 4154800, 4644010, 1317220, 4154800, 4647390, 1305260, 4154800, 4648380, 1301720, 4154800, 4713400, 1299490, 4082100, 4567550, 1303360, 4242410, 4648380, 1301720, 4154800, 4647390, 1305260, 4154800, 4567550, 1303360, 4242410, 4647390, 1305260, 4154800, 4598280, 1308930, 4207590, 4577700, 1327340, 4224120, 4567550, 1303360, 4242410, 4598280, 1308930, 4207590, 4648380, 1301720, 4154800, 4656310, 1273060, 4154800, 4713400, 1299490, 4082100, 4567550, 1303360, 4242410, 4585400, 1240890, 4241900, 4656310, 1273060, 4154800, 4567550, 1303360, 4242410, 4656310, 1273060, 4154800, 4648380, 1301720, 4154800, 4661460, 1254090, 4154800, 4714080, 1263e3, 4092670, 4713400, 1299490, 4082100, 4661460, 1254090, 4154800, 4713400, 1299490, 4082100, 4656310, 1273060, 4154800, 4656310, 1273060, 4154800, 4585400, 1240890, 4241900, 4661460, 1254090, 4154800, 4667010, 1233280, 4154800, 4690490, 1230820, 4129180, 4714080, 1263e3, 4092670, 4667010, 1233280, 4154800, 4714080, 1263e3, 4092670, 4661460, 1254090, 4154800, 4585400, 1240890, 4241900, 4667010, 1233280, 4154800, 4661460, 1254090, 4154800, 4680240, 1182050, 4154800, 4691230, 1174940, 4144480, 4690490, 1230820, 4129180, 4680240, 1182050, 4154800, 4690490, 1230820, 4129180, 4667010, 1233280, 4154800, 4585400, 1240890, 4241900, 4680240, 1182050, 4154800, 4667010, 1233280, 4154800, 4680240, 1182050, 4154800, 4682620, 1172610, 4154800, 4691230, 1174940, 4144480, 4572910, 1202850, 4266100, 4550120, 1136990, 4308050, 4591830, 1148180, 4260880, 4572910, 1202850, 4266100, 4591830, 1148180, 4260880, 4682620, 1172610, 4154800, 4572910, 1202850, 4266100, 4682620, 1172610, 4154800, 4680240, 1182050, 4154800, 4572910, 1202850, 4266100, 4680240, 1182050, 4154800, 4585400, 1240890, 4241900, 4478100, 1000090, 4415390, 4445110, 966062, 4455850, 4625360, 1045400, 4251120, 4478100, 1000090, 4415390, 4625360, 1045400, 4251120, 4623710, 1050630, 4251620, 4681130, 1071100, 4183600, 4623710, 1050630, 4251620, 4625360, 1045400, 4251120, 4498820, 1082310, 4375020, 4478100, 1000090, 4415390, 4623710, 1050630, 4251620, 4498820, 1082310, 4375020, 4623710, 1050630, 4251620, 4615710, 1075830, 4254e3, 4615710, 1075830, 4254e3, 4623710, 1050630, 4251620, 4681130, 1071100, 4183600, 4603700, 1112710, 4257500, 4498820, 1082310, 4375020, 4615710, 1075830, 4254e3, 4615710, 1075830, 4254e3, 4681130, 1071100, 4183600, 4671510, 1132580, 4178180, 4615710, 1075830, 4254e3, 4671510, 1132580, 4178180, 4603700, 1112710, 4257500, 4550120, 1136990, 4308050, 4498820, 1082310, 4375020, 4603700, 1112710, 4257500, 4550120, 1136990, 4308050, 4603700, 1112710, 4257500, 4596060, 1135620, 4259680, 4596060, 1135620, 4259680, 4603700, 1112710, 4257500, 4671510, 1132580, 4178180, 4691230, 1174940, 4144480, 4682620, 1172610, 4154800, 4685270, 1161960, 4154800, 4591830, 1148180, 4260880, 4550120, 1136990, 4308050, 4596060, 1135620, 4259680, 4685270, 1161960, 4154800, 4682620, 1172610, 4154800, 4591830, 1148180, 4260880, 4685270, 1161960, 4154800, 4591830, 1148180, 4260880, 4596060, 1135620, 4259680, 4685270, 1161960, 4154800, 4596060, 1135620, 4259680, 4671510, 1132580, 4178180, 4625360, 1045400, 4251120, 4445110, 966062, 4455850, 4640320, 996756, 4246530, 4640320, 996756, 4246530, 4662830, 1000190, 4221160, 4681130, 1071100, 4183600, 4640320, 996756, 4246530, 4681130, 1071100, 4183600, 4625360, 1045400, 4251120, 4250840, 915424, 4650500, 4640660, 995658, 4246420, 4640320, 996756, 4246530, 4250840, 915424, 4650500, 4640320, 996756, 4246530, 4445110, 966062, 4455850, 4640320, 996756, 4246530, 4640660, 995658, 4246420, 4662830, 1000190, 4221160, 4274840, 938046, 4624110, 4250840, 915424, 4650500, 4445110, 966062, 4455850, 4274840, 938046, 4624110, 4445110, 966062, 4455850, 4384e3, 958160, 4517250, 4421270, 970776, 4478330, 4384e3, 958160, 4517250, 4445110, 966062, 4455850, 4630720, 916227, 4274860, 4296720, 838980, 4622870, 4598640, 853296, 4321930, 4630720, 916227, 4274860, 4279870, 844705, 4637340, 4296720, 838980, 4622870, 4250840, 915424, 4650500, 4279870, 844705, 4637340, 4630720, 916227, 4274860, 4250840, 915424, 4650500, 4630720, 916227, 4274860, 4649740, 965149, 4243550, 4250840, 915424, 4650500, 4649740, 965149, 4243550, 4640660, 995658, 4246420, 4640660, 995658, 4246420, 4649740, 965149, 4243550, 4662830, 1000190, 4221160, 4526980, 774013, 4410990, 4346560, 702657, 4599100, 4381170, 691268, 4568100, 4347060, 760469, 4589490, 4346560, 702657, 4599100, 4526980, 774013, 4410990, 4528920, 814881, 4401690, 4347060, 760469, 4589490, 4526980, 774013, 4410990, 4327720, 791429, 4602430, 4347060, 760469, 4589490, 4528920, 814881, 4401690, 4598640, 853296, 4321930, 4327720, 791429, 4602430, 4528920, 814881, 4401690, 4598640, 853296, 4321930, 4294020, 791408, 4633680, 4327720, 791429, 4602430, 4296720, 838980, 4622870, 4294020, 791408, 4633680, 4598640, 853296, 4321930, 4456930, 554876, 4513450, 4407400, 528952, 4564560, 4430150, 528449, 4542690, 4420260, 564198, 4547990, 4407400, 528952, 4564560, 4456930, 554876, 4513450, 4545840, 602476, 4418300, 4420260, 564198, 4547990, 4456930, 554876, 4513450, 4411600, 600862, 4551680, 4420260, 564198, 4547990, 4545840, 602476, 4418300, 4570170, 630162, 4389440, 4411600, 600862, 4551680, 4545840, 602476, 4418300, 4378680, 640079, 4577860, 4411600, 600862, 4551680, 4570170, 630162, 4389440, 4528150, 670966, 4426540, 4378680, 640079, 4577860, 4570170, 630162, 4389440, 4389280, 655195, 4565640, 4378680, 640079, 4577860, 4528150, 670966, 4426540, 4512260, 705709, 4437280, 4389280, 655195, 4565640, 4528150, 670966, 4426540, 4381170, 691268, 4568100, 4389280, 655195, 4565640, 4512260, 705709, 4437280, 4526980, 774013, 4410990, 4381170, 691268, 4568100, 4512260, 705709, 4437280, 4945430, 1217160, 3826650, 4903350, 1093410, 3916490, 4940170, 1088970, 3871500, 4945430, 1217160, 3826650, 4886070, 1194820, 3908500, 4903350, 1093410, 3916490, 4856820, 1279710, 3918020, 4886070, 1194820, 3908500, 4945430, 1217160, 3826650, 4856820, 1279710, 3918020, 4945430, 1217160, 3826650, 4941420, 1262790, 3817090, 4342540, 1013870, 4544870, 4274840, 938046, 4624110, 4384e3, 958160, 4517250, 4270370, 1049420, 4604390, 4274840, 938046, 4624110, 4342540, 1013870, 4544870, 4270370, 1049420, 4604390, 4342540, 1013870, 4544870, 4310780, 1050700, 4566540, 4339280, 1076890, 4533550, 4310780, 1050700, 4566540, 4342540, 1013870, 4544870, 4911250, 760911, 3984250, 4772190, 731100, 4154040, 4897830, 725720, 4007120, 4771350, 732222, 4154800, 4772190, 731100, 4154040, 4911250, 760911, 3984250, 4771350, 732222, 4154800, 4911250, 760911, 3984250, 4765680, 768233, 4154800, 4743310, 769099, 418e4, 4771350, 732222, 4154800, 4765680, 768233, 4154800, 4765680, 768233, 4154800, 4911250, 760911, 3984250, 4882650, 792112, 4013030, 4765680, 768233, 4154800, 4882650, 792112, 4013030, 4764970, 772674, 4154800, 4764970, 772674, 4154800, 4743310, 769099, 418e4, 4765680, 768233, 4154800, 4761500, 793752, 4154800, 4764970, 772674, 4154800, 4882650, 792112, 4013030, 4761500, 793752, 4154800, 4882650, 792112, 4013030, 4785820, 827513, 4120360, 4761500, 793752, 4154800, 4743310, 769099, 418e4, 4764970, 772674, 4154800, 4785820, 827513, 4120360, 4882650, 792112, 4013030, 4880570, 831580, 4007600, 4772810, 722664, 4154800, 4778140, 686526, 4154800, 4813550, 709795, 4110070, 4772810, 722664, 4154800, 4813550, 709795, 4110070, 4772190, 731100, 4154040, 4772810, 722664, 4154800, 4775390, 684741, 4158230, 4778140, 686526, 4154800, 4772190, 731100, 4154040, 4813550, 709795, 4110070, 4897830, 725720, 4007120, 4456930, 554876, 4513450, 4484050, 530719, 4489590, 4541580, 558245, 4428410, 4545840, 602476, 4418300, 4456930, 554876, 4513450, 4541580, 558245, 4428410, 4833660, 1342350, 3925630, 4856820, 1279710, 3918020, 4893740, 1325950, 3856630, 4570170, 630162, 4389440, 4545840, 602476, 4418300, 4580210, 597725, 4383560, 1376050, -5914430, 1944510, 1286820, -5934720, 1943810, 1345930, -5927150, 1926900, 1376050, -5914430, 1944510, 1225010, -5935030, 1982160, 1286820, -5934720, 1943810, 1376050, -5914430, 1944510, 1235820, -5924660, 2006170, 1225010, -5935030, 1982160, 1376050, -5914430, 1944510, 1278730, -5913040, 2013480, 1235820, -5924660, 2006170, 1376050, -5914430, 1944510, 1302480, -5909070, 2009940, 1278730, -5913040, 2013480, 1372510, -5896420, 2000540, 1302480, -5909070, 2009940, 1376050, -5914430, 1944510, 1429080, -5891540, 1975290, 1372510, -5896420, 2000540, 1376050, -5914430, 1944510, 1448350, -5896490, 1946480, 1429080, -5891540, 1975290, 1376050, -5914430, 1944510, 4334020, 3385960, 3219070, 4346640, 3275690, 3314080, 4361030, 3366710, 3202830, 4361030, 3366710, 3202830, 4346640, 3275690, 3314080, 4385480, 3365540, 3170740, 4385480, 3365540, 3170740, 4346640, 3275690, 3314080, 4436060, 3311410, 3157430, 4346640, 3275690, 3314080, 4318490, 3234660, 3389810, 4436060, 3311410, 3157430, 4155480, 3340170, 3489110, 4318490, 3234660, 3389810, 4346640, 3275690, 3314080, 4206760, 3407160, 3361390, 4155480, 3340170, 3489110, 4346640, 3275690, 3314080, 4504060, 3280670, 3093030, 4361400, 3136280, 3426870, 4386220, 3133940, 3397400, 4318490, 3234660, 3389810, 4361400, 3136280, 3426870, 4504060, 3280670, 3093030, 4318490, 3234660, 3389810, 4504060, 3280670, 3093030, 4465730, 3304610, 3122770, 4318490, 3234660, 3389810, 4465730, 3304610, 3122770, 4436060, 3311410, 3157430, 4504060, 3280670, 3093030, 4454550, 3168130, 3275400, 4559860, 3187630, 3108410, 4504060, 3280670, 3093030, 4415550, 3154850, 3339950, 4454550, 3168130, 3275400, 4504060, 3280670, 3093030, 4386220, 3133940, 3397400, 4415550, 3154850, 3339950, 4415550, 3154850, 3339950, 4437580, 3153340, 3312260, 4454550, 3168130, 3275400, 4188510, 3415520, 3375560, 4155480, 3340170, 3489110, 4206760, 3407160, 3361390, 4454550, 3168130, 3275400, 4555250, 3180460, 3122380, 4559860, 3187630, 3108410, -4009800, 3273350, 3714080, -3974530, 3264720, 3759010, -4014780, 3338700, 3650410, -3714210, 3083270, 4154800, -3907010, 3246880, 3843710, -3920940, 3227460, 3845860, -3714210, 3083270, 4154800, -3920940, 3227460, 3845860, -3715290, 3081970, 4154800, -3907010, 3246880, 3843710, -4014780, 3338700, 3650410, -3974530, 3264720, 3759010, -3907010, 3246880, 3843710, -3974530, 3264720, 3759010, -3920940, 3227460, 3845860, -3715290, 3081970, 4154800, -3698330, 3069760, 4178740, -3714210, 3083270, 4154800, -3767140, 3018370, 4154800, -3715290, 3081970, 4154800, -3920940, 3227460, 3845860, -3767140, 3018370, 4154800, -3920940, 3227460, 3845860, -3931800, 3212180, 3847560, -3931800, 3212180, 3847560, -3920940, 3227460, 3845860, -3974530, 3264720, 3759010, -3744130, 2992220, 4194060, -3698330, 3069760, 4178740, -3715290, 3081970, 4154800, -3744130, 2992220, 4194060, -3715290, 3081970, 4154800, -3767140, 3018370, 4154800, -3767140, 3018370, 4154800, -3931800, 3212180, 3847560, -3934110, 3208920, 3847910, -3767140, 3018370, 4154800, -3934110, 3208920, 3847910, -3899410, 3162300, 3920650, -3767140, 3018370, 4154800, -3899410, 3162300, 3920650, -3767770, 3017580, 4154800, -3934110, 3208920, 3847910, -3931800, 3212180, 3847560, -3974530, 3264720, 3759010, -3744130, 2992220, 4194060, -3767140, 3018370, 4154800, -3767770, 3017580, 4154800, -3943110, 3196140, 3849330, -3899410, 3162300, 3920650, -3934110, 3208920, 3847910, -3934110, 3208920, 3847910, -3974530, 3264720, 3759010, -3954710, 3205200, 3829980, -3934110, 3208920, 3847910, -3954710, 3205200, 3829980, -3943110, 3196140, 3849330, -3767770, 3017580, 4154800, -3899410, 3162300, 3920650, -3895050, 3055760, 4007900, -3767770, 3017580, 4154800, -3895050, 3055760, 4007900, -3776710, 3006390, 4154800, -3776710, 3006390, 4154800, -3744130, 2992220, 4194060, -3767770, 3017580, 4154800, -3780640, 3001450, 4154800, -3776710, 3006390, 4154800, -3895050, 3055760, 4007900, -3780640, 3001450, 4154800, -3895050, 3055760, 4007900, -3851450, 3018400, 4077270, -3780640, 3001450, 4154800, -3744130, 2992220, 4194060, -3776710, 3006390, 4154800, -3683620, 3842180, 3502370, -3645530, 3842530, 3541350, -3658800, 3885340, 3480850, -3654850, 3797420, 3579930, -3645530, 3842530, 3541350, -3683620, 3842180, 3502370, -3724660, 3829750, 3472650, -3654850, 3797420, 3579930, -3683620, 3842180, 3502370, -3712660, 3759870, 3560160, -3654850, 3797420, 3579930, -3724660, 3829750, 3472650, -3736020, 3766660, 3528610, -3712660, 3759870, 3560160, -3724660, 3829750, 3472650, -3664890, 3928050, 3426440, -3589540, 3935050, 3496970, -3608410, 3956840, 3452970, -3664890, 3928050, 3426440, -3602310, 3873290, 3551990, -3589540, 3935050, 3496970, -3645530, 3842530, 3541350, -3602310, 3873290, 3551990, -3664890, 3928050, 3426440, -3645530, 3842530, 3541350, -3664890, 3928050, 3426440, -3658800, 3885340, 3480850, -3566160, 4148090, 3268710, -3500180, 4105720, 3390420, -3516580, 4161010, 3305550, -3454700, 3991310, 3567820, -3500180, 4105720, 3390420, -3566160, 4148090, 3268710, -3596790, 4089390, 3308600, -3454700, 3991310, 3567820, -3566160, 4148090, 3268710, -3596790, 4089390, 3308600, -3476350, 4001060, 3535940, -3454700, 3991310, 3567820, -3576770, 3972400, 3467900, -3476350, 4001060, 3535940, -3596790, 4089390, 3308600, -3454700, 3991310, 3567820, -3443250, 4052390, 3509960, -3500180, 4105720, 3390420, -3500180, 4105720, 3390420, -3443250, 4052390, 3509960, -3443520, 4130840, 3417630, -3443250, 4052390, 3509960, -3387830, 4123230, 3481450, -3443520, 4130840, 3417630, -3833490, 3346290, 3832540, -3798690, 3318710, 3890340, -3771350, 3426490, 3823370, -3771350, 3426490, 3823370, -3762020, 3460440, 3802080, -3961910, 3446950, 3607600, -3771350, 3426490, 3823370, -3961910, 3446950, 3607600, -3833490, 3346290, 3832540, -3811230, 3263620, 3924310, -3798690, 3318710, 3890340, -3833490, 3346290, 3832540, -3811230, 3263620, 3924310, -3833490, 3346290, 3832540, -3855760, 3316710, 3835880, -3855760, 3316710, 3835880, -3833490, 3346290, 3832540, -3961910, 3446950, 3607600, -3876380, 3288920, 3839010, -3811230, 3263620, 3924310, -3855760, 3316710, 3835880, -3855760, 3316710, 3835880, -3961910, 3446950, 3607600, -4014780, 3338700, 3650410, -3855760, 3316710, 3835880, -4014780, 3338700, 3650410, -3876380, 3288920, 3839010, -3781580, 3166940, 4030060, -3811230, 3263620, 3924310, -3876380, 3288920, 3839010, -3781580, 3166940, 4030060, -3876380, 3288920, 3839010, -3900870, 3255390, 3842760, -4014780, 3338700, 3650410, -3900870, 3255390, 3842760, -3876380, 3288920, 3839010, -3712170, 3085730, 4154800, -3781580, 3166940, 4030060, -3900870, 3255390, 3842760, -3712170, 3085730, 4154800, -3900870, 3255390, 3842760, -3907010, 3246880, 3843710, -3712170, 3085730, 4154800, -3907010, 3246880, 3843710, -3714210, 3083270, 4154800, -3907010, 3246880, 3843710, -3900870, 3255390, 3842760, -4014780, 3338700, 3650410, -3698330, 3069760, 4178740, -3712170, 3085730, 4154800, -3714210, 3083270, 4154800, -3704080, 3095440, 4154800, -3710680, 3126560, 4125700, -3781580, 3166940, 4030060, -3704080, 3095440, 4154800, -3781580, 3166940, 4030060, -3712170, 3085730, 4154800, -3698330, 3069760, 4178740, -3704080, 3095440, 4154800, -3712170, 3085730, 4154800, -3817970, 3713720, 3497080, -3717820, 3630860, 3685620, -3757410, 3741580, 3532560, -3698220, 3482100, 3844370, -3702690, 3511390, 3813510, -3709670, 3502910, 3814510, -3702690, 3511390, 3813510, -3717820, 3630860, 3685620, -3817970, 3713720, 3497080, -3702690, 3511390, 3813510, -3817970, 3713720, 3497080, -3709670, 3502910, 3814510, -3717660, 3493190, 3815650, -3698220, 3482100, 3844370, -3709670, 3502910, 3814510, -3709670, 3502910, 3814510, -3817970, 3713720, 3497080, -3857130, 3569490, 3602e3, -3709670, 3502910, 3814510, -3857130, 3569490, 3602e3, -3717660, 3493190, 3815650, -3737370, 3468970, 3818470, -3698220, 3482100, 3844370, -3717660, 3493190, 3815650, -3737370, 3468970, 3818470, -3717660, 3493190, 3815650, -3857130, 3569490, 3602e3, -3737370, 3468970, 3818470, -3857130, 3569490, 3602e3, -3762020, 3460440, 3802080, -3961910, 3446950, 3607600, -3762020, 3460440, 3802080, -3857130, 3569490, 3602e3, -3556600, 3928300, 3537700, -3502560, 3905860, 3615090, -3476350, 4001060, 3535940, -3522780, 3828580, 3677150, -3502560, 3905860, 3615090, -3556600, 3928300, 3537700, -3616820, 3832710, 3580940, -3522780, 3828580, 3677150, -3556600, 3928300, 3537700, -3640090, 3690240, 3704060, -3522780, 3828580, 3677150, -3616820, 3832710, 3580940, -3721650, 3711410, 3601110, -3640090, 3690240, 3704060, -3616820, 3832710, 3580940, -3717820, 3630860, 3685620, -3640090, 3690240, 3704060, -3721650, 3711410, 3601110, -3717820, 3630860, 3685620, -3721650, 3711410, 3601110, -3757410, 3741580, 3532560, -3800560, 2844840, 4245210, -3645330, 2732720, 4448710, -3524060, 2756460, 4530480, -3702700, 2699060, 4421990, -3645330, 2732720, 4448710, -3800560, 2844840, 4245210, -3783270, 2742660, 4326560, -3702700, 2699060, 4421990, -3800560, 2844840, 4245210, -3748960, 2662970, 4404970, -3702700, 2699060, 4421990, -3783270, 2742660, 4326560, -3835850, 2632070, 4348750, -3748960, 2662970, 4404970, -3783270, 2742660, 4326560, -3835850, 2632070, 4348750, -3754600, 2597770, 4438740, -3748960, 2662970, 4404970, -3800560, 2844840, 4245210, -3524060, 2756460, 4530480, -3557950, 2812720, 4469400, -3800560, 2844840, 4245210, -3557950, 2812720, 4469400, -3680950, 2916340, 4301340, -3557950, 2812720, 4469400, -3627160, 2897490, 4358990, -3680950, 2916340, 4301340, -3680950, 2916340, 4301340, -3627160, 2897490, 4358990, -3716520, 3002390, 4211200, -3627160, 2897490, 4358990, -3575730, 2967360, 4354510, -3716520, 3002390, 4211200, -3716520, 3002390, 4211200, -3575730, 2967360, 4354510, -3658400, 3074660, 4209960, -3575730, 2967360, 4354510, -3594510, 3035660, 4291940, -3658400, 3074660, 4209960, -3502560, 3905860, 3615090, -3454700, 3991310, 3567820, -3476350, 4001060, 3535940, 739455, 4599200, 4342140, 788232, 4454870, 4480860, 797833, 4609460, 4321010, 797833, 4609460, 4321010, 788232, 4454870, 4480860, 846702, 4633170, 4286440, 697979, 3972870, 4924060, 746604, 4195440, 4729770, 739544, 4195970, 4730410, 746604, 4195440, 4729770, 846702, 4633170, 4286440, 788232, 4454870, 4480860, 746604, 4195440, 4729770, 788232, 4454870, 4480860, 739544, 4195970, 4730410, 697979, 3972870, 4924060, 759717, 4194430, 4728580, 746604, 4195440, 4729770, 759717, 4194430, 4728580, 882117, 4599010, 4315800, 846702, 4633170, 4286440, 759717, 4194430, 4728580, 846702, 4633170, 4286440, 746604, 4195440, 4729770, 697979, 3972870, 4924060, 805224, 3724590, 5097500, 852996, 4186070, 4720140, 697979, 3972870, 4924060, 852996, 4186070, 4720140, 759717, 4194430, 4728580, 759717, 4194430, 4728580, 852996, 4186070, 4720140, 882117, 4599010, 4315800, 852996, 4186070, 4720140, 805224, 3724590, 5097500, 909339, 418e4, 4715030, 909339, 418e4, 4715030, 999218, 4566900, 4324310, 882117, 4599010, 4315800, 909339, 418e4, 4715030, 882117, 4599010, 4315800, 852996, 4186070, 4720140, 805224, 3724590, 5097500, 871779, 3638270, 5148300, 951814, 4174920, 4711170, 805224, 3724590, 5097500, 951814, 4174920, 4711170, 909339, 418e4, 4715030, 909339, 418e4, 4715030, 951814, 4174920, 4711170, 999218, 4566900, 4324310, 951814, 4174920, 4711170, 871779, 3638270, 5148300, 1021040, 4165700, 4704870, 1021040, 4165700, 4704870, 1130440, 4534070, 4326530, 999218, 4566900, 4324310, 1021040, 4165700, 4704870, 999218, 4566900, 4324310, 951814, 4174920, 4711170, 871779, 3638270, 5148300, 1036120, 4163540, 4703500, 1021040, 4165700, 4704870, 1036120, 4163540, 4703500, 1161240, 4534880, 4317570, 1130440, 4534070, 4326530, 1036120, 4163540, 4703500, 1130440, 4534070, 4326530, 1021040, 4165700, 4704870, 228018, 4116300, 4850380, 246666, 4203170, 4774880, 227926, 4202290, 4776580, 228018, 4116300, 4850380, 227926, 4202290, 4776580, 192272, 4169930, 4806210, 227926, 4202290, 4776580, 246666, 4203170, 4774880, 250962, 4222690, 4757520, 228018, 4116300, 4850380, 295758, 4205060, 4770450, 246666, 4203170, 4774880, 295758, 4205060, 4770450, 312723, 4226370, 4750630, 250962, 4222690, 4757520, 295758, 4205060, 4770450, 250962, 4222690, 4757520, 246666, 4203170, 4774880, 228018, 4116300, 4850380, 321377, 4121460, 4840760, 314525, 4205640, 4768760, 228018, 4116300, 4850380, 314525, 4205640, 4768760, 295758, 4205060, 4770450, 295758, 4205060, 4770450, 314525, 4205640, 4768760, 312723, 4226370, 4750630, 314525, 4205640, 4768760, 321377, 4121460, 4840760, 322049, 4205850, 4768080, 314525, 4205640, 4768760, 322049, 4205850, 4768080, 322420, 4308670, 4675970, 314525, 4205640, 4768760, 322420, 4308670, 4675970, 312723, 4226370, 4750630, 322049, 4205850, 4768080, 321377, 4121460, 4840760, 338544, 4206240, 4766590, 338544, 4206240, 4766590, 367341, 4342100, 4641840, 322420, 4308670, 4675970, 338544, 4206240, 4766590, 322420, 4308670, 4675970, 322049, 4205850, 4768080, 407384, 4207220, 4760380, 462776, 3989290, 4938390, 498454, 4206760, 4752170, 498454, 4206760, 4752170, 514246, 4300140, 4666710, 367341, 4342100, 4641840, 498454, 4206760, 4752170, 367341, 4342100, 4641840, 407384, 4207220, 4760380, 425959, 4009040, 4925780, 462776, 3989290, 4938390, 407384, 4207220, 4760380, 425959, 4009040, 4925780, 407384, 4207220, 4760380, 393452, 4207110, 4761640, 367341, 4342100, 4641840, 393452, 4207110, 4761640, 407384, 4207220, 4760380, 397100, 4061900, 4884980, 425959, 4009040, 4925780, 393452, 4207110, 4761640, 397100, 4061900, 4884980, 393452, 4207110, 4761640, 382949, 4207e3, 4762590, 367341, 4342100, 4641840, 382949, 4207e3, 4762590, 393452, 4207110, 4761640, 348915, 4082980, 4871170, 397100, 4061900, 4884980, 382949, 4207e3, 4762590, 348915, 4082980, 4871170, 382949, 4207e3, 4762590, 357788, 4206630, 4764860, 367341, 4342100, 4641840, 357788, 4206630, 4764860, 382949, 4207e3, 4762590, 321377, 4121460, 4840760, 348915, 4082980, 4871170, 357788, 4206630, 4764860, 321377, 4121460, 4840760, 357788, 4206630, 4764860, 338544, 4206240, 4766590, 338544, 4206240, 4766590, 357788, 4206630, 4764860, 367341, 4342100, 4641840, 565784, 3998410, 4920370, 653574, 3934450, 4960620, 645202, 4201850, 4738930, 565784, 3998410, 4920370, 645202, 4201850, 4738930, 594852, 4204110, 4743480, 629358, 4448310, 4512190, 594852, 4204110, 4743480, 645202, 4201850, 4738930, 462776, 3989290, 4938390, 565784, 3998410, 4920370, 594852, 4204110, 4743480, 462776, 3989290, 4938390, 594852, 4204110, 4743480, 537006, 4205960, 4748700, 537006, 4205960, 4748700, 594852, 4204110, 4743480, 629358, 4448310, 4512190, 462776, 3989290, 4938390, 537006, 4205960, 4748700, 520559, 4206350, 4750180, 537006, 4205960, 4748700, 629358, 4448310, 4512190, 587285, 4436280, 4529550, 537006, 4205960, 4748700, 587285, 4436280, 4529550, 520559, 4206350, 4750180, 462776, 3989290, 4938390, 520559, 4206350, 4750180, 498454, 4206760, 4752170, 520559, 4206350, 4750180, 587285, 4436280, 4529550, 514246, 4300140, 4666710, 520559, 4206350, 4750180, 514246, 4300140, 4666710, 498454, 4206760, 4752170, 670492, 4200480, 4736650, 697979, 3972870, 4924060, 739544, 4195970, 4730410, 739544, 4195970, 4730410, 788232, 4454870, 4480860, 629358, 4448310, 4512190, 739544, 4195970, 4730410, 629358, 4448310, 4512190, 670492, 4200480, 4736650, 653574, 3934450, 4960620, 697979, 3972870, 4924060, 670492, 4200480, 4736650, 653574, 3934450, 4960620, 670492, 4200480, 4736650, 645202, 4201850, 4738930, 629358, 4448310, 4512190, 645202, 4201850, 4738930, 670492, 4200480, 4736650, 842097, 3616150, 5168650, 1022300, 3657720, 5106940, 871779, 3638270, 5148300, 871779, 3638270, 5148300, 1022300, 3657720, 5106940, 1107460, 4152560, 4696990, 871779, 3638270, 5148300, 1107460, 4152560, 4696990, 1036120, 4163540, 4703500, 1036120, 4163540, 4703500, 1107460, 4152560, 4696990, 1161240, 4534880, 4317570, 1107460, 4152560, 4696990, 1022300, 3657720, 5106940, 1165540, 4142700, 4691680, 1165540, 4142700, 4691680, 1264900, 4473910, 4351680, 1161240, 4534880, 4317570, 1165540, 4142700, 4691680, 1161240, 4534880, 4317570, 1107460, 4152560, 4696990, 1022300, 3657720, 5106940, 1189290, 4138430, 4689500, 1165540, 4142700, 4691680, 1189290, 4138430, 4689500, 1313590, 4476270, 4334910, 1264900, 4473910, 4351680, 1189290, 4138430, 4689500, 1264900, 4473910, 4351680, 1165540, 4142700, 4691680, 1022300, 3657720, 5106940, 1193850, 4137600, 4689080, 1189290, 4138430, 4689500, 1193850, 4137600, 4689080, 1338400, 4515410, 4286790, 1313590, 4476270, 4334910, 1193850, 4137600, 4689080, 1313590, 4476270, 4334910, 1189290, 4138430, 4689500, 1022300, 3657720, 5106940, 1084840, 3644990, 5103160, 1226900, 4131380, 4686050, 1022300, 3657720, 5106940, 1226900, 4131380, 4686050, 1193850, 4137600, 4689080, 1193850, 4137600, 4689080, 1226900, 4131380, 4686050, 1338400, 4515410, 4286790, 1065660, 3599580, 5139070, 1136670, 3545460, 5161280, 1084840, 3644990, 5103160, 1084840, 3644990, 5103160, 1136670, 3545460, 5161280, 1264560, 4123970, 4682580, 1084840, 3644990, 5103160, 1264560, 4123970, 4682580, 1226900, 4131380, 4686050, 1338400, 4515410, 4286790, 1226900, 4131380, 4686050, 1264560, 4123970, 4682580, 1264560, 4123970, 4682580, 1136670, 3545460, 5161280, 1335410, 4109070, 4676060, 1335410, 4109070, 4676060, 1459400, 4450470, 4314930, 1338400, 4515410, 4286790, 1335410, 4109070, 4676060, 1338400, 4515410, 4286790, 1264560, 4123970, 4682580, 1136670, 3545460, 5161280, 1364320, 4102620, 4673390, 1335410, 4109070, 4676060, 1364320, 4102620, 4673390, 1513870, 4443490, 4303420, 1459400, 4450470, 4314930, 1364320, 4102620, 4673390, 1459400, 4450470, 4314930, 1335410, 4109070, 4676060, 1136670, 3545460, 5161280, 1208180, 3544970, 5145450, 1395500, 4095450, 4670500, 1136670, 3545460, 5161280, 1395500, 4095450, 4670500, 1364320, 4102620, 4673390, 1364320, 4102620, 4673390, 1395500, 4095450, 4670500, 1513870, 4443490, 4303420, 1414680, 4090900, 4668720, 1196790, 3449380, 5212200, 1440080, 4084740, 4666360, 1440080, 4084740, 4666360, 1591220, 4465940, 4252310, 1541950, 4468610, 4267530, 1440080, 4084740, 4666360, 1541950, 4468610, 4267530, 1414680, 4090900, 4668720, 1208180, 3544970, 5145450, 1196790, 3449380, 5212200, 1414680, 4090900, 4668720, 1208180, 3544970, 5145450, 1414680, 4090900, 4668720, 1404940, 4093220, 4669620, 1404940, 4093220, 4669620, 1414680, 4090900, 4668720, 1541950, 4468610, 4267530, 1395500, 4095450, 4670500, 1208180, 3544970, 5145450, 1404940, 4093220, 4669620, 1404940, 4093220, 4669620, 1541950, 4468610, 4267530, 1513870, 4443490, 4303420, 1404940, 4093220, 4669620, 1513870, 4443490, 4303420, 1395500, 4095450, 4670500, 1747250, 4499900, 4154800, 1758230, 4495620, 4154800, 1765140, 4511640, 4134590, 1551260, 4055830, 4656e3, 1297330, 3391730, 5225870, 1569210, 4050860, 4654320, 1569210, 4050860, 4654320, 1758230, 4495620, 4154800, 1747250, 4499900, 4154800, 1569210, 4050860, 4654320, 1747250, 4499900, 4154800, 1712010, 4476270, 4194530, 1569210, 4050860, 4654320, 1712010, 4476270, 4194530, 1551260, 4055830, 4656e3, 1196790, 3449380, 5212200, 1297330, 3391730, 5225870, 1551260, 4055830, 4656e3, 1196790, 3449380, 5212200, 1551260, 4055830, 4656e3, 1494970, 4070870, 4661260, 1494970, 4070870, 4661260, 1551260, 4055830, 4656e3, 1712010, 4476270, 4194530, 1196790, 3449380, 5212200, 1494970, 4070870, 4661260, 1440080, 4084740, 4666360, 1494970, 4070870, 4661260, 1712010, 4476270, 4194530, 1591220, 4465940, 4252310, 1494970, 4070870, 4661260, 1591220, 4465940, 4252310, 1440080, 4084740, 4666360, 1794610, 4500500, 4134050, 1788110, 4483820, 4154800, 1799150, 4479400, 4154800, 1613620, 4038210, 4650160, 1364490, 3406150, 5199490, 1624910, 4034910, 4649100, 1799150, 4479400, 4154800, 1788110, 4483820, 4154800, 1613620, 4038210, 4650160, 1799150, 4479400, 4154800, 1613620, 4038210, 4650160, 1624910, 4034910, 4649100, 1799150, 4479400, 4154800, 1624910, 4034910, 4649100, 1803210, 4459930, 4173810, 1786930, 4484290, 4154800, 1788110, 4483820, 4154800, 1794610, 4500500, 4134050, 1297330, 3391730, 5225870, 1364490, 3406150, 5199490, 1613620, 4038210, 4650160, 1297330, 3391730, 5225870, 1613620, 4038210, 4650160, 1584530, 4046560, 4652890, 1584530, 4046560, 4652890, 1613620, 4038210, 4650160, 1788110, 4483820, 4154800, 1584530, 4046560, 4652890, 1788110, 4483820, 4154800, 1786930, 4484290, 4154800, 1786930, 4484290, 4154800, 1794610, 4500500, 4134050, 1765140, 4511640, 4134590, 1786930, 4484290, 4154800, 1765140, 4511640, 4134590, 1758230, 4495620, 4154800, 1297330, 3391730, 5225870, 1584530, 4046560, 4652890, 1569210, 4050860, 4654320, 1584530, 4046560, 4652890, 1786930, 4484290, 4154800, 1758230, 4495620, 4154800, 1584530, 4046560, 4652890, 1758230, 4495620, 4154800, 1569210, 4050860, 4654320, 1364490, 3406150, 5199490, 1678470, 4018800, 4644050, 1624910, 4034910, 4649100, 1678470, 4018800, 4644050, 1900810, 4416630, 4176520, 1803210, 4459930, 4173810, 1678470, 4018800, 4644050, 1803210, 4459930, 4173810, 1624910, 4034910, 4649100, 1364490, 3406150, 5199490, 1691550, 4014750, 4642820, 1678470, 4018800, 4644050, 1691550, 4014750, 4642820, 1892420, 4354480, 4244580, 1900810, 4416630, 4176520, 1691550, 4014750, 4642820, 1900810, 4416630, 4176520, 1678470, 4018800, 4644050, 1364490, 3406150, 5199490, 1718210, 4006360, 4640290, 1691550, 4014750, 4642820, 1718210, 4006360, 4640290, 1893020, 4271440, 4327320, 1892420, 4354480, 4244580, 1718210, 4006360, 4640290, 1892420, 4354480, 4244580, 1691550, 4014750, 4642820, 1364490, 3406150, 5199490, 1525730, 3373920, 5175800, 1778860, 3986550, 4634540, 1364490, 3406150, 5199490, 1778860, 3986550, 4634540, 1718210, 4006360, 4640290, 1718210, 4006360, 4640290, 1778860, 3986550, 4634540, 1893020, 4271440, 4327320, 1525730, 3373920, 5175800, 1563830, 3381110, 5159820, 1791190, 3982390, 4633370, 1525730, 3373920, 5175800, 1791190, 3982390, 4633370, 1778860, 3986550, 4634540, 1893020, 4271440, 4327320, 1778860, 3986550, 4634540, 1791190, 3982390, 4633370, 1791190, 3982390, 4633370, 1563830, 3381110, 5159820, 1849210, 3962310, 4627830, 1849210, 3962310, 4627830, 1958220, 4180500, 4386310, 1893020, 4271440, 4327320, 1849210, 3962310, 4627830, 1893020, 4271440, 4327320, 1791190, 3982390, 4633370, 1563830, 3381110, 5159820, 1937630, 3929900, 4619340, 1849210, 3962310, 4627830, 1937630, 3929900, 4619340, 2085160, 4125370, 4380040, 1958220, 4180500, 4386310, 1937630, 3929900, 4619340, 1958220, 4180500, 4386310, 1849210, 3962310, 4627830, 1563830, 3381110, 5159820, 1997100, 3906880, 4613580, 1937630, 3929900, 4619340, 1997100, 3906880, 4613580, 2174370, 4091680, 4368320, 2085160, 4125370, 4380040, 1997100, 3906880, 4613580, 2085160, 4125370, 4380040, 1937630, 3929900, 4619340, 1563830, 3381110, 5159820, 1824510, 3388480, 5069200, 2069290, 3877550, 4606550, 1563830, 3381110, 5159820, 2069290, 3877550, 4606550, 1997100, 3906880, 4613580, 1997100, 3906880, 4613580, 2069290, 3877550, 4606550, 2174370, 4091680, 4368320, 1563830, 3381110, 5159820, 1796170, 3299420, 5137160, 1824510, 3388480, 5069200, 2728540, 3392640, 4645460, 2505790, 3068740, 4981690, 2819430, 3364140, 4612010, 2505790, 3068740, 4981690, 2884900, 3330570, 4595970, 2819430, 3364140, 4612010, 2505790, 3068740, 4981690, 2676890, 3047300, 4905780, 2884900, 3330570, 4595970, 2884900, 3330570, 4595970, 2676890, 3047300, 4905780, 2872320, 3268890, 4647490, 2676890, 3047300, 4905780, 2724820, 3088290, 4853830, 2872320, 3268890, 4647490, 2872320, 3268890, 4647490, 2724820, 3088290, 4853830, 2871960, 3196050, 4697770, 2724820, 3088290, 4853830, 2746380, 3002350, 4895150, 2871960, 3196050, 4697770, 2871960, 3196050, 4697770, 2746380, 3002350, 4895150, 2914670, 3160280, 4695670, 2746380, 3002350, 4895150, 2848190, 3058980, 4801630, 2914670, 3160280, 4695670, 2914670, 3160280, 4695670, 2848190, 3058980, 4801630, 2922520, 3076080, 4746090, 2855300, 3781450, 4255170, 2857060, 3749360, 4282120, 2899410, 3778920, 4227690, 2703910, 3593550, 4507660, 2857060, 3749360, 4282120, 2855300, 3781450, 4255170, 2770720, 3824700, 4272290, 2703910, 3593550, 4507660, 2855300, 3781450, 4255170, 2662430, 3575290, 4546440, 2646110, 3539820, 4583320, 2675530, 3567280, 4545050, 2675530, 3567280, 4545050, 2703910, 3593550, 4507660, 2770720, 3824700, 4272290, 2675530, 3567280, 4545050, 2770720, 3824700, 4272290, 2662430, 3575290, 4546440, 2332410, 3273890, 4935380, 2646110, 3539820, 4583320, 2662430, 3575290, 4546440, 2332410, 3273890, 4935380, 2662430, 3575290, 4546440, 2599650, 3612830, 4553040, 2599650, 3612830, 4553040, 2662430, 3575290, 4546440, 2770720, 3824700, 4272290, 2332410, 3273890, 4935380, 2627100, 3491700, 4630600, 2646110, 3539820, 4583320, 2332410, 3273890, 4935380, 2419820, 3134120, 4983470, 2627100, 3491700, 4630600, 2627100, 3491700, 4630600, 2419820, 3134120, 4983470, 2690100, 3448380, 4626920, 2419820, 3134120, 4983470, 2728540, 3392640, 4645460, 2690100, 3448380, 4626920, 2912100, 3640420, 4338300, 2811440, 3511380, 4506640, 2849660, 3554220, 4449070, 2751140, 3542580, 4519330, 2811440, 3511380, 4506640, 2912100, 3640420, 4338300, 2853570, 3719040, 4310600, 2751140, 3542580, 4519330, 2912100, 3640420, 4338300, 2703910, 3593550, 4507660, 2751140, 3542580, 4519330, 2853570, 3719040, 4310600, 2703910, 3593550, 4507660, 2853570, 3719040, 4310600, 2857060, 3749360, 4282120, 2912100, 3640420, 4338300, 2849660, 3554220, 4449070, 2897290, 3564010, 4410570, 2849660, 3554220, 4449070, 2919e3, 3520840, 4430740, 2897290, 3564010, 4410570, 2849660, 3554220, 4449070, 2904870, 3499630, 4456580, 2919e3, 3520840, 4430740, 2201540, 3361490, 4936600, 2283910, 3350210, 4906950, 2489280, 3675480, 4564480, 2201540, 3361490, 4936600, 2489280, 3675480, 4564480, 2477040, 3682170, 4565740, 2477040, 3682170, 4565740, 2489280, 3675480, 4564480, 2531030, 3742380, 4487030, 2489280, 3675480, 4564480, 2283910, 3350210, 4906950, 2492660, 3673630, 4564140, 2489280, 3675480, 4564480, 2492660, 3673630, 4564140, 2685240, 3976260, 4188230, 2489280, 3675480, 4564480, 2685240, 3976260, 4188230, 2531030, 3742380, 4487030, 2492660, 3673630, 4564140, 2283910, 3350210, 4906950, 2510050, 3664020, 4562340, 2510050, 3664020, 4562340, 2722750, 3955e3, 4184160, 2685240, 3976260, 4188230, 2510050, 3664020, 4562340, 2685240, 3976260, 4188230, 2492660, 3673630, 4564140, 2283910, 3350210, 4906950, 2536960, 3648940, 4559560, 2510050, 3664020, 4562340, 2536960, 3648940, 4559560, 2737460, 3874180, 4249230, 2722750, 3955e3, 4184160, 2536960, 3648940, 4559560, 2722750, 3955e3, 4184160, 2510050, 3664020, 4562340, 2283910, 3350210, 4906950, 2332410, 3273890, 4935380, 2572850, 3628440, 4555830, 2283910, 3350210, 4906950, 2572850, 3628440, 4555830, 2536960, 3648940, 4559560, 2536960, 3648940, 4559560, 2572850, 3628440, 4555830, 2737460, 3874180, 4249230, 1902480, 3516800, 4952580, 1892950, 3404770, 5033310, 1971150, 3409660, 5000090, 1824510, 3388480, 5069200, 1892950, 3404770, 5033310, 1902480, 3516800, 4952580, 1824510, 3388480, 5069200, 1902480, 3516800, 4952580, 2073940, 3875600, 4606100, 1824510, 3388480, 5069200, 2073940, 3875600, 4606100, 2069290, 3877550, 4606550, 2174370, 4091680, 4368320, 2069290, 3877550, 4606550, 2073940, 3875600, 4606100, 1902480, 3516800, 4952580, 1937490, 3544390, 4919450, 2082030, 3872220, 4605300, 1902480, 3516800, 4952580, 2082030, 3872220, 4605300, 2073940, 3875600, 4606100, 2174370, 4091680, 4368320, 2073940, 3875600, 4606100, 2082030, 3872220, 4605300, 2021930, 3492610, 4922480, 2052520, 3504360, 4901560, 2199280, 3820860, 4593760, 2021930, 3492610, 4922480, 2199280, 3820860, 4593760, 2193390, 3823540, 4594340, 2250800, 3936480, 4470340, 2193390, 3823540, 4594340, 2199280, 3820860, 4593760, 1937490, 3544390, 4919450, 2021930, 3492610, 4922480, 2193390, 3823540, 4594340, 1937490, 3544390, 4919450, 2193390, 3823540, 4594340, 2166750, 3835510, 4596980, 2166750, 3835510, 4596980, 2193390, 3823540, 4594340, 2250800, 3936480, 4470340, 1937490, 3544390, 4919450, 2166750, 3835510, 4596980, 2123560, 3854490, 4601230, 2166750, 3835510, 4596980, 2250800, 3936480, 4470340, 2208630, 3994050, 4440420, 2166750, 3835510, 4596980, 2208630, 3994050, 4440420, 2123560, 3854490, 4601230, 2082020, 3872210, 4605310, 1937490, 3544390, 4919450, 2123560, 3854490, 4601230, 2123560, 3854490, 4601230, 2208630, 3994050, 4440420, 2174370, 4091680, 4368320, 2123560, 3854490, 4601230, 2174370, 4091680, 4368320, 2082020, 3872210, 4605310, 2106790, 3419630, 4938e3, 2201540, 3361490, 4936600, 2322980, 3762130, 4581410, 2106790, 3419630, 4938e3, 2322980, 3762130, 4581410, 2310420, 3768310, 4582670, 2336010, 3812490, 4533230, 2310420, 3768310, 4582670, 2322980, 3762130, 4581410, 2052520, 3504360, 4901560, 2106790, 3419630, 4938e3, 2310420, 3768310, 4582670, 2052520, 3504360, 4901560, 2310420, 3768310, 4582670, 2298820, 3773980, 4583830, 2298820, 3773980, 4583830, 2310420, 3768310, 4582670, 2336010, 3812490, 4533230, 2052520, 3504360, 4901560, 2298820, 3773980, 4583830, 2286300, 3780050, 4585080, 2298820, 3773980, 4583830, 2336010, 3812490, 4533230, 2327140, 3825970, 4526470, 2298820, 3773980, 4583830, 2327140, 3825970, 4526470, 2286300, 3780050, 4585080, 2199280, 3820860, 4593760, 2052520, 3504360, 4901560, 2286300, 3780050, 4585080, 2286300, 3780050, 4585080, 2327140, 3825970, 4526470, 2250800, 3936480, 4470340, 2286300, 3780050, 4585080, 2250800, 3936480, 4470340, 2199280, 3820860, 4593760, 2746380, 3002350, 4895150, 2851970, 3031900, 4816440, 2848190, 3058980, 4801630, 1824510, 3388480, 5069200, 1892300, 3377550, 5051730, 1892950, 3404770, 5033310, 1892420, 4354480, 4244580, 1893020, 4271440, 4327320, 1929170, 4337750, 4245160, 2322980, 3762130, 4581410, 2201540, 3361490, 4936600, 2477040, 3682170, 4565740, 2477040, 3682170, 4565740, 2531030, 3742380, 4487030, 2336010, 3812490, 4533230, 2477040, 3682170, 4565740, 2336010, 3812490, 4533230, 2322980, 3762130, 4581410, 2884900, 3330570, 4595970, 2872320, 3268890, 4647490, 2905700, 3295080, 4608350, 2419820, 3134120, 4983470, 2505790, 3068740, 4981690, 2728540, 3392640, 4645460, 2572850, 3628440, 4555830, 2332410, 3273890, 4935380, 2599650, 3612830, 4553040, 2599650, 3612830, 4553040, 2770720, 3824700, 4272290, 2737460, 3874180, 4249230, 2599650, 3612830, 4553040, 2737460, 3874180, 4249230, 2572850, 3628440, 4555830, 2857060, 3749360, 4282120, 2892090, 3761740, 4247840, 2899410, 3778920, 4227690, 1824510, 3388480, 5069200, 1796170, 3299420, 5137160, 1837390, 3311760, 5114740, 798669, 4652850, 4274420, 797833, 4609460, 4321010, 846702, 4633170, 4286440, 4818880, 4172010, -230227, 4817270, 4153540, 470293, 4835410, 415e4, -276327, 4809380, 4177930, 307778, 4817270, 4153540, 470293, 4818880, 4172010, -230227, 4813620, 4183380, -94901.3, 4809380, 4177930, 307778, 4818880, 4172010, -230227, 4768620, 4231560, -186098, 4813620, 4183380, -94901.3, 4818880, 4172010, -230227, 4789920, 4189100, 433020, 4817270, 4153540, 470293, 4809380, 4177930, 307778, 4739620, 4245920, 433e3, 4789920, 4189100, 433020, 4809380, 4177930, 307778, 4817270, 4153540, 470293, 4862190, 4118040, -284424, 4835410, 415e4, -276327, 4817270, 4153540, 470293, 4869330, 4103440, -362233, 4862190, 4118040, -284424, 4817270, 4153540, 470293, 4885390, 4078290, 424160, 4869330, 4103440, -362233, 4869330, 4103440, -362233, 4885390, 4078290, 424160, 4890170, 4074350, -406767, 4885390, 4078290, 424160, 4900050, 4054380, -480163, 4890170, 4074350, -406767, 4955060, 3997160, 386856, 4969860, 3977490, 399584, 4926870, 4018040, -510126, 4955060, 3997160, 386856, 4926870, 4018040, -510126, 4926760, 4018170, -510110, 4926200, 4018030, -516568, 4926760, 4018170, -510110, 4926870, 4018040, -510126, 4908610, 4054900, 378171, 4955060, 3997160, 386856, 4926760, 4018170, -510110, 4908610, 4054900, 378171, 4926760, 4018170, -510110, 4926430, 4018580, -510062, 4926430, 4018580, -510062, 4926760, 4018170, -510110, 4926200, 4018030, -516568, 4908610, 4054900, 378171, 4926430, 4018580, -510063, 4921e3, 4025330, -509280, 4908610, 4054900, 378171, 4921e3, 4025330, -509280, 4900050, 4054380, -480163, 4921e3, 4025330, -509280, 4926430, 4018580, -510063, 4926200, 4018030, -516568, 4885390, 4078290, 424160, 4908610, 4054900, 378171, 4900050, 4054380, -480163, 5007920, 3929660, 397656, 5031660, 3898300, -406321, 4931790, 4011900, -510837, 5007920, 3929660, 397656, 4931790, 4011900, -510837, 4927140, 4017700, -510164, 4926200, 4018030, -516568, 4927140, 4017700, -510164, 4931790, 4011900, -510837, 4986210, 3957270, 396543, 5007920, 3929660, 397656, 4927140, 4017700, -510164, 4986210, 3957270, 396543, 4927140, 4017700, -510164, 4926980, 4017890, -510142, 4926200, 4018030, -516568, 4926980, 4017890, -510142, 4927140, 4017700, -510164, 4969860, 3977490, 399584, 4986210, 3957270, 396543, 4926980, 4017890, -510142, 4969860, 3977490, 399584, 4926980, 4017890, -510142, 4926870, 4018040, -510126, 4926200, 4018030, -516568, 4926870, 4018040, -510126, 4926980, 4017890, -510142, 5039300, 3894630, -342284, 5276270, 3583060, 56945, 5282290, 3572700, -117182, 5039300, 3894630, -342284, 5244420, 3627630, 130130, 5276270, 3583060, 56945, 5039300, 3894630, -342284, 5219500, 3659620, 210699, 5244420, 3627630, 130130, 5039300, 3894630, -342284, 5181710, 3668580, 607904, 5219500, 3659620, 210699, 5039300, 3894630, -342284, 5154100, 3719630, 527610, 5181710, 3668580, 607904, 5039300, 3894630, -342284, 5134190, 3752030, 491335, 5154100, 3719630, 527610, 5039300, 3894630, -342284, 5088230, 3814120, 491335, 5134190, 3752030, 491335, 5007920, 3929660, 397656, 5088230, 3814120, 491335, 5039300, 3894630, -342284, 5007920, 3929660, 397656, 5039300, 3894630, -342284, 5031660, 3898300, -406321, 5276270, 3583060, 56945, 5294320, 3556780, 12142.6, 5292980, 3557230, -105041, 5276270, 3583060, 56945, 5292980, 3557230, -105041, 5282290, 3572700, -117182, 5181710, 3668580, 607904, 5230150, 3610760, 535340, 5219500, 3659620, 210699, 5219500, 3659620, 210699, 5230150, 3610760, 535340, 5242920, 3616320, 337508, 5230150, 3610760, 535340, 5247650, 3603800, 392911, 5242920, 3616320, 337508, 5230150, 3610760, 535340, 5272960, 3557330, 469506, 5247650, 3603800, 392911, 5149660, 3716430, 589434, 5181710, 3668580, 607904, 5154100, 3719630, 527610, 1386580, 4734180, 4029410, 1407790, 4620640, 4151180, 1545360, 4696e3, 4016380, 1405950, 4617930, 4154800, 1407790, 4620640, 4151180, 1386580, 4734180, 4029410, 1405950, 4617930, 4154800, 1386580, 4734180, 4029410, 1364050, 4630470, 4154800, 1364050, 4630470, 4154800, 1338400, 4515410, 4286790, 1405950, 4617930, 4154800, 1386580, 4734180, 4029410, 1357810, 4632310, 4154800, 1364050, 4630470, 4154800, 1313590, 4476270, 4334910, 1338400, 4515410, 4286790, 1364050, 4630470, 4154800, 1313590, 4476270, 4334910, 1364050, 4630470, 4154800, 1357810, 4632310, 4154800, 1340210, 4637430, 4154800, 1357810, 4632310, 4154800, 1386580, 4734180, 4029410, 1264900, 4473910, 4351680, 1313590, 4476270, 4334910, 1357810, 4632310, 4154800, 1264900, 4473910, 4351680, 1357810, 4632310, 4154800, 1340210, 4637430, 4154800, 1340210, 4637430, 4154800, 1386580, 4734180, 4029410, 1365310, 4706220, 4068960, 1340210, 4637430, 4154800, 1365310, 4706220, 4068960, 1335520, 4638780, 4154800, 1264900, 4473910, 4351680, 1340210, 4637430, 4154800, 1335520, 4638780, 4154800, 1358580, 4725470, 4049e3, 1365310, 4706220, 4068960, 1386580, 4734180, 4029410, 812982, 4667510, 4255820, 882117, 4599010, 4315800, 948993, 4682730, 4211010, 812982, 4667510, 4255820, 846702, 4633170, 4286440, 882117, 4599010, 4315800, 798669, 4652850, 4274420, 846702, 4633170, 4286440, 812982, 4667510, 4255820, 984077, 4705260, 4177930, 999218, 4566900, 4324310, 1091130, 4690500, 4167990, 882117, 4599010, 4315800, 999218, 4566900, 4324310, 984077, 4705260, 4177930, 882117, 4599010, 4315800, 984077, 4705260, 4177930, 948993, 4682730, 4211010, 1209190, 4673310, 4154800, 1217570, 4697110, 4125600, 1132840, 4728220, 4114270, 1209190, 4673310, 4154800, 1132840, 4728220, 4114270, 1139030, 4690900, 4154800, 1139030, 4690900, 4154800, 1161240, 4534880, 4317570, 1209190, 4673310, 4154800, 1132840, 4728220, 4114270, 1132830, 4692400, 4154800, 1139030, 4690900, 4154800, 1130440, 4534070, 4326530, 1161240, 4534880, 4317570, 1139030, 4690900, 4154800, 1130440, 4534070, 4326530, 1139030, 4690900, 4154800, 1132830, 4692400, 4154800, 1107100, 4698540, 4154800, 1132830, 4692400, 4154800, 1132840, 4728220, 4114270, 999218, 4566900, 4324310, 1130440, 4534070, 4326530, 1132830, 4692400, 4154800, 999218, 4566900, 4324310, 1132830, 4692400, 4154800, 1107100, 4698540, 4154800, 1101370, 4699880, 4154800, 1107100, 4698540, 4154800, 1132840, 4728220, 4114270, 999218, 4566900, 4324310, 1107100, 4698540, 4154800, 1101370, 4699880, 4154800, 999218, 4566900, 4324310, 1101370, 4699880, 4154800, 1091130, 4690500, 4167990, 1335520, 4638780, 4154800, 1365310, 4706220, 4068960, 1277830, 4695700, 4109070, 1335520, 4638780, 4154800, 1277830, 4695700, 4109070, 1276e3, 4655510, 4154800, 1276e3, 4655510, 4154800, 1264900, 4473910, 4351680, 1335520, 4638780, 4154800, 1252410, 4661910, 4154800, 1276e3, 4655510, 4154800, 1277830, 4695700, 4109070, 1161240, 4534880, 4317570, 1264900, 4473910, 4351680, 1276e3, 4655510, 4154800, 1161240, 4534880, 4317570, 1276e3, 4655510, 4154800, 1252410, 4661910, 4154800, 1252410, 4661910, 4154800, 1277830, 4695700, 4109070, 1217570, 4697110, 4125600, 1252410, 4661910, 4154800, 1217570, 4697110, 4125600, 1209190, 4673310, 4154800, 1161240, 4534880, 4317570, 1252410, 4661910, 4154800, 1209190, 4673310, 4154800, 1545360, 4696e3, 4016380, 1622820, 4620590, 4072520, 1638630, 464e4, 4044220, 1545360, 4696e3, 4016380, 1586070, 461e4, 4098740, 1622820, 4620590, 4072520, 1545360, 4696e3, 4016380, 1526940, 4637370, 4090370, 1586070, 461e4, 4098740, 1407790, 4620640, 4151180, 1526940, 4637370, 4090370, 1545360, 4696e3, 4016380, 1638630, 464e4, 4044220, 1706120, 4577730, 4086760, 1728060, 4613290, 4037590, 1622820, 4620590, 4072520, 1706120, 4577730, 4086760, 1638630, 464e4, 4044220, 1521140, 4483500, 4259430, 1513870, 4443490, 4303420, 1541950, 4468610, 4267530, 1459400, 4450470, 4314930, 1513870, 4443490, 4303420, 1521140, 4483500, 4259430, 1491090, 4553950, 4195260, 1459400, 4450470, 4314930, 1521140, 4483500, 4259430, 1338400, 4515410, 4286790, 1459400, 4450470, 4314930, 1491090, 4553950, 4195260, 1405950, 4617930, 4154800, 1414680, 4615260, 4154800, 1407790, 4620640, 4151180, 1338400, 4515410, 4286790, 1491090, 4553950, 4195260, 1414680, 4615260, 4154800, 1338400, 4515410, 4286790, 1414680, 4615260, 4154800, 1405950, 4617930, 4154800, 1521140, 4483500, 4259430, 1602730, 4505960, 4205840, 1553480, 4552350, 4174450, 1491090, 4553950, 4195260, 1521140, 4483500, 4259430, 1553480, 4552350, 4174450, -1552860, 6077040, 1153200, -1524120, 5987640, 1577680, -1463230, 6096200, 1169090, -1622970, 5965690, 1562290, -1524120, 5987640, 1577680, -1552860, 6077040, 1153200, -1622970, 5965690, 1562290, -1552860, 6077040, 1153200, -1642360, 6044900, 1196980, -1702750, 6012990, 1270580, -1622970, 5965690, 1562290, -1642360, 6044900, 1196980, -1752440, 6012330, 1204860, -1702750, 6012990, 1270580, -1642360, 6044900, 1196980, -1417530, 6095800, 1225690, -1389790, 6025600, 1557200, -1358600, 6085530, 1337590, -1524120, 5987640, 1577680, -1389790, 6025600, 1557200, -1417530, 6095800, 1225690, -1524120, 5987640, 1577680, -1417530, 6095800, 1225690, -1463230, 6096200, 1169090, -1873e3, 5943670, 1353870, -1711610, 5951840, 1520210, -1702750, 6012990, 1270580, -1873e3, 5943670, 1353870, -1753190, 5920180, 1594160, -1711610, 5951840, 1520210, -1873e3, 5943670, 1353870, -1847650, 5901990, 1554700, -1753190, 5920180, 1594160, -1876880, 5911310, 1483070, -1847650, 5901990, 1554700, -1873e3, 5943670, 1353870, -1711610, 5951840, 1520210, -1622970, 5965690, 1562290, -1702750, 6012990, 1270580, -1389790, 6025600, 1557200, -1327100, 6062200, 1467860, -1358600, 6085530, 1337590, -3096300, 3913570, 3958770, -3096790, 3934470, 3937760, -3225010, 4014540, 3750810, -3096300, 3913570, 3958770, -3225010, 4014540, 3750810, -3229510, 4010400, 3751370, -3294750, 4055490, 3645360, -3229510, 4010400, 3751370, -3225010, 4014540, 3750810, -3205890, 3928990, 3855610, -3096300, 3913570, 3958770, -3229510, 4010400, 3751370, -3205890, 3928990, 3855610, -3229510, 4010400, 3751370, -325e4, 3991430, 3753880, -325e4, 3991430, 3753880, -3229510, 4010400, 3751370, -3294750, 4055490, 3645360, -3264400, 3977970, 3755660, -3205890, 3928990, 3855610, -325e4, 3991430, 3753880, -325e4, 3991430, 3753880, -3294750, 4055490, 3645360, -3298940, 4006490, 3695090, -325e4, 3991430, 3753880, -3298940, 4006490, 3695090, -3264400, 3977970, 3755660, -3250380, 3948640, 3798240, -3205890, 3928990, 3855610, -3264400, 3977970, 3755660, -3250380, 3948640, 3798240, -3264400, 3977970, 3755660, -3270370, 3972360, 3756400, -3298940, 4006490, 3695090, -3270370, 3972360, 3756400, -3264400, 3977970, 3755660, -3063540, 4086190, 3807980, -3014330, 4046390, 3888350, -2981240, 4067830, 3891470, -3023130, 4001210, 3927810, -3014330, 4046390, 3888350, -3063540, 4086190, 3807980, -3023130, 4001210, 3927810, -3063540, 4086190, 3807980, -3107730, 4119e3, 3736620, -3023130, 4001210, 3927810, -3107730, 4119e3, 3736620, -3122520, 4106180, 3738390, -3196020, 4182180, 3590070, -3122520, 4106180, 3738390, -3107730, 4119e3, 3736620, -3070230, 3960970, 3932020, -3023130, 4001210, 3927810, -3122520, 4106180, 3738390, -3070230, 3960970, 3932020, -3122520, 4106180, 3738390, -3143370, 4087940, 3740890, -3143370, 4087940, 3740890, -3122520, 4106180, 3738390, -3196020, 4182180, 3590070, -3175340, 4059580, 3744750, -3070230, 3960970, 3932020, -3143370, 4087940, 3740890, -3143370, 4087940, 3740890, -3196020, 4182180, 3590070, -3237840, 4116630, 3627900, -3143370, 4087940, 3740890, -3237840, 4116630, 3627900, -3175340, 4059580, 3744750, -3096790, 3934470, 3937760, -3070230, 3960970, 3932020, -3175340, 4059580, 3744750, -3096790, 3934470, 3937760, -3175340, 4059580, 3744750, -3186140, 4049880, 3746070, -3186140, 4049880, 3746070, -3175340, 4059580, 3744750, -3237840, 4116630, 3627900, -3225010, 4014540, 3750810, -3096790, 3934470, 3937760, -3186140, 4049880, 3746070, -3186140, 4049880, 3746070, -3237840, 4116630, 3627900, -3294750, 4055490, 3645360, -3186140, 4049880, 3746070, -3294750, 4055490, 3645360, -3225010, 4014540, 3750810, -3063540, 4086190, 3807980, -3016890, 4134610, 3793020, -3064890, 4155590, 3731530, -3063540, 4086190, 3807980, -3064890, 4155590, 3731530, -3081550, 4141450, 3733510, -3081550, 4141450, 3733510, -3064890, 4155590, 3731530, -3089340, 4166020, 3699810, -3107730, 4119e3, 3736620, -3063540, 4086190, 3807980, -3081550, 4141450, 3733510, -3081550, 4141450, 3733510, -3089340, 4166020, 3699810, -3196020, 4182180, 3590070, -3081550, 4141450, 3733510, -3196020, 4182180, 3590070, -3107730, 4119e3, 3736620, -3196020, 4182180, 3590070, -3089340, 4166020, 3699810, -3133050, 4236240, 3582230, -3089340, 4166020, 3699810, -3104390, 4214690, 3631920, -3133050, 4236240, 3582230, -3063540, 4086190, 3807980, -2981240, 4067830, 3891470, -2980480, 4076040, 3883510, 4372980, 1682300, 4313020, 4347730, 1652810, 4349550, 4381800, 1663980, 4311190, 4381800, 1663980, 4311190, 4435120, 1681400, 4249890, 4406810, 1722810, 4262650, 4381800, 1663980, 4311190, 4406810, 1722810, 4262650, 4372980, 1682300, 4313020, 4353640, 1667410, 4338130, 4347730, 1652810, 4349550, 4372980, 1682300, 4313020, 4353640, 1667410, 4338130, 4372980, 1682300, 4313020, 4371360, 1685650, 4313350, 4406810, 1722810, 4262650, 4371360, 1685650, 4313350, 4372980, 1682300, 4313020, 4352580, 1683310, 4333080, 4353640, 1667410, 4338130, 4371360, 1685650, 4313350, 4352580, 1683310, 4333080, 4371360, 1685650, 4313350, 4367320, 1693960, 4314180, 4406810, 1722810, 4262650, 4367320, 1693960, 4314180, 4371360, 1685650, 4313350, 4359960, 1697620, 4320150, 4352580, 1683310, 4333080, 4367320, 1693960, 4314180, 4359960, 1697620, 4320150, 4367320, 1693960, 4314180, 4364370, 1699980, 4314800, 4406810, 1722810, 4262650, 4364370, 1699980, 4314800, 4367320, 1693960, 4314180, 4358380, 1711430, 4316320, 4359960, 1697620, 4320150, 4364370, 1699980, 4314800, 4358380, 1711430, 4316320, 4364370, 1699980, 4314800, 4358720, 1711510, 4315950, 4358720, 1711510, 4315950, 4364370, 1699980, 4314800, 4406810, 1722810, 4262650, 4358670, 1711610, 4315960, 4358380, 1711430, 4316320, 4358720, 1711510, 4315950, 4358720, 1711510, 4315950, 4406810, 1722810, 4262650, 4393160, 1734350, 4271980, 4358720, 1711510, 4315950, 4393160, 1734350, 4271980, 4358670, 1711610, 4315960, 4397370, 1738970, 4265800, 4393160, 1734350, 4271980, 4406810, 1722810, 4262650, 4386520, 1654110, 4310190, 4356820, 1640670, 4345080, 4387940, 1651140, 4309900, 4387940, 1651140, 4309900, 4453810, 1673210, 4233650, 4450660, 1683300, 4232970, 4387940, 1651140, 4309900, 4450660, 1683300, 4232970, 4386520, 1654110, 4310190, 4347730, 1652810, 4349550, 4356820, 1640670, 4345080, 4386520, 1654110, 4310190, 4347730, 1652810, 4349550, 4386520, 1654110, 4310190, 4382230, 1663100, 4311100, 4382230, 1663100, 4311100, 4386520, 1654110, 4310190, 4450660, 1683300, 4232970, 4347730, 1652810, 4349550, 4382230, 1663100, 4311100, 4381800, 1663980, 4311190, 4382230, 1663100, 4311100, 4450660, 1683300, 4232970, 4435120, 1681400, 4249890, 4382230, 1663100, 4311100, 4435120, 1681400, 4249890, 4381800, 1663980, 4311190, 4400540, 1624390, 4307230, 4396250, 1622530, 4312270, 4402600, 1619980, 4306790, 4402600, 1619980, 4306790, 4417390, 1613970, 4293970, 4430230, 1637360, 4271980, 4402600, 1619980, 4306790, 4430230, 1637360, 4271980, 4400540, 1624390, 4307230, 4384350, 1638960, 4318130, 4396250, 1622530, 4312270, 4400540, 1624390, 4307230, 4384350, 1638960, 4318130, 4400540, 1624390, 4307230, 4393840, 1638670, 4308650, 4393840, 1638670, 4308650, 4400540, 1624390, 4307230, 4430230, 1637360, 4271980, 4392140, 1642260, 4309010, 4384350, 1638960, 4318130, 4393840, 1638670, 4308650, 4393840, 1638670, 4308650, 4430230, 1637360, 4271980, 4430520, 1658520, 4263560, 4393840, 1638670, 4308650, 4430520, 1658520, 4263560, 4392140, 1642260, 4309010, 4356820, 1640670, 4345080, 4384350, 1638960, 4318130, 4392140, 1642260, 4309010, 4356820, 1640670, 4345080, 4392140, 1642260, 4309010, 4389150, 1648560, 4309640, 4389150, 1648560, 4309640, 4392140, 1642260, 4309010, 4430520, 1658520, 4263560, 4356820, 1640670, 4345080, 4389150, 1648560, 4309640, 4387940, 1651140, 4309900, 4389150, 1648560, 4309640, 4430520, 1658520, 4263560, 4453810, 1673210, 4233650, 4389150, 1648560, 4309640, 4453810, 1673210, 4233650, 4387940, 1651140, 4309900, 4360860, 1742010, 4301660, 4365550, 1731350, 4301210, 4381260, 1740230, 4281730, 4381260, 1740230, 4281730, 4365550, 1731350, 4301210, 4393160, 1734350, 4271980, 4358540, 1711870, 4315980, 4358380, 1711430, 4316320, 4358670, 1711610, 4315960, 4358540, 1711870, 4315980, 4358670, 1711610, 4315960, 4393160, 1734350, 4271980, 4358540, 1711870, 4315980, 4393160, 1734350, 4271980, 4365550, 1731350, 4301210, 3774510, 4113350, 3074140, 3746630, 4060560, 3176050, 3834450, 4050380, 3083490, 3701850, 4107640, 3168050, 3746630, 4060560, 3176050, 3774510, 4113350, 3074140, 3701850, 4107640, 3168050, 3774510, 4113350, 3074140, 3774330, 4123420, 3060940, 3701850, 4107640, 3168050, 3774330, 4123420, 3060940, 3755900, 4138600, 3063110, 3755900, 4138600, 3063110, 3774330, 4123420, 3060940, 3773680, 4148520, 3027860, 3701850, 4107640, 3168050, 3755900, 4138600, 3063110, 3747e3, 4145880, 3064140, 3701850, 4107640, 3168050, 3747e3, 4145880, 3064140, 3717800, 4142670, 3103550, 3747e3, 4145880, 3064140, 3755900, 4138600, 3063110, 3773680, 4148520, 3027860, 3719660, 4168070, 3067330, 3717800, 4142670, 3103550, 3747e3, 4145880, 3064140, 3747e3, 4145880, 3064140, 3773680, 4148520, 3027860, 3721280, 4193760, 3030380, 3747e3, 4145880, 3064140, 3721280, 4193760, 3030380, 3719660, 4168070, 3067330, 3703050, 4139200, 3125580, 3701850, 4107640, 3168050, 3717800, 4142670, 3103550, -1461440, 5880740, 1983740, -1362810, 5808550, 2247250, -1383170, 5897190, 1990950, -1362810, 5808550, 2247250, -1365170, 5913690, 1954350, -1383170, 5897190, 1990950, -1362810, 5808550, 2247250, -1309210, 5783540, 2341020, -1365170, 5913690, 1954350, -1365170, 5913690, 1954350, -1309210, 5783540, 2341020, -1304830, 5928300, 1951310, -1309210, 5783540, 2341020, -1243170, 5764480, 2422060, -1304830, 5928300, 1951310, -1304830, 5928300, 1951310, -1243170, 5764480, 2422060, -1272610, 5929130, 1969870, -1243170, 5764480, 2422060, -1217080, 5824310, 2289410, -1272610, 5929130, 1969870, -1272610, 5929130, 1969870, -1217080, 5824310, 2289410, -1176940, 5899670, 2111700, -1217080, 5824310, 2289410, -1162630, 5834310, 2292230, -1176940, 5899670, 2111700, -1176940, 5899670, 2111700, -1162630, 5834310, 2292230, -1151630, 5826850, 2316460, -1176940, 5899670, 2111700, -1158850, 5941820, 2001380, -1167210, 5971360, 1907e3, -1272610, 5929130, 1969870, -1176940, 5899670, 2111700, -1167210, 5971360, 1907e3, -1847650, 5901990, 1554700, -1742160, 5860380, 1810910, -1753190, 5920180, 1594160, -1847650, 5901990, 1554700, -1825840, 5857430, 1736990, -1742160, 5860380, 1810910, -1857910, 5869320, 1661700, -1825840, 5857430, 1736990, -1847650, 5901990, 1554700, -1711610, 5951840, 1520210, -1653430, 5944360, 1610570, -1622970, 5965690, 1562290, -1711610, 5951840, 1520210, -1651520, 5919480, 1700970, -1653430, 5944360, 1610570, -1711610, 5951840, 1520210, -1669770, 5851700, 1904130, -1651520, 5919480, 1700970, -1742160, 5860380, 1810910, -1669770, 5851700, 1904130, -1711610, 5951840, 1520210, -1742160, 5860380, 1810910, -1711610, 5951840, 1520210, -1753190, 5920180, 1594160, -1644920, 5848060, 1936460, -1574160, 5836120, 2028460, -1597370, 5862710, 1931970, -1644920, 5848060, 1936460, -1597370, 5862710, 1931970, -1651520, 5919480, 1700970, -1644920, 5848060, 1936460, -1651520, 5919480, 1700970, -1669770, 5851700, 1904130, -1597370, 5862710, 1931970, -1574160, 5836120, 2028460, -1568920, 5871280, 1929280, -1568920, 5871280, 1929280, -1560890, 5916520, 1793680, -1651520, 5919480, 1700970, -1568920, 5871280, 1929280, -1651520, 5919480, 1700970, -1597370, 5862710, 1931970, -1574160, 5836120, 2028460, -1552750, 5876080, 1927760, -1568920, 5871280, 1929280, -1552750, 5876080, 1927760, -1546410, 5887440, 1898170, -1560890, 5916520, 1793680, -1552750, 5876080, 1927760, -1560890, 5916520, 1793680, -1568920, 5871280, 1929280, -1574160, 5836120, 2028460, -1461440, 5880740, 1983740, -1520150, 5885610, 1924680, -1574160, 5836120, 2028460, -1520150, 5885610, 1924680, -1552750, 5876080, 1927760, -1552750, 5876080, 1927760, -1520150, 5885610, 1924680, -1546410, 5887440, 1898170, -1574160, 5836120, 2028460, -1446630, 5846860, 2091080, -1461440, 5880740, 1983740, -1535030, 5800440, 2155900, -1487360, 5778230, 2246430, -1472550, 5826720, 2128610, -1487360, 5778230, 2246430, -1446630, 5846860, 2091080, -1472550, 5826720, 2128610, -1487360, 5778230, 2246430, -1362810, 5808550, 2247250, -1446630, 5846860, 2091080, -1461440, 5880740, 1983740, -1446630, 5846860, 2091080, -1362810, 5808550, 2247250, -1096940, 5890420, 2179050, -1069620, 5868840, 2249270, -1050310, 5886890, 2211110, -1151630, 5826850, 2316460, -1069620, 5868840, 2249270, -1096940, 5890420, 2179050, -1151630, 5826850, 2316460, -1096940, 5890420, 2179050, -1106950, 5911490, 2116470, -1176940, 5899670, 2111700, -1151630, 5826850, 2316460, -1106950, 5911490, 2116470, -1243170, 5764480, 2422060, -1192250, 5781540, 2407050, -1217080, 5824310, 2289410, 4287480, 3122650, 3530330, 4252580, 3087370, 3602350, 4328030, 3123900, 3479720, 4287480, 3122650, 3530330, 4249790, 3087470, 3605530, 4252580, 3087370, 3602350, 4228010, 3122650, 3600870, 4249790, 3087470, 3605530, 4287480, 3122650, 3530330, 4238800, 3149360, 3564980, 4228010, 3122650, 3600870, 4287480, 3122650, 3530330, 4343260, 3104060, 3478510, 4315050, 3075870, 3537740, 4356910, 3103250, 3462230, 4252580, 3087370, 3602350, 4315050, 3075870, 3537740, 4343260, 3104060, 3478510, 4252580, 3087370, 3602350, 4343260, 3104060, 3478510, 4328030, 3123900, 3479720, 4315050, 3075870, 3537740, 4374860, 3077680, 3462410, 4356910, 3103250, 3462230, 6298340, -882272, 481181, 6274560, -916629, 683484, 6266510, -948042, 713658, 6298340, -882272, 481181, 6266510, -948042, 713658, 6250030, -981642, 806045, 6252840, -955865, 815110, 6247740, -958507, 850191, 6249690, -977951, 813096, 6249690, -977951, 813096, 6250030, -981642, 806045, 6266510, -948042, 713658, 6249690, -977951, 813096, 6266510, -948042, 713658, 6252840, -955865, 815110, 6255820, -934502, 817057, 6247740, -958507, 850191, 6252840, -955865, 815110, 6255820, -934502, 817057, 6252840, -955865, 815110, 6266510, -948042, 713658, 6255820, -934502, 817057, 6266510, -948042, 713658, 6256190, -933370, 815497, 6264400, -923420, 762452, 6256190, -933370, 815497, 6266510, -948042, 713658, 6298340, -882272, 481181, 6280330, -881938, 676135, 6274560, -916629, 683484, 6291410, -836118, 630064, 6280330, -881938, 676135, 6298340, -882272, 481181, 6291410, -836118, 630064, 6298340, -882272, 481181, 6295860, -844003, 572909, 6296e3, -833325, 586695, 6291410, -836118, 630064, 6295860, -844003, 572909, 6221990, -1071890, 901688, 6234190, -1079350, 803832, 6239630, -1045020, 806971, 6221990, -1071890, 901688, 6239630, -1045020, 806971, 6223700, -1061900, 901688, 6234190, -1079350, 803832, 6253190, -1092870, 617542, 6277280, -994762, 533721, 6234190, -1079350, 803832, 6277280, -994762, 533721, 6239630, -1045020, 806971, 6223700, -1061900, 901688, 6216660, -1068810, 940997, 6221990, -1071890, 901688, 6239630, -1045020, 806971, 6241880, -1030450, 808303, 6238570, -1033160, 829938, 6239630, -1045020, 806971, 6238570, -1033160, 829938, 6224660, -1056250, 901688, 6239630, -1045020, 806971, 6224660, -1056250, 901688, 6223700, -1061900, 901688, 6277280, -994762, 533721, 6241880, -1030450, 808303, 6239630, -1045020, 806971, 6224660, -1056250, 901688, 6216660, -1068810, 940997, 6223700, -1061900, 901688, 6244190, -1015220, 809694, 6238570, -1033160, 829938, 6241880, -1030450, 808303, 6244190, -1015220, 809694, 6241880, -1030450, 808303, 6277280, -994762, 533721, 6244190, -1015220, 809694, 6277280, -994762, 533721, 6245050, -1012460, 806581, 6250030, -981642, 806045, 6245050, -1012460, 806581, 6277280, -994762, 533721, 6298340, -882272, 481181, 6250030, -981642, 806045, 6277280, -994762, 533721, 6222600, -1148730, 797480, 6207650, -1172450, 875149, 6217560, -1177520, 794841, 6217560, -1177520, 794841, 6230170, -1184570, 677731, 6253190, -1092870, 617542, 6217560, -1177520, 794841, 6253190, -1092870, 617542, 6222600, -1148730, 797480, 6208850, -1145580, 901688, 6207650, -1172450, 875149, 6222600, -1148730, 797480, 6208850, -1145580, 901688, 6222600, -1148730, 797480, 6229210, -1109750, 801050, 6208850, -1145580, 901688, 6229210, -1109750, 801050, 6213770, -1118570, 901688, 6253190, -1092870, 617542, 6229210, -1109750, 801050, 6222600, -1148730, 797480, 6213770, -1118570, 901688, 6209750, -1120680, 926246, 6208850, -1145580, 901688, 6217580, -1097180, 901688, 6213770, -1118570, 901688, 6229210, -1109750, 801050, 6217580, -1097180, 901688, 6229210, -1109750, 801050, 6231490, -1095930, 802314, 6253190, -1092870, 617542, 6231490, -1095930, 802314, 6229210, -1109750, 801050, 6213530, -1097470, 928684, 6209750, -1120680, 926246, 6213770, -1118570, 901688, 6213530, -1097470, 928684, 6213770, -1118570, 901688, 6217580, -1097180, 901688, 6221990, -1071890, 901688, 6217580, -1097180, 901688, 6231490, -1095930, 802314, 6221990, -1071890, 901688, 6231490, -1095930, 802314, 6234190, -1079350, 803832, 6234190, -1079350, 803832, 6231490, -1095930, 802314, 6253190, -1092870, 617542, 6216660, -1068810, 940997, 6213530, -1097470, 928684, 6217580, -1097180, 901688, 6216660, -1068810, 940997, 6217580, -1097180, 901688, 6221990, -1071890, 901688, 6230170, -1184570, 677731, 6208930, -1229380, 783752, 6207940, -1256120, 748630, 6210580, -1216140, 791297, 6206090, -1222840, 815661, 6208370, -1228060, 790202, 6208370, -1228060, 790202, 6208930, -1229380, 783752, 6230170, -1184570, 677731, 6208370, -1228060, 790202, 6230170, -1184570, 677731, 6210580, -1216140, 791297, 6207650, -1172450, 875149, 6206090, -1222840, 815661, 6210580, -1216140, 791297, 6207650, -1172450, 875149, 6210580, -1216140, 791297, 6217560, -1177520, 794841, 6217560, -1177520, 794841, 6210580, -1216140, 791297, 6230170, -1184570, 677731, 6226870, -1043160, 901688, 6224660, -1056250, 901688, 6238570, -1033160, 829938, 6226870, -1043160, 901688, 6238570, -1033160, 829938, 6233860, -1025e3, 873952, 6226870, -1043160, 901688, 6216660, -1068810, 940997, 6224660, -1056250, 901688, 6295860, -844003, 572909, 6298340, -882272, 481181, 6302240, -853458, 482152, 6252770, -927711, 847382, 6247740, -958507, 850191, 6255820, -934502, 817057, 6252770, -927711, 847382, 6255820, -934502, 817057, 6256010, -933070, 817188, 6256010, -933070, 817188, 6255820, -934502, 817057, 6256190, -933370, 815497, 5261220, 2453350, 2633360, 5267010, 2440880, 2633360, 5433970, 2533900, 2168010, 5048100, 2353970, 3097010, 5020240, 2309060, 3174620, 5171670, 2389320, 2858420, 5048100, 2353970, 3097010, 5171670, 2389320, 2858420, 5162330, 2407240, 2860250, 5162330, 2407240, 2860250, 5171670, 2389320, 2858420, 5267010, 2440880, 2633360, 5162330, 2407240, 2860250, 5267010, 2440880, 2633360, 5261220, 2453350, 2633360, 5433970, 2533900, 2168010, 5267010, 2440880, 2633360, 5278450, 2416050, 2633360, 5020240, 2309060, 3174620, 4947870, 2195440, 3362e3, 5189900, 2353860, 2854820, 5020240, 2309060, 3174620, 5189900, 2353860, 2854820, 5171670, 2389320, 2858420, 5171670, 2389320, 2858420, 5189900, 2353860, 2854820, 5278450, 2416050, 2633360, 5171670, 2389320, 2858420, 5278450, 2416050, 2633360, 5267010, 2440880, 2633360, 4962600, 2293350, 3274380, 4947870, 2195440, 3362e3, 5020240, 2309060, 3174620, 4978450, 2317010, 3233680, 4962600, 2293350, 3274380, 5020240, 2309060, 3174620, 4915300, 2283810, 3350970, 4947870, 2195440, 3362e3, 4962600, 2293350, 3274380, 4922970, 2312880, 3319830, 4915300, 2283810, 3350970, 4962600, 2293350, 3274380, 5629290, 963880, 2829950, 5656080, 928186, 2788450, 5678260, 985860, 2723260, 5629290, 963880, 2829950, 5678260, 985860, 2723260, 5677230, 990547, 2723690, 5680730, 992538, 2715710, 5677230, 990547, 2723690, 5678260, 985860, 2723260, 5570120, 957734, 2945960, 5629290, 963880, 2829950, 5677230, 990547, 2723690, 5570120, 957734, 2945960, 5677230, 990547, 2723690, 5677060, 991350, 2723760, 5680730, 992538, 2715710, 5677060, 991350, 2723760, 5677230, 990547, 2723690, 5502490, 956380, 3070020, 5570120, 957734, 2945960, 5677060, 991350, 2723760, 5502490, 956380, 3070020, 5677060, 991350, 2723760, 5676970, 991764, 2723800, 5680730, 992538, 2715710, 5676970, 991764, 2723800, 5677060, 991350, 2723760, 5415090, 951905, 3222010, 5502490, 956380, 3070020, 5676970, 991764, 2723800, 5415090, 951905, 3222010, 5676970, 991764, 2723800, 5676920, 991968, 2723820, 5676920, 991968, 2723820, 5676970, 991764, 2723800, 5680730, 992538, 2715710, 5415090, 951905, 3222010, 5676920, 991968, 2723820, 5676090, 995766, 2724170, 5676920, 991968, 2723820, 5680730, 992538, 2715710, 5699950, 999748, 2672750, 5676920, 991968, 2723820, 5699950, 999748, 2672750, 5676090, 995766, 2724170, 5718990, 1039710, 2616610, 5711600, 1037730, 2633360, 5711650, 1037450, 2633360, 5390060, 955905, 3262260, 5415090, 951905, 3222010, 5669640, 1024670, 2726850, 5390060, 955905, 3262260, 5669640, 1024670, 2726850, 5669240, 1026450, 2727010, 5669240, 1026450, 2727010, 5669640, 1024670, 2726850, 5711650, 1037450, 2633360, 5669240, 1026450, 2727010, 5711650, 1037450, 2633360, 5711600, 1037730, 2633360, 5711360, 1039090, 2633360, 5711600, 1037730, 2633360, 5718990, 1039710, 2616610, 5334760, 1001930, 3337970, 5390060, 955905, 3262260, 5669240, 1026450, 2727010, 5334760, 1001930, 3337970, 5669240, 1026450, 2727010, 5667210, 1035410, 2727840, 5667210, 1035410, 2727840, 5669240, 1026450, 2727010, 5711600, 1037730, 2633360, 5667210, 1035410, 2727840, 5711600, 1037730, 2633360, 5711360, 1039090, 2633360, 5703650, 1080580, 2633360, 5711360, 1039090, 2633360, 5718990, 1039710, 2616610, 5658150, 1074580, 2731470, 5334760, 1001930, 3337970, 5667210, 1035410, 2727840, 5703650, 1080580, 2633360, 5702060, 1084780, 2635080, 5658150, 1074580, 2731470, 5703650, 1080580, 2633360, 5658150, 1074580, 2731470, 5667210, 1035410, 2727840, 5703650, 1080580, 2633360, 5667210, 1035410, 2727840, 5711360, 1039090, 2633360, 5310860, 1027020, 3368120, 5334760, 1001930, 3337970, 5658150, 1074580, 2731470, 5310860, 1027020, 3368120, 5658150, 1074580, 2731470, 5657220, 1078520, 2731840, 5657220, 1078520, 2731840, 5658150, 1074580, 2731470, 5702060, 1084780, 2635080, 5707350, 1167470, 2588190, 5688040, 1159940, 2633360, 5702280, 1087810, 2633360, 5641800, 1142290, 2737770, 5310860, 1027020, 3368120, 5657220, 1078520, 2731840, 5702280, 1087810, 2633360, 5688040, 1159940, 2633360, 5641800, 1142290, 2737770, 5702280, 1087810, 2633360, 5641800, 1142290, 2737770, 5657220, 1078520, 2731840, 5702280, 1087810, 2633360, 5657220, 1078520, 2731840, 5702060, 1084780, 2635080, 5707350, 1167470, 2588190, 5687480, 1162680, 2633360, 5688040, 1159940, 2633360, 5285280, 1068800, 3395050, 5310860, 1027020, 3368120, 5641800, 1142290, 2737770, 5285280, 1068800, 3395050, 5641800, 1142290, 2737770, 5639580, 1151220, 2738600, 5639580, 1151220, 2738600, 5641800, 1142290, 2737770, 5688040, 1159940, 2633360, 5639580, 1151220, 2738600, 5688040, 1159940, 2633360, 5687480, 1162680, 2633360, 5707350, 1167470, 2588190, 5687410, 1163020, 2633360, 5687480, 1162680, 2633360, 5239070, 1064830, 3466690, 5285280, 1068800, 3395050, 5639580, 1151220, 2738600, 5239070, 1064830, 3466690, 5639580, 1151220, 2738600, 5639300, 1152330, 2738700, 5639300, 1152330, 2738700, 5639580, 1151220, 2738600, 5687480, 1162680, 2633360, 5639300, 1152330, 2738700, 5687480, 1162680, 2633360, 5687410, 1163020, 2633360, 5415090, 951905, 3222010, 5435830, 907904, 3199860, 5478650, 946881, 3114980, 5415090, 951905, 3222010, 5478650, 946881, 3114980, 5502490, 956380, 3070020, 5498740, 2429560, 2124e3, 5313580, 2337780, 2633360, 5319540, 2324170, 2633360, 4950790, 2163880, 3378030, 4964510, 2131570, 3378420, 5229840, 2273920, 2846760, 4950790, 2163880, 3378030, 5229840, 2273920, 2846760, 5220640, 2292630, 2848640, 5220640, 2292630, 2848640, 5229840, 2273920, 2846760, 5319540, 2324170, 2633360, 5220640, 2292630, 2848640, 5319540, 2324170, 2633360, 5313580, 2337780, 2633360, 5308430, 2349440, 2633360, 5313580, 2337780, 2633360, 5498740, 2429560, 2124e3, 4947870, 2195440, 3362e3, 4950790, 2163880, 3378030, 5220640, 2292630, 2848640, 4947870, 2195440, 3362e3, 5220640, 2292630, 2848640, 5212640, 2308750, 2850260, 5212640, 2308750, 2850260, 5220640, 2292630, 2848640, 5313580, 2337780, 2633360, 5212640, 2308750, 2850260, 5313580, 2337780, 2633360, 5308430, 2349440, 2633360, 5308430, 2349440, 2633360, 5498740, 2429560, 2124e3, 5483840, 2424380, 2167700, 5308430, 2349440, 2633360, 5483840, 2424380, 2167700, 5308190, 2349970, 2633360, 4947870, 2195440, 3362e3, 5212640, 2308750, 2850260, 5212450, 2309110, 2850300, 5212640, 2308750, 2850260, 5308430, 2349440, 2633360, 5308190, 2349970, 2633360, 5212640, 2308750, 2850260, 5308190, 2349970, 2633360, 5212450, 2309110, 2850300, 5308190, 2349970, 2633360, 5483840, 2424380, 2167700, 5433970, 2533900, 2168010, 5308190, 2349970, 2633360, 5433970, 2533900, 2168010, 5278450, 2416050, 2633360, 5189900, 2353860, 2854820, 4947870, 2195440, 3362e3, 5212450, 2309110, 2850300, 5212450, 2309110, 2850300, 5308190, 2349970, 2633360, 5278450, 2416050, 2633360, 5212450, 2309110, 2850300, 5278450, 2416050, 2633360, 5189900, 2353860, 2854820, 5457960, 1977360, 2633360, 5584460, 2015960, 2322490, 5498740, 2429560, 2124e3, 5457960, 1977360, 2633360, 5498740, 2429560, 2124e3, 5375150, 2192500, 2633360, 5312730, 2097080, 2829110, 5141e3, 1876600, 3264540, 5375440, 1951600, 2814800, 5375440, 1951600, 2814800, 5457960, 1977360, 2633360, 5375150, 2192500, 2633360, 5375440, 1951600, 2814800, 5375150, 2192500, 2633360, 5312730, 2097080, 2829110, 5498740, 2429560, 2124e3, 5367670, 2210740, 2633360, 5375150, 2192500, 2633360, 5070020, 1858780, 3382800, 5141e3, 1876600, 3264540, 5312730, 2097080, 2829110, 5070020, 1858780, 3382800, 5312730, 2097080, 2829110, 5301890, 2121130, 2831490, 5301890, 2121130, 2831490, 5312730, 2097080, 2829110, 5375150, 2192500, 2633360, 5301890, 2121130, 2831490, 5375150, 2192500, 2633360, 5367670, 2210740, 2633360, 5498740, 2429560, 2124e3, 5355070, 2241100, 2633360, 5367670, 2210740, 2633360, 5020170, 1912450, 3426640, 5070020, 1858780, 3382800, 5301890, 2121130, 2831490, 5020170, 1912450, 3426640, 5301890, 2121130, 2831490, 5283420, 2161460, 2835500, 5283420, 2161460, 2835500, 5301890, 2121130, 2831490, 5367670, 2210740, 2633360, 5283420, 2161460, 2835500, 5367670, 2210740, 2633360, 5355070, 2241100, 2633360, 5498740, 2429560, 2124e3, 5344480, 2266240, 2633360, 5355070, 2241100, 2633360, 4989210, 1969630, 3439360, 5020170, 1912450, 3426640, 5283420, 2161460, 2835500, 4989210, 1969630, 3439360, 5283420, 2161460, 2835500, 5267670, 2195180, 2838860, 5267670, 2195180, 2838860, 5283420, 2161460, 2835500, 5355070, 2241100, 2633360, 5267670, 2195180, 2838860, 5355070, 2241100, 2633360, 5344480, 2266240, 2633360, 5498740, 2429560, 2124e3, 5324460, 2312880, 2633360, 5344480, 2266240, 2633360, 4952630, 2091640, 3420280, 4989210, 1969630, 3439360, 5267670, 2195180, 2838860, 4952630, 2091640, 3420280, 5267670, 2195180, 2838860, 5237390, 2258460, 2845190, 5237390, 2258460, 2845190, 5267670, 2195180, 2838860, 5344480, 2266240, 2633360, 5237390, 2258460, 2845190, 5344480, 2266240, 2633360, 5324460, 2312880, 2633360, 5498740, 2429560, 2124e3, 5319540, 2324170, 2633360, 5324460, 2312880, 2633360, 4964510, 2131570, 3378420, 4952630, 2091640, 3420280, 5237390, 2258460, 2845190, 4964510, 2131570, 3378420, 5237390, 2258460, 2845190, 5229840, 2273920, 2846760, 5229840, 2273920, 2846760, 5237390, 2258460, 2845190, 5324460, 2312880, 2633360, 5229840, 2273920, 2846760, 5324460, 2312880, 2633360, 5319540, 2324170, 2633360, 5581050, 1597240, 2633360, 5633270, 1600520, 2518420, 5584460, 2015960, 2322490, 5581050, 1597240, 2633360, 5584460, 2015960, 2322490, 5494430, 1873650, 2633360, 5437440, 1795580, 2799640, 5233620, 1561360, 3283190, 5510530, 1591780, 2780080, 5510530, 1591780, 2780080, 5581050, 1597240, 2633360, 5494430, 1873650, 2633360, 5510530, 1591780, 2780080, 5494430, 1873650, 2633360, 5437440, 1795580, 2799640, 5584460, 2015960, 2322490, 5480620, 1913660, 2633360, 5494430, 1873650, 2633360, 5216340, 1697020, 3243400, 5233620, 1561360, 3283190, 5437440, 1795580, 2799640, 5216340, 1697020, 3243400, 5437440, 1795580, 2799640, 5414570, 1854720, 2805360, 5414570, 1854720, 2805360, 5437440, 1795580, 2799640, 5494430, 1873650, 2633360, 5414570, 1854720, 2805360, 5494430, 1873650, 2633360, 5480620, 1913660, 2633360, 5584460, 2015960, 2322490, 5469290, 1945810, 2633360, 5480620, 1913660, 2633360, 5210340, 1802860, 3195910, 5216340, 1697020, 3243400, 5414570, 1854720, 2805360, 5210340, 1802860, 3195910, 5414570, 1854720, 2805360, 5395260, 1903180, 2810070, 5395260, 1903180, 2810070, 5414570, 1854720, 2805360, 5480620, 1913660, 2633360, 5395260, 1903180, 2810070, 5480620, 1913660, 2633360, 5469290, 1945810, 2633360, 5584460, 2015960, 2322490, 5463410, 1962240, 2633360, 5469290, 1945810, 2633360, 5181100, 1842260, 3220720, 5210340, 1802860, 3195910, 5395260, 1903180, 2810070, 5181100, 1842260, 3220720, 5395260, 1903180, 2810070, 5385040, 1928300, 2812520, 5385040, 1928300, 2812520, 5395260, 1903180, 2810070, 5469290, 1945810, 2633360, 5385040, 1928300, 2812520, 5469290, 1945810, 2633360, 5463410, 1962240, 2633360, 5457960, 1977360, 2633360, 5463410, 1962240, 2633360, 5584460, 2015960, 2322490, 5141e3, 1876600, 3264540, 5181100, 1842260, 3220720, 5385040, 1928300, 2812520, 5141e3, 1876600, 3264540, 5385040, 1928300, 2812520, 5375440, 1951600, 2814800, 5375440, 1951600, 2814800, 5385040, 1928300, 2812520, 5463410, 1962240, 2633360, 5375440, 1951600, 2814800, 5463410, 1962240, 2633360, 5457960, 1977360, 2633360, 5609350, 1494830, 2633360, 5683600, 1507120, 2462740, 5633270, 1600520, 2518420, 5609350, 1494830, 2633360, 5633270, 1600520, 2518420, 5586280, 1578850, 2633360, 5524120, 1550980, 2776190, 5208440, 1419550, 3385320, 5545750, 1483800, 2769820, 5545750, 1483800, 2769820, 5609350, 1494830, 2633360, 5586280, 1578850, 2633360, 5545750, 1483800, 2769820, 5586280, 1578850, 2633360, 5524120, 1550980, 2776190, 5633270, 1600520, 2518420, 5584680, 1584510, 2633360, 5586280, 1578850, 2633360, 5246680, 1476150, 3301580, 5208440, 1419550, 3385320, 5524120, 1550980, 2776190, 5246680, 1476150, 3301580, 5524120, 1550980, 2776190, 5520020, 1563400, 2777370, 5520020, 1563400, 2777370, 5524120, 1550980, 2776190, 5586280, 1578850, 2633360, 5520020, 1563400, 2777370, 5586280, 1578850, 2633360, 5584680, 1584510, 2633360, 5581050, 1597240, 2633360, 5584680, 1584510, 2633360, 5633270, 1600520, 2518420, 5233620, 1561360, 3283190, 5246680, 1476150, 3301580, 5520020, 1563400, 2777370, 5233620, 1561360, 3283190, 5520020, 1563400, 2777370, 5510530, 1591780, 2780080, 5510530, 1591780, 2780080, 5520020, 1563400, 2777370, 5584680, 1584510, 2633360, 5510530, 1591780, 2780080, 5584680, 1584510, 2633360, 5581050, 1597240, 2633360, 5708150, 1378980, 2480850, 5644590, 1355690, 2633360, 5646140, 1349230, 2633360, 5222600, 1213730, 3442680, 5236400, 1176550, 3434660, 5593310, 1324850, 2754830, 5222600, 1213730, 3442680, 5593310, 1324850, 2754830, 5590080, 1336210, 2755900, 5590080, 1336210, 2755900, 5593310, 1324850, 2754830, 5646140, 1349230, 2633360, 5590080, 1336210, 2755900, 5646140, 1349230, 2633360, 5644590, 1355690, 2633360, 5641530, 1368360, 2633360, 5644590, 1355690, 2633360, 5708150, 1378980, 2480850, 5214080, 1292160, 3427130, 5222600, 1213730, 3442680, 5590080, 1336210, 2755900, 5214080, 1292160, 3427130, 5590080, 1336210, 2755900, 5583590, 1358790, 2758010, 5583590, 1358790, 2758010, 5590080, 1336210, 2755900, 5644590, 1355690, 2633360, 5583590, 1358790, 2758010, 5644590, 1355690, 2633360, 5641530, 1368360, 2633360, 5641530, 1368360, 2633360, 5708150, 1378980, 2480850, 5717160, 1440710, 2424770, 5641530, 1368360, 2633360, 5717160, 1440710, 2424770, 5630250, 1414070, 2633360, 5572460, 1396640, 2761580, 5214080, 1292160, 3427130, 5583590, 1358790, 2758010, 5583590, 1358790, 2758010, 5641530, 1368360, 2633360, 5630250, 1414070, 2633360, 5583590, 1358790, 2758010, 5630250, 1414070, 2633360, 5572460, 1396640, 2761580, 5623350, 1441260, 2633360, 5630250, 1414070, 2633360, 5717160, 1440710, 2424770, 5208440, 1419550, 3385320, 5214080, 1292160, 3427130, 5572460, 1396640, 2761580, 5208440, 1419550, 3385320, 5572460, 1396640, 2761580, 5559290, 1440250, 2765690, 5559290, 1440250, 2765690, 5572460, 1396640, 2761580, 5630250, 1414070, 2633360, 5559290, 1440250, 2765690, 5630250, 1414070, 2633360, 5623350, 1441260, 2633360, 5623350, 1441260, 2633360, 5717160, 1440710, 2424770, 5683600, 1507120, 2462740, 5623350, 1441260, 2633360, 5683600, 1507120, 2462740, 5609350, 1494830, 2633360, 5208440, 1419550, 3385320, 5559290, 1440250, 2765690, 5545750, 1483800, 2769820, 5559290, 1440250, 2765690, 5623350, 1441260, 2633360, 5609350, 1494830, 2633360, 5559290, 1440250, 2765690, 5609350, 1494830, 2633360, 5545750, 1483800, 2769820, 5676650, 1214480, 2633360, 5725600, 1216960, 2524720, 5708150, 1378980, 2480850, 5676650, 1214480, 2633360, 5708150, 1378980, 2480850, 5646140, 1349230, 2633360, 5593310, 1324850, 2754830, 5236400, 1176550, 3434660, 5624220, 1211350, 2744200, 5624220, 1211350, 2744200, 5676650, 1214480, 2633360, 5646140, 1349230, 2633360, 5624220, 1211350, 2744200, 5646140, 1349230, 2633360, 5593310, 1324850, 2754830, 5686190, 1169010, 2633360, 5707350, 1167470, 2588190, 5725600, 1216960, 2524720, 5686190, 1169010, 2633360, 5725600, 1216960, 2524720, 5676650, 1214480, 2633360, 5236400, 1176550, 3434660, 5634290, 1172230, 2740550, 5624220, 1211350, 2744200, 5634290, 1172230, 2740550, 5686190, 1169010, 2633360, 5676650, 1214480, 2633360, 5634290, 1172230, 2740550, 5676650, 1214480, 2633360, 5624220, 1211350, 2744200, 5686190, 1169010, 2633360, 5687410, 1163020, 2633360, 5707350, 1167470, 2588190, 5236400, 1176550, 3434660, 5239070, 1064830, 3466690, 5639300, 1152330, 2738700, 5236400, 1176550, 3434660, 5639300, 1152330, 2738700, 5634290, 1172230, 2740550, 5634290, 1172230, 2740550, 5639300, 1152330, 2738700, 5687410, 1163020, 2633360, 5634290, 1172230, 2740550, 5687410, 1163020, 2633360, 5686190, 1169010, 2633360, 5570120, 957734, 2945960, 5599760, 950049, 2892130, 5629290, 963880, 2829950, 5502490, 956380, 3070020, 5548e3, 946731, 2990610, 5570120, 957734, 2945960, 5070020, 1858780, 3382800, 5107010, 1840680, 3337060, 5141e3, 1876600, 3264540, 5334760, 1001930, 3337970, 5368410, 941788, 3301570, 5390060, 955905, 3262260, 5718990, 1039710, 2616610, 5711650, 1037450, 2633360, 5713400, 1027790, 2633360, 5669640, 1024670, 2726850, 5415090, 951905, 3222010, 5676090, 995766, 2724170, 5713400, 1027790, 2633360, 5711650, 1037450, 2633360, 5669640, 1024670, 2726850, 5713400, 1027790, 2633360, 5669640, 1024670, 2726850, 5676090, 995766, 2724170, 5713400, 1027790, 2633360, 5676090, 995766, 2724170, 5699950, 999748, 2672750, 968131, 6266770, 683936, 1113770, 6235350, 746164, 1063580, 6254e3, 658779, 1127850, 6212090, 901688, 1129160, 6211850, 901688, 1113770, 6235350, 746164, 1127850, 6212090, 901688, 1113770, 6235350, 746164, 968131, 6266770, 683936, 1127850, 6212090, 901688, 1129360, 6211510, 903770, 1129160, 6211850, 901688, 968131, 6266770, 683936, 1027660, 6229450, 901688, 1127850, 6212090, 901688, 1075450, 6192530, 1081080, 1129360, 6211510, 903770, 1127850, 6212090, 901688, 1075450, 6192530, 1081080, 1127850, 6212090, 901688, 1027660, 6229450, 901688, 968131, 6266770, 683936, 990610, 6235450, 901688, 1027660, 6229450, 901688, 1002310, 6215110, 1020470, 1075450, 6192530, 1081080, 1027660, 6229450, 901688, 1002310, 6215110, 1020470, 1027660, 6229450, 901688, 990610, 6235450, 901688, 956053, 6240840, 901688, 990610, 6235450, 901688, 968131, 6266770, 683936, 953608, 6234980, 943529, 1002310, 6215110, 1020470, 990610, 6235450, 901688, 953608, 6234980, 943529, 990610, 6235450, 901688, 956053, 6240840, 901688, 956053, 6240840, 901688, 968131, 6266770, 683936, 903238, 6258760, 829516, 956053, 6240840, 901688, 903238, 6258760, 829516, 935188, 6244e3, 901688, 935188, 6244e3, 901688, 953608, 6234980, 943529, 956053, 6240840, 901688, 903238, 6258760, 829516, 968131, 6266770, 683936, 921739, 6270250, 715221, 4855310, 2727480, -3098820, 4885970, 2705920, -3069600, 4846630, 2688570, -3145750, 4846630, 2688570, -3145750, 4885970, 2705920, -3069600, 4838790, 2665470, -3177100, 4885970, 2705920, -3069600, 4920900, 2676470, -3039670, 4838790, 2665470, -3177100, 4838790, 2665470, -3177100, 4920900, 2676470, -3039670, 4856830, 2614160, -3192060, 4920900, 2676470, -3039670, 4849400, 2590120, -3222620, 4856830, 2614160, -3192060, 4860510, 2557170, -3232100, 4938970, 2574620, -3097400, 4931860, 2512830, -3158460, 4932970, 2631120, -3059500, 4938970, 2574620, -3097400, 4860510, 2557170, -3232100, 4849400, 2590120, -3222620, 4932970, 2631120, -3059500, 4860510, 2557170, -3232100, 4920900, 2676470, -3039670, 4932970, 2631120, -3059500, 4849400, 2590120, -3222620, 3427980, 1558660, 5130570, 3245720, 1436840, 5281420, 3453230, 1500370, 5131010, 3245720, 1436840, 5281420, 3433970, 1474930, 5151140, 3453230, 1500370, 5131010, 3245720, 1436840, 5281420, 3393190, 1423430, 5192210, 3433970, 1474930, 5151140, 3433970, 1474930, 5151140, 3393190, 1423430, 5192210, 3438130, 1440390, 5158090, 3393190, 1423430, 5192210, 3418810, 1426690, 5174600, 3438130, 1440390, 5158090, 3367190, 1608690, 5155160, 3226110, 1504420, 5274660, 3212300, 1488420, 5287520, 3367190, 1608690, 5155160, 3217350, 1536870, 5270680, 3226110, 1504420, 5274660, 3314540, 1600050, 5191600, 3217350, 1536870, 5270680, 3367190, 1608690, 5155160, 3231130, 1610580, 5240360, 3217350, 1536870, 5270680, 3314540, 1600050, 5191600, 3265190, 1634250, 5212040, 3231130, 1610580, 5240360, 3314540, 1600050, 5191600, 3212300, 1488420, 5287520, 3245720, 1436840, 5281420, 3427980, 1558660, 5130570, 3367190, 1608690, 5155160, 3212300, 1488420, 5287520, 3427980, 1558660, 5130570, 3390700, 1391710, 5202360, 3280890, 1338980, 5285380, 3400660, 1323700, 5213520, 3245720, 1436840, 5281420, 3280890, 1338980, 5285380, 3390700, 1391710, 5202360, 3245720, 1436840, 5281420, 3390700, 1391710, 5202360, 3393190, 1423430, 5192210, 3280890, 1338980, 5285380, 3333470, 1283330, 5266380, 3400660, 1323700, 5213520, 4129180, 447575, 4824240, 4127490, 410090, 4828990, 4133160, 426957, 4822720, 4129180, 447575, 4824240, 4079300, 413096, 4869240, 4127490, 410090, 4828990, 4129180, 447575, 4824240, 4074170, 431309, 4871940, 4079300, 413096, 4869240, 4091780, 447599, 4855790, 4074170, 431309, 4871940, 4129180, 447575, 4824240, 3060050, 1607280, 5342380, 3067380, 1593250, 5342380, 3098380, 1637410, 5311250, 3060050, 1607280, 5342380, 3098380, 1637410, 5311250, 3060730, 1611700, 5340670, 3060050, 1607280, 5342380, 3054990, 1576e3, 5354500, 3067380, 1593250, 5342380, 3067380, 1593250, 5342380, 3068010, 1592040, 5342380, 3137430, 1680640, 5274950, 3067380, 1593250, 5342380, 3137430, 1680640, 5274950, 3098380, 1637410, 5311250, 3067380, 1593250, 5342380, 3054990, 1576e3, 5354500, 3068010, 1592040, 5342380, 3072430, 1583490, 5342380, 3200080, 1637740, 5250910, 3137430, 1680640, 5274950, 3072430, 1583490, 5342380, 3137430, 1680640, 5274950, 3068010, 1592040, 5342380, 3068010, 1592040, 5342380, 3054990, 1576e3, 5354500, 3072430, 1583490, 5342380, 3074200, 1580060, 5342380, 3231130, 1610580, 5240360, 3200080, 1637740, 5250910, 3074200, 1580060, 5342380, 3200080, 1637740, 5250910, 3072430, 1583490, 5342380, 3054990, 1576e3, 5354500, 3074200, 1580060, 5342380, 3072430, 1583490, 5342380, 3074200, 1580060, 5342380, 3094210, 1540490, 5342380, 3231130, 1610580, 5240360, 3054990, 1576e3, 5354500, 3077200, 1531790, 5354610, 3094210, 1540490, 5342380, 3054990, 1576e3, 5354500, 3094210, 1540490, 5342380, 3074200, 1580060, 5342380, 3231130, 1610580, 5240360, 3094210, 1540490, 5342380, 3111080, 1506130, 5342380, 3077200, 1531790, 5354610, 3068370, 1470300, 5376720, 3111080, 1506130, 5342380, 3077200, 1531790, 5354610, 3111080, 1506130, 5342380, 3094210, 1540490, 5342380, 3117690, 1492400, 5342380, 3217350, 1536870, 5270680, 3231130, 1610580, 5240360, 3117690, 1492400, 5342380, 3231130, 1610580, 5240360, 3111080, 1506130, 5342380, 3111080, 1506130, 5342380, 3068370, 1470300, 5376720, 3117690, 1492400, 5342380, 3117690, 1492400, 5342380, 3124890, 1477260, 5342380, 3217350, 1536870, 5270680, 3068370, 1470300, 5376720, 3069050, 1441870, 5383980, 3124890, 1477260, 5342380, 3068370, 1470300, 5376720, 3124890, 1477260, 5342380, 3117690, 1492400, 5342380, 3130050, 1466310, 5342380, 3226110, 1504420, 5274660, 3217350, 1536870, 5270680, 3130050, 1466310, 5342380, 3217350, 1536870, 5270680, 3124890, 1477260, 5342380, 3124890, 1477260, 5342380, 3069050, 1441870, 5383980, 3130050, 1466310, 5342380, 3131820, 1462520, 5342380, 3212300, 1488420, 5287520, 3226110, 1504420, 5274660, 3131820, 1462520, 5342380, 3226110, 1504420, 5274660, 3130050, 1466310, 5342380, 3069050, 1441870, 5383980, 3131820, 1462520, 5342380, 3130050, 1466310, 5342380, 3180880, 1352510, 5342380, 3182550, 1348560, 5342380, 3245720, 1436840, 5281420, 3180880, 1352510, 5342380, 3245720, 1436840, 5281420, 3197040, 1378090, 5326280, 3180880, 1352510, 5342380, 3151100, 1306790, 5371130, 3182550, 1348560, 5342380, 3175770, 1421970, 5327460, 3197040, 1378090, 5326280, 3245720, 1436840, 5281420, 3212300, 1488420, 5287520, 3175770, 1421970, 5327460, 3245720, 1436840, 5281420, 3153160, 1415930, 5342380, 3175770, 1421970, 5327460, 3212300, 1488420, 5287520, 3153160, 1415930, 5342380, 3212300, 1488420, 5287520, 3144920, 1434130, 5342380, 3144920, 1434130, 5342380, 3105340, 1402960, 5373510, 3153160, 1415930, 5342380, 3131820, 1462520, 5342380, 3144920, 1434130, 5342380, 3212300, 1488420, 5287520, 3069050, 1441870, 5383980, 3105340, 1402960, 5373510, 3144920, 1434130, 5342380, 3069050, 1441870, 5383980, 3144920, 1434130, 5342380, 3131820, 1462520, 5342380, 3280890, 1338980, 5285380, 3267550, 1260210, 5312760, 3333470, 1283330, 5266380, 3216570, 1265290, 5342380, 3267550, 1260210, 5312760, 3280890, 1338980, 5285380, 3216570, 1265290, 5342380, 3280890, 1338980, 5285380, 3212370, 1275900, 5342380, 3212370, 1275900, 5342380, 3202020, 1266600, 5350740, 3216570, 1265290, 5342380, 3195340, 1317980, 5342380, 3212370, 1275900, 5342380, 3280890, 1338980, 5285380, 3151100, 1306790, 5371130, 3202020, 1266600, 5350740, 3212370, 1275900, 5342380, 3151100, 1306790, 5371130, 3212370, 1275900, 5342380, 3195340, 1317980, 5342380, 3195340, 1317980, 5342380, 3280890, 1338980, 5285380, 3245720, 1436840, 5281420, 3195340, 1317980, 5342380, 3245720, 1436840, 5281420, 3182550, 1348560, 5342380, 3182550, 1348560, 5342380, 3151100, 1306790, 5371130, 3195340, 1317980, 5342380, 5588960, -851796, 2942830, 5527390, -843255, 3058510, 5586670, -866643, 2942830, 5279080, -803803, 3476270, 5586670, -866643, 2942830, 5527390, -843255, 3058510, 5509350, -682245, 3129890, 5279080, -803803, 3476270, 5527390, -843255, 3058510, 5509350, -682245, 3129890, 5264640, -707521, 3518540, 5279080, -803803, 3476270, 5247970, -636239, 3556600, 5264640, -707521, 3518540, 5509350, -682245, 3129890, 5397150, -123223, 3385120, 5213610, -237142, 3654130, 5402870, -246912, 3369290, 5397150, -123223, 3385120, 5215950, -197633, 3653160, 5213610, -237142, 3654130, 5397150, -123223, 3385120, 5295810, -160270, 3539060, 5215950, -197633, 3653160, 5397150, -123223, 3385120, 5361100, -129904, 3441300, 5295810, -160270, 3539060, 5374390, -105497, 3421480, 5361100, -129904, 3441300, 5397150, -123223, 3385120, 5422400, -290722, 3334490, 5194350, -330447, 3674120, 5424250, -345780, 3326260, 5213610, -237142, 3654130, 5194350, -330447, 3674120, 5422400, -290722, 3334490, 5213610, -237142, 3654130, 5422400, -290722, 3334490, 5402870, -246912, 3369290, 5512080, -585241, 3144580, 5190150, -567895, 3651110, 5247970, -636239, 3556600, 5153880, -535328, 3706620, 5190150, -567895, 3651110, 5512080, -585241, 3144580, 5505110, -505086, 3170410, 5153880, -535328, 3706620, 5512080, -585241, 3144580, 5160640, -469098, 3706180, 5153880, -535328, 3706620, 5505110, -505086, 3170410, 5480490, -465956, 3218370, 5160640, -469098, 3706180, 5505110, -505086, 3170410, 5192580, -416965, 3667860, 5160640, -469098, 3706180, 5480490, -465956, 3218370, 5466500, -352587, 3256100, 5192580, -416965, 3667860, 5480490, -465956, 3218370, 5194350, -330447, 3674120, 5192580, -416965, 3667860, 5466500, -352587, 3256100, 5194350, -330447, 3674120, 5466500, -352587, 3256100, 5424250, -345780, 3326260, 5279080, -803803, 3476270, 5309880, -869592, 3413370, 5586670, -866643, 2942830, 5614010, -868581, 2890130, 5586670, -866643, 2942830, 5309880, -869592, 3413370, 5614010, -868581, 2890130, 5309880, -869592, 3413370, 5605910, -929364, 2886950, 5309880, -869592, 3413370, 5338610, -887132, 3364010, 5605910, -929364, 2886950, 5338610, -887132, 3364010, 5381880, -931036, 3282770, 5455030, -919203, 3164e3, 5605910, -929364, 2886950, 5338610, -887132, 3364010, 5455030, -919203, 3164e3, 5605910, -929364, 2886950, 5455030, -919203, 3164e3, 5611870, -962818, 2864470, 5455030, -919203, 3164e3, 5604060, -1007260, 2864470, 5611870, -962818, 2864470, 5455030, -919203, 3164e3, 5485910, -1006810, 3083460, 5604060, -1007260, 2864470, 5580570, -1124490, 2866700, 5511260, -1140210, 2991040, 5611810, -1164010, 2789420, 5490930, -1057490, 3057610, 5511260, -1140210, 2991040, 5580570, -1124490, 2866700, 5591180, -1041440, 2877310, 5490930, -1057490, 3057610, 5580570, -1124490, 2866700, 5485910, -1006810, 3083460, 5490930, -1057490, 3057610, 5591180, -1041440, 2877310, 5604060, -1007260, 2864470, 5485910, -1006810, 3083460, 5591180, -1041440, 2877310, 5657350, -1254310, 2655970, 5497650, -1230760, 2980240, 5506290, -1285400, 2941230, 5511260, -1140210, 2991040, 5497650, -1230760, 2980240, 5657350, -1254310, 2655970, 5511260, -1140210, 2991040, 5657350, -1254310, 2655970, 5608860, -1195350, 2782140, 5511260, -1140210, 2991040, 5608860, -1195350, 2782140, 5611810, -1164010, 2789420, 5657350, -1254310, 2655970, 5506290, -1285400, 2941230, 5541850, -1358520, 2840530, 5661060, -1285160, 2633360, 5636160, -1390310, 2633360, 5672870, -1402960, 2546980, 5541850, -1358520, 2840530, 5636160, -1390310, 2633360, 5661060, -1285160, 2633360, 5541850, -1358520, 2840530, 5661060, -1285160, 2633360, 5657350, -1254310, 2655970, 5632940, -1403310, 2633360, 5685540, -1430470, 2503360, 5688300, -1417290, 2504580, 5632940, -1403310, 2633360, 5688300, -1417290, 2504580, 5672870, -1402960, 2546980, 5632940, -1403310, 2633360, 5672870, -1402960, 2546980, 5636160, -1390310, 2633360, 5688300, -1417290, 2504580, 5685540, -1430470, 2503360, 5722620, -1450300, 2406230, 5541850, -1358520, 2840530, 5632940, -1403310, 2633360, 5636160, -1390310, 2633360, 5632940, -1403310, 2633360, 5624110, -1438280, 2633360, 5682330, -1445580, 2501970, 5632940, -1403310, 2633360, 5682330, -1445580, 2501970, 5685540, -1430470, 2503360, 5685540, -1430470, 2503360, 5682330, -1445580, 2501970, 5722620, -1450300, 2406230, 5541850, -1358520, 2840530, 5543090, -1427340, 2804370, 5624110, -1438280, 2633360, 5541850, -1358520, 2840530, 5624110, -1438280, 2633360, 5632940, -1403310, 2633360, 5612830, -1481690, 2633360, 5612170, -1484180, 2633360, 5671140, -1496870, 2497220, 5612830, -1481690, 2633360, 5671140, -1496870, 2497220, 5671460, -1495450, 2497360, 5741300, -1511670, 2323050, 5671460, -1495450, 2497360, 5671140, -1496870, 2497220, 5562950, -1469890, 2742790, 5586790, -1478660, 2689460, 5612170, -1484180, 2633360, 5562950, -1469890, 2742790, 5612170, -1484180, 2633360, 5612830, -1481690, 2633360, 5618890, -1458550, 2633360, 5612830, -1481690, 2633360, 5671460, -1495450, 2497360, 5618890, -1458550, 2633360, 5671460, -1495450, 2497360, 5674400, -1482170, 2498590, 5674400, -1482170, 2498590, 5671460, -1495450, 2497360, 5741300, -1511670, 2323050, 5543090, -1427340, 2804370, 5562950, -1469890, 2742790, 5612830, -1481690, 2633360, 5543090, -1427340, 2804370, 5612830, -1481690, 2633360, 5618890, -1458550, 2633360, 5618890, -1458550, 2633360, 5674400, -1482170, 2498590, 5675870, -1475460, 2499200, 5618890, -1458550, 2633360, 5675870, -1475460, 2499200, 5619840, -1454880, 2633360, 5674400, -1482170, 2498590, 5741300, -1511670, 2323050, 5730200, -1495900, 2360130, 5674400, -1482170, 2498590, 5730200, -1495900, 2360130, 5675870, -1475460, 2499200, 5543090, -1427340, 2804370, 5618890, -1458550, 2633360, 5619840, -1454880, 2633360, 5619840, -1454880, 2633360, 5675870, -1475460, 2499200, 5682330, -1445580, 2501970, 5619840, -1454880, 2633360, 5682330, -1445580, 2501970, 5624110, -1438280, 2633360, 5675870, -1475460, 2499200, 5730200, -1495900, 2360130, 5722620, -1450300, 2406230, 5675870, -1475460, 2499200, 5722620, -1450300, 2406230, 5682330, -1445580, 2501970, 5624110, -1438280, 2633360, 5543090, -1427340, 2804370, 5619840, -1454880, 2633360, 5741300, -1511670, 2323050, 5663300, -1728550, 2362670, 5680560, -1737050, 2314820, 5741300, -1511670, 2323050, 5663910, -1687310, 2390650, 5663300, -1728550, 2362670, 5741300, -1511670, 2323050, 5652330, -1648780, 2443990, 5663910, -1687310, 2390650, 5651220, -1583150, 2489220, 5616510, -1608660, 2550270, 5638940, -1633530, 2484550, 5638940, -1633530, 2484550, 5652330, -1648780, 2443990, 5741300, -1511670, 2323050, 5638940, -1633530, 2484550, 5741300, -1511670, 2323050, 5651220, -1583150, 2489220, 5604220, -1546400, 2614570, 5616510, -1608660, 2550270, 5651220, -1583150, 2489220, 5604220, -1546400, 2614570, 5651220, -1583150, 2489220, 5663020, -1532760, 2493900, 5741300, -1511670, 2323050, 5663020, -1532760, 2493900, 5651220, -1583150, 2489220, 5606080, -1511510, 2630820, 5604220, -1546400, 2614570, 5663020, -1532760, 2493900, 5606080, -1511510, 2630820, 5663020, -1532760, 2493900, 5667680, -1512290, 2495800, 5741300, -1511670, 2323050, 5667680, -1512290, 2495800, 5663020, -1532760, 2493900, 5667680, -1512290, 2495800, 5671140, -1496870, 2497220, 5612170, -1484180, 2633360, 5667680, -1512290, 2495800, 5612170, -1484180, 2633360, 5605260, -1510100, 2633360, 5667680, -1512290, 2495800, 5605260, -1510100, 2633360, 5606080, -1511510, 2630820, 5741300, -1511670, 2323050, 5671140, -1496870, 2497220, 5667680, -1512290, 2495800, 5612170, -1484180, 2633360, 5586790, -1478660, 2689460, 5605260, -1510100, 2633360, 5616510, -1608660, 2550270, 5635250, -1648320, 2483160, 5638940, -1633530, 2484550, 5635250, -1648320, 2483160, 5636500, -1651050, 2478530, 5652330, -1648780, 2443990, 5635250, -1648320, 2483160, 5652330, -1648780, 2443990, 5638940, -1633530, 2484550, 5663300, -1728550, 2362670, 5679970, -1738750, 2314980, 5680560, -1737050, 2314820, 5512080, -585241, 3144580, 5247970, -636239, 3556600, 5509350, -682245, 3129890, 5295810, -160270, 3539060, 5257710, -164586, 3594840, 5215950, -197633, 3653160, 3800210, 2186010, 4617e3, 3795550, 2152640, 4636350, 3813350, 2187310, 4605620, 3813350, 2187310, 4605620, 3795550, 2152640, 4636350, 3828590, 2189110, 4592190, 3828590, 2189110, 4592190, 3795550, 2152640, 4636350, 3848850, 2148470, 4594430, 3795550, 2152640, 4636350, 3771300, 2126330, 4667960, 3848850, 2148470, 4594430, 3856200, 2125490, 4598930, 3742900, 2046710, 4725650, 3898750, 2130970, 4560610, 3773030, 2095810, 4680260, 3742900, 2046710, 4725650, 3856200, 2125490, 4598930, 3842790, 2136420, 4605030, 3773030, 2095810, 4680260, 3856200, 2125490, 4598930, 3771300, 2126330, 4667960, 3773030, 2095810, 4680260, 3842790, 2136420, 4605030, 3771300, 2126330, 4667960, 3842790, 2136420, 4605030, 3848850, 2148470, 4594430, 3946160, 2118900, 4525560, 3886690, 2080530, 4593840, 3920730, 2089470, 4560970, 3754770, 2018310, 4728440, 3886690, 2080530, 4593840, 3946160, 2118900, 4525560, 3929250, 2132100, 4534010, 3754770, 2018310, 4728440, 3946160, 2118900, 4525560, 3742900, 2046710, 4725650, 3754770, 2018310, 4728440, 3929250, 2132100, 4534010, 3742900, 2046710, 4725650, 3929250, 2132100, 4534010, 3898750, 2130970, 4560610, 3754770, 2018310, 4728440, 3856600, 2061650, 4627370, 3886690, 2080530, 4593840, 3754770, 2018310, 4728440, 3834220, 2000320, 4672360, 3856600, 2061650, 4627370, 3754770, 2018310, 4728440, 3757480, 1957890, 4751470, 3834220, 2000320, 4672360, 3834220, 2000320, 4672360, 3757480, 1957890, 4751470, 3814440, 1963210, 4703970, 3757480, 1957890, 4751470, 3803160, 1931480, 4726040, 3814440, 1963210, 4703970, 3803160, 1931480, 4726040, 3787280, 1917890, 4744170, 3806170, 1907590, 4733260, 3757480, 1957890, 4751470, 3787280, 1917890, 4744170, 3803160, 1931480, 4726040, 3866180, 2137210, 4585180, 3856200, 2125490, 4598930, 3898750, 2130970, 4560610, 3746060, 2086970, 4705630, 3742900, 2046710, 4725650, 3773030, 2095810, 4680260, 3813290, 2203800, 4597850, 3813350, 2187310, 4605620, 3828590, 2189110, 4592190, 4090210, 4066520, -2713770, 4120310, 4089300, -2633360, 4121710, 4087880, -2633360, 4294190, 4214650, -2108870, 4283780, 4191220, -2175230, 4269050, 4182360, -2220460, 4294190, 4214650, -2108870, 4269050, 4182360, -2220460, 4260700, 4191470, -2219340, 4260700, 4191470, -2219340, 4269050, 4182360, -2220460, 4121710, 4087880, -2633360, 4260700, 4191470, -2219340, 4121710, 4087880, -2633360, 4120310, 4089300, -2633360, 4116040, 4093590, -2633360, 4120310, 4089300, -2633360, 4090210, 4066520, -2713770, 4336690, 4328360, -1765800, 4294190, 4214650, -2108870, 4260700, 4191470, -2219340, 4336690, 4328360, -1765800, 4260700, 4191470, -2219340, 4235020, 4219220, -2215930, 4235020, 4219220, -2215930, 4260700, 4191470, -2219340, 4120310, 4089300, -2633360, 4235020, 4219220, -2215930, 4120310, 4089300, -2633360, 4116040, 4093590, -2633360, 4116040, 4093590, -2633360, 4090210, 4066520, -2713770, 4040590, 4098770, -2739310, 4116040, 4093590, -2633360, 4040590, 4098770, -2739310, 4079150, 4130360, -2633360, 4216330, 4239200, -2213460, 4336690, 4328360, -1765800, 4235020, 4219220, -2215930, 4235020, 4219220, -2215930, 4116040, 4093590, -2633360, 4079150, 4130360, -2633360, 4235020, 4219220, -2215930, 4079150, 4130360, -2633360, 4216330, 4239200, -2213460, 4074650, 4134790, -2633360, 4079150, 4130360, -2633360, 4040590, 4098770, -2739310, 4298750, 4374850, -1744e3, 4336690, 4328360, -1765800, 4216330, 4239200, -2213460, 4298750, 4374850, -1744e3, 4216330, 4239200, -2213460, 4194460, 4262330, -2210580, 4194460, 4262330, -2210580, 4216330, 4239200, -2213460, 4079150, 4130360, -2633360, 4194460, 4262330, -2210580, 4079150, 4130360, -2633360, 4074650, 4134790, -2633360, 4074650, 4134790, -2633360, 4040590, 4098770, -2739310, 3991560, 4174370, -2696980, 4074650, 4134790, -2633360, 3991560, 4174370, -2696980, 4015850, 4191920, -2633360, 4164450, 4293700, -2206660, 4298750, 4374850, -1744e3, 4194460, 4262330, -2210580, 4194460, 4262330, -2210580, 4074650, 4134790, -2633360, 4015850, 4191920, -2633360, 4194460, 4262330, -2210580, 4015850, 4191920, -2633360, 4164450, 4293700, -2206660, 3991560, 4174370, -2696980, 4013950, 4193750, -2633360, 4015850, 4191920, -2633360, 4274200, 4406480, -1724750, 4298750, 4374850, -1744e3, 4164450, 4293700, -2206660, 4274200, 4406480, -1724750, 4164450, 4293700, -2206660, 4150170, 4308460, -2204800, 4150170, 4308460, -2204800, 4164450, 4293700, -2206660, 4015850, 4191920, -2633360, 4150170, 4308460, -2204800, 4015850, 4191920, -2633360, 4013950, 4193750, -2633360, 4011780, 4195820, -2633360, 4013950, 4193750, -2633360, 3991560, 4174370, -2696980, 4240580, 4439400, -1723310, 4274200, 4406480, -1724750, 4150170, 4308460, -2204800, 4240580, 4439400, -1723310, 4150170, 4308460, -2204800, 4133710, 4325350, -2202680, 4133710, 4325350, -2202680, 4150170, 4308460, -2204800, 4013950, 4193750, -2633360, 4133710, 4325350, -2202680, 4013950, 4193750, -2633360, 4011780, 4195820, -2633360, 4158280, 4021180, -2677900, 4174240, 4034230, -2633360, 4189330, 4018560, -2633360, 4288140, 4125660, -2288270, 4195250, 4018010, -2624820, 4189330, 4018560, -2633360, 4288140, 4125660, -2288270, 4189330, 4018560, -2633360, 4174240, 4034230, -2633360, 4158280, 4021180, -2677900, 4174130, 4034350, -2633360, 4174240, 4034230, -2633360, 4297460, 4135020, -2253870, 4288140, 4125660, -2288270, 4174240, 4034230, -2633360, 4297460, 4135020, -2253870, 4174240, 4034230, -2633360, 4174130, 4034350, -2633360, 4170920, 4037660, -2633360, 4174130, 4034350, -2633360, 4158280, 4021180, -2677900, 4283780, 4191220, -2175230, 4292350, 4156770, -2223580, 4273840, 4177120, -2221100, 4292350, 4156770, -2223580, 4297460, 4135020, -2253870, 4174130, 4034350, -2633360, 4292350, 4156770, -2223580, 4174130, 4034350, -2633360, 4170920, 4037660, -2633360, 4292350, 4156770, -2223580, 4170920, 4037660, -2633360, 4273840, 4177120, -2221100, 4170920, 4037660, -2633360, 4158280, 4021180, -2677900, 4090210, 4066520, -2713770, 4170920, 4037660, -2633360, 4090210, 4066520, -2713770, 4121710, 4087880, -2633360, 4269050, 4182360, -2220460, 4283780, 4191220, -2175230, 4273840, 4177120, -2221100, 4273840, 4177120, -2221100, 4170920, 4037660, -2633360, 4121710, 4087880, -2633360, 4273840, 4177120, -2221100, 4121710, 4087880, -2633360, 4269050, 4182360, -2220460, 4228770, 4040790, -2535120, 4316100, 4086290, -2306140, 4278790, 4038580, -2453960, 4288140, 4125660, -2288270, 4316100, 4086290, -2306140, 4228770, 4040790, -2535120, 4288140, 4125660, -2288270, 4228770, 4040790, -2535120, 4195250, 4018010, -2624820, 3951730, 4552650, -2075780, 4097260, 4690750, -1370150, 4089080, 4678340, -1435020, 4076950, 4722310, -1321800, 4097260, 4690750, -1370150, 3951730, 4552650, -2075780, 3947020, 4610860, -1953450, 4076950, 4722310, -1321800, 3951730, 4552650, -2075780, 4041590, 4739370, -1368190, 4076950, 4722310, -1321800, 3947020, 4610860, -1953450, 4041590, 4739370, -1368190, 3947020, 4610860, -1953450, 3960280, 4636670, -1864050, 3974420, 4681940, -1715880, 4041590, 4739370, -1368190, 3960280, 4636670, -1864050, 3942730, 4661390, -1839600, 3974420, 4681940, -1715880, 3960280, 4636670, -1864050, 3944180, 4677780, -1794650, 3974420, 4681940, -1715880, 3942730, 4661390, -1839600, 3968180, 4488020, -2181700, 4139790, 4598540, -1542770, 4011100, 4447050, -2187070, 4011100, 4447050, -2187070, 3953240, 4379860, -2414550, 3956560, 4479710, -2219310, 4011100, 4447050, -2187070, 3956560, 4479710, -2219310, 3968180, 4488020, -2181700, 4122020, 4625450, -1509790, 4139790, 4598540, -1542770, 3968180, 4488020, -2181700, 4122020, 4625450, -1509790, 3968180, 4488020, -2181700, 3966890, 4489230, -2181550, 3956560, 4479710, -2219310, 3966890, 4489230, -2181550, 3968180, 4488020, -2181700, 4089080, 4678340, -1435020, 4122020, 4625450, -1509790, 3966890, 4489230, -2181550, 4089080, 4678340, -1435020, 3966890, 4489230, -2181550, 3964720, 4491280, -2181280, 3964720, 4491280, -2181280, 3966890, 4489230, -2181550, 3956560, 4479710, -2219310, 4089080, 4678340, -1435020, 3964720, 4491280, -2181280, 3955550, 4499910, -2180140, 4089080, 4678340, -1435020, 3955550, 4499910, -2180140, 3951730, 4552650, -2075780, 3955550, 4499910, -2180140, 3964720, 4491280, -2181280, 3956560, 4479710, -2219310, 4139790, 4598540, -1542770, 4154540, 4566600, -1596700, 4017370, 4440990, -2187860, 4139790, 4598540, -1542770, 4017370, 4440990, -2187860, 4011100, 4447050, -2187070, 4011100, 4447050, -2187070, 4017370, 4440990, -2187860, 3953240, 4379860, -2414550, 4017370, 4440990, -2187860, 4154540, 4566600, -1596700, 4036750, 4422170, -2190300, 4036750, 4422170, -2190300, 3941680, 4308780, -2556210, 3953240, 4379860, -2414550, 4036750, 4422170, -2190300, 3953240, 4379860, -2414550, 4017370, 4440990, -2187860, 3940500, 4262840, -2633360, 3950240, 4253810, -2633360, 3939470, 4238750, -2673210, 4154540, 4566600, -1596700, 4054380, 4404890, -2192520, 4036750, 4422170, -2190300, 4054380, 4404890, -2192520, 3950240, 4253810, -2633360, 3940500, 4262840, -2633360, 4054380, 4404890, -2192520, 3940500, 4262840, -2633360, 3941680, 4308780, -2556210, 4054380, 4404890, -2192520, 3941680, 4308780, -2556210, 4036750, 4422170, -2190300, 3950240, 4253810, -2633360, 3952620, 4251600, -2633360, 3939470, 4238750, -2673210, 4154540, 4566600, -1596700, 4207720, 4493670, -1662560, 4082560, 4376980, -2196100, 4154540, 4566600, -1596700, 4082560, 4376980, -2196100, 4054380, 4404890, -2192520, 4054380, 4404890, -2192520, 4082560, 4376980, -2196100, 3952620, 4251600, -2633360, 4054380, 4404890, -2192520, 3952620, 4251600, -2633360, 3950240, 4253810, -2633360, 4011780, 4195820, -2633360, 3991560, 4174370, -2696980, 3939470, 4238750, -2673210, 4011780, 4195820, -2633360, 3939470, 4238750, -2673210, 3954490, 4249860, -2633360, 4104300, 4355190, -2198890, 4240580, 4439400, -1723310, 4133710, 4325350, -2202680, 4133710, 4325350, -2202680, 4011780, 4195820, -2633360, 3954490, 4249860, -2633360, 4133710, 4325350, -2202680, 3954490, 4249860, -2633360, 4104300, 4355190, -2198890, 3939470, 4238750, -2673210, 3952620, 4251600, -2633360, 3954490, 4249860, -2633360, 4207720, 4493670, -1662560, 4240580, 4439400, -1723310, 4104300, 4355190, -2198890, 4207720, 4493670, -1662560, 4104300, 4355190, -2198890, 4082560, 4376980, -2196100, 4082560, 4376980, -2196100, 4104300, 4355190, -2198890, 3954490, 4249860, -2633360, 4082560, 4376980, -2196100, 3954490, 4249860, -2633360, 3952620, 4251600, -2633360, 4294190, 4214650, -2108870, 4369090, 4265480, -1837010, 4323570, 4209250, -2059370, 4294190, 4214650, -2108870, 4373370, 4289680, -1769710, 4369090, 4265480, -1837010, 4336690, 4328360, -1765800, 4373370, 4289680, -1769710, 4294190, 4214650, -2108870, 4369090, 4265480, -1837010, 4381900, 4226100, -1896170, 4353500, 4210450, -1993240, 4369090, 4265480, -1837010, 4353500, 4210450, -1993240, 4323570, 4209250, -2059370, 3917430, 4748250, -1664300, 3947420, 4740770, -1614310, 3916630, 4730540, -1715440, 3916630, 4730540, -1715440, 3947420, 4740770, -1614310, 3925520, 4711600, -1746760, 3947420, 4740770, -1614310, 3981620, 4754630, -1485250, 3925520, 4711600, -1746760, 3925520, 4711600, -1746760, 3981620, 4754630, -1485250, 3964700, 4701670, -1684340, 3981620, 4754630, -1485250, 4012910, 4750150, -1414120, 3964700, 4701670, -1684340, 3964700, 4701670, -1684340, 4012910, 4750150, -1414120, 3974420, 4681940, -1715880, 4012910, 4750150, -1414120, 4041590, 4739370, -1368190, 3974420, 4681940, -1715880, 4122020, 4625450, -1509790, 4158320, 4597100, -1496880, 4139790, 4598540, -1542770, 4316100, 4086290, -2306140, 4307360, 4052560, -2380300, 4278790, 4038580, -2453960, -2352280, -5169720, 2892240, -2348930, -5137610, 2951180, -2384570, -5117930, 2956740, -2307660, -5135030, 2987750, -2348930, -5137610, 2951180, -2352280, -5169720, 2892240, -2301390, -5205900, 2868350, -2307660, -5135030, 2987750, -2352280, -5169720, 2892240, -2301390, -5205900, 2868350, -2294630, -5114860, 3031750, -2307660, -5135030, 2987750, -2232780, -5113300, 3079870, -2294630, -5114860, 3031750, -2301390, -5205900, 2868350, -2232780, -5113300, 3079870, -2283360, -5049800, 3146380, -2294630, -5114860, 3031750, -2144730, -5397410, 2627200, -2146420, -5393720, 2633360, -2155170, -5390220, 2633360, -2172300, -5336630, 2726180, -2188360, -5367220, 2652780, -2155170, -5390220, 2633360, -2172300, -5336630, 2726180, -2155170, -5390220, 2633360, -2146420, -5393720, 2633360, -2143500, -5394880, 2633360, -2146420, -5393720, 2633360, -2144730, -5397410, 2627200, -2101170, -5302630, 2844880, -2172300, -5336630, 2726180, -2146420, -5393720, 2633360, -2101170, -5302630, 2844880, -2146420, -5393720, 2633360, -2143500, -5394880, 2633360, -2143500, -5394880, 2633360, -2144730, -5397410, 2627200, -2084500, -5444500, 2578380, -2143500, -5394880, 2633360, -2084500, -5444500, 2578380, -2088500, -5416410, 2633360, -2088500, -5416410, 2633360, -2101170, -5302630, 2844880, -2143500, -5394880, 2633360, -2084500, -5444500, 2578380, -2085570, -5417540, 2633360, -2088500, -5416410, 2633360, -2087020, -5357070, 2752410, -2101170, -5302630, 2844880, -2088500, -5416410, 2633360, -2087020, -5357070, 2752410, -2088500, -5416410, 2633360, -2085570, -5417540, 2633360, -2084500, -5444500, 2578380, -2077150, -5420770, 2633360, -2085570, -5417540, 2633360, -2066710, -5387330, 2708620, -2087020, -5357070, 2752410, -2085570, -5417540, 2633360, -2066710, -5387330, 2708620, -2085570, -5417540, 2633360, -2077150, -5420770, 2633360, -1946740, -5525290, 2513850, -1975010, -5494220, 2559170, -1951660, -5531860, 2495630, -1951660, -5531860, 2495630, -1975010, -5494220, 2559170, -1997650, -5532330, 2458180, -1975010, -5494220, 2559170, -2014660, -5525930, 2458670, -1997650, -5532330, 2458180, -1975010, -5494220, 2559170, -2006350, -5461030, 2605120, -2014660, -5525930, 2458670, -2060580, -5427090, 2633360, -2077150, -5420770, 2633360, -2084500, -5444500, 2578380, -2048320, -5417860, 2661590, -2066710, -5387330, 2708620, -2077150, -5420770, 2633360, -2048320, -5417860, 2661590, -2077150, -5420770, 2633360, -2060580, -5427090, 2633360, -2060580, -5427090, 2633360, -2084500, -5444500, 2578380, -2051680, -5442540, 2608460, -2060580, -5427090, 2633360, -2051680, -5442540, 2608460, -2050160, -5431040, 2633360, -2050160, -5431040, 2633360, -2048320, -5417860, 2661590, -2060580, -5427090, 2633360, -2030930, -5491790, 2520590, -2051680, -5442540, 2608460, -2084500, -5444500, 2578380, -2006350, -5461030, 2605120, -2051680, -5442540, 2608460, -2030930, -5491790, 2520590, -2014660, -5525930, 2458670, -2006350, -5461030, 2605120, -2030930, -5491790, 2520590, -2176550, -5306720, 2780260, -2162230, -5230930, 2930010, -2184890, -5207320, 2954980, -2149590, -5255610, 2895150, -2162230, -5230930, 2930010, -2176550, -5306720, 2780260, -2172300, -5336630, 2726180, -2149590, -5255610, 2895150, -2176550, -5306720, 2780260, -2101170, -5302630, 2844880, -2149590, -5255610, 2895150, -2172300, -5336630, 2726180, -2214700, -5274490, 2811080, -2223060, -5131290, 3057040, -2269080, -5227250, 2855310, -2214700, -5274490, 2811080, -2210950, -5140670, 3050100, -2223060, -5131290, 3057040, -2214700, -5274490, 2811080, -2206250, -5162500, 3016670, -2210950, -5140670, 3050100, -2214700, -5274490, 2811080, -2189920, -5168660, 3018030, -2206250, -5162500, 3016670, -2184890, -5207320, 2954980, -2189920, -5168660, 3018030, -2214700, -5274490, 2811080, -2176550, -5306720, 2780260, -2184890, -5207320, 2954980, -2214700, -5274490, 2811080, -2223060, -5131290, 3057040, -2232780, -5113300, 3079870, -2269080, -5227250, 2855310, -2269080, -5227250, 2855310, -2232780, -5113300, 3079870, -2283680, -5227880, 2842570, -2232780, -5113300, 3079870, -2301390, -5205900, 2868350, -2283680, -5227880, 2842570, -2294790, -4972980, 3257680, -2297580, -4941360, 3303210, -2319820, -4989640, 3214480, -2294790, -4972980, 3257680, -2319820, -4989640, 3214480, -2309110, -4993930, 3215520, -2309110, -4993930, 3215520, -2319820, -4989640, 3214480, -2347040, -5048890, 3100960, -2300180, -4997500, 3216380, -2294790, -4972980, 3257680, -2309110, -4993930, 3215520, -2309110, -4993930, 3215520, -2347040, -5048890, 3100960, -2304020, -5015300, 3185980, -2309110, -4993930, 3215520, -2304020, -5015300, 3185980, -2300180, -4997500, 3216380, -2294630, -5114860, 3031750, -2304020, -5015300, 3185980, -2347040, -5048890, 3100960, -2294630, -5114860, 3031750, -2283360, -5049800, 3146380, -2304020, -5015300, 3185980, -2141030, -4970220, 3364110, -2231260, -4963380, 3315560, -2201260, -4973990, 3319680, -2141030, -4970220, 3364110, -2273800, -4926380, 3341560, -2231260, -4963380, 3315560, -2141030, -4970220, 3364110, -2259180, -4885940, 3409690, -2273800, -4926380, 3341560, -2273800, -4926380, 3341560, -2259180, -4885940, 3409690, -2297580, -4941360, 3303210, -2259180, -4885940, 3409690, -2353520, -4975980, 3211190, -2347100, -4978600, 3211810, -2259180, -4885940, 3409690, -2347100, -4978600, 3211810, -2297580, -4941360, 3303210, -2347100, -4978600, 3211810, -2353520, -4975980, 3211190, -2392150, -5010970, 3127690, -2319820, -4989640, 3214480, -2297580, -4941360, 3303210, -2347100, -4978600, 3211810, -2347100, -4978600, 3211810, -2392150, -5010970, 3127690, -2347040, -5048890, 3100960, -2347100, -4978600, 3211810, -2347040, -5048890, 3100960, -2319820, -4989640, 3214480, -2147320, -5022420, 3282130, -2141030, -4970220, 3364110, -2201260, -4973990, 3319680, -1956240, -5089800, 3297650, -2141030, -4970220, 3364110, -2147320, -5022420, 3282130, -1956240, -5089800, 3297650, -2147320, -5022420, 3282130, -2145330, -5056300, 3231350, -1956240, -5089800, 3297650, -2145330, -5056300, 3231350, -2040040, -5093250, 3241430, -2040040, -5093250, 3241430, -2145330, -5056300, 3231350, -2142720, -5094840, 3172400, -2147320, -5022420, 3282130, -2157260, -5042010, 3245620, -2154270, -5053060, 3230480, -2147320, -5022420, 3282130, -2154270, -5053060, 3230480, -2145330, -5056300, 3231350, -2142720, -5094840, 3172400, -2145330, -5056300, 3231350, -2154270, -5053060, 3230480, -1898830, -5434350, 2737230, -1888020, -5393750, 2823080, -1912360, -5417160, 2761610, -1778270, -5154230, 3298330, -1786380, -5172480, 3265440, -1786010, -5172580, 3265480, -1786380, -5172480, 3265440, -1888020, -5393750, 2823080, -1898830, -5434350, 2737230, -1786380, -5172480, 3265440, -1898830, -5434350, 2737230, -1786010, -5172580, 3265480, -1781510, -5173870, 3265890, -1778270, -5154230, 3298330, -1786010, -5172580, 3265480, -1786010, -5172580, 3265480, -1898830, -5434350, 2737230, -1823360, -5480570, 2696360, -1786010, -5172580, 3265480, -1823360, -5480570, 2696360, -1781510, -5173870, 3265890, -1706760, -5178330, 3298360, -1778270, -5154230, 3298330, -1781510, -5173870, 3265890, -1706760, -5178330, 3298360, -1781510, -5173870, 3265890, -1712320, -5193070, 3272380, -1712320, -5193070, 3272380, -1781510, -5173870, 3265890, -1823360, -5480570, 2696360, -1710470, -5193570, 3272550, -1706760, -5178330, 3298360, -1712320, -5193070, 3272380, -1712320, -5193070, 3272380, -1823360, -5480570, 2696360, -1785640, -5523490, 2633710, -1712320, -5193070, 3272380, -1785640, -5523490, 2633710, -1710470, -5193570, 3272550, -1699080, -5155650, 3337350, -1706760, -5178330, 3298360, -1710470, -5193570, 3272550, -1699080, -5155650, 3337350, -1710470, -5193570, 3272550, -1708630, -5194070, 3272720, -1785640, -5523490, 2633710, -1708630, -5194070, 3272720, -1710470, -5193570, 3272550, -1542490, -5204670, 3337320, -1699080, -5155650, 3337350, -1708630, -5194070, 3272720, -1542490, -5204670, 3337320, -1708630, -5194070, 3272720, -1560920, -5231670, 3286490, -1560920, -5231670, 3286490, -1708630, -5194070, 3272720, -1785640, -5523490, 2633710, -1568620, -5589160, 2633360, -1597270, -5685140, 2402020, -1592790, -5703590, 2361170, -1568620, -5589160, 2633360, -1592790, -5703590, 2361170, -1562180, -5590960, 2633360, -1562180, -5590960, 2633360, -1473180, -5264980, 3273850, -1568620, -5589160, 2633360, -1544610, -5595840, 2633360, -1562180, -5590960, 2633360, -1592790, -5703590, 2361170, -1424920, -5304150, 3232e3, -1473180, -5264980, 3273850, -1562180, -5590960, 2633360, -1424920, -5304150, 3232e3, -1562180, -5590960, 2633360, -1544610, -5595840, 2633360, -1544610, -5595840, 2633360, -1592790, -5703590, 2361170, -1564050, -5730550, 2314960, -1544610, -5595840, 2633360, -1564050, -5730550, 2314960, -1520860, -5602340, 2633360, -1424920, -5304150, 3232e3, -1544610, -5595840, 2633360, -1520860, -5602340, 2633360, -1520860, -5602340, 2633360, -1564050, -5730550, 2314960, -1557620, -5816350, 2096400, -1520860, -5602340, 2633360, -1557620, -5816350, 2096400, -1503750, -5606960, 2633360, -1503750, -5606960, 2633360, -1424920, -5304150, 3232e3, -1520860, -5602340, 2633360, -1557620, -5816350, 2096400, -1564050, -5730550, 2314960, -1568200, -5743800, 2279280, -1557620, -5816350, 2096400, -1568200, -5743800, 2279280, -1586620, -5760960, 2222920, -1568200, -5743800, 2279280, -1593990, -5747350, 2252460, -1586620, -5760960, 2222920, -1684750, -5555260, 2633360, -1698780, -5587840, 2554770, -1624670, -5655100, 2453640, -1684750, -5555260, 2633360, -1624670, -5655100, 2453640, -1612080, -5576780, 2633360, -1548580, -5234610, 3287640, -1542490, -5204670, 3337320, -1553590, -5233420, 3287180, -1553590, -5233420, 3287180, -1684750, -5555260, 2633360, -1612080, -5576780, 2633360, -1553590, -5233420, 3287180, -1612080, -5576780, 2633360, -1548580, -5234610, 3287640, -1624670, -5655100, 2453640, -1605170, -5578780, 2633360, -1612080, -5576780, 2633360, -1515020, -5234170, 3303830, -1542490, -5204670, 3337320, -1548580, -5234610, 3287640, -1515020, -5234170, 3303830, -1548580, -5234610, 3287640, -1517080, -5241980, 3290560, -1517080, -5241980, 3290560, -1548580, -5234610, 3287640, -1612080, -5576780, 2633360, -1517080, -5241980, 3290560, -1612080, -5576780, 2633360, -1605170, -5578780, 2633360, -1594650, -5581790, 2633360, -1605170, -5578780, 2633360, -1624670, -5655100, 2453640, -1498860, -5246150, 3292250, -1515020, -5234170, 3303830, -1517080, -5241980, 3290560, -1498860, -5246150, 3292250, -1517080, -5241980, 3290560, -1605170, -5578780, 2633360, -1498860, -5246150, 3292250, -1605170, -5578780, 2633360, -1594650, -5581790, 2633360, -1498860, -5246150, 3292250, -1594650, -5581790, 2633360, -1473180, -5264980, 3273850, -1594650, -5581790, 2633360, -1624670, -5655100, 2453640, -1597270, -5685140, 2402020, -1594650, -5581790, 2633360, -1597270, -5685140, 2402020, -1568620, -5589160, 2633360, -1473180, -5264980, 3273850, -1594650, -5581790, 2633360, -1568620, -5589160, 2633360, -1778270, -5154230, 3298330, -1790060, -5171420, 3265100, -1786380, -5172480, 3265440, -1790060, -5171420, 3265100, -1931940, -5365890, 2846200, -1888020, -5393750, 2823080, -1790060, -5171420, 3265100, -1888020, -5393750, 2823080, -1786380, -5172480, 3265440, -1778270, -5154230, 3298330, -1795300, -5169930, 3264590, -1790060, -5171420, 3265100, -1795300, -5169930, 3264590, -1978700, -5322830, 2894210, -1931940, -5365890, 2846200, -1795300, -5169930, 3264590, -1931940, -5365890, 2846200, -1790060, -5171420, 3265100, -1778270, -5154230, 3298330, -1799990, -5168570, 3264150, -1795300, -5169930, 3264590, -1799990, -5168570, 3264150, -1989220, -5280750, 2962790, -1978700, -5322830, 2894210, -1799990, -5168570, 3264150, -1978700, -5322830, 2894210, -1795300, -5169930, 3264590, -1778270, -5154230, 3298330, -1956240, -5089800, 3297650, -1961690, -5119180, 3248890, -1778270, -5154230, 3298330, -1961690, -5119180, 3248890, -1799990, -5168570, 3264150, -1799990, -5168570, 3264150, -1961690, -5119180, 3248890, -1989220, -5280750, 2962790, -1961690, -5119180, 3248890, -1956240, -5089800, 3297650, -1968980, -5116820, 3248190, -1968980, -5116820, 3248190, -2037190, -5257910, 2970750, -1989220, -5280750, 2962790, -1968980, -5116820, 3248190, -1989220, -5280750, 2962790, -1961690, -5119180, 3248890, -1956240, -5089800, 3297650, -1979280, -5113480, 3247210, -1968980, -5116820, 3248190, -1979280, -5113480, 3247210, -2080180, -5211360, 3022200, -2037190, -5257910, 2970750, -1979280, -5113480, 3247210, -2037190, -5257910, 2970750, -1968980, -5116820, 3248190, -1956240, -5089800, 3297650, -1991940, -5109330, 3246010, -1979280, -5113480, 3247210, -1991940, -5109330, 3246010, -2112880, -5170220, 3069480, -2080180, -5211360, 3022200, -1991940, -5109330, 3246010, -2080180, -5211360, 3022200, -1979280, -5113480, 3247210, -1956240, -5089800, 3297650, -1997040, -5107650, 3245520, -1991940, -5109330, 3246010, -1997040, -5107650, 3245520, -2110460, -5153010, 3099730, -2112880, -5170220, 3069480, -1997040, -5107650, 3245520, -2112880, -5170220, 3069480, -1991940, -5109330, 3246010, -1956240, -5089800, 3297650, -2040040, -5093250, 3241430, -1997040, -5107650, 3245520, -2040040, -5093250, 3241430, -2142720, -5094840, 3172400, -2110460, -5153010, 3099730, -2040040, -5093250, 3241430, -2110460, -5153010, 3099730, -1997040, -5107650, 3245520, -659901, -5984880, 2096850, -681878, -5961080, 2156340, -648052, -6103990, 1726800, -659901, -5984880, 2096850, -648052, -6103990, 1726800, -647753, -6104020, 1726830, -647509, -6105890, 1720340, -647753, -6104020, 1726830, -648052, -6103990, 1726800, -620855, -6006960, 2045340, -659901, -5984880, 2096850, -647753, -6104020, 1726830, -620855, -6006960, 2045340, -647753, -6104020, 1726830, -646984, -6104080, 1726890, -646984, -6104080, 1726890, -647753, -6104020, 1726830, -647509, -6105890, 1720340, -620855, -6006960, 2045340, -646984, -6104080, 1726890, -629986, -6105420, 1728440, -620855, -6006960, 2045340, -629986, -6105420, 1728440, -560806, -6102980, 1760370, -629986, -6105420, 1728440, -646984, -6104080, 1726890, -647509, -6105890, 1720340, -510228, -6026810, 2017520, -620855, -6006960, 2045340, -560806, -6102980, 1760370, -501108, -6105920, 1768100, -510228, -6026810, 2017520, -560806, -6102980, 1760370, -467855, -6044870, 1973580, -510228, -6026810, 2017520, -501108, -6105920, 1768100, -467855, -6044870, 1973580, -501108, -6105920, 1768100, -432989, -6117450, 1746260, -467855, -6044870, 1973580, -432989, -6117450, 1746260, -416291, -6118170, 1747770, -414587, -6120410, 1740370, -416291, -6118170, 1747770, -432989, -6117450, 1746260, -374677, -6041640, 2002940, -467855, -6044870, 1973580, -416291, -6118170, 1747770, -374677, -6041640, 2002940, -416291, -6118170, 1747770, -413424, -6118290, 1748030, -413424, -6118290, 1748030, -416291, -6118170, 1747770, -414587, -6120410, 1740370, -362439, -6120200, 1752630, -374677, -6041640, 2002940, -413424, -6118290, 1748030, -413424, -6118290, 1748030, -414587, -6120410, 1740370, -360055, -6133650, 1705780, -413424, -6118290, 1748030, -360055, -6133650, 1705780, -362439, -6120200, 1752630, -294061, -6042560, 2013550, -374677, -6041640, 2002940, -362439, -6120200, 1752630, -294061, -6042560, 2013550, -362439, -6120200, 1752630, -349761, -6120610, 1753780, -349761, -6120610, 1753780, -362439, -6120200, 1752630, -360055, -6133650, 1705780, -262195, -6122700, 1761690, -294061, -6042560, 2013550, -349761, -6120610, 1753780, -349761, -6120610, 1753780, -360055, -6133650, 1705780, -240046, -6170530, 1590760, -349761, -6120610, 1753780, -240046, -6170530, 1590760, -262195, -6122700, 1761690, -254653, -6122820, 1762370, -294061, -6042560, 2013550, -262195, -6122700, 1761690, -254653, -6122820, 1762370, -262195, -6122700, 1761690, -240046, -6170530, 1590760, -254653, -6122820, 1762370, -240046, -6170530, 1590760, -239409, -6150270, 1666950, -237083, -6162470, 1621930, -239409, -6150270, 1666950, -240046, -6170530, 1590760, -224362, -6156250, 1647e3, -239409, -6150270, 1666950, -237083, -6162470, 1621930, -775694, -6085910, 1737910, -763993, -5891270, 2313820, -793187, -5867310, 2364010, -747310, -5924460, 2233660, -763993, -5891270, 2313820, -775694, -6085910, 1737910, -747310, -5924460, 2233660, -775694, -6085910, 1737910, -727359, -6097100, 1719610, -747310, -5924460, 2233660, -727359, -6097100, 1719610, -702667, -6099360, 1721840, -701531, -6102890, 1709840, -702667, -6099360, 1721840, -727359, -6097100, 1719610, -681878, -5961080, 2156340, -747310, -5924460, 2233660, -702667, -6099360, 1721840, -681878, -5961080, 2156340, -702667, -6099360, 1721840, -701055, -6099500, 1721990, -701055, -6099500, 1721990, -702667, -6099360, 1721840, -701531, -6102890, 1709840, -648052, -6103990, 1726800, -681878, -5961080, 2156340, -701055, -6099500, 1721990, -701055, -6099500, 1721990, -701531, -6102890, 1709840, -647509, -6105890, 1720340, -701055, -6099500, 1721990, -647509, -6105890, 1720340, -648052, -6103990, 1726800, -951092, -6040640, 1806850, -908770, -5733540, 2633360, -930258, -5730090, 2633360, -896500, -5647520, 2815850, -920320, -5620060, 2862410, -930258, -5730090, 2633360, -896500, -5647520, 2815850, -930258, -5730090, 2633360, -908770, -5733540, 2633360, -843307, -5743530, 2633360, -908770, -5733540, 2633360, -951092, -6040640, 1806850, -821711, -5674220, 2785040, -896500, -5647520, 2815850, -908770, -5733540, 2633360, -821711, -5674220, 2785040, -908770, -5733540, 2633360, -843307, -5743530, 2633360, -843307, -5743530, 2633360, -951092, -6040640, 1806850, -854416, -6069490, 1758140, -843307, -5743530, 2633360, -854416, -6069490, 1758140, -828528, -5745680, 2633360, -828528, -5745680, 2633360, -821711, -5674220, 2785040, -843307, -5743530, 2633360, -816543, -5747400, 2633360, -828528, -5745680, 2633360, -854416, -6069490, 1758140, -816543, -5747400, 2633360, -854416, -6069490, 1758140, -807818, -5842300, 2419950, -816543, -5747400, 2633360, -821711, -5674220, 2785040, -828528, -5745680, 2633360, -775694, -6085910, 1737910, -807818, -5842300, 2419950, -854416, -6069490, 1758140, -775694, -6085910, 1737910, -793187, -5867310, 2364010, -807818, -5842300, 2419950, -70565.9, -6122870, 1779e3, -154595, -6091010, 1879510, -183121, -6123500, 1768830, -183121, -6123500, 1768830, -187005, -6127730, 1753810, -49700, -6130290, 1754130, -183121, -6123500, 1768830, -49700, -6130290, 1754130, -70565.9, -6122870, 1779e3, -115229, -6102730, 1844210, -154595, -6091010, 1879510, -70565.9, -6122870, 1779e3, -115229, -6102730, 1844210, -70565.9, -6122870, 1779e3, -67989.6, -6122830, 1779230, -49700, -6130290, 1754130, -67989.6, -6122830, 1779230, -70565.9, -6122870, 1779e3, -75919.4, -6110740, 1819730, -115229, -6102730, 1844210, -67989.6, -6122830, 1779230, -75919.4, -6110740, 1819730, -67989.6, -6122830, 1779230, -60026, -6122700, 1779950, -49700, -6130290, 1754130, -60026, -6122700, 1779950, -67989.6, -6122830, 1779230, -64152.6, -6117720, 1796750, -75919.4, -6110740, 1819730, -60026, -6122700, 1779950, -64152.6, -6117720, 1796750, -60026, -6122700, 1779950, -58508.4, -6122670, 1780090, -49700, -6130290, 1754130, -58508.4, -6122670, 1780090, -60026, -6122700, 1779950, -46880.6, -6119770, 1790310, -64152.6, -6117720, 1796750, -58508.4, -6122670, 1780090, -46880.6, -6119770, 1790310, -58508.4, -6122670, 1780090, -47595.2, -6122480, 1781070, -47595.2, -6122480, 1781070, -58508.4, -6122670, 1780090, -49700, -6130290, 1754130, 150871, -5935340, 2322340, 102732, -6066990, 1958540, 122043, -6070660, 1946090, 150871, -5935340, 2322340, 89942.7, -6068760, 1953700, 102732, -6066990, 1958540, 150871, -5935340, 2322340, 41379.4, -5946480, 2298420, 89942.7, -6068760, 1953700, 90844.2, -6073750, 1938190, 89942.7, -6068760, 1953700, 41379.4, -5946480, 2298420, 90844.2, -6073750, 1938190, 41379.4, -5946480, 2298420, -7198.67, -6074050, 1939350, -7198.67, -6074050, 1939350, -81133.4, -6021930, 2093060, -106168, -6073190, 1939170, -7198.67, -6074050, 1939350, -55885.7, -6000580, 2153900, -81133.4, -6021930, 2093060, -7198.67, -6074050, 1939350, -47033.2, -5968410, 2241130, -55885.7, -6000580, 2153900, -7198.67, -6074050, 1939350, -28966.6, -5957e3, 2271380, -47033.2, -5968410, 2241130, 41379.4, -5946480, 2298420, -28966.6, -5957e3, 2271380, -7198.67, -6074050, 1939350, -81133.4, -6021930, 2093060, -148335, -6035420, 2050380, -106168, -6073190, 1939170, -106168, -6073190, 1939170, -148335, -6035420, 2050380, -106580, -6091960, 1879770, -106580, -6091960, 1879770, -148335, -6035420, 2050380, -154595, -6091010, 1879510, -148335, -6035420, 2050380, -185068, -6123490, 1768660, -183121, -6123500, 1768830, -148335, -6035420, 2050380, -183121, -6123500, 1768830, -154595, -6091010, 1879510, -183121, -6123500, 1768830, -185068, -6123490, 1768660, -187005, -6127730, 1753810, -148335, -6035420, 2050380, -214842, -6039530, 2032410, -188480, -6123480, 1768350, -148335, -6035420, 2050380, -188480, -6123480, 1768350, -185068, -6123490, 1768660, -185068, -6123490, 1768660, -188480, -6123480, 1768350, -187005, -6127730, 1753810, -214842, -6039530, 2032410, -294061, -6042560, 2013550, -254653, -6122820, 1762370, -214842, -6039530, 2032410, -254653, -6122820, 1762370, -232915, -6123110, 1764340, -232915, -6123110, 1764340, -254653, -6122820, 1762370, -239409, -6150270, 1666950, -188480, -6123480, 1768350, -214842, -6039530, 2032410, -232925, -6123110, 1764340, -232925, -6123110, 1764340, -239409, -6150270, 1666950, -187005, -6127730, 1753810, -232925, -6123110, 1764340, -187005, -6127730, 1753810, -188480, -6123480, 1768350, 269024, -6009540, 2112720, 249424, -6003920, 2130890, 253975, -6025990, 2067550, 253975, -6025990, 2067550, 249424, -6003920, 2130890, 228659, -6054640, 1985710, 249424, -6003920, 2130890, 242637, -5933710, 2318750, 228659, -6054640, 1985710, 305257, -5927380, 2327470, 242637, -5933710, 2318750, 249424, -6003920, 2130890, 305257, -5927380, 2327470, 249424, -6003920, 2130890, 273290, -5979860, 2194240, 242637, -5933710, 2318750, 201570, -6046640, 2012680, 228659, -6054640, 1985710, 242637, -5933710, 2318750, 179497, -6047910, 2010940, 201570, -6046640, 2012680, 242637, -5933710, 2318750, 159443, -6048940, 2009560, 179497, -6047910, 2010940, 242637, -5933710, 2318750, 150871, -5935340, 2322340, 159443, -6048940, 2009560, 328094, -5953970, 2255870, 305257, -5927380, 2327470, 273290, -5979860, 2194240, 330550, -5934610, 2305620, 305257, -5927380, 2327470, 328094, -5953970, 2255870, -786339, -5751610, 2633360, -816543, -5747400, 2633360, -807818, -5842300, 2419950, -786339, -5751610, 2633360, -807818, -5842300, 2419950, -779772, -5765120, 2605810, -786339, -5751610, 2633360, -821711, -5674220, 2785040, -816543, -5747400, 2633360, -775074, -5753130, 2633360, -786339, -5751610, 2633360, -779772, -5765120, 2605810, -752734, -5694540, 2763120, -821711, -5674220, 2785040, -786339, -5751610, 2633360, -752734, -5694540, 2763120, -786339, -5751610, 2633360, -775074, -5753130, 2633360, -771438, -5753620, 2633360, -775074, -5753130, 2633360, -779772, -5765120, 2605810, -752734, -5694540, 2763120, -775074, -5753130, 2633360, -771438, -5753620, 2633360, -752734, -5694540, 2763120, -771438, -5753620, 2633360, -757826, -5734530, 2678280, -713775, -5698090, 2766110, -752734, -5694540, 2763120, -757826, -5734530, 2678280, -1029300, -6023300, 1821720, -1006150, -5717250, 2633360, -1027300, -5713490, 2633360, -988280, -5542570, 2987260, -1016130, -5506110, 3044400, -1027300, -5713490, 2633360, -988280, -5542570, 2987260, -1027300, -5713490, 2633360, -1006150, -5717250, 2633360, -965014, -5724340, 2633360, -1006150, -5717250, 2633360, -1029300, -6023300, 1821720, -936030, -5581530, 2931400, -988280, -5542570, 2987260, -1006150, -5717250, 2633360, -936030, -5581530, 2931400, -1006150, -5717250, 2633360, -965014, -5724340, 2633360, -965014, -5724340, 2633360, -1029300, -6023300, 1821720, -951092, -6040640, 1806850, -965014, -5724340, 2633360, -951092, -6040640, 1806850, -944507, -5727760, 2633360, -944507, -5727760, 2633360, -936030, -5581530, 2931400, -965014, -5724340, 2633360, -951092, -6040640, 1806850, -930258, -5730090, 2633360, -944507, -5727760, 2633360, -920320, -5620060, 2862410, -936030, -5581530, 2931400, -944507, -5727760, 2633360, -920320, -5620060, 2862410, -944507, -5727760, 2633360, -930258, -5730090, 2633360, -1173630, -5685230, 2633360, -1229370, -5954210, 1921400, -1145240, -5987080, 1870930, -1173630, -5685230, 2633360, -1145240, -5987080, 1870930, -1139180, -5692240, 2633360, -1139180, -5692240, 2633360, -1119930, -5426080, 3149160, -1173630, -5685230, 2633360, -1145240, -5987080, 1870930, -1098420, -5700240, 2633360, -1139180, -5692240, 2633360, -1057330, -5460840, 3110740, -1119930, -5426080, 3149160, -1139180, -5692240, 2633360, -1057330, -5460840, 3110740, -1139180, -5692240, 2633360, -1098420, -5700240, 2633360, -1066860, -5706230, 2633360, -1098420, -5700240, 2633360, -1145240, -5987080, 1870930, -1016130, -5506110, 3044400, -1057330, -5460840, 3110740, -1098420, -5700240, 2633360, -1016130, -5506110, 3044400, -1098420, -5700240, 2633360, -1066860, -5706230, 2633360, -1066860, -5706230, 2633360, -1145240, -5987080, 1870930, -1029300, -6023300, 1821720, -1066860, -5706230, 2633360, -1029300, -6023300, 1821720, -1027300, -5713490, 2633360, -1027300, -5713490, 2633360, -1016130, -5506110, 3044400, -1066860, -5706230, 2633360, -1311240, -5925390, 1955830, -1254380, -5667970, 2633360, -1291650, -5659590, 2633360, -1197510, -5410570, 3147310, -1266670, -5438900, 3070990, -1291650, -5659590, 2633360, -1197510, -5410570, 3147310, -1291650, -5659590, 2633360, -1254380, -5667970, 2633360, -1209330, -5677750, 2633360, -1254380, -5667970, 2633360, -1311240, -5925390, 1955830, -1119930, -5426080, 3149160, -1197510, -5410570, 3147310, -1254380, -5667970, 2633360, -1119930, -5426080, 3149160, -1254380, -5667970, 2633360, -1209330, -5677750, 2633360, -1209330, -5677750, 2633360, -1311240, -5925390, 1955830, -1253790, -5939890, 1949550, -1209330, -5677750, 2633360, -1253790, -5939890, 1949550, -1184640, -5682950, 2633360, -1119930, -5426080, 3149160, -1209330, -5677750, 2633360, -1184640, -5682950, 2633360, -1184640, -5682950, 2633360, -1253790, -5939890, 1949550, -1229370, -5954210, 1921400, -1184640, -5682950, 2633360, -1229370, -5954210, 1921400, -1173630, -5685230, 2633360, -1119930, -5426080, 3149160, -1184640, -5682950, 2633360, -1173630, -5685230, 2633360, -1453250, -5864410, 2037020, -1397500, -5634380, 2633360, -1424630, -5627590, 2633360, -1341430, -5404270, 3100040, -1386030, -5376030, 3129200, -1424630, -5627590, 2633360, -1341430, -5404270, 3100040, -1424630, -5627590, 2633360, -1397500, -5634380, 2633360, -1351240, -5645660, 2633360, -1397500, -5634380, 2633360, -1453250, -5864410, 2037020, -1266670, -5438900, 3070990, -1341430, -5404270, 3100040, -1397500, -5634380, 2633360, -1266670, -5438900, 3070990, -1397500, -5634380, 2633360, -1351240, -5645660, 2633360, -1351240, -5645660, 2633360, -1453250, -5864410, 2037020, -1414280, -5890430, 1989130, -1351240, -5645660, 2633360, -1414280, -5890430, 1989130, -1332700, -5650060, 2633360, -1266670, -5438900, 3070990, -1351240, -5645660, 2633360, -1332700, -5650060, 2633360, -1332700, -5650060, 2633360, -1414280, -5890430, 1989130, -1311240, -5925390, 1955830, -1332700, -5650060, 2633360, -1311240, -5925390, 1955830, -1291650, -5659590, 2633360, -1291650, -5659590, 2633360, -1266670, -5438900, 3070990, -1332700, -5650060, 2633360, -1453250, -5864410, 2037020, -1424630, -5627590, 2633360, -1435720, -5624770, 2633360, -1386030, -5376030, 3129200, -1401680, -5340620, 3182050, -1435720, -5624770, 2633360, -1386030, -5376030, 3129200, -1435720, -5624770, 2633360, -1424630, -5627590, 2633360, -1488080, -5611140, 2633360, -1557620, -5816350, 2096400, -1453250, -5864410, 2037020, -1488080, -5611140, 2633360, -1453250, -5864410, 2037020, -1435720, -5624770, 2633360, -1435720, -5624770, 2633360, -1401680, -5340620, 3182050, -1488080, -5611140, 2633360, -1488080, -5611140, 2633360, -1503750, -5606960, 2633360, -1557620, -5816350, 2096400, -1401680, -5340620, 3182050, -1424920, -5304150, 3232e3, -1503750, -5606960, 2633360, -1401680, -5340620, 3182050, -1503750, -5606960, 2633360, -1488080, -5611140, 2633360, -1586620, -5760960, 2222920, -1621100, -5755280, 2212790, -1602150, -5779900, 2162160, -1557620, -5816350, 2096400, -1586620, -5760960, 2222920, -1602150, -5779900, 2162160, -2356700, -4833870, 3417830, -2425010, -4915690, 3250340, -2413750, -4950890, 3205290, -2356700, -4833870, 3417830, -2413750, -4950890, 3205290, -2405320, -4954450, 3206130, -2409240, -4964490, 3187720, -2405320, -4954450, 3206130, -2413750, -4950890, 3205290, -2259180, -4885940, 3409690, -2356700, -4833870, 3417830, -2405320, -4954450, 3206130, -2259180, -4885940, 3409690, -2405320, -4954450, 3206130, -2396360, -4958220, 3207e3, -2396360, -4958220, 3207e3, -2405320, -4954450, 3206130, -2409240, -4964490, 3187720, -2259180, -4885940, 3409690, -2396360, -4958220, 3207e3, -2353520, -4975980, 3211190, -2396360, -4958220, 3207e3, -2409240, -4964490, 3187720, -2392150, -5010970, 3127690, -2396360, -4958220, 3207e3, -2392150, -5010970, 3127690, -2353520, -4975980, 3211190, -2356700, -4833870, 3417830, -2454250, -4790250, 3410620, -2444070, -4854850, 3326110, -2356700, -4833870, 3417830, -2444070, -4854850, 3326110, -2425010, -4915690, 3250340, -2246270, -4879020, 3427950, -2356700, -4833870, 3417830, -2259180, -4885940, 3409690, -779772, -5765120, 2605810, -807818, -5842300, 2419950, -795165, -5822980, 2469850, 159443, -6048940, 2009560, 150871, -5935340, 2322340, 122043, -6070660, 1946090, -1684750, -5555260, 2633360, -1785300, -5523770, 2633360, -1698780, -5587840, 2554770, -1542490, -5204670, 3337320, -1560920, -5231670, 3286490, -1553590, -5233420, 3287180, -1560920, -5231670, 3286490, -1785640, -5523490, 2633710, -1785300, -5523770, 2633360, -1560920, -5231670, 3286490, -1785300, -5523770, 2633360, -1684750, -5555260, 2633360, -1560920, -5231670, 3286490, -1684750, -5555260, 2633360, -1553590, -5233420, 3287180, -2352280, -5169720, 2892240, -2384570, -5117930, 2956740, -2392740, -5118420, 2949340, 4484420, 1782230, 4156660, 4397370, 1738970, 4265800, 4406810, 1722810, 4262650, 4382910, 1763440, 4270600, 4397370, 1738970, 4265800, 4484420, 1782230, 4156660, 4457690, 1806040, 4174970, 4382910, 1763440, 4270600, 4484420, 1782230, 4156660, 4367350, 1798350, 4271980, 4382910, 1763440, 4270600, 4457690, 1806040, 4174970, 4441720, 1848660, 4173350, 4367350, 1798350, 4271980, 4457690, 1806040, 4174970, 4373510, 1845770, 4245550, 4367350, 1798350, 4271980, 4441720, 1848660, 4173350, 4373510, 1845770, 4245550, 4441720, 1848660, 4173350, 4424630, 1856470, 4187910, 4416190, 1870230, 4190680, 4373510, 1845770, 4245550, 4424630, 1856470, 4187910, 4510490, 1733220, 4149220, 4506590, 1729920, 4154800, 4509390, 1722600, 4154800, 4450660, 1683300, 4232970, 4506320, 1694280, 4169640, 4509390, 1722600, 4154800, 4450660, 1683300, 4232970, 4509390, 1722600, 4154800, 4506590, 1729920, 4154800, 4510490, 1733220, 4149220, 4506410, 1730380, 4154800, 4506590, 1729920, 4154800, 4435120, 1681400, 4249890, 4450660, 1683300, 4232970, 4506590, 1729920, 4154800, 4435120, 1681400, 4249890, 4506590, 1729920, 4154800, 4506410, 1730380, 4154800, 4505490, 1732760, 4154800, 4506410, 1730380, 4154800, 4510490, 1733220, 4149220, 4406810, 1722810, 4262650, 4435120, 1681400, 4249890, 4506410, 1730380, 4154800, 4406810, 1722810, 4262650, 4506410, 1730380, 4154800, 4505490, 1732760, 4154800, 4491e3, 1769980, 4154800, 4505490, 1732760, 4154800, 4510490, 1733220, 4149220, 4406810, 1722810, 4262650, 4505490, 1732760, 4154800, 4491e3, 1769980, 4154800, 4406810, 1722810, 4262650, 4491e3, 1769980, 4154800, 4484420, 1782230, 4156660, 4506320, 1694280, 4169640, 4453810, 1673210, 4233650, 4481050, 1672120, 4205430, 4450660, 1683300, 4232970, 4453810, 1673210, 4233650, 4506320, 1694280, 4169640, 6052280, -1138210, 1654280, 6119450, -1193560, 1340250, 6123640, -1175990, 1336650, 6052280, -1138210, 1654280, 6116990, -1222030, 1325840, 6119450, -1193560, 1340250, 6052280, -1138210, 1654280, 6029990, -1210290, 1684020, 6116990, -1222030, 1325840, 6116990, -1222030, 1325840, 6029990, -1210290, 1684020, 6113610, -1238960, 1325710, 6029990, -1210290, 1684020, 6097560, -1237010, 1398930, 6113610, -1238960, 1325710, 6113610, -1238960, 1325710, 6097560, -1237010, 1398930, 6103930, -1243400, 1365300, 6118900, -593251, 1693660, 6216310, -876959, 1122740, 6216520, -862568, 1132630, 6118900, -593251, 1693660, 6200700, -902635, 1186480, 6216310, -876959, 1122740, 6118900, -593251, 1693660, 6186560, -910936, 1251720, 6200700, -902635, 1186480, 6200700, -902635, 1186480, 6186560, -910936, 1251720, 6196310, -915799, 1199160, 6186560, -910936, 1251720, 6188760, -933897, 1223790, 6196310, -915799, 1199160, 6196310, -915799, 1199160, 6188760, -933897, 1223790, 6194890, -939137, 1188470, 6246730, -590967, 1140610, 6234220, -597054, 1203720, 6245230, -636231, 1124490, 6234220, -597054, 1203720, 6118900, -593251, 1693660, 6245230, -636231, 1124490, 6100080, -567528, 1768190, 6118900, -593251, 1693660, 6234220, -597054, 1203720, 6220250, -568379, 1286430, 6100080, -567528, 1768190, 6234220, -597054, 1203720, 6227950, -566551, 1249710, 6220250, -568379, 1286430, 6234220, -597054, 1203720, 6118900, -593251, 1693660, 6245030, -661939, 1110750, 6245230, -636231, 1124490, 6118900, -593251, 1693660, 6234800, -677891, 1157290, 6245030, -661939, 1110750, 6118900, -593251, 1693660, 6233560, -709560, 1145020, 6234800, -677891, 1157290, 6118900, -593251, 1693660, 6231010, -728277, 1147140, 6233560, -709560, 1145020, 6118900, -593251, 1693660, 6234360, -748977, 1115390, 6231010, -728277, 1147140, 6118900, -593251, 1693660, 6223540, -832913, 1116280, 6234360, -748977, 1115390, 6118900, -593251, 1693660, 6216520, -862568, 1132630, 6223540, -832913, 1116280, 6118900, -593251, 1693660, 6170670, -953737, 1297120, 6186560, -910936, 1251720, 6118900, -593251, 1693660, 6162430, -965591, 1326970, 6170670, -953737, 1297120, 6118900, -593251, 1693660, 6153570, -988668, 1350720, 6162430, -965591, 1326970, 6118900, -593251, 1693660, 6149470, -1010060, 1353550, 6153570, -988668, 1350720, 6118900, -593251, 1693660, 6062830, -1020040, 1692040, 6149470, -1010060, 1353550, 6145540, -1071570, 1323950, 6057520, -1077570, 1675400, 6145220, -1101850, 1300530, 6066570, -1037010, 1668310, 6057520, -1077570, 1675400, 6145540, -1071570, 1323950, 6148420, -1036390, 1338410, 6066570, -1037010, 1668310, 6145540, -1071570, 1323950, 6062830, -1020040, 1692040, 6066570, -1037010, 1668310, 6148420, -1036390, 1338410, 6149470, -1010060, 1353550, 6062830, -1020040, 1692040, 6148420, -1036390, 1338410, 6135030, -1147390, 1309180, 6052280, -1138210, 1654280, 6123640, -1175990, 1336650, 6057520, -1077570, 1675400, 6052280, -1138210, 1654280, 6135030, -1147390, 1309180, 6057520, -1077570, 1675400, 6135030, -1147390, 1309180, 6145220, -1101850, 1300530, 6086320, -1244180, 1440620, 6036810, -1264920, 1618620, 6071070, -1282440, 1470870, 6086320, -1244180, 1440620, 6023870, -1243770, 1681550, 6036810, -1264920, 1618620, 6029990, -1210290, 1684020, 6023870, -1243770, 1681550, 6086320, -1244180, 1440620, 6029990, -1210290, 1684020, 6086320, -1244180, 1440620, 6097560, -1237010, 1398930, 6036810, -1264920, 1618620, 6034280, -1301440, 1599110, 6051950, -1300180, 1532410, 6036810, -1264920, 1618620, 6051950, -1300180, 1532410, 6071070, -1282440, 1470870, 6114030, 397886, 1766320, 6021560, 332243, 2069360, 6133230, 389982, 1700740, 6010460, 448492, 2079600, 6021560, 332243, 2069360, 6114030, 397886, 1766320, 6089e3, 454651, 1837190, 6010460, 448492, 2079600, 6114030, 397886, 1766320, 6143220, 295079, 1683830, 5969350, 190017, 2231110, 6151020, 148773, 1674660, 6143220, 295079, 1683830, 5986560, 215436, 2182480, 5969350, 190017, 2231110, 6143220, 295079, 1683830, 5994680, 280981, 2152730, 5986560, 215436, 2182480, 5998300, 329755, 2135790, 5994680, 280981, 2152730, 6143220, 295079, 1683830, 6021560, 332243, 2069360, 5998300, 329755, 2135790, 6143220, 295079, 1683830, 6133230, 389982, 1700740, 6021560, 332243, 2069360, 6143220, 295079, 1683830, 5969350, 190017, 2231110, 6162130, 109258, 1636700, 6151020, 148773, 1674660, 5969350, 190017, 2231110, 6164090, 40332.8, 1632500, 6162130, 109258, 1636700, 6143210, -.00116862, 1709350, 6164280, -28646, 1632010, 6164300, -499185e-9, 1632210, 6143210, -.00116862, 1709350, 6164300, -499185e-9, 1632210, 6164090, 40332.8, 1632500, 6143210, -.00116862, 1709350, 6164090, 40332.8, 1632500, 5969350, 190017, 2231110, 6122520, -488378e-9, 1781580, 6158600, -55449.5, 1652520, 6164280, -28646, 1632010, 6122520, -488378e-9, 1781580, 6164280, -28646, 1632010, 6143210, -938569e-9, 1709350, 5969350, 190017, 2231110, 6122520, -488378e-9, 1781580, 6143210, -938569e-9, 1709350, 6099440, .0021808, 1858560, 6161870, -114695, 1637300, 6158600, -55449.5, 1652520, 6099440, .0021808, 1858560, 6158600, -55449.5, 1652520, 6122520, -563713e-10, 1781580, 5969350, 190017, 2231110, 6099440, .0021808, 1858560, 6122520, -563713e-10, 1781580, 5925150, -290286e-9, 2352850, 5880890, -159137, 2455570, 6161870, -114695, 1637300, 5925150, -290286e-9, 2352850, 6161870, -114695, 1637300, 6099440, .0022064, 1858560, 5969350, 190017, 2231110, 5925150, -290286e-9, 2352850, 6099440, .0022064, 1858560, 6161870, -114695, 1637300, 5880890, -159137, 2455570, 6170870, -215604, 1592920, 5880890, -159137, 2455570, 6178720, -236479, 1559420, 6170870, -215604, 1592920, 5880890, -159137, 2455570, 6186950, -320746, 1511310, 6178720, -236479, 1559420, 5880890, -159137, 2455570, 6192870, -335796, 1483690, 6186950, -320746, 1511310, 5880890, -159137, 2455570, 6195480, -381406, 1461780, 6192870, -335796, 1483690, 5880890, -159137, 2455570, 6188590, -433442, 1476290, 6195480, -381406, 1461780, 5880890, -159137, 2455570, 6192660, -463500, 1450010, 6188590, -433442, 1476290, 5789070, -431209, 2633360, 5783900, -495839, 2633360, 5804260, -495109, 2588620, 5789070, -431209, 2633360, 5804260, -495109, 2588620, 5808270, -379164, 2599100, 5808270, -379164, 2599100, 5804260, -495109, 2588620, 6192660, -463500, 1450010, 5808270, -379164, 2599100, 6192660, -463500, 1450010, 5880890, -159137, 2455570, 5789070, -431209, 2633360, 5763860, -496502, 2676520, 5783900, -495839, 2633360, 5783900, -495839, 2633360, 5783840, -496482, 2633360, 5804200, -496419, 2588500, 5783900, -495839, 2633360, 5804200, -496419, 2588500, 5804260, -495109, 2588620, 5804260, -495109, 2588620, 5804200, -496419, 2588500, 6208320, -480666, 1376060, 5804260, -495109, 2588620, 6208320, -480666, 1376060, 6192660, -463500, 1450010, 5783900, -495839, 2633360, 5763860, -496502, 2676520, 5783840, -496482, 2633360, 5783610, -499183, 2633360, 5803940, -501967, 2588e3, 5804200, -496419, 2588500, 5783610, -499183, 2633360, 5804200, -496419, 2588500, 5783840, -496482, 2633360, 5803940, -501967, 2588e3, 6220250, -568379, 1286430, 6208320, -480666, 1376060, 5803940, -501967, 2588e3, 6208320, -480666, 1376060, 5804200, -496419, 2588500, 5783840, -496482, 2633360, 5763860, -496502, 2676520, 5783610, -499183, 2633360, 5783520, -500146, 2633360, 5803850, -503961, 2587820, 5803940, -501967, 2588e3, 5783520, -500146, 2633360, 5803940, -501967, 2588e3, 5783610, -499183, 2633360, 5803850, -503961, 2587820, 6100080, -567528, 1768190, 6220250, -568379, 1286430, 5803850, -503961, 2587820, 6220250, -568379, 1286430, 5803940, -501967, 2588e3, 5763860, -496502, 2676520, 5783520, -500146, 2633360, 5783610, -499183, 2633360, 5783450, -501041, 2633360, 5803770, -505822, 2587650, 5803850, -503961, 2587820, 5783450, -501041, 2633360, 5803850, -503961, 2587820, 5783520, -500146, 2633360, 5803770, -505822, 2587650, 6094530, -585604, 1781280, 6100080, -567528, 1768190, 5803770, -505822, 2587650, 6100080, -567528, 1768190, 5803850, -503961, 2587820, 5763860, -496502, 2676520, 5783450, -501041, 2633360, 5783520, -500146, 2633360, 5782780, -508683, 2633360, 5802990, -521993, 2586190, 5803770, -505822, 2587650, 5782780, -508683, 2633360, 5803770, -505822, 2587650, 5783450, -501041, 2633360, 5802990, -521993, 2586190, 5938800, -621168, 2234220, 6094530, -585604, 1781280, 5802990, -521993, 2586190, 6094530, -585604, 1781280, 5803770, -505822, 2587650, 5763860, -496502, 2676520, 5782780, -508683, 2633360, 5783450, -501041, 2633360, 5782780, -508683, 2633360, 5768840, -647876, 2633360, 5795650, -644280, 2575130, 5782780, -508683, 2633360, 5795650, -644280, 2575130, 5802990, -521993, 2586190, 5802990, -521993, 2586190, 5795650, -644280, 2575130, 5938800, -621168, 2234220, 5763860, -496502, 2676520, 5749380, -650362, 2674720, 5768840, -647876, 2633360, 5763860, -496502, 2676520, 5768840, -647876, 2633360, 5782780, -508683, 2633360, 6216310, -876959, 1122740, 6200700, -902635, 1186480, 6205880, -909254, 1154100, -952673, 6179210, 1256890, -919319, 6144260, 1438600, -914446, 6171520, 1320970, -979473, 6116550, 1514460, -919319, 6144260, 1438600, -952673, 6179210, 1256890, -979473, 6116550, 1514460, -952673, 6179210, 1256890, -983792, 6184790, 1204720, -983792, 6184790, 1204720, -952673, 6179210, 1256890, -934522, 6213270, 1092950, -952673, 6179210, 1256890, -921908, 6200310, 1173730, -934522, 6213270, 1092950, -1039630, 6154930, 1305800, -994163, 6140590, 1404340, -983792, 6184790, 1204720, -994163, 6140590, 1404340, -979473, 6116550, 1514460, -983792, 6184790, 1204720, -993978, 6128870, 1454420, -979473, 6116550, 1514460, -994163, 6140590, 1404340, -837097, 6040840, 1861390, -831708, 6025380, 1912850, -832381, 6041630, 1860960, -832381, 6041630, 1860960, -834556, 6110090, 1622700, -873888, 6137490, 1494360, -832381, 6041630, 1860960, -873888, 6137490, 1494360, -837097, 6040840, 1861390, -840836, 6040220, 1861730, -831708, 6025380, 1912850, -837097, 6040840, 1861390, -840836, 6040220, 1861730, -837097, 6040840, 1861390, -873888, 6137490, 1494360, -840836, 6040220, 1861730, -873888, 6137490, 1494360, -877559, 6095790, 1653320, -919319, 6144260, 1438600, -877559, 6095790, 1653320, -873888, 6137490, 1494360, -919319, 6144260, 1438600, -905036, 6106170, 1599670, -877559, 6095790, 1653320, -979473, 6116550, 1514460, -905036, 6106170, 1599670, -919319, 6144260, 1438600, -1151630, 5826850, 2316460, -1145320, 5810890, 2359e3, -1073040, 5836800, 2329050, -1151630, 5826850, 2316460, -1073040, 5836800, 2329050, -1069620, 5868840, 2249270, -1073040, 5836800, 2329050, -1050310, 5886890, 2211110, -1069620, 5868840, 2249270, -1073040, 5836800, 2329050, -1027550, 5837340, 2347990, -1050310, 5886890, 2211110, -935238, 5931860, 2141980, -907707, 5797280, 2491260, -877420, 5760650, 2584690, -949314, 5834840, 2386550, -907707, 5797280, 2491260, -935238, 5931860, 2141980, -992891, 5905860, 2187100, -949314, 5834840, 2386550, -935238, 5931860, 2141980, -1027550, 5837340, 2347990, -949314, 5834840, 2386550, -992891, 5905860, 2187100, -1050310, 5886890, 2211110, -1027550, 5837340, 2347990, -992891, 5905860, 2187100, -773350, 5564670, 3009320, -717002, 5576140, 3002070, -726896, 5594800, 2965e3, -772744, 5753450, 2633360, -764931, 5754490, 2633360, -772132, 5783240, 2567900, -773350, 5564670, 3009320, -726896, 5594800, 2965e3, -764931, 5754490, 2633360, -773350, 5564670, 3009320, -764931, 5754490, 2633360, -772744, 5753450, 2633360, -764931, 5754490, 2633360, -762249, 5754850, 2633360, -820320, 5990190, 2024280, -764931, 5754490, 2633360, -820320, 5990190, 2024280, -772132, 5783240, 2567900, -764931, 5754490, 2633360, -726896, 5594800, 2965e3, -762249, 5754850, 2633360, -877420, 5760650, 2584690, -772132, 5783240, 2567900, -820320, 5990190, 2024280, -877420, 5760650, 2584690, -820320, 5990190, 2024280, -862317, 5944590, 2137310, -935238, 5931860, 2141980, -877420, 5760650, 2584690, -862317, 5944590, 2137310, -467260, 5786270, 2633360, -461160, 5786760, 2633360, -508922, 6086440, 1831470, -467260, 5786270, 2633360, -508922, 6086440, 1831470, -509653, 6086360, 1831530, -514560, 6116970, 1725820, -509653, 6086360, 1831530, -508922, 6086440, 1831470, -463582, 5757750, 2695380, -460311, 5780830, 2646420, -461160, 5786760, 2633360, -463582, 5757750, 2695380, -461160, 5786760, 2633360, -467260, 5786270, 2633360, -516606, 5782080, 2633360, -467260, 5786270, 2633360, -509653, 6086360, 1831530, -516606, 5782080, 2633360, -509653, 6086360, 1831530, -515566, 6085700, 1832070, -515566, 6085700, 1832070, -509653, 6086360, 1831530, -514560, 6116970, 1725820, -515425, 5713060, 2779190, -463582, 5757750, 2695380, -467260, 5786270, 2633360, -515425, 5713060, 2779190, -467260, 5786270, 2633360, -516616, 5782080, 2633360, -516616, 5782080, 2633360, -515566, 6085700, 1832070, -568868, 6079480, 1836910, -516616, 5782080, 2633360, -568868, 6079480, 1836910, -524669, 5781350, 2633360, -515566, 6085700, 1832070, -514560, 6116970, 1725820, -574678, 6114310, 1716330, -515566, 6085700, 1832070, -574678, 6114310, 1716330, -568868, 6079480, 1836910, -524669, 5781350, 2633360, -515425, 5713060, 2779190, -516616, 5782080, 2633360, -624148, 5771460, 2633360, -524669, 5781350, 2633360, -568868, 6079480, 1836910, -624148, 5771460, 2633360, -568868, 6079480, 1836910, -582402, 6077820, 1838140, -582402, 6077820, 1838140, -568868, 6079480, 1836910, -574678, 6114310, 1716330, -634330, 5637940, 2904310, -515425, 5713060, 2779190, -524669, 5781350, 2633360, -634330, 5637940, 2904310, -524669, 5781350, 2633360, -624148, 5771460, 2633360, -624148, 5771460, 2633360, -582402, 6077820, 1838140, -691010, 6063400, 1848040, -624148, 5771460, 2633360, -691010, 6063400, 1848040, -651218, 5768470, 2633360, -582402, 6077820, 1838140, -574678, 6114310, 1716330, -693353, 6080010, 1792120, -582402, 6077820, 1838140, -693353, 6080010, 1792120, -691010, 6063400, 1848040, -651218, 5768470, 2633360, -634330, 5637940, 2904310, -624148, 5771460, 2633360, -705896, 5762030, 2633360, -651218, 5768470, 2633360, -691010, 6063400, 1848040, -705896, 5762030, 2633360, -691010, 6063400, 1848040, -694755, 6062870, 1848380, -694755, 6062870, 1848380, -691010, 6063400, 1848040, -693353, 6080010, 1792120, -705732, 5638670, 2886490, -634330, 5637940, 2904310, -651218, 5768470, 2633360, -705732, 5638670, 2886490, -651218, 5768470, 2633360, -705896, 5762030, 2633360, -705896, 5762030, 2633360, -694744, 6062870, 1848380, -760850, 6053080, 1854410, -705896, 5762030, 2633360, -760850, 6053080, 1854410, -721703, 5760070, 2633360, -694744, 6062870, 1848380, -693353, 6080010, 1792120, -761218, 6055840, 1845290, -694744, 6062870, 1848380, -761218, 6055840, 1845290, -760850, 6053080, 1854410, -721703, 5760070, 2633360, -705732, 5638670, 2886490, -705896, 5762030, 2633360, -740649, 5757670, 2633360, -721703, 5760070, 2633360, -760850, 6053080, 1854410, -740649, 5757670, 2633360, -760850, 6053080, 1854410, -761071, 6053040, 1854430, -761071, 6053040, 1854430, -760850, 6053080, 1854410, -761218, 6055840, 1845290, -726896, 5594800, 2965e3, -705732, 5638670, 2886490, -721703, 5760070, 2633360, -726896, 5594800, 2965e3, -721703, 5760070, 2633360, -740649, 5757670, 2633360, -740639, 5757670, 2633360, -761071, 6053040, 1854430, -762155, 6052870, 1854540, -740639, 5757670, 2633360, -762155, 6052870, 1854540, -777010, 6002410, 2005210, -740639, 5757670, 2633360, -777010, 6002410, 2005210, -746979, 5756850, 2633360, -762155, 6052870, 1854540, -761071, 6053040, 1854430, -761218, 6055840, 1845290, -726896, 5594800, 2965e3, -740639, 5757670, 2633360, -746979, 5756850, 2633360, -746979, 5756850, 2633360, -777010, 6002410, 2005210, -820320, 5990190, 2024280, -746979, 5756850, 2633360, -820320, 5990190, 2024280, -762249, 5754850, 2633360, -762249, 5754850, 2633360, -726896, 5594800, 2965e3, -746979, 5756850, 2633360, -948295, 6053340, 1765630, -901932, 6039440, 1835660, -913483, 6085080, 1673050, -913483, 6085080, 1673050, -901932, 6039440, 1835660, -877559, 6095790, 1653320, -875335, 6034330, 1864890, -831708, 6025380, 1912850, -840836, 6040220, 1861730, -875335, 6034330, 1864890, -840836, 6040220, 1861730, -877559, 6095790, 1653320, -875335, 6034330, 1864890, -877559, 6095790, 1653320, -901932, 6039440, 1835660, -797003, 6047400, 1857720, -777010, 6002410, 2005210, -762155, 6052870, 1854540, -762155, 6052870, 1854540, -761218, 6055840, 1845290, -810364, 6075740, 1757430, -762155, 6052870, 1854540, -810364, 6075740, 1757430, -797003, 6047400, 1857720, -831708, 6025380, 1912850, -777010, 6002410, 2005210, -797003, 6047400, 1857720, -831708, 6025380, 1912850, -797003, 6047400, 1857720, -824576, 6042920, 1860240, -824576, 6042920, 1860240, -797003, 6047400, 1857720, -810364, 6075740, 1757430, -831708, 6025380, 1912850, -824576, 6042920, 1860240, -832381, 6041630, 1860960, -824576, 6042920, 1860240, -810364, 6075740, 1757430, -834556, 6110090, 1622700, -824576, 6042920, 1860240, -834556, 6110090, 1622700, -832381, 6041630, 1860960, -865484, 5674640, 2770960, -773350, 5564670, 3009320, -776912, 5727640, 2687460, -865484, 5674640, 2770960, -810193, 5590410, 2951740, -773350, 5564670, 3009320, -854608, 5596190, 2928340, -810193, 5590410, 2951740, -865484, 5674640, 2770960, -863336, 5633970, 2852860, -854608, 5596190, 2928340, -865484, 5674640, 2770960, -383749, 5993830, 2139270, -337950, 5816590, 2586230, -336627, 5862560, 2481170, -417987, 5821670, 2563170, -337950, 5816590, 2586230, -383749, 5993830, 2139270, -457029, 6043310, 1980840, -417987, 5821670, 2563170, -383749, 5993830, 2139270, -453696, 5787350, 2633360, -417987, 5821670, 2563170, -457029, 6043310, 1980840, -453696, 5787350, 2633360, -457029, 6043310, 1980840, -460322, 5786830, 2633360, -460311, 5780830, 2646420, -453696, 5787350, 2633360, -460322, 5786830, 2633360, -460322, 5786830, 2633360, -457029, 6043310, 1980840, -481536, 6073090, 1882150, -460322, 5786830, 2633360, -481536, 6073090, 1882150, -460746, 5786800, 2633360, -460311, 5780830, 2646420, -460322, 5786830, 2633360, -460746, 5786800, 2633360, -492576, 6088240, 1829970, -508922, 6086440, 1831470, -461160, 5786760, 2633360, -492576, 6088240, 1829970, -461160, 5786760, 2633360, -460746, 5786800, 2633360, -492576, 6088240, 1829970, -460746, 5786800, 2633360, -481536, 6073090, 1882150, -514560, 6116970, 1725820, -508922, 6086440, 1831470, -492576, 6088240, 1829970, -461160, 5786760, 2633360, -460311, 5780830, 2646420, -460746, 5786800, 2633360, -492576, 6088240, 1829970, -481536, 6073090, 1882150, -467642, 6090890, 1827710, -467642, 6090890, 1827710, -447862, 6115080, 1750760, -514560, 6116970, 1725820, -467642, 6090890, 1827710, -514560, 6116970, 1725820, -492576, 6088240, 1829970, -336627, 5862560, 2481170, -314283, 5878480, 2446420, -326130, 5895850, 2402980, -383749, 5993830, 2139270, -336627, 5862560, 2481170, -326130, 5895850, 2402980, -383749, 5993830, 2139270, -326130, 5895850, 2402980, -322274, 5992640, 2152620, -326130, 5895850, 2402980, -275809, 5908340, 2378640, -322274, 5992640, 2152620, -322274, 5992640, 2152620, -275809, 5908340, 2378640, -275063, 5937750, 2304850, -322274, 5992640, 2152620, -275063, 5937750, 2304850, -246730, 5964920, 2237340, -275063, 5937750, 2304850, -238634, 5933200, 2320470, -246730, 5964920, 2237340, -457029, 6043310, 1980840, -383749, 5993830, 2139270, -371779, 6007960, 2101670, -634330, 5637940, 2904310, -509886, 5685360, 2836040, -515425, 5713060, 2779190, -774812, 5753170, 2633360, -772744, 5753450, 2633360, -772132, 5783240, 2567900, -773350, 5564670, 3009320, -772744, 5753450, 2633360, -774812, 5753170, 2633360, -773350, 5564670, 3009320, -774812, 5753170, 2633360, -776912, 5727640, 2687460, -726896, 5594800, 2965e3, -693811, 5608550, 2947020, -705732, 5638670, 2886490, -973108, 5795180, 2471520, -907707, 5797280, 2491260, -949314, 5834840, 2386550, 4440010, 1537600, 4298630, 4385470, 1512750, 4362520, 4445780, 1524510, 4297330, 4445780, 1524510, 4297330, 4471700, 1529440, 4268790, 4487130, 1559290, 4241890, 4445780, 1524510, 4297330, 4487130, 1559290, 4241890, 4440010, 1537600, 4298630, 4373930, 1524750, 4369880, 4385470, 1512750, 4362520, 4440010, 1537600, 4298630, 4373930, 1524750, 4369880, 4440010, 1537600, 4298630, 4437140, 1544080, 4299260, 4437140, 1544080, 4299260, 4440010, 1537600, 4298630, 4487130, 1559290, 4241890, 4434230, 1550620, 4299910, 4373930, 1524750, 4369880, 4437140, 1544080, 4299260, 4437140, 1544080, 4299260, 4487130, 1559290, 4241890, 4466350, 1564490, 4261730, 4437140, 1544080, 4299260, 4466350, 1564490, 4261730, 4434230, 1550620, 4299910, 4486830, 1577580, 4235480, 4466350, 1564490, 4261730, 4487130, 1559290, 4241890, 4456430, 1500050, 4294920, 4454020, 1495480, 4298980, 4459050, 1493980, 4294330, 4459050, 1493980, 4294330, 4469e3, 1490970, 4285080, 4471700, 1529440, 4268790, 4459050, 1493980, 4294330, 4471700, 1529440, 4268790, 4456430, 1500050, 4294920, 4410770, 1493520, 4343730, 4454020, 1495480, 4298980, 4456430, 1500050, 4294920, 4410770, 1493520, 4343730, 4456430, 1500050, 4294920, 4449410, 1516220, 4296520, 4471700, 1529440, 4268790, 4449410, 1516220, 4296520, 4456430, 1500050, 4294920, 4385470, 1512750, 4362520, 4410770, 1493520, 4343730, 4449410, 1516220, 4296520, 4385470, 1512750, 4362520, 4449410, 1516220, 4296520, 4445780, 1524510, 4297330, 4445780, 1524510, 4297330, 4449410, 1516220, 4296520, 4471700, 1529440, 4268790, 4387850, 1626580, 4319250, 4383800, 1591990, 4336110, 4396250, 1622530, 4312270, 4396250, 1622530, 4312270, 4383800, 1591990, 4336110, 4408190, 1607930, 4305590, 4396250, 1622530, 4312270, 4408190, 1607930, 4305590, 4402600, 1619980, 4306790, 4402600, 1619980, 4306790, 4408190, 1607930, 4305590, 4417390, 1613970, 4293970, 4408190, 1607930, 4305590, 4383800, 1591990, 4336110, 4414480, 1594280, 4304240, 4414480, 1594280, 4304240, 4431170, 1595460, 4286720, 4417390, 1613970, 4293970, 4414480, 1594280, 4304240, 4417390, 1613970, 4293970, 4408190, 1607930, 4305590, 4383800, 1591990, 4336110, 4418260, 1586010, 4303410, 4414480, 1594280, 4304240, 4418260, 1586010, 4303410, 4419630, 1585770, 4302110, 4431170, 1595460, 4286720, 4418260, 1586010, 4303410, 4431170, 1595460, 4286720, 4414480, 1594280, 4304240, 4383800, 1591990, 4336110, 4385140, 1564070, 4344840, 4418650, 1585150, 4303330, 4383800, 1591990, 4336110, 4418650, 1585150, 4303330, 4418260, 1586010, 4303410, 4418260, 1586010, 4303410, 4418650, 1585150, 4303330, 4419630, 1585770, 4302110, 4385140, 1564070, 4344840, 4379170, 1549360, 4356040, 4418740, 1584960, 4303310, 4385140, 1564070, 4344840, 4418740, 1584960, 4303310, 4418650, 1585150, 4303330, 4419630, 1585770, 4302110, 4418650, 1585150, 4303330, 4418740, 1584960, 4303310, 4418740, 1584960, 4303310, 4379170, 1549360, 4356040, 4430740, 1558420, 4300680, 4430740, 1558420, 4300680, 4466350, 1564490, 4261730, 4419630, 1585770, 4302110, 4430740, 1558420, 4300680, 4419630, 1585770, 4302110, 4418740, 1584960, 4303310, 4379170, 1549360, 4356040, 4373930, 1524750, 4369880, 4434230, 1550620, 4299910, 4379170, 1549360, 4356040, 4434230, 1550620, 4299910, 4430740, 1558420, 4300680, 4430740, 1558420, 4300680, 4434230, 1550620, 4299910, 4466350, 1564490, 4261730, -1716200, 4284300, 4387510, -1694690, 4265500, 4413940, -1659990, 4247150, 4444510, -1716200, 4284300, 4387510, -1659990, 4247150, 4444510, -1673020, 4328980, 4360440, -1530340, 3868950, 4818030, -1673020, 4328980, 4360440, -1659990, 4247150, 4444510, -1680040, 4184930, 4495360, -1530340, 3868950, 4818030, -1659990, 4247150, 4444510, -2111890, 3829790, 4626980, -2008950, 3768120, 4721840, -2019110, 3891610, 4616870, -2111890, 3829790, 4626980, -2074290, 3762690, 4698020, -2008950, 3768120, 4721840, -2161930, 3779070, 4645410, -2074290, 3762690, 4698020, -2111890, 3829790, 4626980, -2161930, 3779070, 4645410, -2111890, 3829790, 4626980, -2168940, 3808270, 4618400, -1954120, 4009210, 4544130, -1866890, 3871670, 4696470, -1834910, 3849570, 4726940, -1900410, 3843670, 4705950, -1866890, 3871670, 4696470, -1954120, 4009210, 4544130, -1981470, 3936620, 4595120, -1900410, 3843670, 4705950, -1954120, 4009210, 4544130, -1972220, 3821760, 4694320, -1900410, 3843670, 4705950, -1981470, 3936620, 4595120, -2019110, 3891610, 4616870, -1972220, 3821760, 4694320, -1981470, 3936620, 4595120, -2008950, 3768120, 4721840, -1972220, 3821760, 4694320, -2019110, 3891610, 4616870, -1954120, 4009210, 4544130, -1834910, 3849570, 4726940, -1728540, 3713300, 4872800, -1954120, 4009210, 4544130, -1728540, 3713300, 4872800, -1859450, 4087760, 4513970, -1728540, 3713300, 4872800, -1685750, 3722780, 4880500, -1859450, 4087760, 4513970, -1859450, 4087760, 4513970, -1685750, 3722780, 4880500, -1804750, 4157790, 4472310, -1685750, 3722780, 4880500, -1613420, 3819860, 483e4, -1804750, 4157790, 4472310, -1804750, 4157790, 4472310, -1613420, 3819860, 483e4, -1723800, 4174800, 4488260, -1613420, 3819860, 483e4, -1680040, 4184930, 4495360, -1723800, 4174800, 4488260, -1551780, 4445120, 4288300, -1321010, 3953830, 4811110, -1265780, 3926430, 4848010, -1384510, 3931100, 4811870, -1321010, 3953830, 4811110, -1551780, 4445120, 4288300, -1632830, 4387730, 4317030, -1384510, 3931100, 4811870, -1551780, 4445120, 4288300, -1475460, 3912540, 4800040, -1384510, 3931100, 4811870, -1632830, 4387730, 4317030, -1673020, 4328980, 4360440, -1475460, 3912540, 4800040, -1632830, 4387730, 4317030, -1530340, 3868950, 4818030, -1475460, 3912540, 4800040, -1673020, 4328980, 4360440, -862747, 3971570, 4899100, -835985, 3911170, 4951690, -864895, 3998270, 4877100, -862747, 3971570, 4899100, -864895, 3998270, 4877100, -870821, 3996290, 4877660, -1094590, 4626130, 4237960, -870821, 3996290, 4877660, -864895, 3998270, 4877100, -921877, 3978830, 4882520, -862747, 3971570, 4899100, -870821, 3996290, 4877660, -921877, 3978830, 4882520, -870821, 3996290, 4877660, -1094590, 4626130, 4237960, -921877, 3978830, 4882520, -1094590, 4626130, 4237960, -969483, 3983930, 4869220, -1192030, 4601930, 4238030, -969483, 3983930, 4869220, -1094590, 4626130, 4237960, -1031060, 3952080, 4882420, -969483, 3983930, 4869220, -1192030, 4601930, 4238030, -1233510, 4614790, 4212270, -1031060, 3952080, 4882420, -1192030, 4601930, 4238030, -1114990, 3917590, 4891700, -1031060, 3952080, 4882420, -1233510, 4614790, 4212270, -1315940, 4550550, 4256680, -1114990, 3917590, 4891700, -1233510, 4614790, 4212270, -1186610, 3908280, 4882340, -1114990, 3917590, 4891700, -1315940, 4550550, 4256680, -1435840, 4486900, 4285200, -1186610, 3908280, 4882340, -1315940, 4550550, 4256680, -1265780, 3926430, 4848010, -1186610, 3908280, 4882340, -1435840, 4486900, 4285200, -1551780, 4445120, 4288300, -1265780, 3926430, 4848010, -1435840, 4486900, 4285200, -605527, 3883880, 5006050, -582987, 4029810, 4892860, -596661, 4077400, 4851880, -605527, 3883880, 5006050, -596661, 4077400, 4851880, -644409, 4064780, 4856330, -778292, 4643020, 4288740, -644409, 4064780, 4856330, -596661, 4077400, 4851880, -687609, 3906920, 4977630, -605527, 3883880, 5006050, -644409, 4064780, 4856330, -687609, 3906920, 4977630, -644409, 4064780, 4856330, -706235, 4047500, 4862120, -706235, 4047500, 4862120, -644409, 4064780, 4856330, -778292, 4643020, 4288740, -722877, 4042680, 4863680, -687609, 3906920, 4977630, -706235, 4047500, 4862120, -706235, 4047500, 4862120, -778292, 4643020, 4288740, -883899, 4613430, 4300110, -706235, 4047500, 4862120, -883899, 4613430, 4300110, -722877, 4042680, 4863680, -751316, 3905570, 4969530, -687609, 3906920, 4977630, -722877, 4042680, 4863680, -751316, 3905570, 4969530, -722877, 4042680, 4863680, -774221, 4027280, 4868520, -774221, 4027280, 4868520, -722877, 4042680, 4863680, -883899, 4613430, 4300110, -785021, 4023960, 4869530, -751316, 3905570, 4969530, -774221, 4027280, 4868520, -774221, 4027280, 4868520, -883899, 4613430, 4300110, -965532, 4608480, 4287940, -774221, 4027280, 4868520, -965532, 4608480, 4287940, -785021, 4023960, 4869530, -835985, 3911170, 4951690, -751316, 3905570, 4969530, -785021, 4023960, 4869530, -835985, 3911170, 4951690, -785021, 4023960, 4869530, -853373, 4002090, 4876e3, -853373, 4002090, 4876e3, -785021, 4023960, 4869530, -965532, 4608480, 4287940, -864895, 3998270, 4877100, -835985, 3911170, 4951690, -853373, 4002090, 4876e3, -853373, 4002090, 4876e3, -965532, 4608480, 4287940, -1094590, 4626130, 4237960, -853373, 4002090, 4876e3, -1094590, 4626130, 4237960, -864895, 3998270, 4877100, -421270, 4118510, 4835640, -416319, 4088640, 4861180, -419201, 4118940, 4835460, -419201, 4118940, 4835460, -466650, 4624190, 4353390, -518971, 4663900, 4305160, -419201, 4118940, 4835460, -518971, 4663900, 4305160, -421270, 4118510, 4835640, -515166, 4097510, 4844320, -416319, 4088640, 4861180, -421270, 4118510, 4835640, -515166, 4097510, 4844320, -421270, 4118510, 4835640, -518971, 4663900, 4305160, -515166, 4097510, 4844320, -518971, 4663900, 4305160, -522041, 4098040, 4843150, -608377, 4651310, 4307060, -522041, 4098040, 4843150, -518971, 4663900, 4305160, -582987, 4029810, 4892860, -524575, 4095280, 4845190, -585917, 4080150, 4850890, -524575, 4095280, 4845190, -522041, 4098040, 4843150, -608377, 4651310, 4307060, -524575, 4095280, 4845190, -608377, 4651310, 4307060, -585917, 4080150, 4850890, -596661, 4077400, 4851880, -582987, 4029810, 4892860, -585917, 4080150, 4850890, -585917, 4080150, 4850890, -608377, 4651310, 4307060, -778292, 4643020, 4288740, -585917, 4080150, 4850890, -778292, 4643020, 4288740, -596661, 4077400, 4851880, -220156, 4059540, 4898020, -157497, 4036040, 4919670, -185398, 4161150, 4814030, -220156, 4059540, 4898020, -185398, 4161150, 4814030, -230814, 4154040, 4818180, -274390, 4511180, 4485420, -230814, 4154040, 4818180, -185398, 4161150, 4814030, -294134, 4056130, 4896970, -220156, 4059540, 4898020, -230814, 4154040, 4818180, -294134, 4056130, 4896970, -230814, 4154040, 4818180, -291473, 4143730, 4823730, -291473, 4143730, 4823730, -230814, 4154040, 4818180, -274390, 4511180, 4485420, -306733, 4140990, 4825120, -294134, 4056130, 4896970, -291466, 4143730, 4823730, -291466, 4143730, 4823730, -274390, 4511180, 4485420, -373430, 4552910, 4436170, -291466, 4143730, 4823730, -373430, 4552910, 4436170, -306733, 4140990, 4825120, -344778, 4092220, 4863750, -294134, 4056130, 4896970, -306733, 4140990, 4825120, -344778, 4092220, 4863750, -306733, 4140990, 4825120, -347454, 4133390, 4828860, -347454, 4133390, 4828860, -306733, 4140990, 4825120, -373430, 4552910, 4436170, -351164, 4132680, 4829200, -344778, 4092220, 4863750, -347454, 4133390, 4828860, -347454, 4133390, 4828860, -373430, 4552910, 4436170, -423312, 4557190, 4427340, -347454, 4133390, 4828860, -423312, 4557190, 4427340, -351164, 4132680, 4829200, -416319, 4088640, 4861180, -344778, 4092220, 4863750, -351164, 4132680, 4829200, -416319, 4088640, 4861180, -351164, 4132680, 4829200, -417130, 4119370, 4835270, -417130, 4119370, 4835270, -351164, 4132680, 4829200, -423312, 4557190, 4427340, -416319, 4088640, 4861180, -417130, 4119370, 4835270, -419201, 4118940, 4835460, -417130, 4119370, 4835270, -423312, 4557190, 4427340, -466650, 4624190, 4353390, -417130, 4119370, 4835270, -466650, 4624190, 4353390, -419201, 4118940, 4835460, -185398, 4161150, 4814030, -157497, 4036040, 4919670, -160571, 4164810, 4811770, -160571, 4164810, 4811770, -167876, 4505410, 4496380, -274390, 4511180, 4485420, -160571, 4164810, 4811770, -274390, 4511180, 4485420, -185398, 4161150, 4814030, -157497, 4036040, 4919670, -126156, 4169630, 4808640, -160571, 4164810, 4811770, -126156, 4169630, 4808640, -73986, 4366150, 4633270, -167876, 4505410, 4496380, -126156, 4169630, 4808640, -167876, 4505410, 4496380, -160571, 4164810, 4811770, -157497, 4036040, 4919670, -50815.1, 4079210, 4886430, -58409.5, 4178270, 4802480, -157497, 4036040, 4919670, -58409.5, 4178270, 4802480, -126156, 4169630, 4808640, -126156, 4169630, 4808640, -58409.5, 4178270, 4802480, -73986, 4366150, 4633270, -58409.5, 4178270, 4802480, -50815.1, 4079210, 4886430, -37783.2, 4180670, 4800610, -37783.2, 4180670, 4800610, -21078.7, 4300920, 4694010, -73986, 4366150, 4633270, -37783.2, 4180670, 4800610, -73986, 4366150, 4633270, -58409.5, 4178270, 4802480, -50815.1, 4079210, 4886430, 24168.4, 4187260, 4794990, -37783.2, 4180670, 4800610, 24168.4, 4187260, 4794990, 85378, 4269150, 4722010, -21078.7, 4300920, 4694010, 24168.4, 4187260, 4794990, -21078.7, 4300920, 4694010, -37783.2, 4180670, 4800610, -50815.1, 4079210, 4886430, 86563.5, 4151900, 4824730, 86181.1, 4192900, 4789380, -50815.1, 4079210, 4886430, 86181.1, 4192900, 4789380, 24168.4, 4187260, 4794990, 24168.4, 4187260, 4794990, 86181.1, 4192900, 4789380, 85378, 4269150, 4722010, 86181.1, 4192900, 4789380, 86563.5, 4151900, 4824730, 122923, 4195810, 4786050, 122923, 4195810, 4786050, 146466, 4223410, 4761220, 85378, 4269150, 4722010, 122923, 4195810, 4786050, 85378, 4269150, 4722010, 86181.1, 4192900, 4789380, 86563.5, 4151900, 4824730, 163518, 4164220, 4812180, 153882, 4197990, 4783260, 86563.5, 4151900, 4824730, 153882, 4197990, 4783260, 122923, 4195810, 4786050, 122923, 4195810, 4786050, 153882, 4197990, 4783260, 146466, 4223410, 4761220, -1848660, 3679010, 4854810, -1774710, 3723090, 4848830, -1845470, 3751810, 4800370, -1845470, 3751810, 4800370, -1774710, 3723090, 4848830, -1834910, 3849570, 4726940, -1774710, 3723090, 4848830, -1728540, 3713300, 4872800, -1834910, 3849570, 4726940, -73986, 4366150, 4633270, -45606, 4460440, 4543550, -74174.8, 4494440, 4509780, -167876, 4505410, 4496380, -73986, 4366150, 4633270, -74174.8, 4494440, 4509780, -605527, 3883880, 5006050, -547510, 3983630, 4934320, -582987, 4029810, 4892860, -1613420, 3819860, 483e4, -1530340, 3868950, 4818030, -1680040, 4184930, 4495360, 4750570, 3402020, -2548560, 4770720, 3386840, -2531190, 4744180, 3378830, -2590680, 4744180, 3378830, -2590680, 4770720, 3386840, -2531190, 4755430, 3334820, -2626590, 4857400, 3424500, -2307210, 4860920, 3425970, -2297670, 4858070, 3423470, -2307320, 4858070, 3423470, -2307320, 4755430, 3334820, -2626590, 4770720, 3386840, -2531190, 4858070, 3423470, -2307320, 4770720, 3386840, -2531190, 4857400, 3424500, -2307210, 4856120, 3426450, -2307e3, 4860920, 3425970, -2297670, 4857400, 3424500, -2307210, 4856120, 3426450, -2307e3, 4857400, 3424500, -2307210, 4770720, 3386840, -2531190, 4856120, 3426450, -2307e3, 4770720, 3386840, -2531190, 4829650, 3428880, -2358060, 4818790, 3422740, -2388780, 4829650, 3428880, -2358060, 4770720, 3386840, -2531190, 4777690, 3412160, -2483940, 4818790, 3422740, -2388780, 4770720, 3386840, -2531190, 4860920, 3425970, -2297670, 4913670, 3402630, -2219320, 4880360, 3389080, -2311030, 4860920, 3425970, -2297670, 4880360, 3389080, -2311030, 4858070, 3423470, -2307320, 4858070, 3423470, -2307320, 4880360, 3389080, -2311030, 4755430, 3334820, -2626590, 4762410, 3319450, -2633360, 4798660, 3266830, -2633360, 4790040, 3257240, -2660620, 4880360, 3389080, -2311030, 4913670, 3402630, -2219320, 4890280, 3373610, -2312690, 4762410, 3319450, -2633360, 4755430, 3334820, -2626590, 4880360, 3389080, -2311030, 4762410, 3319450, -2633360, 4880360, 3389080, -2311030, 4890280, 3373610, -2312690, 4762410, 3319450, -2633360, 4890280, 3373610, -2312690, 4798660, 3266830, -2633360, 4798660, 3266830, -2633360, 4800240, 3264510, -2633360, 4790040, 3257240, -2660620, 5078630, 3465360, -1691200, 4909800, 3342840, -2315970, 4890280, 3373610, -2312690, 5078630, 3465360, -1691200, 4890280, 3373610, -2312690, 4913670, 3402630, -2219320, 4909800, 3342840, -2315970, 4800240, 3264510, -2633360, 4798660, 3266830, -2633360, 4909800, 3342840, -2315970, 4798660, 3266830, -2633360, 4890280, 3373610, -2312690, 4913670, 3402630, -2219320, 5056590, 3459900, -1766250, 5078630, 3465360, -1691200, 5000970, 3506120, -1831790, 5056590, 3459900, -1766250, 4913670, 3402630, -2219320, 5000970, 3506120, -1831790, 4913670, 3402630, -2219320, 4930970, 3425380, -2145210, 4913250, 3465710, -2121110, 5000970, 3506120, -1831790, 4930970, 3425380, -2145210, 4999960, 3545290, -1758150, 5000970, 3506120, -1831790, 4913250, 3465710, -2121110, 4891610, 3540480, -2046840, 4999960, 3545290, -1758150, 4913250, 3465710, -2121110, 4891610, 3540480, -2046840, 4978250, 3586720, -1735760, 4999960, 3545290, -1758150, 5019980, 3716500, -1287190, 4978250, 3586720, -1735760, 4891610, 3540480, -2046840, 5019980, 3716500, -1287190, 5013970, 3601150, -1598490, 4978250, 3586720, -1735760, 5019980, 3716500, -1287190, 5101930, 3614020, -1256650, 5013970, 3601150, -1598490, 5013970, 3601150, -1598490, 5101930, 3614020, -1256650, 5056240, 3575780, -1520930, 5101930, 3614020, -1256650, 5085600, 3548710, -1486280, 5056240, 3575780, -1520930, 4678390, 3992500, -1683480, 4785090, 4060440, -1134770, 4689350, 3947300, -1757450, 4678390, 3992500, -1683480, 4753240, 4050660, -1291610, 4785090, 4060440, -1134770, 4728910, 4047560, -1386490, 4753240, 4050660, -1291610, 4678390, 3992500, -1683480, 4695700, 4024650, -1554660, 4728910, 4047560, -1386490, 4678390, 3992500, -1683480, 4673080, 4030210, -1607140, 4695700, 4024650, -1554660, 4678390, 3992500, -1683480, 4785090, 4060440, -1134770, 4831900, 3986090, -1197810, 4689350, 3947300, -1757450, 4689350, 3947300, -1757450, 4831900, 3986090, -1197810, 4717950, 3882630, -1823270, 4831900, 3986090, -1197810, 4769740, 3799230, -1863520, 4717950, 3882630, -1823270, 4831900, 3986090, -1197810, 4900620, 3888030, -1239960, 4769740, 3799230, -1863520, 4830830, 3694930, -1914800, 5005260, 3741030, -1273490, 5019980, 3716500, -1287190, 4959890, 3801910, -1270710, 5005260, 3741030, -1273490, 4830830, 3694930, -1914800, 4769740, 3799230, -1863520, 4959890, 3801910, -1270710, 4830830, 3694930, -1914800, 4769740, 3799230, -1863520, 4941340, 3836710, -1238180, 4959890, 3801910, -1270710, 4769740, 3799230, -1863520, 4900620, 3888030, -1239960, 4941340, 3836710, -1238180, 5019980, 3716500, -1287190, 4891610, 3540480, -2046840, 4872960, 3577100, -2027700, 4830830, 3694930, -1914800, 5019980, 3716500, -1287190, 4872960, 3577100, -2027700, 5147480, 3545710, -1265420, 5150420, 3510740, -1347680, 5106700, 3517620, -1487850, 5101930, 3614020, -1256650, 5147480, 3545710, -1265420, 5106700, 3517620, -1487850, 5101930, 3614020, -1256650, 5106700, 3517620, -1487850, 5085600, 3548710, -1486280, 4790040, 3257240, -2660620, 4801030, 3263350, -2633360, 4801820, 3262180, -2633360, 5134110, 3435650, -1581440, 5179280, 3391030, -1529970, 4928670, 3312690, -2319190, 5134110, 3435650, -1581440, 4928670, 3312690, -2319190, 4919280, 3327760, -2317580, 4919280, 3327760, -2317580, 4928670, 3312690, -2319190, 4801820, 3262180, -2633360, 4919280, 3327760, -2317580, 4801820, 3262180, -2633360, 4801030, 3263350, -2633360, 4790040, 3257240, -2660620, 4800620, 3263950, -2633360, 4801030, 3263350, -2633360, 5119650, 3461680, -1571600, 5134110, 3435650, -1581440, 4919280, 3327760, -2317580, 5119650, 3461680, -1571600, 4919280, 3327760, -2317580, 4914330, 3335650, -2316750, 4914330, 3335650, -2316750, 4919280, 3327760, -2317580, 4801030, 3263350, -2633360, 4914330, 3335650, -2316750, 4801030, 3263350, -2633360, 4800620, 3263950, -2633360, 4800240, 3264510, -2633360, 4800620, 3263950, -2633360, 4790040, 3257240, -2660620, 5078630, 3465360, -1691200, 5119650, 3461680, -1571600, 4914330, 3335650, -2316750, 5078630, 3465360, -1691200, 4914330, 3335650, -2316750, 4909800, 3342840, -2315970, 4909800, 3342840, -2315970, 4914330, 3335650, -2316750, 4800620, 3263950, -2633360, 4909800, 3342840, -2315970, 4800620, 3263950, -2633360, 4800240, 3264510, -2633360, 5089900, 3492910, -1598700, 5119650, 3461680, -1571600, 5078630, 3465360, -1691200, 5077020, 3491650, -1641560, 5089900, 3492910, -1598700, 5078630, 3465360, -1691200, 4867060, 3164030, -2633360, 4836020, 3142140, -2714920, 4790040, 3257240, -2660620, 4867060, 3164030, -2633360, 4790040, 3257240, -2660620, 4801820, 3262180, -2633360, 4928670, 3312690, -2319190, 5179280, 3391030, -1529970, 4973340, 3239680, -2326920, 4973340, 3239680, -2326920, 4867060, 3164030, -2633360, 4801820, 3262180, -2633360, 4973340, 3239680, -2326920, 4801820, 3262180, -2633360, 4928670, 3312690, -2319190, 4867060, 3164030, -2633360, 4868840, 3161280, -2633360, 4836020, 3142140, -2714920, 5179280, 3391030, -1529970, 5098220, 3291860, -1956180, 4981420, 3226200, -2328340, 5179280, 3391030, -1529970, 4981420, 3226200, -2328340, 4973340, 3239680, -2326920, 4973340, 3239680, -2326920, 4981420, 3226200, -2328340, 4868840, 3161280, -2633360, 4973340, 3239680, -2326920, 4868840, 3161280, -2633360, 4867060, 3164030, -2633360, 5179280, 3391030, -1529970, 5133440, 3314310, -1822480, 5098220, 3291860, -1956180, 5179280, 3391030, -1529970, 5171830, 3273060, -1788400, 5133440, 3314310, -1822480, 5179280, 3391030, -1529970, 5200780, 3231160, -1780680, 5171830, 3273060, -1788400, 5179280, 3391030, -1529970, 5219390, 3215580, -1754390, 5200780, 3231160, -1780680, 5179280, 3391030, -1529970, 5250730, 3176590, -1731930, 5219390, 3215580, -1754390, 5179280, 3391030, -1529970, 5295890, 3099510, -1734040, 5250730, 3176590, -1731930, 5179280, 3391030, -1529970, 5309030, 3099160, -1694310, 5295890, 3099510, -1734040, 5179280, 3391030, -1529970, 5331950, 3100710, -1618300, 5309030, 3099160, -1694310, 4927330, 3069320, -2633360, 4879710, 3030010, -2763450, 4853350, 3031040, -2808080, 4927330, 3069320, -2633360, 4853350, 3031040, -2808080, 4926470, 3070700, -2633360, 4926470, 3070700, -2633360, 4933590, 3074550, -2615610, 4927330, 3069320, -2633360, 4919080, 3082530, -2633360, 4926470, 3070700, -2633360, 4853350, 3031040, -2808080, 5034410, 3175860, -2283430, 5019960, 3160810, -2335190, 5018740, 3162920, -2334980, 5019960, 3160810, -2335190, 4933590, 3074550, -2615610, 4926470, 3070700, -2633360, 5019960, 3160810, -2335190, 4926470, 3070700, -2633360, 4919080, 3082530, -2633360, 5019960, 3160810, -2335190, 4919080, 3082530, -2633360, 5018740, 3162920, -2334980, 4919080, 3082530, -2633360, 4853350, 3031040, -2808080, 4830270, 3026700, -2851900, 4919080, 3082530, -2633360, 4830270, 3026700, -2851900, 4915520, 3088190, -2633360, 5034410, 3175860, -2283430, 5018740, 3162920, -2334980, 5018240, 3163780, -2334880, 5018740, 3162920, -2334980, 4919080, 3082530, -2633360, 4915520, 3088190, -2633360, 5018740, 3162920, -2334980, 4915520, 3088190, -2633360, 5018240, 3163780, -2334880, 4915520, 3088190, -2633360, 4830270, 3026700, -2851900, 4845050, 3095520, -2751880, 4915520, 3088190, -2633360, 4845050, 3095520, -2751880, 4896520, 3118240, -2633360, 5015600, 3168320, -2334410, 5034410, 3175860, -2283430, 5018240, 3163780, -2334880, 5018240, 3163780, -2334880, 4915520, 3088190, -2633360, 4896520, 3118240, -2633360, 5018240, 3163780, -2334880, 4896520, 3118240, -2633360, 5015600, 3168320, -2334410, 4823230, 3091750, -2793850, 4845050, 3095520, -2751880, 4830270, 3026700, -2851900, 4789440, 3090140, -2852740, 4823230, 3091750, -2793850, 4830270, 3026700, -2851900, 4806620, 3111450, -2800540, 4823230, 3091750, -2793850, 4789440, 3090140, -2852740, 5098220, 3291860, -1956180, 5089090, 3261480, -2029e3, 5050440, 3251380, -2138080, 4836020, 3142140, -2714920, 4868840, 3161280, -2633360, 4869760, 3159870, -2633360, 5098220, 3291860, -1956180, 5050440, 3251380, -2138080, 4985550, 3219290, -2329070, 5098220, 3291860, -1956180, 4985550, 3219290, -2329070, 4981420, 3226200, -2328340, 4981420, 3226200, -2328340, 4985550, 3219290, -2329070, 4869760, 3159870, -2633360, 4981420, 3226200, -2328340, 4869760, 3159870, -2633360, 4868840, 3161280, -2633360, 4836020, 3142140, -2714920, 4869760, 3159870, -2633360, 4870980, 3157980, -2633360, 5050440, 3251380, -2138080, 5038070, 3229380, -2199320, 4991020, 3210110, -2330030, 5050440, 3251380, -2138080, 4991020, 3210110, -2330030, 4985550, 3219290, -2329070, 4985550, 3219290, -2329070, 4991020, 3210110, -2330030, 4870980, 3157980, -2633360, 4985550, 3219290, -2329070, 4870980, 3157980, -2633360, 4869760, 3159870, -2633360, 4890900, 3127040, -2633360, 4845050, 3095520, -2751880, 4836020, 3142140, -2714920, 4890900, 3127040, -2633360, 4836020, 3142140, -2714920, 4870980, 3157980, -2633360, 4991020, 3210110, -2330030, 5038070, 3229380, -2199320, 4996740, 3200440, -2331040, 4996740, 3200440, -2331040, 4890900, 3127040, -2633360, 4870980, 3157980, -2633360, 4996740, 3200440, -2331040, 4870980, 3157980, -2633360, 4991020, 3210110, -2330030, 4890900, 3127040, -2633360, 4892710, 3124210, -2633360, 4845050, 3095520, -2751880, 5038070, 3229380, -2199320, 5043610, 3214210, -2208770, 5002860, 3190060, -2332140, 5038070, 3229380, -2199320, 5002860, 3190060, -2332140, 4996740, 3200440, -2331040, 4996740, 3200440, -2331040, 5002860, 3190060, -2332140, 4892710, 3124210, -2633360, 4996740, 3200440, -2331040, 4892710, 3124210, -2633360, 4890900, 3127040, -2633360, 4845050, 3095520, -2751880, 4892710, 3124210, -2633360, 4896520, 3118240, -2633360, 5043610, 3214210, -2208770, 5034410, 3175860, -2283430, 5015600, 3168320, -2334410, 5043610, 3214210, -2208770, 5015600, 3168320, -2334410, 5002860, 3190060, -2332140, 5002860, 3190060, -2332140, 5015600, 3168320, -2334410, 4896520, 3118240, -2633360, 5002860, 3190060, -2332140, 4896520, 3118240, -2633360, 4892710, 3124210, -2633360, 5034410, 3175860, -2283430, 5043520, 3119870, -2339470, 5023410, 3154870, -2335810, 5043520, 3119870, -2339470, 5052240, 3058710, -2400210, 4974750, 3068920, -2543740, 5043520, 3119870, -2339470, 4974750, 3068920, -2543740, 5023410, 3154870, -2335810, 5034410, 3175860, -2283430, 5023410, 3154870, -2335810, 5019960, 3160810, -2335190, 5023410, 3154870, -2335810, 4974750, 3068920, -2543740, 4933590, 3074550, -2615610, 5023410, 3154870, -2335810, 4933590, 3074550, -2615610, 5019960, 3160810, -2335190, 5050440, 3251380, -2138080, 5089090, 3261480, -2029e3, 5068790, 3243120, -2107190, 4928240, 3067860, -2633360, 4898870, 3031800, -2727600, 4879710, 3030010, -2763450, 4928240, 3067860, -2633360, 4879710, 3030010, -2763450, 4927330, 3069320, -2633360, 4933590, 3074550, -2615610, 4928240, 3067860, -2633360, 4927330, 3069320, -2633360, 4766710, 4068040, -1183520, 4785090, 4060440, -1134770, 4753240, 4050660, -1291610, 4809910, 3438800, -2383650, 4818790, 3422740, -2388780, 4777690, 3412160, -2483940, 5788220, -1687870, 2073470, 5752120, -1679620, 2177320, 5767160, -1694930, 2125390, 5793300, -1329940, 2305170, 5752120, -1679620, 2177320, 5788220, -1687870, 2073470, 5793300, -1329940, 2305170, 5788220, -1687870, 2073470, 5824980, -1686400, 1969800, 5793300, -1329940, 2305170, 5824980, -1686400, 1969800, 5877940, -1698880, 1795150, 5877940, -1698880, 1795150, 5824980, -1686400, 1969800, 5851620, -1707870, 1870500, 5877940, -1698880, 1795150, 5851620, -1707870, 1870500, 5877230, -1736800, 1761080, 5851620, -1707870, 1870500, 5858460, -1740880, 1818290, 5877230, -1736800, 1761080, 5709390, -1049840, 2633360, 5679260, -1202190, 2633360, 5727390, -1210950, 2523550, 5709390, -1049840, 2633360, 5727390, -1210950, 2523550, 5729560, -1198150, 2524720, 5729560, -1198150, 2524720, 5727390, -1210950, 2523550, 5731100, -1211620, 2514850, 5676210, -867293, 2767220, 5614770, -1190320, 2772430, 5679260, -1202190, 2633360, 5676210, -867293, 2767220, 5679260, -1202190, 2633360, 5709390, -1049840, 2633360, 5709390, -1049840, 2633360, 5729560, -1198150, 2524720, 5766490, -945004, 2547830, 5709390, -1049840, 2633360, 5766490, -945004, 2547830, 5732580, -914779, 2633360, 5729560, -1198150, 2524720, 5731100, -1211620, 2514850, 6036810, -1264920, 1618620, 5729560, -1198150, 2524720, 6036810, -1264920, 1618620, 5766490, -945004, 2547830, 5676210, -867293, 2767220, 5709390, -1049840, 2633360, 5732580, -914779, 2633360, 6036810, -1264920, 1618620, 5731100, -1211620, 2514850, 6034280, -1301440, 1599110, 5731100, -1211620, 2514850, 5999760, -1366490, 1672540, 6034280, -1301440, 1599110, 5731100, -1211620, 2514850, 5714360, -1306060, 2505720, 5999760, -1366490, 1672540, 5714360, -1306060, 2505720, 5730400, -1335490, 2453380, 5793300, -1329940, 2305170, 5999760, -1366490, 1672540, 5714360, -1306060, 2505720, 5793300, -1329940, 2305170, 5999760, -1366490, 1672540, 5793300, -1329940, 2305170, 5963610, -1424660, 1750920, 5793300, -1329940, 2305170, 5938780, -1491660, 1779070, 5963610, -1424660, 1750920, 5793300, -1329940, 2305170, 5917220, -1538820, 1810280, 5938780, -1491660, 1779070, 5793300, -1329940, 2305170, 5902280, -1596500, 1809110, 5917220, -1538820, 1810280, 5793300, -1329940, 2305170, 5895060, -1648560, 1785980, 5902280, -1596500, 1809110, 5793300, -1329940, 2305170, 5877940, -1698880, 1795150, 5895060, -1648560, 1785980, 5726950, -1700350, 2226670, 5688700, -1722420, 2305810, 5694850, -1747980, 2271370, 5793300, -1329940, 2305170, 5688700, -1722420, 2305810, 5726950, -1700350, 2226670, 5793300, -1329940, 2305170, 5726950, -1700350, 2226670, 5752120, -1679620, 2177320, 5736800, -887916, 2633360, 5771840, -900242, 2551900, 5780680, -818563, 2559330, 5736800, -887916, 2633360, 5780680, -818563, 2559330, 5744570, -836200, 2633360, 5771840, -900242, 2551900, 6062830, -1020040, 1692040, 6118900, -593251, 1693660, 5771840, -900242, 2551900, 6118900, -593251, 1693660, 5780680, -818563, 2559330, 5744570, -836200, 2633360, 5676210, -867293, 2767220, 5736800, -887916, 2633360, 5749590, -800925, 2633360, 5744570, -836200, 2633360, 5780680, -818563, 2559330, 5749590, -800925, 2633360, 5780680, -818563, 2559330, 5783830, -786537, 2562230, 6118900, -593251, 1693660, 5783830, -786537, 2562230, 5780680, -818563, 2559330, 5601880, -855646, 2917210, 5676210, -867293, 2767220, 5744570, -836200, 2633360, 5601880, -855646, 2917210, 5744570, -836200, 2633360, 5749590, -800925, 2633360, 5768770, -648494, 2633360, 5749590, -800925, 2633360, 5783830, -786537, 2562230, 5768770, -648494, 2633360, 5783830, -786537, 2562230, 5795540, -645768, 2574990, 6118900, -593251, 1693660, 5795540, -645768, 2574990, 5783830, -786537, 2562230, 5749380, -650362, 2674720, 5601880, -855646, 2917210, 5749590, -800925, 2633360, 5749380, -650362, 2674720, 5749590, -800925, 2633360, 5768770, -648494, 2633360, 5768840, -647876, 2633360, 5768770, -648494, 2633360, 5795540, -645768, 2574990, 5768840, -647876, 2633360, 5795540, -645768, 2574990, 5795650, -644280, 2575130, 5795650, -644280, 2575130, 5795540, -645768, 2574990, 6118900, -593251, 1693660, 5795650, -644280, 2575130, 6118900, -593251, 1693660, 5938800, -621168, 2234220, 5768840, -647876, 2633360, 5749380, -650362, 2674720, 5768770, -648494, 2633360, 6094530, -585604, 1781280, 5938800, -621168, 2234220, 6118900, -593251, 1693660, 6100080, -567528, 1768190, 6094530, -585604, 1781280, 6118900, -593251, 1693660, 5736550, -889573, 2633360, 5771520, -902955, 2551660, 5771840, -900242, 2551900, 5736550, -889573, 2633360, 5771840, -900242, 2551900, 5736800, -887916, 2633360, 5771520, -902955, 2551660, 6066570, -1037010, 1668310, 6062830, -1020040, 1692040, 5771520, -902955, 2551660, 6062830, -1020040, 1692040, 5771840, -900242, 2551900, 5676210, -867293, 2767220, 5736550, -889573, 2633360, 5736800, -887916, 2633360, 5735770, -894553, 2633360, 5770560, -911146, 2550920, 5771520, -902955, 2551660, 5735770, -894553, 2633360, 5771520, -902955, 2551660, 5736550, -889573, 2633360, 5770560, -911146, 2550920, 6057520, -1077570, 1675400, 6066570, -1037010, 1668310, 5770560, -911146, 2550920, 6066570, -1037010, 1668310, 5771520, -902955, 2551660, 5676210, -867293, 2767220, 5735770, -894553, 2633360, 5736550, -889573, 2633360, 5734720, -901242, 2633360, 5769250, -922237, 2549900, 5770560, -911146, 2550920, 5734720, -901242, 2633360, 5770560, -911146, 2550920, 5735770, -894553, 2633360, 5769250, -922237, 2549900, 6052280, -1138210, 1654280, 6057520, -1077570, 1675400, 5769250, -922237, 2549900, 6057520, -1077570, 1675400, 5770560, -911146, 2550920, 5676210, -867293, 2767220, 5734720, -901242, 2633360, 5735770, -894553, 2633360, 5733210, -910806, 2633360, 5767320, -938277, 2548440, 5769250, -922237, 2549900, 5733210, -910806, 2633360, 5769250, -922237, 2549900, 5734720, -901242, 2633360, 5767320, -938277, 2548440, 6029990, -1210290, 1684020, 6052280, -1138210, 1654280, 5767320, -938277, 2548440, 6052280, -1138210, 1654280, 5769250, -922237, 2549900, 5676210, -867293, 2767220, 5733210, -910806, 2633360, 5734720, -901242, 2633360, 5732580, -914768, 2633360, 5766490, -944986, 2547830, 5767320, -938277, 2548440, 5732580, -914768, 2633360, 5767320, -938277, 2548440, 5733210, -910806, 2633360, 5766490, -944986, 2547830, 6023870, -1243770, 1681550, 6029990, -1210290, 1684020, 5766490, -944986, 2547830, 6029990, -1210290, 1684020, 5767320, -938277, 2548440, 5676210, -867293, 2767220, 5732580, -914768, 2633360, 5733210, -910806, 2633360, 5732580, -914779, 2633360, 5766490, -945004, 2547830, 5766490, -944986, 2547830, 5732580, -914779, 2633360, 5766490, -944986, 2547830, 5732580, -914768, 2633360, 5766490, -945004, 2547830, 6036810, -1264920, 1618620, 6023870, -1243770, 1681550, 5766490, -945004, 2547830, 6023870, -1243770, 1681550, 5766490, -944986, 2547830, 5676210, -867293, 2767220, 5732580, -914779, 2633360, 5732580, -914768, 2633360, 5763860, -496502, 2676520, 5601880, -855646, 2917210, 5749380, -650362, 2674720, 5000970, 3506120, -1831790, 5085600, 3548710, -1486280, 5106700, 3517620, -1487850, 5056240, 3575780, -1520930, 5085600, 3548710, -1486280, 5000970, 3506120, -1831790, 4999960, 3545290, -1758150, 5056240, 3575780, -1520930, 5000970, 3506120, -1831790, 5013970, 3601150, -1598490, 5056240, 3575780, -1520930, 4999960, 3545290, -1758150, 4978250, 3586720, -1735760, 5013970, 3601150, -1598490, 4999960, 3545290, -1758150, 5188120, 3536440, -1117670, 5216340, 3510630, -1066870, 5119650, 3461680, -1571600, 5188120, 3536440, -1117670, 5119650, 3461680, -1571600, 5150420, 3510740, -1347680, 5089900, 3492910, -1598700, 5150420, 3510740, -1347680, 5119650, 3461680, -1571600, 5106700, 3517620, -1487850, 5150420, 3510740, -1347680, 5089900, 3492910, -1598700, 5106700, 3517620, -1487850, 5089900, 3492910, -1598700, 5077020, 3491650, -1641560, 5000970, 3506120, -1831790, 5106700, 3517620, -1487850, 5077020, 3491650, -1641560, 5000970, 3506120, -1831790, 5077020, 3491650, -1641560, 5056590, 3459900, -1766250, 5134110, 3435650, -1581440, 5206250, 3420700, -1364520, 5179280, 3391030, -1529970, 5134110, 3435650, -1581440, 5236230, 3441560, -1186900, 5206250, 3420700, -1364520, 5134110, 3435650, -1581440, 5230590, 3460180, -1157450, 5236230, 3441560, -1186900, 5134110, 3435650, -1581440, 5232850, 3495120, -1036710, 5230590, 3460180, -1157450, 5216340, 3510630, -1066870, 5232850, 3495120, -1036710, 5134110, 3435650, -1581440, 5119650, 3461680, -1571600, 5216340, 3510630, -1066870, 5134110, 3435650, -1581440, 5179280, 3391030, -1529970, 5217900, 3387480, -1402100, 5215950, 3347060, -1502140, 5206250, 3420700, -1364520, 5217900, 3387480, -1402100, 5179280, 3391030, -1529970, 5232850, 3495120, -1036710, 5294700, 3406890, -1016350, 5259670, 3445950, -1065020, 5232850, 3495120, -1036710, 5259670, 3445950, -1065020, 5230590, 3460180, -1157450, 5236230, 3441560, -1186900, 5233680, 3413650, -1274870, 5206250, 3420700, -1364520, 5147480, 3545710, -1265420, 5188120, 3536440, -1117670, 5150420, 3510740, -1347680, 5077020, 3491650, -1641560, 5078630, 3465360, -1691200, 5056590, 3459900, -1766250, -2975030, 5623120, 457117, -2887400, 5635200, 764236, -2888980, 5666270, 475704, -2975030, 5623120, 457117, -2940760, 5614890, 708670, -2887400, 5635200, 764236, -2975030, 5623120, 457117, -2947680, 5617120, 660882, -2940760, 5614890, 708670, -3013580, 5585620, 630212, -2947680, 5617120, 660882, -2975030, 5623120, 457117, -3026180, 5587480, 548496, -3013580, 5585620, 630212, -2975030, 5623120, 457117, -3045660, 5581960, 494680, -3026180, 5587480, 548496, -2975030, 5623120, 457117, -2888980, 5666270, 475704, -2802010, 5689160, 678004, -2774770, 5723060, 475756, -2888980, 5666270, 475704, -2847520, 5655510, 763876, -2802010, 5689160, 678004, -2887400, 5635200, 764236, -2847520, 5655510, 763876, -2888980, 5666270, 475704, -2743590, 5747160, 350261, -2722780, 5747880, 476867, -2705770, 5767280, 311860, -2743590, 5747160, 350261, -2726250, 5739920, 547252, -2722780, 5747880, 476867, -2743590, 5747160, 350261, -2728640, 5733320, 601490, -2726250, 5739920, 547252, -2802010, 5689160, 678004, -2728640, 5733320, 601490, -2743590, 5747160, 350261, -2802010, 5689160, 678004, -2743590, 5747160, 350261, -2774770, 5723060, 475756, -2559120, 5826250, 430197, -2488100, 5862730, 342880, -2532760, 5848930, 235311, -2559120, 5826250, 430197, -2532760, 5848930, 235311, -2569300, 5832830, 238916, -2573900, 5834160, 134620, -2569300, 5832830, 238916, -2532760, 5848930, 235311, -2606850, 5799420, 499935, -2559120, 5826250, 430197, -2569300, 5832830, 238916, -2606850, 5799420, 499935, -2569300, 5832830, 238916, -2584340, 5826120, 240403, -2584340, 5826120, 240403, -2569300, 5832830, 238916, -2573900, 5834160, 134620, -2644400, 5798850, 246356, -2606850, 5799420, 499935, -2584340, 5826120, 240403, -2584340, 5826120, 240403, -2573900, 5834160, 134620, -2656400, 5796460, 158181, -2584340, 5826120, 240403, -2656400, 5796460, 158181, -2644400, 5798850, 246356, -2654700, 5782370, 442788, -2606850, 5799420, 499935, -2644400, 5798850, 246356, -2654700, 5782370, 442788, -2644400, 5798850, 246356, -2656420, 5793300, 247557, -2656420, 5793300, 247557, -2644400, 5798850, 246356, -2656400, 5796460, 158181, -2654700, 5782370, 442788, -2656420, 5793300, 247557, -2686260, 5779400, 250532, -2654700, 5782370, 442788, -2686260, 5779400, 250532, -2705770, 5767280, 311860, -2686260, 5779400, 250532, -2656420, 5793300, 247557, -2656400, 5796460, 158181, -2705770, 5767280, 311860, -2674730, 5770110, 480359, -2654700, 5782370, 442788, -2722780, 5747880, 476867, -2674730, 5770110, 480359, -2705770, 5767280, 311860, -2532760, 5848930, 235311, -2488100, 5862730, 342880, -2481180, 5871200, 230239, -2481180, 5871200, 230239, -2476940, 5875180, 165599, -2573900, 5834160, 134620, -2481180, 5871200, 230239, -2573900, 5834160, 134620, -2532760, 5848930, 235311, -2488100, 5862730, 342880, -2451060, 5883950, 227283, -2481180, 5871200, 230239, -2451060, 5883950, 227283, -2427730, 5895960, 155908, -2476940, 5875180, 165599, -2451060, 5883950, 227283, -2476940, 5875180, 165599, -2481180, 5871200, 230239, -2488100, 5862730, 342880, -2430540, 5892540, 225276, -2451060, 5883950, 227283, -2430540, 5892540, 225276, -2368140, 5921360, 100004, -2427730, 5895960, 155908, -2430540, 5892540, 225276, -2427730, 5895960, 155908, -2451060, 5883950, 227283, -2488100, 5862730, 342880, -2365340, 5914670, 318974, -2366920, 5918620, 219067, -2488100, 5862730, 342880, -2366920, 5918620, 219067, -2430540, 5892540, 225276, -2430540, 5892540, 225276, -2366920, 5918620, 219067, -2368140, 5921360, 100004, -2368140, 5921360, 100004, -2302080, 5944650, 204598, -2301900, 5947280, 107968, -2341e3, 5929010, 216545, -2321570, 5933080, 298144, -2303850, 5943670, 212934, -2303850, 5943670, 212934, -2302080, 5944650, 204598, -2368140, 5921360, 100004, -2303850, 5943670, 212934, -2368140, 5921360, 100004, -2341e3, 5929010, 216545, -2365340, 5914670, 318974, -2321570, 5933080, 298144, -2341e3, 5929010, 216545, -2365340, 5914670, 318974, -2341e3, 5929010, 216545, -2366920, 5918620, 219067, -2368140, 5921360, 100004, -2366920, 5918620, 219067, -2341e3, 5929010, 216545, -2234930, 5973140, 85485.9, -2221890, 5975760, 183945, -2163070, 5998310, 147951, -2302080, 5944650, 204598, -2221890, 5975760, 183945, -2234930, 5973140, 85485.9, -2302080, 5944650, 204598, -2234930, 5973140, 85485.9, -2301900, 5947280, 107968, -3096140, 5543970, 597098, -3013580, 5585620, 630212, -3026180, 5587480, 548496, -3096140, 5543970, 597098, -3026180, 5587480, 548496, -3091180, 5551240, 553961, -1134790, 6240620, 666719, -1128470, 6234290, 732913, -1109920, 6239910, 713321, -1218180, 6222910, 684786, -1128470, 6234290, 732913, -1134790, 6240620, 666719, -1218180, 6222910, 684786, -1134790, 6240620, 666719, -1164550, 6248630, 526543, -1164550, 6248630, 526543, -1134790, 6240620, 666719, -1124320, 6250610, 586600, -1487410, 6194550, 308495, -1478700, 6193010, 373845, -1490770, 6199970, 135891, -1487410, 6194550, 308495, -1490770, 6199970, 135891, -1490770, 6199970, 135892, -1490770, 6199980, 135590, -1490770, 6199970, 135892, -1490770, 6199970, 135891, -1525880, 6186640, 278057, -1487410, 6194550, 308495, -1490770, 6199970, 135892, -1525880, 6186640, 278057, -1490770, 6199970, 135892, -1490770, 6199970, 135900, -1490770, 6199970, 135900, -1490770, 6199970, 135892, -1490770, 6199980, 135590, -1567340, 6180900, 143017, -1525880, 6186640, 278057, -1490770, 6199970, 135900, -1490770, 6199970, 135900, -1490770, 6199980, 135590, -1567340, 6180900, 142966, -1490770, 6199970, 135900, -1567340, 6180900, 142966, -1567340, 6180900, 143017, -1569150, 6179450, 180338, -1525880, 6186640, 278057, -1567340, 6180900, 143017, -1569150, 6179450, 180338, -1567340, 6180900, 143017, -1567340, 6180900, 143019, -1567340, 6180900, 143019, -1567340, 6180900, 143017, -1567340, 6180900, 142966, -1387710, 6221520, 217471, -1358700, 6194680, 676357, -1333590, 6198990, 686629, -1424050, 6186940, 609940, -1358700, 6194680, 676357, -1387710, 6221520, 217471, -1424050, 6186940, 609940, -1387710, 6221520, 217471, -1490450, 6200050, 135861, -1424050, 6186940, 609940, -1490450, 6200050, 135861, -1490660, 62e5, 135889, -1490770, 6199980, 135590, -1490660, 62e5, 135889, -1490450, 6200050, 135861, -1467670, 6193210, 411792, -1424050, 6186940, 609940, -1490660, 62e5, 135889, -1467670, 6193210, 411792, -1490660, 62e5, 135889, -1490770, 6199970, 135890, -1490770, 6199980, 135590, -1490770, 6199970, 135890, -1490660, 62e5, 135889, -1478700, 6193010, 373845, -1467670, 6193210, 411792, -1490770, 6199970, 135890, -1478700, 6193010, 373845, -1490770, 6199970, 135890, -1490770, 6199970, 135891, -1490770, 6199980, 135590, -1490770, 6199970, 135891, -1490770, 6199970, 135890, -1387710, 6221520, 217471, -1333590, 6198990, 686629, -1299160, 6211170, 641447, -1387710, 6221520, 217471, -1299160, 6211170, 641447, -1258250, 6245290, 305159, -1299160, 6211170, 641447, -1244920, 6244940, 361418, -1258250, 6245290, 305159, -1299160, 6211170, 641447, -1227790, 6227020, 628306, -1244920, 6244940, 361418, -1244920, 6244940, 361418, -1227790, 6227020, 628306, -1218180, 6222910, 684786, -1244920, 6244940, 361418, -1218180, 6222910, 684786, -1180880, 6252640, 435231, -1218180, 6222910, 684786, -1164550, 6248630, 526543, -1180880, 6252640, 435231, -1470800, 6182870, 536209, -1424050, 6186940, 609940, -1467670, 6193210, 411792, -1478420, 6187090, 461976, -1470800, 6182870, 536209, -1467670, 6193210, 411792, -2186100, 5988380, 201566, -2144860, 6002560, 221820, -2150780, 6001270, 198165, -2186100, 5988380, 201566, -2150780, 6001270, 198165, -2163070, 5998310, 147951, -2186100, 5988380, 201566, -2163070, 5998310, 147951, -2221890, 5975760, 183945, 5458640, 1975480, -2633360, 5276650, 1909570, -3021530, 5448960, 1972040, -2655740, 5458640, 1975480, -2633360, 5448960, 1972040, -2655740, 5458620, 1975530, -2633360, 5534160, 2002860, -2449860, 5569220, 2015540, -2358920, 5534170, 2002840, -2449860, 5534170, 2002840, -2449860, 5458640, 1975480, -2633360, 5458620, 1975530, -2633360, 5534170, 2002840, -2449860, 5458620, 1975530, -2633360, 5534160, 2002860, -2449860, 5470200, 1943260, -2633360, 5280010, 1818270, -3071230, 5276650, 1909570, -3021530, 5470200, 1943260, -2633360, 5276650, 1909570, -3021530, 5458640, 1975480, -2633360, 5569220, 2015540, -2358920, 5537680, 1991820, -2450900, 5534170, 2002840, -2449860, 5537680, 1991820, -2450900, 5470200, 1943260, -2633360, 5458640, 1975480, -2633360, 5537680, 1991820, -2450900, 5458640, 1975480, -2633360, 5534170, 2002840, -2449860, 5470200, 1943260, -2633360, 5489370, 1888420, -2633360, 5280010, 1818270, -3071230, 5569220, 2015540, -2358920, 5745610, 1973460, -1936170, 5562180, 1912700, -2458390, 5569220, 2015540, -2358920, 5562180, 1912700, -2458390, 5537680, 1991820, -2450900, 5537680, 1991820, -2450900, 5562180, 1912700, -2458390, 5489370, 1888420, -2633360, 5537680, 1991820, -2450900, 5489370, 1888420, -2633360, 5470200, 1943260, -2633360, 5499920, 1857480, -2633360, 5293100, 1767440, -3078310, 5280010, 1818270, -3071230, 5499920, 1857480, -2633360, 5280010, 1818270, -3071230, 5489370, 1888420, -2633360, 5562180, 1912700, -2458390, 5745610, 1973460, -1936170, 5569290, 1888960, -2460620, 5569290, 1888960, -2460620, 5499920, 1857480, -2633360, 5489370, 1888420, -2633360, 5569290, 1888960, -2460620, 5489370, 1888420, -2633360, 5562180, 1912700, -2458390, 5499920, 1857480, -2633360, 5508730, 1831190, -2633360, 5293100, 1767440, -3078310, 5745610, 1973460, -1936170, 5784240, 1908850, -1885620, 5580190, 1851840, -2464120, 5745610, 1973460, -1936170, 5580190, 1851840, -2464120, 5569290, 1888960, -2460620, 5569290, 1888960, -2460620, 5580190, 1851840, -2464120, 5508730, 1831190, -2633360, 5569290, 1888960, -2460620, 5508730, 1831190, -2633360, 5499920, 1857480, -2633360, 5521120, 1793450, -2633360, 5321830, 1712360, -3059970, 5293100, 1767440, -3078310, 5521120, 1793450, -2633360, 5293100, 1767440, -3078310, 5508730, 1831190, -2633360, 5580190, 1851840, -2464120, 5784240, 1908850, -1885620, 5588760, 1821980, -2466930, 5588760, 1821980, -2466930, 5521120, 1793450, -2633360, 5508730, 1831190, -2633360, 5588760, 1821980, -2466930, 5508730, 1831190, -2633360, 5580190, 1851840, -2464120, 5529960, 1766010, -2633360, 5338800, 1671800, -3052890, 5321830, 1712360, -3059970, 5529960, 1766010, -2633360, 5321830, 1712360, -3059970, 5521120, 1793450, -2633360, 5784240, 1908850, -1885620, 5594940, 1800090, -2468980, 5588760, 1821980, -2466930, 5594940, 1800090, -2468980, 5529960, 1766010, -2633360, 5521120, 1793450, -2633360, 5594940, 1800090, -2468980, 5521120, 1793450, -2633360, 5588760, 1821980, -2466930, 5505990, 2577370, -1922750, 5508840, 2577830, -1914e3, 5533270, 2542950, -1890200, 5505990, 2577370, -1922750, 5533270, 2542950, -1890200, 5524150, 2519910, -1946500, 5533270, 2542950, -1890200, 5537350, 2490600, -1946730, 5524150, 2519910, -1946500, 5533270, 2542950, -1890200, 5563430, 2480940, -1884110, 5537350, 2490600, -1946730, 5552410, 2423370, -1987970, 5591400, 2398210, -1908120, 5581460, 2391860, -1944590, 5563430, 2480940, -1884110, 5591400, 2398210, -1908120, 5552410, 2423370, -1987970, 5537350, 2490600, -1946730, 5563430, 2480940, -1884110, 5552410, 2423370, -1987970, 5660150, 2162600, -1984910, 5745610, 1973460, -1936170, 5569220, 2015540, -2358920, 5652650, 2212650, -1951080, 5745610, 1973460, -1936170, 5660150, 2162600, -1984910, 5632650, 2236380, -1981430, 5652650, 2212650, -1951080, 5660150, 2162600, -1984910, 5591400, 2398210, -1908120, 5652650, 2212650, -1951080, 5632650, 2236380, -1981430, 5591400, 2398210, -1908120, 5632650, 2236380, -1981430, 5581460, 2391860, -1944590, 5534010, 1753280, -2633360, 5365340, 1662790, -3011270, 5338800, 1671800, -3052890, 5534010, 1753280, -2633360, 5338800, 1671800, -3052890, 5529960, 1766010, -2633360, 5784240, 1908850, -1885620, 5597790, 1789880, -2469940, 5594940, 1800090, -2468980, 5597790, 1789880, -2469940, 5534010, 1753280, -2633360, 5529960, 1766010, -2633360, 5597790, 1789880, -2469940, 5529960, 1766010, -2633360, 5594940, 1800090, -2468980, 5542590, 1725960, -2633360, 5390400, 1629920, -2984550, 5365340, 1662790, -3011270, 5542590, 1725960, -2633360, 5365340, 1662790, -3011270, 5534010, 1753280, -2633360, 5784240, 1908850, -1885620, 5603860, 1767880, -2472e3, 5597790, 1789880, -2469940, 5603860, 1767880, -2472e3, 5542590, 1725960, -2633360, 5534010, 1753280, -2633360, 5603860, 1767880, -2472e3, 5534010, 1753280, -2633360, 5597790, 1789880, -2469940, 5550520, 1700290, -2633360, 5378890, 1577480, -3032780, 5390400, 1629920, -2984550, 5550520, 1700290, -2633360, 5390400, 1629920, -2984550, 5542590, 1725960, -2633360, 5784240, 1908850, -1885620, 5609520, 1747070, -2473950, 5603860, 1767880, -2472e3, 5609520, 1747070, -2473950, 5550520, 1700290, -2633360, 5542590, 1725960, -2633360, 5609520, 1747070, -2473950, 5542590, 1725960, -2633360, 5603860, 1767880, -2472e3, 5568030, 1642060, -2633360, 5437e3, 1518220, -2959e3, 5378890, 1577480, -3032780, 5568030, 1642060, -2633360, 5378890, 1577480, -3032780, 5550520, 1700290, -2633360, 5784240, 1908850, -1885620, 5622170, 1699400, -2478400, 5609520, 1747070, -2473950, 5622170, 1699400, -2478400, 5568030, 1642060, -2633360, 5550520, 1700290, -2633360, 5622170, 1699400, -2478400, 5550520, 1700290, -2633360, 5609520, 1747070, -2473950, 5580090, 1600590, -2633360, 5483240, 1490840, -2887200, 5437e3, 1518220, -2959e3, 5580090, 1600590, -2633360, 5437e3, 1518220, -2959e3, 5568030, 1642060, -2633360, 5784240, 1908850, -1885620, 5631020, 1665030, -2481610, 5622170, 1699400, -2478400, 5631020, 1665030, -2481610, 5580090, 1600590, -2633360, 5568030, 1642060, -2633360, 5631020, 1665030, -2481610, 5568030, 1642060, -2633360, 5622170, 1699400, -2478400, 5591970, 1558570, -2633360, 5535610, 1482200, -2790750, 5483240, 1490840, -2887200, 5591970, 1558570, -2633360, 5483240, 1490840, -2887200, 5580090, 1600590, -2633360, 5784240, 1908850, -1885620, 5639860, 1629840, -2484880, 5631020, 1665030, -2481610, 5639860, 1629840, -2484880, 5591970, 1558570, -2633360, 5580090, 1600590, -2633360, 5639860, 1629840, -2484880, 5580090, 1600590, -2633360, 5631020, 1665030, -2481610, 5604350, 1513460, -2633360, 5575660, 1467240, -2718460, 5535610, 1482200, -2790750, 5604350, 1513460, -2633360, 5535610, 1482200, -2790750, 5591970, 1558570, -2633360, 5784240, 1908850, -1885620, 5649180, 1591660, -2488440, 5639860, 1629840, -2484880, 5649180, 1591660, -2488440, 5604350, 1513460, -2633360, 5591970, 1558570, -2633360, 5649180, 1591660, -2488440, 5591970, 1558570, -2633360, 5639860, 1629840, -2484880, 5604350, 1513460, -2633360, 5618710, 1459250, -2633360, 5575660, 1467240, -2718460, 5784240, 1908850, -1885620, 5670990, 1497550, -2497160, 5649180, 1591660, -2488440, 5670990, 1497550, -2497160, 5652980, 1452290, -2563400, 5618710, 1459250, -2633360, 5670990, 1497550, -2497160, 5618710, 1459250, -2633360, 5604350, 1513460, -2633360, 5670990, 1497550, -2497160, 5604350, 1513460, -2633360, 5649180, 1591660, -2488440, 5784240, 1908850, -1885620, 5704210, 1463080, -2441680, 5679680, 1457930, -2500830, 5784240, 1908850, -1885620, 5679680, 1457930, -2500830, 5670990, 1497550, -2497160, 5670990, 1497550, -2497160, 5679680, 1457930, -2500830, 5652980, 1452290, -2563400, 5784240, 1908850, -1885620, 5729760, 1455990, -2385830, 5704210, 1463080, -2441680, 5784240, 1908850, -1885620, 5903330, 1494840, -1890170, 5729760, 1455990, -2385830, 5729760, 1455990, -2385830, 5903330, 1494840, -1890170, 5905e3, 1478690, -1897590, 5729760, 1455990, -2385830, 5905e3, 1478690, -1897590, 5756050, 1421130, -2343480, 5905e3, 1478690, -1897590, 5934450, 1420620, -1849790, 5756050, 1421130, -2343480, 5756050, 1421130, -2343480, 5934450, 1420620, -1849790, 5800930, 1376900, -2258240, 5934450, 1420620, -1849790, 5858180, 1333830, -2133670, 5800930, 1376900, -2258240, 5934450, 1420620, -1849790, 5951090, 1353590, -1846620, 5858180, 1333830, -2133670, 5858180, 1333830, -2133670, 5951090, 1353590, -1846620, 5885710, 1316540, -2068090, 5951090, 1353590, -1846620, 5959510, 1290180, -1864650, 5885710, 1316540, -2068090, 5885710, 1316540, -2068090, 5959510, 1290180, -1864650, 5937470, 1239850, -1965660, 5959510, 1290180, -1864650, 5964040, 1238810, -1884760, 5937470, 1239850, -1965660, 5660150, 2162600, -1984910, 5569220, 2015540, -2358920, 5535070, 2111550, -2355340, -5740130, 1487280, -2341480, -5773920, 1497540, -2250710, -5775060, 1545260, -2215480, -5771460, 1462550, -2279660, -5773920, 1497540, -2250710, -5740130, 1487280, -2341480, -5740220, 1410990, -2387720, -5771460, 1462550, -2279660, -5740130, 1487280, -2341480, -5767440, 1374e3, -2343580, -5771460, 1462550, -2279660, -5740220, 1410990, -2387720, -5742460, 1353230, -2415420, -5767440, 1374e3, -2343580, -5740220, 1410990, -2387720, -5761130, 1317360, -2390830, -5767440, 1374e3, -2343580, -5742460, 1353230, -2415420, -5743730, 1557310, -2286870, -5772260, 1605130, -2180180, -5752020, 1631130, -2213890, -5775060, 1545260, -2215480, -5772260, 1605130, -2180180, -5743730, 1557310, -2286870, -5740130, 1487280, -2341480, -5775060, 1545260, -2215480, -5743730, 1557310, -2286870, -5772260, 1605130, -2180180, -5760580, 1648560, -2178680, -5752020, 1631130, -2213890, 5708150, 1378980, 2480850, 6039580, 1403680, 1489580, 6034780, 1428640, 1485320, 5708150, 1378980, 2480850, 6034780, 1428640, 1485320, 6008170, 1446920, 1572360, 6043940, 1506410, 1367310, 6008170, 1446920, 1572360, 6034780, 1428640, 1485320, 6043940, 1506410, 1367310, 6023630, 1496780, 1463470, 6008170, 1446920, 1572360, 6030180, 1527380, 1404050, 6023630, 1496780, 1463470, 6043940, 1506410, 1367310, 6007070, 1564250, 1461e3, 6023630, 1496780, 1463470, 6030180, 1527380, 1404050, 6007070, 1564250, 1461e3, 6030180, 1527380, 1404050, 6021220, 1556720, 1410240, 5739360, 1588550, 2276410, 5739570, 1548320, 2303250, 5855210, 1601850, 1950790, 5751010, 1593500, 2243500, 5739360, 1588550, 2276410, 5855210, 1601850, 1950790, 5774110, 1621470, 2163240, 5751010, 1593500, 2243500, 5855210, 1601850, 1950790, 5752110, 1638880, 2207970, 5751010, 1593500, 2243500, 5774110, 1621470, 2163240, 5897920, 1607700, 1813350, 5717160, 1440710, 2424770, 5960420, 1483030, 1713130, 5897920, 1607700, 1813350, 5683600, 1507120, 2462740, 5717160, 1440710, 2424770, 5897920, 1607700, 1813350, 5739570, 1548320, 2303250, 5683600, 1507120, 2462740, 5855210, 1601850, 1950790, 5739570, 1548320, 2303250, 5897920, 1607700, 1813350, 5960420, 1483030, 1713130, 5708150, 1378980, 2480850, 6008170, 1446920, 1572360, 5717160, 1440710, 2424770, 5708150, 1378980, 2480850, 5960420, 1483030, 1713130, 6072090, 1324160, 1429410, 5725600, 1216960, 2524720, 6082210, 1240510, 1460850, 5708150, 1378980, 2480850, 5725600, 1216960, 2524720, 6072090, 1324160, 1429410, 5708150, 1378980, 2480850, 6072090, 1324160, 1429410, 6039580, 1403680, 1489580, 5725600, 1216960, 2524720, 6092130, 1183040, 1467120, 6082210, 1240510, 1460850, 5725600, 1216960, 2524720, 6101530, 1153010, 1452010, 6092130, 1183040, 1467120, 5725600, 1216960, 2524720, 6112250, 1090390, 1455280, 6101530, 1153010, 1452010, 5725600, 1216960, 2524720, 6133660, 1029170, 1409350, 6112250, 1090390, 1455280, 5725600, 1216960, 2524720, 6143170, 974624, 1406720, 6133660, 1029170, 1409350, 5725600, 1216960, 2524720, 5868030, 884616, 2329760, 6143170, 974624, 1406720, 6143170, 974624, 1406720, 5868030, 884616, 2329760, 6149560, 842896, 1462410, 5868030, 884616, 2329760, 6162480, 792794, 1435970, 6149560, 842896, 1462410, 5868030, 884616, 2329760, 6168870, 737826, 1437810, 6162480, 792794, 1435970, 5868030, 884616, 2329760, 6164020, 696355, 1478470, 6168870, 737826, 1437810, 5868030, 884616, 2329760, 5981300, 594649, 2126160, 6164020, 696355, 1478470, 6164020, 696355, 1478470, 5981300, 594649, 2126160, 6165540, 587490, 1518580, 5981300, 594649, 2126160, 6178590, 471982, 1505860, 6165540, 587490, 1518580, 5981300, 594649, 2126160, 6089e3, 454651, 1837190, 6178590, 471982, 1505860, 6178590, 471982, 1505860, 6089e3, 454651, 1837190, 6186300, 444302, 1482610, 6089e3, 454651, 1837190, 6201910, 430121, 1420670, 6186300, 444302, 1482610, 6213810, 399720, 1377170, 6133230, 389982, 1700740, 6234960, 393492, 1280610, 6133230, 389982, 1700740, 6226490, 309825, 1342880, 6234960, 393492, 1280610, 6133230, 389982, 1700740, 6143220, 295079, 1683830, 6226490, 309825, 1342880, 6226490, 309825, 1342880, 6143220, 295079, 1683830, 6228360, 270864, 1342610, 6143220, 295079, 1683830, 6220430, 236476, 1384950, 6228360, 270864, 1342610, 6228360, 270864, 1342610, 6220430, 236476, 1384950, 6236620, 234624, 1310930, 6089e3, 454651, 1837190, 6114030, 397886, 1766320, 6201910, 430121, 1420670, 6201910, 430121, 1420670, 6114030, 397886, 1766320, 6213810, 399720, 1377170, 6114030, 397886, 1766320, 6133230, 389982, 1700740, 6213810, 399720, 1377170, 6143220, 295079, 1683830, 6151020, 148773, 1674660, 6220430, 236476, 1384950, 6220430, 236476, 1384950, 6151020, 148773, 1674660, 6218390, 111159, 1409430, 6151020, 148773, 1674660, 6162130, 109258, 1636700, 6218390, 111159, 1409430, 6218390, 111159, 1409430, 6162130, 109258, 1636700, 6206330, 107578, 1461570, 6162130, 109258, 1636700, 6190020, 46448.7, 1531770, 6206330, 107578, 1461570, 6190020, 46448.7, 1531770, 6164090, 40332.8, 1632500, 6177740, 31877.4, 1580620, 6162130, 109258, 1636700, 6164090, 40332.8, 1632500, 6190020, 46448.7, 1531770, 5981300, 594649, 2126160, 6010460, 448492, 2079600, 6089e3, 454651, 1837190, 6007240, 1492950, 1532630, 6008170, 1446920, 1572360, 6023630, 1496780, 1463470, 6030180, 1527380, 1404050, 6043940, 1506410, 1367310, 6038510, 1525880, 1369690, 6036900, 1569930, 1326640, 6038510, 1525880, 1369690, 6043890, 1559480, 1307100, 6043890, 1559480, 1307100, 6038510, 1525880, 1369690, 6052570, 1555770, 1271100, 6052570, 1555770, 1271100, 6038510, 1525880, 1369690, 6043940, 1506410, 1367310, 6052570, 1555770, 1271100, 6043940, 1506410, 1367310, 6090930, 1470500, 1187130, 6043940, 1506410, 1367310, 6034780, 1428640, 1485320, 6090930, 1470500, 1187130, 6090930, 1470500, 1187130, 6034780, 1428640, 1485320, 6110140, 1445360, 1117720, 6034780, 1428640, 1485320, 6123310, 1432560, 1061080, 6110140, 1445360, 1117720, 6034780, 1428640, 1485320, 6039580, 1403680, 1489580, 6123310, 1432560, 1061080, 6123310, 1432560, 1061080, 6039580, 1403680, 1489580, 6132550, 1410790, 1036770, 6039580, 1403680, 1489580, 6137730, 1394020, 1028840, 6134020, 1409180, 1030250, 6039580, 1403680, 1489580, 6134020, 1409180, 1030250, 6132550, 1410790, 1036770, 6134020, 1409180, 1030250, 6137730, 1394020, 1028840, 6149380, 1391880, 960319, 6039580, 1403680, 1489580, 6072090, 1324160, 1429410, 6140490, 1382590, 1027780, 6039580, 1403680, 1489580, 6140490, 1382590, 1027780, 6137730, 1394020, 1028840, 6137730, 1394020, 1028840, 6140490, 1382590, 1027780, 6149380, 1391880, 960319, 6140490, 1382590, 1027780, 6072090, 1324160, 1429410, 6151940, 1334180, 1023290, 6151940, 1334180, 1023290, 6168690, 1335850, 915261, 6149380, 1391880, 960319, 6151940, 1334180, 1023290, 6149380, 1391880, 960319, 6140490, 1382590, 1027780, 6171500, 1332170, 901688, 6173810, 1321440, 901688, 6179950, 1320790, 859850, 6072090, 1324160, 1429410, 6154540, 1322960, 1022250, 6151940, 1334180, 1023290, 6171500, 1332170, 901688, 6168690, 1335850, 915261, 6151940, 1334180, 1023290, 6171500, 1332170, 901688, 6151940, 1334180, 1023290, 6154540, 1322960, 1022250, 6171500, 1332170, 901688, 6154540, 1322960, 1022250, 6173810, 1321440, 901688, 6177870, 1302300, 901688, 6190850, 1297770, 815697, 6179950, 1320790, 859850, 6177870, 1302300, 901688, 6179950, 1320790, 859850, 6173810, 1321440, 901688, 6072090, 1324160, 1429410, 6157940, 1308150, 1020880, 6154540, 1322960, 1022250, 6157940, 1308150, 1020880, 6177870, 1302300, 901688, 6173810, 1321440, 901688, 6157940, 1308150, 1020880, 6173810, 1321440, 901688, 6154540, 1322960, 1022250, 6178960, 1297160, 901688, 6198590, 1288830, 770090, 6190850, 1297770, 815697, 6178960, 1297160, 901688, 6190850, 1297770, 815697, 6177870, 1302300, 901688, 6072090, 1324160, 1429410, 6158840, 1304150, 1020510, 6157940, 1308150, 1020880, 6158850, 1304150, 1020510, 6178960, 1297160, 901688, 6177870, 1302300, 901688, 6158850, 1304150, 1020510, 6177870, 1302300, 901688, 6157940, 1308150, 1020880, 6178960, 1297160, 901688, 6182360, 1280820, 901688, 6198590, 1288830, 770090, 6072090, 1324160, 1429410, 6082210, 1240510, 1460850, 6165770, 1273290, 1017650, 6072090, 1324160, 1429410, 6165770, 1273290, 1017650, 6158850, 1304150, 1020510, 6158850, 1304150, 1020510, 6165770, 1273290, 1017650, 6182360, 1280820, 901688, 6158850, 1304150, 1020510, 6182360, 1280820, 901688, 6178960, 1297160, 901688, 6207230, 1154300, 901688, 6224210, 1153300, 778211, 6217940, 1215270, 733090, 6207230, 1154300, 901688, 6217940, 1215270, 733090, 6198160, 1202050, 901688, 6183020, 1193090, 1010240, 6101530, 1153010, 1452010, 6190860, 1154790, 1006710, 6190860, 1154790, 1006710, 6207230, 1154300, 901688, 6198160, 1202050, 901688, 6190860, 1154790, 1006710, 6198160, 1202050, 901688, 6183020, 1193090, 1010240, 6217940, 1215270, 733090, 6196740, 1209350, 901688, 6198160, 1202050, 901688, 6092130, 1183040, 1467120, 6101530, 1153010, 1452010, 6183020, 1193090, 1010240, 6092130, 1183040, 1467120, 6183020, 1193090, 1010240, 6180520, 1205030, 1011340, 6180520, 1205030, 1011340, 6183020, 1193090, 1010240, 6198160, 1202050, 901688, 6180520, 1205030, 1011340, 6198160, 1202050, 901688, 6196740, 1209350, 901688, 6194110, 1222730, 901688, 6196740, 1209350, 901688, 6217940, 1215270, 733090, 6082210, 1240510, 1460850, 6092130, 1183040, 1467120, 6180520, 1205030, 1011340, 6082210, 1240510, 1460850, 6180520, 1205030, 1011340, 6175830, 1227140, 1013380, 6175830, 1227140, 1013380, 6180520, 1205030, 1011340, 6196740, 1209350, 901688, 6175830, 1227140, 1013380, 6196740, 1209350, 901688, 6194110, 1222730, 901688, 6194110, 1222730, 901688, 6217940, 1215270, 733090, 6198590, 1288830, 770090, 6194110, 1222730, 901688, 6198590, 1288830, 770090, 6182360, 1280820, 901688, 6165770, 1273290, 1017650, 6082210, 1240510, 1460850, 6175830, 1227140, 1013380, 6175830, 1227140, 1013380, 6194110, 1222730, 901688, 6182360, 1280820, 901688, 6175830, 1227140, 1013380, 6182360, 1280820, 901688, 6165770, 1273290, 1017650, 6226630, 1044590, 901688, 6250650, 1048550, 712111, 6231930, 1112130, 776390, 6226630, 1044590, 901688, 6231930, 1112130, 776390, 6217700, 1096530, 901688, 6204720, 1083970, 1000190, 6133660, 1029170, 1409350, 6212480, 1042240, 996362, 6212480, 1042240, 996362, 6226630, 1044590, 901688, 6217700, 1096530, 901688, 6212480, 1042240, 996362, 6217700, 1096530, 901688, 6204720, 1083970, 1000190, 6231930, 1112130, 776390, 6215460, 1109110, 901688, 6217700, 1096530, 901688, 6112250, 1090390, 1455280, 6133660, 1029170, 1409350, 6204720, 1083970, 1000190, 6112250, 1090390, 1455280, 6204720, 1083970, 1000190, 6200430, 1106370, 1002260, 6200430, 1106370, 1002260, 6204720, 1083970, 1000190, 6217700, 1096530, 901688, 6200430, 1106370, 1002260, 6217700, 1096530, 901688, 6215460, 1109110, 901688, 6213360, 1120830, 901688, 6215460, 1109110, 901688, 6231930, 1112130, 776390, 6101530, 1153010, 1452010, 6112250, 1090390, 1455280, 6200430, 1106370, 1002260, 6101530, 1153010, 1452010, 6200430, 1106370, 1002260, 6196290, 1127580, 1004210, 6196290, 1127580, 1004200, 6200430, 1106370, 1002260, 6215460, 1109110, 901688, 6196290, 1127580, 1004200, 6215460, 1109110, 901688, 6213360, 1120830, 901688, 6213360, 1120830, 901688, 6231930, 1112130, 776390, 6224210, 1153300, 778211, 6213360, 1120830, 901688, 6224210, 1153300, 778211, 6207230, 1154300, 901688, 6101530, 1153010, 1452010, 6196290, 1127580, 1004210, 6190860, 1154790, 1006710, 6196290, 1127580, 1004200, 6213360, 1120830, 901688, 6207230, 1154300, 901688, 6196290, 1127580, 1004200, 6207230, 1154300, 901688, 6190860, 1154790, 1006710, 6238440, 971582, 901688, 6275160, 966684, 605006, 6255980, 1016960, 711123, 6238440, 971582, 901688, 6255980, 1016960, 711123, 6232890, 1006580, 901688, 6219820, 1001300, 992605, 6143170, 974624, 1406720, 6224790, 972605, 989975, 6224790, 972605, 989975, 6238440, 971582, 901688, 6232890, 1006580, 901688, 6224790, 972605, 989975, 6232890, 1006580, 901688, 6219820, 1001300, 992605, 6230440, 1021640, 901688, 6232890, 1006580, 901688, 6255980, 1016960, 711123, 6133660, 1029170, 1409350, 6143170, 974624, 1406720, 6219820, 1001300, 992605, 6133660, 1029170, 1409350, 6219820, 1001300, 992605, 6215860, 1023570, 994648, 6215860, 1023570, 994648, 6219820, 1001300, 992605, 6232890, 1006580, 901688, 6215860, 1023570, 994648, 6232890, 1006580, 901688, 6230440, 1021640, 901688, 6230440, 1021640, 901688, 6255980, 1016960, 711123, 6250650, 1048550, 712111, 6230440, 1021640, 901688, 6250650, 1048550, 712111, 6226630, 1044590, 901688, 6133660, 1029170, 1409350, 6215860, 1023570, 994648, 6212480, 1042240, 996362, 6215860, 1023570, 994648, 6230440, 1021640, 901688, 6226630, 1044590, 901688, 6215860, 1023570, 994648, 6226630, 1044590, 901688, 6212480, 1042240, 996362, 6285700, 593316, 901688, 6327280, 593959, 539842, 6326940, 653622, 470891, 6285700, 593316, 901688, 6326940, 653622, 470891, 6282290, 628433, 901688, 6274210, 624914, 958257, 6165540, 587490, 1518580, 6277740, 593049, 955362, 6277740, 593049, 955362, 6285700, 593316, 901688, 6282290, 628433, 901688, 6277740, 593049, 955362, 6282290, 628433, 901688, 6274210, 624914, 958257, 6277540, 674261, 901688, 6282290, 628433, 901688, 6326940, 653622, 470891, 6164020, 696355, 1478470, 6165540, 587490, 1518580, 6274210, 624914, 958257, 6164020, 696355, 1478470, 6274210, 624914, 958257, 6268080, 676921, 962986, 6268080, 676921, 962986, 6274210, 624914, 958257, 6282290, 628433, 901688, 6268080, 676921, 962986, 6282290, 628433, 901688, 6277540, 674261, 901688, 6277540, 674261, 901688, 6326940, 653622, 470891, 6317380, 741906, 468481, 6277540, 674261, 901688, 6317380, 741906, 468481, 6271920, 724627, 901688, 6262450, 721724, 967063, 6164020, 696355, 1478470, 6268080, 676921, 962986, 6268080, 676921, 962986, 6277540, 674261, 901688, 6271920, 724627, 901688, 6268080, 676921, 962986, 6271920, 724627, 901688, 6262450, 721724, 967063, 6269850, 742354, 901688, 6271920, 724627, 901688, 6317380, 741906, 468481, 6168870, 737826, 1437810, 6164020, 696355, 1478470, 6262450, 721724, 967063, 6168870, 737826, 1437810, 6262450, 721724, 967063, 6259780, 742100, 968919, 6259780, 742100, 968919, 6262450, 721724, 967063, 6271920, 724627, 901688, 6259780, 742100, 968919, 6271920, 724627, 901688, 6269850, 742354, 901688, 6269850, 742354, 901688, 6317380, 741906, 468481, 6310390, 784055, 493190, 6269850, 742354, 901688, 6310390, 784055, 493190, 6266990, 766153, 901688, 6256990, 762809, 970807, 6168870, 737826, 1437810, 6259780, 742100, 968919, 6259780, 742100, 968919, 6269850, 742354, 901688, 6266990, 766153, 901688, 6259780, 742100, 968919, 6266990, 766153, 901688, 6256990, 762809, 970807, 6264010, 790155, 901688, 6266990, 766153, 901688, 6310390, 784055, 493190, 6162480, 792794, 1435970, 6168870, 737826, 1437810, 6256990, 762809, 970807, 6162480, 792794, 1435970, 6256990, 762809, 970807, 6253110, 790868, 973364, 6253110, 790868, 973364, 6256990, 762809, 970807, 6266990, 766153, 901688, 6253110, 790868, 973364, 6266990, 766153, 901688, 6264010, 790155, 901688, 6264010, 790155, 901688, 6310390, 784055, 493190, 6305500, 825894, 487394, 6264010, 790155, 901688, 6305500, 825894, 487394, 6260990, 813727, 901688, 6250210, 811198, 975219, 6162480, 792794, 1435970, 6253110, 790868, 973364, 6253110, 790868, 973364, 6264010, 790155, 901688, 6260990, 813727, 901688, 6253110, 790868, 973364, 6260990, 813727, 901688, 6250210, 811198, 975219, 6258090, 835751, 901688, 6260990, 813727, 901688, 6305500, 825894, 487394, 6149560, 842896, 1462410, 6162480, 792794, 1435970, 6250210, 811198, 975219, 6149560, 842896, 1462410, 6250210, 811198, 975219, 6246420, 837146, 977587, 6246420, 837146, 977587, 6250210, 811198, 975219, 6260990, 813727, 901688, 6246420, 837146, 977587, 6260990, 813727, 901688, 6258090, 835751, 901688, 6258090, 835751, 901688, 6305500, 825894, 487394, 6286350, 939534, 527061, 6258090, 835751, 901688, 6286350, 939534, 527061, 6248720, 903079, 901688, 6237590, 894776, 982853, 6149560, 842896, 1462410, 6246420, 837146, 977587, 6246420, 837146, 977587, 6258090, 835751, 901688, 6248720, 903079, 901688, 6246420, 837146, 977587, 6248720, 903079, 901688, 6237590, 894776, 982853, 6240700, 956985, 901688, 6248720, 903079, 901688, 6286350, 939534, 527061, 6143170, 974624, 1406720, 6149560, 842896, 1462410, 6237590, 894776, 982853, 6143170, 974624, 1406720, 6237590, 894776, 982853, 6226840, 960527, 988869, 6226840, 960527, 988869, 6237590, 894776, 982853, 6248720, 903079, 901688, 6226840, 960527, 988869, 6248720, 903079, 901688, 6240700, 956985, 901688, 6240700, 956985, 901688, 6286350, 939534, 527061, 6275160, 966684, 605006, 6240700, 956985, 901688, 6275160, 966684, 605006, 6238440, 971582, 901688, 6143170, 974624, 1406720, 6226840, 960527, 988869, 6224790, 972605, 989975, 6226840, 960527, 988869, 6240700, 956985, 901688, 6238440, 971582, 901688, 6226840, 960527, 988869, 6238440, 971582, 901688, 6224790, 972605, 989975, 6322170, 478208, 692017, 6296130, 469907, 901688, 6296500, 464946, 901688, 6186300, 444302, 1482610, 6201910, 430121, 1420670, 6290530, 462246, 943493, 6186300, 444302, 1482610, 6290530, 462246, 943493, 6290010, 468169, 944030, 6290010, 468169, 944030, 6290530, 462246, 943493, 6296500, 464946, 901688, 6290010, 468169, 944030, 6296500, 464946, 901688, 6296130, 469907, 901688, 6295570, 477403, 901688, 6296130, 469907, 901688, 6322170, 478208, 692017, 6178590, 471982, 1505860, 6186300, 444302, 1482610, 6290010, 468169, 944030, 6178590, 471982, 1505860, 6290010, 468169, 944030, 6289210, 477170, 944846, 6289210, 477170, 944846, 6290010, 468169, 944030, 6296130, 469907, 901688, 6289210, 477170, 944846, 6296130, 469907, 901688, 6295570, 477403, 901688, 6295570, 477403, 901688, 6322170, 478208, 692017, 6323290, 556950, 619549, 6295570, 477403, 901688, 6323290, 556950, 619549, 6291290, 530885, 901688, 6284610, 526390, 949310, 6178590, 471982, 1505860, 6289210, 477170, 944846, 6289210, 477170, 944846, 6295570, 477403, 901688, 6291290, 530885, 901688, 6289210, 477170, 944846, 6291290, 530885, 901688, 6284610, 526390, 949310, 6288050, 567950, 901688, 6291290, 530885, 901688, 6323290, 556950, 619549, 6165540, 587490, 1518580, 6178590, 471982, 1505860, 6284610, 526390, 949310, 6165540, 587490, 1518580, 6284610, 526390, 949310, 6280220, 569826, 953253, 6280220, 569826, 953253, 6284610, 526390, 949310, 6291290, 530885, 901688, 6280220, 569826, 953253, 6291290, 530885, 901688, 6288050, 567950, 901688, 6288050, 567950, 901688, 6323290, 556950, 619549, 6327280, 593959, 539842, 6288050, 567950, 901688, 6327280, 593959, 539842, 6285700, 593316, 901688, 6165540, 587490, 1518580, 6280220, 569826, 953253, 6277740, 593049, 955362, 6280220, 569826, 953253, 6288050, 567950, 901688, 6285700, 593316, 901688, 6280220, 569826, 953253, 6285700, 593316, 901688, 6277740, 593049, 955362, 6253490, 415040, 1180190, 6234960, 393492, 1280610, 6242540, 389709, 1244590, 6253490, 415040, 1180190, 6213810, 399720, 1377170, 6234960, 393492, 1280610, 6201910, 430121, 1420670, 6213810, 399720, 1377170, 6253490, 415040, 1180190, 6322170, 478208, 692017, 6296500, 464946, 901688, 6297490, 451338, 901688, 6201910, 430121, 1420670, 6253490, 415040, 1180190, 6291920, 446121, 942032, 6201910, 430121, 1420670, 6291920, 446121, 942032, 6290530, 462246, 943493, 6290530, 462246, 943493, 6291920, 446121, 942032, 6297490, 451338, 901688, 6290530, 462246, 943493, 6297490, 451338, 901688, 6296500, 464946, 901688, 6322170, 478208, 692017, 6297490, 451338, 901688, 6298160, 441857, 901688, 6253490, 415040, 1180190, 6267530, 405900, 1107130, 6292850, 434996, 941023, 6253490, 415040, 1180190, 6292850, 434996, 941023, 6291920, 446121, 942032, 6291920, 446121, 942032, 6292850, 434996, 941023, 6298160, 441857, 901688, 6291920, 446121, 942032, 6298160, 441857, 901688, 6297490, 451338, 901688, 6253490, 415040, 1180190, 6263e3, 394042, 1136420, 6267530, 405900, 1107130, 6328050, 395264, 690659, 6311180, 303044, 867620, 6333380, 297755, 690716, 6306170, 307226, 901688, 6311180, 303044, 867620, 6328050, 395264, 690659, 6306170, 307226, 901688, 6328050, 395264, 690659, 6304210, 344958, 901688, 6300140, 337664, 932209, 6289600, 319972, 1006190, 6301890, 310663, 929765, 6301890, 310663, 929765, 6306170, 307226, 901688, 6304210, 344958, 901688, 6301890, 310663, 929765, 6304210, 344958, 901688, 6300140, 337664, 932209, 6328050, 395264, 690659, 6302790, 370100, 901688, 6304210, 344958, 901688, 6282320, 353474, 1039650, 6289600, 319972, 1006190, 6300140, 337664, 932209, 6282320, 353474, 1039650, 6300140, 337664, 932209, 6298160, 366123, 934785, 6298160, 366123, 934785, 6300140, 337664, 932209, 6304210, 344958, 901688, 6298160, 366123, 934785, 6304210, 344958, 901688, 6302790, 370100, 901688, 6300900, 400895, 901688, 6302790, 370100, 901688, 6328050, 395264, 690659, 6267530, 405900, 1107130, 6282320, 353474, 1039650, 6298160, 366123, 934785, 6267530, 405900, 1107130, 6298160, 366123, 934785, 6295500, 401815, 938017, 6295500, 401815, 938017, 6298160, 366123, 934785, 6302790, 370100, 901688, 6295500, 401815, 938017, 6302790, 370100, 901688, 6300900, 400895, 901688, 6300900, 400895, 901688, 6328050, 395264, 690659, 6322170, 478208, 692017, 6300900, 400895, 901688, 6322170, 478208, 692017, 6298160, 441857, 901688, 6292850, 434996, 941023, 6267530, 405900, 1107130, 6295500, 401815, 938017, 6295500, 401815, 938017, 6300900, 400895, 901688, 6298160, 441857, 901688, 6295500, 401815, 938017, 6298160, 441857, 901688, 6292850, 434996, 941023, 6306170, 307226, 901688, 6306440, 301453, 901688, 6311180, 303044, 867620, 6289600, 319972, 1006190, 6301300, 299784, 937255, 6302540, 300181, 928817, 6289600, 319972, 1006190, 6302540, 300181, 928817, 6301890, 310663, 929765, 6301890, 310663, 929765, 6302540, 300181, 928817, 6306440, 301453, 901688, 6301890, 310663, 929765, 6306440, 301453, 901688, 6306170, 307226, 901688, 615834, -6231380, 1208920, 597082, -6143950, 1599620, 575482, -6144740, 1604460, 620417, -6138050, 1613240, 597082, -6143950, 1599620, 615834, -6231380, 1208920, 634288, -6233850, 1186580, 620417, -6138050, 1613240, 615834, -6231380, 1208920, 647470, -6135240, 1613300, 620417, -6138050, 1613240, 634288, -6233850, 1186580, 666533, -6231870, 1179330, 647470, -6135240, 1613300, 634288, -6233850, 1186580, 669373, -6217780, 1249510, 647470, -6135240, 1613300, 666533, -6231870, 1179330, 675059, -6223020, 1220190, 669373, -6217780, 1249510, 666533, -6231870, 1179330, 698595, -6121990, 1641840, 697655, -6173240, 1439100, 699876, -6161670, 1486530, 698595, -6121990, 1641840, 691874, -6193660, 1352110, 697655, -6173240, 1439100, 698595, -6121990, 1641840, 684215, -6127530, 1627280, 691874, -6193660, 1352110, 691874, -6193660, 1352110, 684215, -6127530, 1627280, 682851, -6204650, 1305830, 684215, -6127530, 1627280, 669373, -6217780, 1249510, 682851, -6204650, 1305830, 690948, -6209740, 1277230, 682851, -6204650, 1305830, 669373, -6217780, 1249510, 708124, -6189480, 1362720, 697655, -6173240, 1439100, 691874, -6193660, 1352110, 708124, -6189480, 1362720, 704168, -6178960, 1411310, 697655, -6173240, 1439100, 735280, -6118290, 1639650, 698595, -6121990, 1641840, 726418, -6122100, 1629400, 726418, -6122100, 1629400, 698595, -6121990, 1641840, 721706, -6129010, 1605510, 721706, -6129010, 1605510, 698595, -6121990, 1641840, 710199, -6149820, 1529770, 710199, -6149820, 1529770, 698595, -6121990, 1641840, 699876, -6161670, 1486530, 556393, -6237960, 1203830, 545686, -6143960, 1617700, 532504, -6151840, 1592120, 556816, -6142140, 1620810, 545686, -6143960, 1617700, 556393, -6237960, 1203830, 581162, -6232930, 1217980, 556816, -6142140, 1620810, 556393, -6237960, 1203830, 575482, -6144740, 1604460, 556816, -6142140, 1620810, 581162, -6232930, 1217980, 615834, -6231380, 1208920, 575482, -6144740, 1604460, 581162, -6232930, 1217980, 556393, -6237960, 1203830, 483937, -6168820, 1541460, 484186, -6238330, 1232570, 556393, -6237960, 1203830, 520872, -6158300, 1571e3, 483937, -6168820, 1541460, 556393, -6237960, 1203830, 522175, -6152480, 1593050, 520872, -6158300, 1571e3, 556393, -6237960, 1203830, 532504, -6151840, 1592120, 522175, -6152480, 1593050, 429821, -6238260, 1252780, 421336, -6174510, 1537080, 398533, -6183130, 1508430, 453516, -6177630, 1515380, 421336, -6174510, 1537080, 429821, -6238260, 1252780, 467993, -6242320, 1218600, 453516, -6177630, 1515380, 429821, -6238260, 1252780, 464330, -6173520, 1528700, 453516, -6177630, 1515380, 467993, -6242320, 1218600, 484186, -6238330, 1232570, 464330, -6173520, 1528700, 467993, -6242320, 1218600, 483937, -6168820, 1541460, 464330, -6173520, 1528700, 484186, -6238330, 1232570, 353989, -6226280, 1332980, 337892, -6200130, 1452790, 324644, -6206590, 1428190, 353764, -6199020, 1453750, 337892, -6200130, 1452790, 353989, -6226280, 1332980, 378384, -6232590, 1296500, 353764, -6199020, 1453750, 353989, -6226280, 1332980, 376009, -6184350, 1509190, 353764, -6199020, 1453750, 378384, -6232590, 1296500, 429821, -6238260, 1252780, 376009, -6184350, 1509190, 378384, -6232590, 1296500, 429821, -6238260, 1252780, 398533, -6183130, 1508430, 376009, -6184350, 1509190, 307810, -6221310, 1366950, 264825, -6208460, 1432370, 252953, -6212810, 1415690, 307810, -6221310, 1366950, 282884, -6211410, 1416130, 264825, -6208460, 1432370, 307810, -6221310, 1366950, 291008, -6209280, 1423760, 282884, -6211410, 1416130, 324644, -6206590, 1428190, 291008, -6209280, 1423760, 307810, -6221310, 1366950, 353989, -6226280, 1332980, 324644, -6206590, 1428190, 307810, -6221310, 1366950, 733830, -6137770, 1566310, 721706, -6129010, 1605510, 710199, -6149820, 1529770, 376009, -6184350, 1509190, 350741, -6186460, 1506650, 353764, -6199020, 1453750, 684215, -6127530, 1627280, 647470, -6135240, 1613300, 669373, -6217780, 1249510, 692090, -6224650, 1202360, 675059, -6223020, 1220190, 666533, -6231870, 1179330, 4015680, 433170, 4919770, 3926410, 411897, 4992620, 3999580, 392654, 4936160, 3926410, 411897, 4992620, 3965830, 345151, 4966630, 3999580, 392654, 4936160, 3926410, 411897, 4992620, 3988910, 282225, 4952200, 3965830, 345151, 4966630, 3926410, 411897, 4992620, 3985380, 230840, 4957660, 3988910, 282225, 4952200, 3926410, 411897, 4992620, 3959280, 265078, 4976700, 3985380, 230840, 4957660, 3926410, 411897, 4992620, 3825580, 314923, 5076690, 3959280, 265078, 4976700, 3779820, 402224, 5104530, 3825580, 314923, 5076690, 3926410, 411897, 4992620, 3776100, 457302, 5102660, 3779820, 402224, 5104530, 3926410, 411897, 4992620, 3804540, 473344, 5080170, 3776100, 457302, 5102660, 3926410, 411897, 4992620, 3804540, 473344, 5080170, 3926410, 411897, 4992620, 3887020, 466449, 5018410, 3887020, 466449, 5018410, 3926410, 411897, 4992620, 3921840, 453038, 4992650, 2553180, 559406, 5798480, 2708410, 503329, 5733260, 3245760, 632524, 5435660, 2553180, 559406, 5798480, 3245760, 632524, 5435660, 2828150, 597562, 5666460, 2828150, 597562, 5666460, 3245760, 632524, 5435660, 3186790, 646524, 5468590, 2955870, 627864, 5598040, 2828150, 597562, 5666460, 3186790, 646524, 5468590, 3112590, 678677, 5507030, 2955870, 627864, 5598040, 3186790, 646524, 5468590, 2997140, 671648, 5571130, 2955870, 627864, 5598040, 3112590, 678677, 5507030, 2677850, 663688, 5731310, 2648570, 638588, 5747630, 2720510, 656749, 5712110, 2720510, 656749, 5712110, 2648570, 638588, 5747630, 2729800, 609178, 5712950, 2336040, 615512, 5883150, 2729800, 609178, 5712950, 2648570, 638588, 5747630, 2492490, 672918, 5812710, 2336040, 615512, 5883150, 2648570, 638588, 5747630, 1913040, 1154070, 5954e3, 1877770, 1084370, 5978120, 1982950, 1117320, 5938220, 1877770, 1084370, 5978120, 1934710, 1073110, 5962080, 1982950, 1117320, 5938220, 1877770, 1084370, 5978120, 1818870, 973862, 6014990, 1934710, 1073110, 5962080, 1934710, 1073110, 5962080, 1818870, 973862, 6014990, 1921360, 1010120, 5977280, 1818870, 973862, 6014990, 1867330, 925737, 6007780, 1921360, 1010120, 5977280, 1921360, 1010120, 5977280, 1867330, 925737, 6007780, 1979910, 973359, 5964350, 1867330, 925737, 6007780, 2057190, 989579, 5935650, 1979910, 973359, 5964350, 2135350, 878219, 5925620, 2012450, 787795, 5980720, 2100630, 816674, 5946660, 1994130, 847432, 5978710, 2012450, 787795, 5980720, 2135350, 878219, 5925620, 2110050, 924585, 5927620, 1994130, 847432, 5978710, 2135350, 878219, 5925620, 1891600, 863907, 6009390, 1994130, 847432, 5978710, 2110050, 924585, 5927620, 2115190, 974474, 5917850, 1891600, 863907, 6009390, 2110050, 924585, 5927620, 1867330, 925737, 6007780, 1891600, 863907, 6009390, 2115190, 974474, 5917850, 1867330, 925737, 6007780, 2115190, 974474, 5917850, 2057190, 989579, 5935650, 2012450, 787795, 5980720, 2134840, 804374, 5936210, 2100630, 816674, 5946660, 2012450, 787795, 5980720, 2147450, 782682, 5934570, 2134840, 804374, 5936210, 2012450, 787795, 5980720, 2084500, 725246, 5964040, 2147450, 782682, 5934570, 2147450, 782682, 5934570, 2084500, 725246, 5964040, 2213760, 800435, 5907960, 2213760, 800435, 5907960, 2084500, 725246, 5964040, 2223080, 722060, 5914510, 2292930, 690917, 5891670, 2242310, 661473, 5914340, 2371240, 684813, 5861510, 2084500, 725246, 5964040, 2242310, 661473, 5914340, 2292930, 690917, 5891670, 2084500, 725246, 5964040, 2292930, 690917, 5891670, 2223080, 722060, 5914510, 2223080, 722060, 5914510, 2292930, 690917, 5891670, 2281350, 729353, 5891540, 2242310, 661473, 5914340, 2336040, 615512, 5883150, 2492490, 672918, 5812710, 2242310, 661473, 5914340, 2492490, 672918, 5812710, 2371240, 684813, 5861510, 2729800, 609178, 5712950, 2553180, 559406, 5798480, 2828150, 597562, 5666460, 2336040, 615512, 5883150, 2553180, 559406, 5798480, 2729800, 609178, 5712950, 3195200, 583928, 5470710, 2826370, 425098, 5682770, 3322550, 489564, 5404150, 2708410, 503329, 5733260, 2826370, 425098, 5682770, 3195200, 583928, 5470710, 3245760, 632524, 5435660, 2708410, 503329, 5733260, 3195200, 583928, 5470710, 3355060, 414847, 5390390, 2925910, 303029, 5640340, 3316050, 328989, 5420170, 2826370, 425098, 5682770, 2925910, 303029, 5640340, 3355060, 414847, 5390390, 2826370, 425098, 5682770, 3355060, 414847, 5390390, 3322550, 489564, 5404150, 2925910, 303029, 5640340, 2993650, 261494, 5607e3, 3215690, 298777, 5481620, 2925910, 303029, 5640340, 3215690, 298777, 5481620, 3316050, 328989, 5420170, 1982950, 1117320, 5938220, 1934710, 1073110, 5962080, 2006930, 1093850, 5934560, 1828910, 1111710, 5988170, 1818870, 973862, 6014990, 1877770, 1084370, 5978120, 185058, 5639100, 2964410, 299491, 5629100, 2973990, 276526, 5710170, 2818620, 185058, 5639100, 2964410, 276526, 5710170, 2818620, 193422, 5660990, 2922140, 193484, 5712760, 2820270, 193422, 5660990, 2922140, 276526, 5710170, 2818620, 181432, 5693500, 2859480, 193422, 5660990, 2922140, 193484, 5712760, 2820270, 526670, 5650530, 2901380, 561689, 5563140, 3058370, 591514, 5534020, 3104890, 487110, 5580700, 3039220, 561689, 5563140, 3058370, 526670, 5650530, 2901380, 471877, 5681030, 2851150, 487110, 5580700, 3039220, 526670, 5650530, 2901380, 409690, 5610150, 2996410, 487110, 5580700, 3039220, 471877, 5681030, 2851150, 395560, 5691600, 2841730, 409690, 5610150, 2996410, 471877, 5681030, 2851150, 299491, 5629100, 2973990, 409690, 5610150, 2996410, 395560, 5691600, 2841730, 276526, 5710170, 2818620, 299491, 5629100, 2973990, 395560, 5691600, 2841730, 784879, 5584710, 2969210, 811191, 5444580, 3210870, 852626, 5451790, 3187970, 737226, 5472420, 3181440, 811191, 5444580, 3210870, 784879, 5584710, 2969210, 660918, 5629770, 2914140, 737226, 5472420, 3181440, 784879, 5584710, 2969210, 644851, 5520200, 3118750, 737226, 5472420, 3181440, 660918, 5629770, 2914140, 526670, 5650530, 2901380, 644851, 5520200, 3118750, 660918, 5629770, 2914140, 526670, 5650530, 2901380, 591514, 5534020, 3104890, 644851, 5520200, 3118750, 872675, 5545680, 3017140, 917109, 5466770, 3144410, 962860, 5510350, 3053960, 852626, 5451790, 3187970, 917109, 5466770, 3144410, 872675, 5545680, 3017140, 784879, 5584710, 2969210, 852626, 5451790, 3187970, 872675, 5545680, 3017140, -4564400, 616400, -4397350, -4712770, 698442, -4226370, -4525890, 680194, -4427440, -4726880, 667012, -4215750, -4735780, 669868, -4205370, -4722470, 686493, -4217550, -4722470, 686493, -4217550, -4712770, 698442, -4226370, -4564400, 616400, -4397350, -4722470, 686493, -4217550, -4564400, 616400, -4397350, -4726880, 667012, -4215750, -4777970, 663253, -4158740, -4735780, 669868, -4205370, -4726880, 667012, -4215750, -4777970, 663253, -4158740, -4726880, 667012, -4215750, -4730120, 652488, -4214400, -4564400, 616400, -4397350, -4730120, 652488, -4214400, -4726880, 667012, -4215750, -4782190, 657714, -4154800, -4777970, 663253, -4158740, -4730120, 652488, -4214400, -4782190, 657714, -4154800, -4730120, 652488, -4214400, -4738870, 612023, -4210660, -4782190, 657714, -4154800, -4738870, 612023, -4210660, -4788490, 610191, -4154800, -4738870, 612023, -4210660, -4730120, 652488, -4214400, -4564400, 616400, -4397350, -4818960, 608861, -4119850, -4782190, 657714, -4154800, -4788490, 610191, -4154800, -4788490, 610191, -4154800, -4738870, 612023, -4210660, -4741030, 601788, -4209720, -4788490, 610191, -4154800, -4741030, 601788, -4209720, -4789e3, 606180, -4154800, -4738870, 612023, -4210660, -4564400, 616400, -4397350, -4606120, 589159, -4357660, -4738870, 612023, -4210660, -4606120, 589159, -4357660, -4741030, 601788, -4209720, -4818960, 608861, -4119850, -4788490, 610191, -4154800, -4789e3, 606180, -4154800, -4573230, 555040, -4396350, -4606120, 589159, -4357660, -4564400, 616400, -4397350, -4894700, 253693, -4067760, -4924720, 263265, -4030990, -4880780, 265529, -4083600, -4924720, 263265, -4030990, -5032490, 284619, -3895050, -4880780, 265529, -4083600, -5030040, 224982, -3902060, -5032490, 284619, -3895050, -4924720, 263265, -4030990, -5030040, 224982, -3902060, -4924720, 263265, -4030990, -4947240, 241354, -4004880, -4948580, 175402, -4006650, -5030040, 224982, -3902060, -4947240, 241354, -4004880, -5057960, 175744, -3868590, -5030040, 224982, -3902060, -4948580, 175402, -4006650, -4990080, 150281, -3956220, -5057960, 175744, -3868590, -4948580, 175402, -4006650, -5051480, 130778, -3878750, -5057960, 175744, -3868590, -4990080, 150281, -3956220, -4815490, 336140, -4154800, -4815420, 337149, -4154800, -4789120, 333880, -4185150, -4815490, 336140, -4154800, -4789120, 333880, -4185150, -4789120, 333880, -4185140, -4787810, 333789, -4186640, -4789120, 333880, -4185140, -4789120, 333880, -4185150, -5050070, 356855, -3866440, -5099720, 373694, -3799550, -4815420, 337149, -4154800, -5050070, 356855, -3866440, -4815420, 337149, -4154800, -4815490, 336140, -4154800, -4816010, 328660, -4154800, -4815490, 336140, -4154800, -4789120, 333880, -4185140, -4816010, 328660, -4154800, -4789120, 333880, -4185140, -4789180, 333547, -4185110, -4789180, 333547, -4185110, -4789120, 333880, -4185140, -4787810, 333789, -4186640, -5032490, 284619, -3895050, -5050070, 356855, -3866440, -4815490, 336140, -4154800, -5032490, 284619, -3895050, -4815490, 336140, -4154800, -4816010, 328660, -4154800, -4816010, 328660, -4154800, -4789180, 333547, -4185110, -4789300, 332716, -4185030, -4816010, 328660, -4154800, -4789300, 332716, -4185030, -4817080, 312520, -4154800, -4789300, 332716, -4185030, -4789180, 333547, -4185110, -4787810, 333789, -4186640, -5032490, 284619, -3895050, -4816010, 328660, -4154800, -4817080, 312520, -4154800, -5032490, 284619, -3895050, -4817080, 312520, -4154800, -4840270, 295365, -4129200, -4880780, 265529, -4083600, -5032490, 284619, -3895050, -4840270, 295365, -4129200, -4809940, 407876, -4154800, -4776860, 411285, -4192210, -4779e3, 398281, -4191030, -4809940, 407876, -4154800, -4779e3, 398281, -4191030, -4810500, 401244, -4154800, -4776860, 411285, -4192210, -4771690, 411763, -4198e3, -4753640, 395832, -4219810, -4776860, 411285, -4192210, -4753640, 395832, -4219810, -4779e3, 398281, -4191030, -4810500, 401244, -4154800, -4842930, 404289, -4116910, -4809940, 407876, -4154800, -4810670, 399228, -4154800, -4810500, 401244, -4154800, -4779e3, 398281, -4191030, -4810670, 399228, -4154800, -4779e3, 398281, -4191030, -4779150, 397369, -4190950, -4779150, 397369, -4190950, -4779e3, 398281, -4191030, -4753640, 395832, -4219810, -5069160, 413464, -3835900, -4842930, 404289, -4116910, -4810500, 401244, -4154800, -5069160, 413464, -3835900, -4810500, 401244, -4154800, -4810670, 399228, -4154800, -4810670, 399228, -4154800, -4779150, 397369, -4190950, -4789080, 334129, -4185170, -4810670, 399228, -4154800, -4789080, 334129, -4185170, -4815150, 341014, -4154800, -4779150, 397369, -4190950, -4753640, 395832, -4219810, -4787810, 333789, -4186640, -4779150, 397369, -4190950, -4787810, 333789, -4186640, -4789080, 334129, -4185170, -4815150, 341014, -4154800, -5069160, 413464, -3835900, -4810670, 399228, -4154800, -4815210, 340090, -4154800, -4815150, 341014, -4154800, -4789080, 334129, -4185170, -4815210, 340090, -4154800, -4789080, 334129, -4185170, -4789100, 334046, -4185160, -4787810, 333789, -4186640, -4789100, 334046, -4185160, -4789080, 334129, -4185170, -5114630, 415286, -3775270, -5069160, 413464, -3835900, -4815150, 341014, -4154800, -5114630, 415286, -3775270, -4815150, 341014, -4154800, -4815210, 340090, -4154800, -4815420, 337149, -4154800, -4815210, 340090, -4154800, -4789100, 334046, -4185160, -4815420, 337149, -4154800, -4789100, 334046, -4185160, -4789120, 333880, -4185150, -4787810, 333789, -4186640, -4789120, 333880, -4185150, -4789100, 334046, -4185160, -5099720, 373694, -3799550, -5114630, 415286, -3775270, -4815210, 340090, -4154800, -5099720, 373694, -3799550, -4815210, 340090, -4154800, -4815420, 337149, -4154800, -4879810, 435511, -4070230, -4924580, 530458, -4004950, -4898980, 530122, -4036070, -4879810, 435511, -4070230, -4955140, 470580, -3974840, -4924580, 530458, -4004950, -4879810, 435511, -4070230, -5009370, 460913, -3907880, -4955140, 470580, -3974840, -5069160, 413464, -3835900, -5009370, 460913, -3907880, -4879810, 435511, -4070230, -5069160, 413464, -3835900, -4879810, 435511, -4070230, -4842930, 404289, -4116910, -5052710, 468991, -3851090, -5105690, 507906, -3776040, -5093840, 509150, -3791740, -5052710, 468991, -3851090, -5187960, 515175, -3661960, -5105690, 507906, -3776040, -5052710, 468991, -3851090, -5133e3, 484126, -3742220, -5187960, 515175, -3661960, -5069160, 413464, -3835900, -5133e3, 484126, -3742220, -5052710, 468991, -3851090, -5069160, 413464, -3835900, -5052710, 468991, -3851090, -5009370, 460913, -3907880, -4791380, 587034, -4154800, -4789880, 599158, -4154800, -4744640, 584333, -4208110, -4791380, 587034, -4154800, -4744640, 584333, -4208110, -4746350, 575969, -4207340, -4791380, 587034, -4154800, -4746350, 575969, -4207340, -4790710, 586527, -4155640, -4641570, 551583, -4325060, -4746350, 575969, -4207340, -4744640, 584333, -4208110, -4791380, 587034, -4154800, -4818960, 608861, -4119850, -4789880, 599158, -4154800, -4763050, 563997, -4190180, -4790710, 586527, -4155640, -4746350, 575969, -4207340, -4763050, 563997, -4190180, -4746350, 575969, -4207340, -4749060, 562592, -4206100, -4749060, 562592, -4206100, -4746350, 575969, -4207340, -4641570, 551583, -4325060, -4751170, 551997, -4205140, -4763050, 563997, -4190180, -4749060, 562592, -4206100, -4749060, 562592, -4206100, -4641570, 551583, -4325060, -4702640, 504558, -4264820, -4749060, 562592, -4206100, -4702640, 504558, -4264820, -4751170, 551997, -4205140, -4799120, 507965, -4156280, -4763050, 563997, -4190180, -4751170, 551997, -4205140, -4799120, 507965, -4156280, -4751170, 551997, -4205140, -4759940, 506589, -4200960, -4759940, 506589, -4200960, -4751170, 551997, -4205140, -4702640, 504558, -4264820, -4763170, 489201, -4199360, -4799120, 507965, -4156280, -4759940, 506589, -4200960, -4759940, 506589, -4200960, -4702640, 504558, -4264820, -4740080, 477384, -4226580, -4759940, 506589, -4200960, -4740080, 477384, -4226580, -4763170, 489201, -4199360, -4770920, 480574, -4191610, -4799120, 507965, -4156280, -4763170, 489201, -4199360, -4770920, 480574, -4191610, -4763170, 489201, -4199360, -4764870, 479964, -4198510, -4740080, 477384, -4226580, -4764870, 479964, -4198510, -4763170, 489201, -4199360, -4314760, 935722, -4587600, -4394120, 1010750, -4496060, -4301730, 1018710, -4582190, -4490680, 929647, -4417990, -4394120, 1010750, -4496060, -4314760, 935722, -4587600, -4299030, 881604, -4612840, -4490680, 929647, -4417990, -4314760, 935722, -4587600, -4515120, 881822, -4402960, -4490680, 929647, -4417990, -4299030, 881604, -4612840, -4310950, 812069, -4614470, -4515120, 881822, -4402960, -4299030, 881604, -4612840, -4554590, 830337, -4372420, -4515120, 881822, -4402960, -4310950, 812069, -4614470, -4340510, 778558, -4592630, -4554590, 830337, -4372420, -4310950, 812069, -4614470, -4605850, 768689, -4330080, -4554590, 830337, -4372420, -4340510, 778558, -4592630, -4386120, 724780, -4558210, -4605850, 768689, -4330080, -4340510, 778558, -4592630, -4652320, 726454, -4287760, -4605850, 768689, -4330080, -4386120, 724780, -4558210, -4472210, 693534, -4479260, -4652320, 726454, -4287760, -4386120, 724780, -4558210, -4712770, 698442, -4226370, -4652320, 726454, -4287760, -4472210, 693534, -4479260, -4712770, 698442, -4226370, -4472210, 693534, -4479260, -4525890, 680194, -4427440, -5177020, 630705, -3659380, -5225970, 641020, -3587780, -5216830, 674214, -3594950, -5196940, 587431, -3638430, -5225970, 641020, -3587780, -5177020, 630705, -3659380, -5128260, 553394, -3739140, -5196940, 587431, -3638430, -5177020, 630705, -3659380, -5187960, 515175, -3661960, -5196940, 587431, -3638430, -5128260, 553394, -3739140, -5187960, 515175, -3661960, -5128260, 553394, -3739140, -5105690, 507906, -3776040, -4394120, 1010750, -4496060, -4327290, 1038170, -4553860, -4301730, 1018710, -4582190, -4789e3, 606180, -4154800, -4741030, 601788, -4209720, -4744640, 584333, -4208110, -4789e3, 606180, -4154800, -4744640, 584333, -4208110, -4789880, 599158, -4154800, -4741030, 601788, -4209720, -4606120, 589159, -4357660, -4641570, 551583, -4325060, -4741030, 601788, -4209720, -4641570, 551583, -4325060, -4744640, 584333, -4208110, -4789880, 599158, -4154800, -4818960, 608861, -4119850, -4789e3, 606180, -4154800, -4808190, 428104, -4154800, -4779100, 447466, -4185990, -4774510, 425190, -4193490, -4808190, 428104, -4154800, -4774510, 425190, -4193490, -4776860, 411285, -4192210, -4808190, 428104, -4154800, -4776860, 411285, -4192210, -4809940, 407876, -4154800, -4776860, 411285, -4192210, -4774510, 425190, -4193490, -4771690, 411763, -4198e3, -4842930, 404289, -4116910, -4808190, 428104, -4154800, -4809940, 407876, -4154800, 3336930, 4885660, 2374410, 3439070, 4911500, 2167700, 3464050, 4997110, 1919640, 3471240, 5008420, 1876990, 3464050, 4997110, 1919640, 3439070, 4911500, 2167700, 3471240, 5008420, 1876990, 3439070, 4911500, 2167700, 3518620, 4986300, 1847620, 3439070, 4911500, 2167700, 3564690, 4949720, 1857600, 3518620, 4986300, 1847620, 3439070, 4911500, 2167700, 3628660, 4916490, 1821870, 3564690, 4949720, 1857600, 3439070, 4911500, 2167700, 3669250, 4888520, 1815870, 3628660, 4916490, 1821870, 3439070, 4911500, 2167700, 3683370, 4849530, 1889810, 3669250, 4888520, 1815870, 3439070, 4911500, 2167700, 3714150, 4753900, 2063350, 3683370, 4849530, 1889810, 3265990, 5074490, 2057910, 3182440, 4871640, 2602720, 3328440, 5049690, 2018740, 3182440, 4871640, 2602720, 3346380, 5058170, 1967550, 3328440, 5049690, 2018740, 3191730, 4848940, 2633360, 3212230, 4835380, 2633360, 3346380, 5058170, 1967550, 3191730, 4848940, 2633360, 3346380, 5058170, 1967550, 3182440, 4871640, 2602720, 3191730, 4848940, 2633360, 3203040, 4820380, 2671510, 3212230, 4835380, 2633360, 3213280, 4834680, 2633360, 3370540, 5050760, 1945340, 3346380, 5058170, 1967550, 3213280, 4834680, 2633360, 3346380, 5058170, 1967550, 3212230, 4835380, 2633360, 3212230, 4835380, 2633360, 3203040, 4820380, 2671510, 3213280, 4834680, 2633360, 3229490, 4823870, 2633360, 3258350, 4827290, 2591480, 3370540, 5050760, 1945340, 3229490, 4823870, 2633360, 3370540, 5050760, 1945340, 3213280, 4834680, 2633360, 3203040, 4820380, 2671510, 3229490, 4823870, 2633360, 3213280, 4834680, 2633360, 3370540, 5050760, 1945340, 3258350, 4827290, 2591480, 3336930, 4885660, 2374410, 3258350, 4827290, 2591480, 3301410, 4808720, 2571560, 3336930, 4885660, 2374410, 3336930, 4885660, 2374410, 3301410, 4808720, 2571560, 3311960, 4823580, 2530120, 3336930, 4885660, 2374410, 3464050, 4997110, 1919640, 3425020, 5013650, 1946180, 3370540, 5050760, 1945340, 3336930, 4885660, 2374410, 3425020, 5013650, 1946180, 3214440, 5102200, 2070420, 3212230, 5074530, 2140210, 3225200, 5100650, 2057560, 3225200, 5100650, 2057560, 3212230, 5074530, 2140210, 3143640, 4916240, 2565990, 3083540, 4961040, 2552750, 3143640, 4916240, 2565990, 3212230, 5074530, 2140210, 3083540, 4961040, 2552750, 3212230, 5074530, 2140210, 3187770, 5067270, 2192960, 3143640, 4916240, 2565990, 3182440, 4871640, 2602720, 3265990, 5074490, 2057910, 3225200, 5100650, 2057560, 3143640, 4916240, 2565990, 3265990, 5074490, 2057910, 3259690, 4803510, 2633360, 3269710, 4811970, 2605530, 3258350, 4827290, 2591480, 3259690, 4803510, 2633360, 3258350, 4827290, 2591480, 3251940, 4808760, 2633360, 3251940, 4808760, 2633360, 3245970, 4791800, 2671120, 3259690, 4803510, 2633360, 3229490, 4823870, 2633360, 3251940, 4808760, 2633360, 3258350, 4827290, 2591480, 3203040, 4820380, 2671510, 3245970, 4791800, 2671120, 3251940, 4808760, 2633360, 3203040, 4820380, 2671510, 3251940, 4808760, 2633360, 3229490, 4823870, 2633360, 2964130, 5094540, 2429090, 2993160, 5071280, 2442050, 2969040, 5102580, 2406260, 2969040, 5102580, 2406260, 2993160, 5071280, 2442050, 3013970, 5104920, 2345070, 2993160, 5071280, 2442050, 3034030, 5106310, 2316180, 3013970, 5104920, 2345070, 2993160, 5071280, 2442050, 3009680, 5044880, 2475940, 3034030, 5106310, 2316180, 3125310, 5097640, 2212260, 3083540, 4961040, 2552750, 3164500, 5071020, 2217700, 3036300, 4999570, 2534270, 3083540, 4961040, 2552750, 3125310, 5097640, 2212260, 3078140, 5094870, 2283170, 3036300, 4999570, 2534270, 3125310, 5097640, 2212260, 3009680, 5044880, 2475940, 3036300, 4999570, 2534270, 3078140, 5094870, 2283170, 3034030, 5106310, 2316180, 3009680, 5044880, 2475940, 3078140, 5094870, 2283170, 3336930, 4885660, 2374410, 3346780, 4821580, 2488030, 3358890, 4834310, 2446950, 3336930, 4885660, 2374410, 3311960, 4823580, 2530120, 3346780, 4821580, 2488030, 3158950, 4770060, 2809800, 3166870, 4759680, 2818420, 3177940, 4781630, 2768700, 3177940, 4781630, 2768700, 3166870, 4759680, 2818420, 3193670, 4781660, 2750610, 3166870, 4759680, 2818420, 3200330, 4757350, 2784590, 3193670, 4781660, 2750610, 3083540, 4961040, 2552750, 3187770, 5067270, 2192960, 3164500, 5071020, 2217700, 1646760, 4954140, 3651780, 1702590, 4989e3, 3578470, 1737700, 5186140, 327e4, 1646760, 4954140, 3651780, 1737700, 5186140, 327e4, 1716470, 5191940, 3271990, 1763730, 5357370, 2968010, 1716470, 5191940, 3271990, 1737700, 5186140, 327e4, 1599130, 4877060, 3773820, 1646760, 4954140, 3651780, 1716470, 5191940, 3271990, 1599130, 4877060, 3773820, 1716470, 5191940, 3271990, 1707530, 5194360, 3272830, 1707530, 5194360, 3272830, 1716470, 5191940, 3271990, 1763730, 5357370, 2968010, 1639260, 5212280, 3279200, 1599130, 4877060, 3773820, 1707530, 5194360, 3272830, 1707530, 5194360, 3272830, 1763730, 5357370, 2968010, 1649280, 5335820, 3070180, 1707530, 5194360, 3272830, 1649280, 5335820, 3070180, 1639260, 5212280, 3279200, 1503380, 4892880, 3792530, 1599130, 4877060, 3773820, 1639260, 5212280, 3279200, 1503380, 4892880, 3792530, 1639260, 5212280, 3279200, 1610610, 5219510, 3281870, 1610610, 5219510, 3281870, 1639260, 5212280, 3279200, 1649280, 5335820, 3070180, 1564050, 5230920, 3286200, 1503380, 4892880, 3792530, 1610610, 5219510, 3281870, 1610610, 5219510, 3281870, 1649280, 5335820, 3070180, 1575050, 5300500, 3168110, 1610610, 5219510, 3281870, 1575050, 5300500, 3168110, 1564050, 5230920, 3286200, 1475680, 5062790, 3575610, 1503380, 4892880, 3792530, 1564050, 5230920, 3286200, 1475680, 5062790, 3575610, 1564050, 5230920, 3286200, 1546990, 5234990, 3287780, 1546990, 5234990, 3287780, 1564050, 5230920, 3286200, 1575050, 5300500, 3168110, 1470860, 5252430, 3294840, 1475680, 5062790, 3575610, 1546990, 5234990, 3287780, 1546990, 5234990, 3287780, 1575050, 5300500, 3168110, 1469870, 5272080, 3263970, 1546990, 5234990, 3287780, 1469870, 5272080, 3263970, 1470860, 5252430, 3294840, 1459170, 5123930, 3494920, 1475680, 5062790, 3575610, 1470860, 5252430, 3294840, 1459170, 5123930, 3494920, 1470860, 5252430, 3294840, 1468690, 5252910, 3295040, 1469870, 5272080, 3263970, 1468690, 5252910, 3295040, 1470860, 5252430, 3294840, 1460250, 5232090, 3331480, 1459170, 5123930, 3494920, 1468690, 5252910, 3295040, 1460250, 5232090, 3331480, 1468690, 5252910, 3295040, 1465440, 5253630, 3295340, 1469870, 5272080, 3263970, 1465440, 5253630, 3295340, 1468690, 5252910, 3295040, 1439070, 5172160, 3432060, 1459170, 5123930, 3494920, 1460250, 5232090, 3331480, 1373570, 5220390, 3385890, 1439070, 5172160, 3432060, 1460250, 5232090, 3331480, 1248100, 4967770, 3787800, 1304110, 4921240, 3829170, 1294560, 51e5, 3592740, 1234470, 5023150, 3719070, 1248100, 4967770, 3787800, 1294560, 51e5, 3592740, 1192990, 5115100, 3606310, 1234470, 5023150, 3719070, 1294560, 51e5, 3592740, 1095320, 5082100, 3682630, 1234470, 5023150, 3719070, 1192990, 5115100, 3606310, 1294560, 51e5, 3592740, 1304110, 4921240, 3829170, 1356030, 4914970, 3819240, 1294560, 51e5, 3592740, 1356030, 4914970, 3819240, 1424940, 5049140, 3615010, 1356030, 4914970, 3819240, 1402960, 4914580, 3802860, 1424940, 5049140, 3615010, 1424940, 5049140, 3615010, 1402960, 4914580, 3802860, 1475680, 5062790, 3575610, 1402960, 4914580, 3802860, 1503380, 4892880, 3792530, 1475680, 5062790, 3575610, 1599130, 4877060, 3773820, 1657940, 4887600, 3734870, 1646500, 4920520, 3696760, 1599130, 4877060, 3773820, 1646500, 4920520, 3696760, 1646760, 4954140, 3651780, 2095040, 5413880, 2633360, 2095930, 5413540, 2633360, 2098330, 5421770, 2614570, 1954670, 5072690, 3324640, 1985390, 5054920, 3333430, 2001760, 5106080, 3245080, 1954670, 5072690, 3324640, 2001760, 5106080, 3245080, 1972240, 5115770, 3247890, 1972240, 5115770, 3247890, 2001760, 5106080, 3245080, 2095930, 5413540, 2633360, 1972240, 5115770, 3247890, 2095930, 5413540, 2633360, 2095040, 5413880, 2633360, 2090660, 5415570, 2633360, 2095040, 5413880, 2633360, 2098330, 5421770, 2614570, 1962230, 5119010, 3248830, 1954670, 5072690, 3324640, 1972240, 5115770, 3247890, 1972240, 5115770, 3247890, 2095040, 5413880, 2633360, 2090660, 5415570, 2633360, 1972240, 5115770, 3247890, 2090660, 5415570, 2633360, 1991290, 5330030, 2872390, 1972240, 5115770, 3247890, 1991290, 5330030, 2872390, 1962230, 5119010, 3248830, 2090660, 5415570, 2633360, 2098330, 5421770, 2614570, 1888630, 5498460, 2614310, 2090660, 5415570, 2633360, 1888630, 5498460, 2614310, 1896520, 5486580, 2633360, 1896520, 5486580, 2633360, 1991290, 5330030, 2872390, 2090660, 5415570, 2633360, 1888630, 5498460, 2614310, 1895890, 5486790, 2633360, 1896520, 5486580, 2633360, 1939830, 5412640, 2751370, 1991290, 5330030, 2872390, 1896520, 5486580, 2633360, 1939830, 5412640, 2751370, 1896520, 5486580, 2633360, 1895890, 5486790, 2633360, 1888630, 5498460, 2614310, 1890010, 5488820, 2633360, 1895890, 5486790, 2633360, 1894590, 5454220, 2700650, 1939830, 5412640, 2751370, 1895890, 5486790, 2633360, 1894590, 5454220, 2700650, 1895890, 5486790, 2633360, 1890010, 5488820, 2633360, 1733860, 5001960, 3545430, 1816010, 4970660, 3548290, 1795560, 5021330, 3487240, 1733860, 5001960, 3545430, 1795560, 5021330, 3487240, 1831590, 5159360, 3261180, 1733860, 5001960, 3545430, 1831590, 5159360, 3261180, 1804620, 5167240, 3263720, 1804620, 5167240, 3263720, 1831590, 5159360, 3261180, 1870620, 5316810, 2975450, 1795560, 5021330, 3487240, 1856570, 5015500, 3463770, 1865540, 5149210, 3257980, 1795560, 5021330, 3487240, 1865540, 5149210, 3257980, 1831590, 5159360, 3261180, 1870620, 5316810, 2975450, 1831590, 5159360, 3261180, 1865540, 5149210, 3257980, 1865540, 5149210, 3257980, 1856570, 5015500, 3463770, 1907660, 5136300, 3254010, 1907660, 5136300, 3254010, 1991290, 5330030, 2872390, 1870620, 5316810, 2975450, 1907660, 5136300, 3254010, 1870620, 5316810, 2975450, 1865540, 5149210, 3257980, 1856570, 5015500, 3463770, 1914200, 5070560, 3351150, 1931900, 5128690, 3251710, 1856570, 5015500, 3463770, 1931900, 5128690, 3251710, 1907660, 5136300, 3254010, 1907660, 5136300, 3254010, 1931900, 5128690, 3251710, 1991290, 5330030, 2872390, 1914200, 5070560, 3351150, 1954670, 5072690, 3324640, 1962230, 5119010, 3248830, 1914200, 5070560, 3351150, 1962230, 5119010, 3248830, 1931900, 5128690, 3251710, 1991290, 5330030, 2872390, 1931900, 5128690, 3251710, 1962230, 5119010, 3248830, 2224960, 5361790, 2633360, 2237270, 5386270, 2572700, 2172390, 5424940, 2547080, 2224960, 5361790, 2633360, 2172390, 5424940, 2547080, 2163230, 5387e3, 2633360, 2080820, 5079230, 3237530, 2071240, 5046050, 3294660, 2086150, 5077370, 3237020, 2086150, 5077370, 3237020, 2224960, 5361790, 2633360, 2163230, 5387e3, 2633360, 2086150, 5077370, 3237020, 2163230, 5387e3, 2633360, 2080820, 5079230, 3237530, 2172390, 5424940, 2547080, 2161930, 5387520, 2633360, 2163230, 5387e3, 2633360, 2055500, 5035020, 3321120, 2071240, 5046050, 3294660, 2080820, 5079230, 3237530, 2055500, 5035020, 3321120, 2080820, 5079230, 3237530, 2070610, 5082770, 3238510, 2070610, 5082770, 3238510, 2080820, 5079230, 3237530, 2163230, 5387e3, 2633360, 2070610, 5082770, 3238510, 2163230, 5387e3, 2633360, 2161930, 5387520, 2633360, 2154220, 5390600, 2633360, 2161930, 5387520, 2633360, 2172390, 5424940, 2547080, 1985390, 5054920, 3333430, 2055500, 5035020, 3321120, 2070610, 5082770, 3238510, 1985390, 5054920, 3333430, 2070610, 5082770, 3238510, 2009100, 5103640, 3244380, 2009100, 5103640, 3244380, 2070610, 5082770, 3238510, 2161930, 5387520, 2633360, 2009100, 5103640, 3244380, 2161930, 5387520, 2633360, 2154220, 5390600, 2633360, 2154220, 5390600, 2633360, 2172390, 5424940, 2547080, 2098330, 5421770, 2614570, 2154220, 5390600, 2633360, 2098330, 5421770, 2614570, 2095930, 5413540, 2633360, 2001760, 5106080, 3245080, 1985390, 5054920, 3333430, 2009110, 5103650, 3244370, 2009110, 5103650, 3244370, 2154220, 5390600, 2633360, 2095930, 5413540, 2633360, 2009110, 5103650, 3244370, 2095930, 5413540, 2633360, 2001760, 5106080, 3245080, 2200100, 5036120, 3226070, 2198280, 5027230, 3241050, 2201900, 5035440, 3225900, 2201900, 5035440, 3225900, 2310100, 5280780, 2721680, 2252550, 5344350, 2645260, 2201900, 5035440, 3225900, 2252550, 5344350, 2645260, 2200100, 5036120, 3226070, 2136600, 5018620, 3294820, 2198280, 5027230, 3241050, 2200100, 5036120, 3226070, 2136600, 5018620, 3294820, 2200100, 5036120, 3226070, 2149780, 5054690, 3230920, 2252550, 5344350, 2645260, 2149780, 5054690, 3230920, 2200100, 5036120, 3226070, 2071240, 5046050, 3294660, 2136600, 5018620, 3294820, 2149780, 5054690, 3230920, 2071240, 5046050, 3294660, 2149780, 5054690, 3230920, 2088830, 5076430, 3236770, 2088830, 5076430, 3236770, 2149780, 5054690, 3230920, 2252550, 5344350, 2645260, 2224960, 5361790, 2633360, 2250080, 5351300, 2633360, 2237270, 5386270, 2572700, 2071240, 5046050, 3294660, 2088830, 5076430, 3236770, 2086150, 5077370, 3237020, 2088830, 5076430, 3236770, 2252550, 5344350, 2645260, 2250080, 5351300, 2633360, 2088830, 5076430, 3236770, 2250080, 5351300, 2633360, 2224960, 5361790, 2633360, 2088830, 5076430, 3236770, 2224960, 5361790, 2633360, 2086150, 5077370, 3237020, 2482520, 5211830, 2702850, 2403480, 5005330, 3128040, 2426360, 5007560, 3106880, 2344480, 5038520, 3119570, 2403480, 5005330, 3128040, 2482520, 5211830, 2702850, 2310100, 5280780, 2721680, 2344480, 5038520, 3119570, 2482520, 5211830, 2702850, 2310100, 5280780, 2721680, 2220450, 5069500, 3159610, 2344480, 5038520, 3119570, 2198280, 5027230, 3241050, 2202470, 5035230, 3225850, 2201900, 5035440, 3225900, 2202470, 5035230, 3225850, 2220450, 5069500, 3159610, 2310100, 5280780, 2721680, 2202470, 5035230, 3225850, 2310100, 5280780, 2721680, 2201900, 5035440, 3225900, 2482520, 5211830, 2702850, 2426360, 5007560, 3106880, 2475370, 4975760, 3119200, 2482520, 5211830, 2702850, 2475370, 4975760, 3119200, 2559230, 5092140, 2854150, 2475370, 4975760, 3119200, 2556150, 5067770, 2899620, 2559230, 5092140, 2854150, 2475370, 4975760, 3119200, 2594620, 5038930, 2915560, 2556150, 5067770, 2899620, 2475370, 4975760, 3119200, 2576180, 4997200, 3001880, 2594620, 5038930, 2915560, 2475370, 4975760, 3119200, 2565620, 4939010, 3104740, 2576180, 4997200, 3001880, 2629690, 5140130, 2700980, 2698640, 5048620, 2802940, 2758370, 5079740, 2686920, 2559230, 5092140, 2854150, 2698640, 5048620, 2802940, 2629690, 5140130, 2700980, 2482520, 5211830, 2702850, 2559230, 5092140, 2854150, 2629690, 5140130, 2700980, 1752220, 5182120, 3268640, 1733860, 5001960, 3545430, 1804620, 5167240, 3263720, 1804620, 5167240, 3263720, 1870620, 5316810, 2975450, 1763730, 5357370, 2968010, 1804620, 5167240, 3263720, 1763730, 5357370, 2968010, 1752220, 5182120, 3268640, 1702590, 4989e3, 3578470, 1733860, 5001960, 3545430, 1752220, 5182120, 3268640, 1702590, 4989e3, 3578470, 1752220, 5182120, 3268640, 1737700, 5186140, 327e4, 1763730, 5357370, 2968010, 1737700, 5186140, 327e4, 1752220, 5182120, 3268640, 2576180, 4997200, 3001880, 2565620, 4939010, 3104740, 2648190, 4933050, 3044710, 2565620, 4939010, 3104740, 2667240, 4885830, 3103260, 2648190, 4933050, 3044710, 2565620, 4939010, 3104740, 2695360, 4837470, 3153960, 2667240, 4885830, 3103260, 1646760, 4954140, 3651780, 1698410, 4964890, 3613570, 1702590, 4989e3, 3578470, 1856570, 5015500, 3463770, 1906530, 5035520, 3407500, 1914200, 5070560, 3351150, 1939830, 5412640, 2751370, 1937860, 5373470, 2827940, 1991290, 5330030, 2872390, 1097620, -6227250, 832198, 1044390, -6228120, 891670, 1068240, -6234220, 818188, 1068240, -6234220, 818188, 1044390, -6228120, 891670, 1052870, -6238960, 801935, 1052870, -6238960, 801935, 1044390, -6228120, 891670, 1002290, -6248010, 796336, 1020190, -6230680, 901688, 1002290, -6248010, 796336, 1044390, -6228120, 891670, 1020190, -6230680, 901688, 1044390, -6228120, 891670, 1043750, -6226770, 901688, 1043750, -6226770, 901688, 1037130, -6212220, 1003290, 1020190, -6230680, 901688, 1048760, -6225930, 901688, 1043750, -6226770, 901688, 1044390, -6228120, 891670, 1102290, -6197360, 1025310, 1037130, -6212220, 1003290, 1043750, -6226770, 901688, 1102290, -6197360, 1025310, 1043750, -6226770, 901688, 1048760, -6225930, 901688, 1048830, -6225920, 901688, 1048760, -6225930, 901688, 1044390, -6228120, 891670, 1102290, -6197360, 1025310, 1048760, -6225930, 901688, 1048830, -6225920, 901688, 1102290, -6197360, 1025310, 1048830, -6225920, 901688, 1054490, -6223090, 914450, 1020190, -6230680, 901688, 996149, -6234560, 901688, 1002290, -6248010, 796336, 1037130, -6212220, 1003290, 991662, -6224050, 975702, 996149, -6234560, 901688, 1037130, -6212220, 1003290, 996149, -6234560, 901688, 1020190, -6230680, 901688, 985462, -6236260, 901688, 982065, -6242470, 861834, 1002290, -6248010, 796336, 985462, -6236260, 901688, 1002290, -6248010, 796336, 996149, -6234560, 901688, 996149, -6234560, 901688, 991662, -6224050, 975702, 985462, -6236260, 901688, 978658, -6237330, 901688, 968265, -6247180, 843203, 982065, -6242470, 861834, 978658, -6237330, 901688, 982065, -6242470, 861834, 985462, -6236260, 901688, 991662, -6224050, 975702, 978658, -6237330, 901688, 985462, -6236260, 901688, 978658, -6237330, 901688, 954266, -6241110, 901688, 968265, -6247180, 843203, 991662, -6224050, 975702, 938363, -6233550, 967803, 954266, -6241110, 901688, 991662, -6224050, 975702, 954266, -6241110, 901688, 978658, -6237330, 901688, 855937, -6238050, 1013820, 815984, -6236880, 1052960, 835782, -6256310, 913788, 855937, -6238050, 1013820, 835782, -6256310, 913788, 854207, -6242030, 990678, 864362, -6254300, 900984, 864282, -6254210, 901688, 862788, -6254420, 901688, 854207, -6242030, 990678, 835782, -6256310, 913788, 862788, -6254420, 901688, 854207, -6242030, 990678, 862788, -6254420, 901688, 864282, -6254210, 901688, 864632, -6254160, 901688, 864282, -6254210, 901688, 864362, -6254300, 900984, 897766, -6236700, 985768, 854207, -6242030, 990678, 864282, -6254210, 901688, 897766, -6236700, 985768, 864282, -6254210, 901688, 864632, -6254160, 901688, 864632, -6254160, 901688, 864362, -6254300, 900984, 909256, -6248980, 893712, 864632, -6254160, 901688, 909256, -6248980, 893712, 908262, -6247970, 901688, 908262, -6247970, 901688, 897766, -6236700, 985768, 864632, -6254160, 901688, 909156, -6247840, 901688, 908262, -6247970, 901688, 909256, -6248980, 893712, 907837, -6233820, 994653, 897766, -6236700, 985768, 908262, -6247970, 901688, 907837, -6233820, 994653, 908262, -6247970, 901688, 909156, -6247840, 901688, 909156, -6247840, 901688, 909256, -6248980, 893712, 932162, -6251800, 849637, 909156, -6247840, 901688, 932162, -6251800, 849637, 923482, -6245740, 901688, 923482, -6245740, 901688, 907837, -6233820, 994653, 909156, -6247840, 901688, 934938, -6244040, 901688, 923482, -6245740, 901688, 932162, -6251800, 849637, 938363, -6233550, 967803, 907837, -6233820, 994653, 923482, -6245740, 901688, 938363, -6233550, 967803, 923482, -6245740, 901688, 934938, -6244040, 901688, 934938, -6244040, 901688, 932162, -6251800, 849637, 968265, -6247180, 843203, 934938, -6244040, 901688, 968265, -6247180, 843203, 954266, -6241110, 901688, 954266, -6241110, 901688, 938363, -6233550, 967803, 934938, -6244040, 901688, 1340230, -6169760, 901688, 1340780, -6177020, 849991, 1375740, -6170420, 842124, 1340230, -6169760, 901688, 1375740, -6170420, 842124, 1360590, -6165300, 901688, 1360590, -6165300, 901688, 1339140, -6157100, 985355, 1340230, -6169760, 901688, 1375740, -6170420, 842124, 1371050, -6162980, 901688, 1360590, -6165300, 901688, 1368050, -6158010, 939163, 1339140, -6157100, 985355, 1360590, -6165300, 901688, 1368050, -6158010, 939163, 1360590, -6165300, 901688, 1371050, -6162980, 901688, 1383760, -6160140, 901688, 1371050, -6162980, 901688, 1375740, -6170420, 842124, 1383760, -6160140, 901688, 1375740, -6170420, 842124, 1395040, -6161510, 874691, 1383760, -6160140, 901688, 1368050, -6158010, 939163, 1371050, -6162980, 901688, 1292440, -6179940, 901688, 1291570, -6190450, 828331, 1328420, -6186840, 796691, 1292440, -6179940, 901688, 1328420, -6186840, 796691, 1297110, -6178960, 901688, 1297110, -6178960, 901688, 1292600, -6177680, 916723, 1292440, -6179940, 901688, 1328420, -6186840, 796691, 1316550, -6174850, 901688, 1297110, -6178960, 901688, 1302960, -6159480, 1018220, 1292600, -6177680, 916723, 1297110, -6178960, 901688, 1302960, -6159480, 1018220, 1297110, -6178960, 901688, 1316550, -6174850, 901688, 1334550, -6170990, 901688, 1316550, -6174850, 901688, 1328420, -6186840, 796691, 1339140, -6157100, 985355, 1302960, -6159480, 1018220, 1316550, -6174850, 901688, 1339140, -6157100, 985355, 1316550, -6174850, 901688, 1334550, -6170990, 901688, 1334550, -6170990, 901688, 1328420, -6186840, 796691, 1340780, -6177020, 849991, 1334550, -6170990, 901688, 1340780, -6177020, 849991, 1340230, -6169760, 901688, 1339140, -6157100, 985355, 1334550, -6170990, 901688, 1340230, -6169760, 901688, 1243830, -6181020, 960358, 1194290, -6177680, 1040790, 1189150, -6186950, 990735, 1254460, -6166380, 1037070, 1194290, -6177680, 1040790, 1243830, -6181020, 960358, 1265040, -6182260, 924222, 1254460, -6166380, 1037070, 1243830, -6181020, 960358, 1302960, -6159480, 1018220, 1254460, -6166380, 1037070, 1265040, -6182260, 924222, 1302960, -6159480, 1018220, 1265040, -6182260, 924222, 1292600, -6177680, 916723, 1142060, -6196940, 983774, 1138200, -6185340, 1057920, 1121170, -6206700, 945749, 1197950, -6175140, 1051520, 1138200, -6185340, 1057920, 1142060, -6196940, 983774, 1197950, -6175140, 1051520, 1142060, -6196940, 983774, 1194290, -6177680, 1040790, 1194290, -6177680, 1040790, 1142060, -6196940, 983774, 1189150, -6186950, 990735, 1138200, -6185340, 1057920, 1102290, -6197360, 1025310, 1121170, -6206700, 945749, 1121170, -6206700, 945749, 1102290, -6197360, 1025310, 1078090, -6218480, 918270, 1102290, -6197360, 1025310, 1054490, -6223090, 914450, 1078090, -6218480, 918270, 785944, -6266240, 889864, 783634, -6264820, 901688, 776767, -6265680, 901688, 778456, -6261580, 928140, 773097, -6265450, 906418, 776767, -6265680, 901688, 778456, -6261580, 928140, 776767, -6265680, 901688, 783634, -6264820, 901688, 786192, -6264500, 901688, 783634, -6264820, 901688, 785944, -6266240, 889864, 787154, -6257140, 950319, 778456, -6261580, 928140, 783634, -6264820, 901688, 787154, -6257140, 950319, 783634, -6264820, 901688, 786192, -6264500, 901688, 787417, -6264350, 901688, 786192, -6264500, 901688, 785944, -6266240, 889864, 787154, -6257140, 950319, 786192, -6264500, 901688, 787417, -6264350, 901688, 787154, -6257140, 950319, 787417, -6264350, 901688, 788896, -6262420, 913624, 798591, -6250600, 983046, 787154, -6257140, 950319, 788896, -6262420, 913624, 835782, -6256310, 913788, 798591, -6250600, 983046, 788896, -6262420, 913624, 835782, -6256310, 913788, 815984, -6236880, 1052960, 798591, -6250600, 983046, 815984, -6236880, 1052960, 774073, -6243860, 1043210, 775578, -6250910, 999281, 815984, -6236880, 1052960, 775578, -6250910, 999281, 798591, -6250600, 983046, 798591, -6250600, 983046, 782530, -6254660, 970103, 787154, -6257140, 950319, 1380560, -6152740, 955152, 1339140, -6157100, 985355, 1368050, -6158010, 939163, 1279340, -6182670, 901688, 1266790, -6187320, 887479, 1291570, -6190450, 828331, 1279340, -6182670, 901688, 1291570, -6190450, 828331, 1292440, -6179940, 901688, 1292600, -6177680, 916723, 1279340, -6182670, 901688, 1292440, -6179940, 901688, 1492210, -5989020, -1602590, 1473190, -6024630, -1483010, 1454140, -6021500, -1513990, 1533830, -6124500, -901688, 1473190, -6024630, -1483010, 1492210, -5989020, -1602590, 1533830, -6124500, -901688, 1492210, -5989020, -1602590, 1550940, -6120190, -901688, 1591520, -6173950, -172653, 1533830, -6124500, -901688, 1550940, -6120190, -901688, 1541290, -5964940, -1645080, 1569440, -5958320, -1642460, 1591840, -6109680, -901688, 1541290, -5964940, -1645080, 1591840, -6109680, -901688, 1550940, -6120190, -901688, 1541290, -5964940, -1645080, 1550940, -6120190, -901688, 1492210, -5989020, -1602590, 1568210, -5951370, -1668480, 1569440, -5958320, -1642460, 1541290, -5964940, -1645080, 1591840, -6109680, -901688, 1591520, -6173950, -172653, 1550940, -6120190, -901688, 1608980, -6105190, -901688, 1591840, -6109680, -901688, 1569440, -5958320, -1642460, 1608980, -6105190, -901688, 1569440, -5958320, -1642460, 1570020, -5958190, -1642410, 1570020, -5958190, -1642410, 1569440, -5958320, -1642460, 1568210, -5951370, -1668480, 1625440, -6166710, -100775, 1591520, -6173950, -172653, 1591840, -6109680, -901688, 1625440, -6166710, -100775, 1591840, -6109680, -901688, 1608980, -6105190, -901688, 1608980, -6105190, -901688, 1570020, -5958190, -1642410, 1739150, -5915420, -1626650, 1608980, -6105190, -901688, 1739150, -5915420, -1626650, 1698740, -6080820, -901688, 1570020, -5958190, -1642410, 1568210, -5951370, -1668480, 1744290, -5867760, -1784920, 1570020, -5958190, -1642410, 1744290, -5867760, -1784920, 1739150, -5915420, -1626650, 1698740, -6080820, -901688, 1625440, -6166710, -100775, 1608980, -6105190, -901688, 1710780, -6077450, -901688, 1698740, -6080820, -901688, 1739150, -5915420, -1626650, 1710780, -6077450, -901688, 1739150, -5915420, -1626650, 1741270, -5914850, -1626460, 1744290, -5867760, -1784920, 1741270, -5914850, -1626460, 1739150, -5915420, -1626650, 1639320, -6163860, -6325.46, 1625440, -6166710, -100775, 1698740, -6080820, -901688, 1639320, -6163860, -6325.46, 1698740, -6080820, -901688, 1710780, -6077450, -901688, 1744550, -6067840, -901688, 1710780, -6077450, -901688, 1741270, -5914850, -1626460, 1744550, -6067840, -901688, 1741270, -5914850, -1626460, 1747260, -5913240, -1625890, 1744290, -5867760, -1784920, 1747260, -5913240, -1625890, 1741270, -5914850, -1626460, 1710670, -6144160, -58694.2, 1639320, -6163860, -6325.46, 1710780, -6077450, -901688, 1710670, -6144160, -58694.2, 1710780, -6077450, -901688, 1744550, -6067840, -901688, 1747500, -5913170, -1625870, 1754540, -5911270, -1625220, 1784560, -6052150, -928241, 1747500, -5913170, -1625870, 1784560, -6052150, -928241, 1773810, -6059350, -901688, 1747500, -5913170, -1625870, 1773810, -6059350, -901688, 1745910, -6067450, -901688, 1744290, -5867760, -1784920, 1754540, -5911270, -1625220, 1747500, -5913170, -1625870, 1773810, -6059350, -901688, 1744370, -6078230, -829601, 1745910, -6067450, -901688, 1745910, -6067450, -901688, 1744550, -6067840, -901688, 1747260, -5913240, -1625890, 1745910, -6067450, -901688, 1747260, -5913240, -1625890, 1747500, -5913170, -1625870, 1744290, -5867760, -1784920, 1747500, -5913170, -1625870, 1747260, -5913240, -1625890, 1744370, -6078230, -829601, 1710670, -6144160, -58694.2, 1744550, -6067840, -901688, 1744370, -6078230, -829601, 1744550, -6067840, -901688, 1745910, -6067450, -901688, 1744370, -6078230, -829601, 1744690, -6133870, -110882, 1710670, -6144160, -58694.2, 1794030, -6119030, -139367, 1744690, -6133870, -110882, 1744370, -6078230, -829601, 1794030, -6119030, -139367, 1744370, -6078230, -829601, 1774580, -6078250, -763198, 1773070, -6072650, -809551, 1774580, -6078250, -763198, 1744370, -6078230, -829601, 2085120, -5904150, -1209990, 2013310, -5948890, -1108900, 2030900, -5829360, -1599180, 2085120, -5904150, -1209990, 2030900, -5829360, -1599180, 2064650, -5818380, -1595970, 2034190, -5704030, -1994980, 2064650, -5818380, -1595970, 2030900, -5829360, -1599180, 2131100, -5885110, -1222470, 2085120, -5904150, -1209990, 2064650, -5818380, -1595970, 2131100, -5885110, -1222470, 2064650, -5818380, -1595970, 2088820, -5810380, -1593680, 2088820, -5810380, -1593680, 2064650, -5818380, -1595970, 2034190, -5704030, -1994980, 2114190, -5801870, -1591260, 2131100, -5885110, -1222470, 2088820, -5810380, -1593680, 2088820, -5810380, -1593680, 2034190, -5704030, -1994980, 2088340, -5693840, -1968140, 2088820, -5810380, -1593680, 2088340, -5693840, -1968140, 2114190, -5801870, -1591260, 2190210, -5867260, -1203760, 2131100, -5885110, -1222470, 2114190, -5801870, -1591260, 2190210, -5867260, -1203760, 2114190, -5801870, -1591260, 2143230, -5791970, -1588490, 2143230, -5791970, -1588490, 2114190, -5801870, -1591260, 2088340, -5693840, -1968140, 2190210, -5867260, -1203760, 2143230, -5791970, -1588490, 2156640, -5787340, -1587210, 2143230, -5791970, -1588490, 2088340, -5693840, -1968140, 2121010, -5700300, -1914120, 2143230, -5791970, -1588490, 2121010, -5700300, -1914120, 2156640, -5787340, -1587210, 2170680, -5782460, -1585860, 2190210, -5867260, -1203760, 2156640, -5787340, -1587210, 2156640, -5787340, -1587210, 2121010, -5700300, -1914120, 2162340, -5749720, -1710540, 2156640, -5787340, -1587210, 2162340, -5749720, -1710540, 2170680, -5782460, -1585860, 2196200, -5709270, -1799920, 2162340, -5749720, -1710540, 2121010, -5700300, -1914120, 1921600, -5979670, -1106090, 1885100, -6001790, -1047950, 1923720, -5862810, -1609320, 1921600, -5979670, -1106090, 1923720, -5862810, -1609320, 1934960, -5859410, -1608260, 1935990, -5773350, -1891270, 1934960, -5859410, -1608260, 1923720, -5862810, -1609320, 2013310, -5948890, -1108900, 1921600, -5979670, -1106090, 1934960, -5859410, -1608260, 2013310, -5948890, -1108900, 1934960, -5859410, -1608260, 1968130, -5849220, -1605120, 1968130, -5849220, -1605120, 1934960, -5859410, -1608260, 1935990, -5773350, -1891270, 2013310, -5948890, -1108900, 1968130, -5849220, -1605120, 1974020, -5847380, -1604570, 1968130, -5849220, -1605120, 1935990, -5773350, -1891270, 1940350, -5757420, -1934560, 1968130, -5849220, -1605120, 1940350, -5757420, -1934560, 1974020, -5847380, -1604570, 2030900, -5829360, -1599180, 2013310, -5948890, -1108900, 1974020, -5847380, -1604570, 1974020, -5847380, -1604570, 1940350, -5757420, -1934560, 2034190, -5704030, -1994980, 1974020, -5847380, -1604570, 2034190, -5704030, -1994980, 2030900, -5829360, -1599180, 1885100, -6001790, -1047950, 1815760, -6024230, -1041620, 1901470, -5869490, -1611420, 1885100, -6001790, -1047950, 1901470, -5869490, -1611420, 1923720, -5862810, -1609320, 1935990, -5773350, -1891270, 1923720, -5862810, -1609320, 1901470, -5869490, -1611420, 1901470, -5869490, -1611420, 1815760, -6024230, -1041620, 1761960, -5909250, -1624520, 1761960, -5909250, -1624520, 1744290, -5867760, -1784920, 1935990, -5773350, -1891270, 1761960, -5909250, -1624520, 1935990, -5773350, -1891270, 1901470, -5869490, -1611420, 1815760, -6024230, -1041620, 1784560, -6052150, -928241, 1754540, -5911270, -1625220, 1815760, -6024230, -1041620, 1754540, -5911270, -1625220, 1761960, -5909250, -1624520, 1761960, -5909250, -1624520, 1754540, -5911270, -1625220, 1744290, -5867760, -1784920, 1840190, -6024790, -994748, 1784560, -6052150, -928241, 1815760, -6024230, -1041620, 1991200, -6037920, -507443, 1993360, -6053860, -239867, 1934690, -6071630, -269083, 2031240, -6040460, -258983, 1993360, -6053860, -239867, 1991200, -6037920, -507443, 2077900, -6010400, -486234, 2031240, -6040460, -258983, 1991200, -6037920, -507443, 2094520, -6019210, -249487, 2031240, -6040460, -258983, 2077900, -6010400, -486234, 2092370, -6006710, -469657, 2094520, -6019210, -249487, 2077900, -6010400, -486234, 2104360, -6006670, -413577, 2094520, -6019210, -249487, 2092370, -6006710, -469657, 2186450, -5972690, -474833, 2104360, -6006670, -413577, 2092370, -6006710, -469657, 2186450, -5972690, -474833, 2135590, -5995460, -416194, 2104360, -6006670, -413577, 2188890, -5750290, -1674700, 2174680, -5767140, -1635100, 2162340, -5749720, -1710540, 2177060, -5780230, -1585250, 2190210, -5867260, -1203760, 2170680, -5782460, -1585860, 2177060, -5780230, -1585250, 2170680, -5782460, -1585860, 2162340, -5749720, -1710540, 2177060, -5780230, -1585250, 2162340, -5749720, -1710540, 2174680, -5767140, -1635100, 2240550, -5800520, -1414590, 2190210, -5867260, -1203760, 2177060, -5780230, -1585250, 2240550, -5800520, -1414590, 2177060, -5780230, -1585250, 2190180, -5775620, -1584e3, 2190180, -5775620, -1584e3, 2177060, -5780230, -1585250, 2174680, -5767140, -1635100, 2240550, -5800520, -1414590, 2190180, -5775620, -1584e3, 2194180, -5774210, -1583610, 2240550, -5800520, -1414590, 2194180, -5774210, -1583610, 2229170, -5785800, -1490290, 2194180, -5774210, -1583610, 2190180, -5775620, -1584e3, 2174680, -5767140, -1635100, 2229170, -5785800, -1490290, 2194180, -5774210, -1583610, 2219030, -5765360, -1581230, 2194180, -5774210, -1583610, 2174680, -5767140, -1635100, 2218980, -5765270, -1581630, 2194180, -5774210, -1583610, 2218980, -5765270, -1581630, 2219030, -5765360, -1581230, 1868400, -6070270, -582424, 1855790, -6096810, -255243, 1859250, -6067900, -633794, 1934690, -6071630, -269083, 1855790, -6096810, -255243, 1868400, -6070270, -582424, 1991200, -6037920, -507443, 1934690, -6071630, -269083, 1868400, -6070270, -582424, 1839700, -6062790, -731497, 1831060, -6072320, -672066, 1774580, -6078250, -763198, 1831060, -6072320, -672066, 1794030, -6119030, -139367, 1774580, -6078250, -763198, 1855790, -6096810, -255243, 1794030, -6119030, -139367, 1831060, -6072320, -672066, 1859250, -6067900, -633794, 1855790, -6096810, -255243, 1831060, -6072320, -672066, 1294660, -6139460, -1141370, 1289690, -6180520, -901688, 1280490, -6182430, -901688, 1274080, -6234820, -427946, 1252400, -6233620, -502350, 1280490, -6182430, -901688, 1274080, -6234820, -427946, 1280490, -6182430, -901688, 1289690, -6180520, -901688, 1310910, -6176050, -901688, 1289690, -6180520, -901688, 1294660, -6139460, -1141370, 1341900, -6226480, -331908, 1274080, -6234820, -427946, 1289690, -6180520, -901688, 1341900, -6226480, -331908, 1289690, -6180520, -901688, 1310910, -6176050, -901688, 1310910, -6176050, -901688, 1294660, -6139460, -1141370, 1391190, -6077290, -1341490, 1310910, -6176050, -901688, 1391190, -6077290, -1341490, 1374390, -6162240, -901688, 1374390, -6162240, -901688, 1341900, -6226480, -331908, 1310910, -6176050, -901688, 1430100, -6149550, -901688, 1374390, -6162240, -901688, 1391190, -6077290, -1341490, 1472770, -6199020, -288355, 1341900, -6226480, -331908, 1374390, -6162240, -901688, 1472770, -6199020, -288355, 1374390, -6162240, -901688, 1430100, -6149550, -901688, 1430100, -6149550, -901688, 1391190, -6077290, -1341490, 1473190, -6024630, -1483010, 1430100, -6149550, -901688, 1473190, -6024630, -1483010, 1479940, -6137740, -901688, 1479940, -6137740, -901688, 1472770, -6199020, -288355, 1430100, -6149550, -901688, 1533830, -6124500, -901688, 1479940, -6137740, -901688, 1473190, -6024630, -1483010, 1591520, -6173950, -172653, 1472770, -6199020, -288355, 1479940, -6137740, -901688, 1591520, -6173950, -172653, 1479940, -6137740, -901688, 1533830, -6124500, -901688, 1124920, -6227470, -793462, 1101230, -6263850, -480114, 1055900, -6270970, -488894, 1145190, -6255030, -492034, 1101230, -6263850, -480114, 1124920, -6227470, -793462, 1157140, -6210660, -874204, 1145190, -6255030, -492034, 1124920, -6227470, -793462, 1190120, -6241980, -547682, 1145190, -6255030, -492034, 1157140, -6210660, -874204, 1200080, -6195220, -924097, 1199620, -6198630, -901688, 1180820, -6202240, -901688, 1190120, -6241980, -547682, 1157140, -6210660, -874204, 1180820, -6202240, -901688, 1190120, -6241980, -547682, 1180820, -6202240, -901688, 1199620, -6198630, -901688, 1202990, -6197980, -901688, 1199620, -6198630, -901688, 1200080, -6195220, -924097, 1252400, -6233620, -502350, 1190120, -6241980, -547682, 1199620, -6198630, -901688, 1252400, -6233620, -502350, 1199620, -6198630, -901688, 1202990, -6197980, -901688, 1202990, -6197980, -901688, 1200080, -6195220, -924097, 1294660, -6139460, -1141370, 1202990, -6197980, -901688, 1294660, -6139460, -1141370, 1280490, -6182430, -901688, 1280490, -6182430, -901688, 1252400, -6233620, -502350, 1202990, -6197980, -901688, 1072480, -6275980, -376273, 984365, -6285810, -445959, 1000940, -6267490, -628216, 1072480, -6275980, -376273, 1000940, -6267490, -628216, 1053430, -6274420, -448485, 1053430, -6274420, -448485, 1000940, -6267490, -628216, 1041800, -6250660, -721801, 1055900, -6270970, -488894, 1053430, -6274420, -448485, 1041800, -6250660, -721801, 1124920, -6227470, -793462, 1055900, -6270970, -488894, 1041800, -6250660, -721801, 1041800, -6250660, -721801, 1000940, -6267490, -628216, 964740, -6268020, -677305, 1000940, -6267490, -628216, 984365, -6285810, -445959, 949326, -6285210, -523179, 1084970, -6270880, -422215, 1072480, -6275980, -376273, 1053430, -6274420, -448485, 2174020, -5988570, -301221, 2094520, -6019210, -249487, 2104360, -6006670, -413577, 2265300, -5799760, -1378080, 2190210, -5867260, -1203760, 2240550, -5800520, -1414590, 2101990, -5929890, -1044670, 2013310, -5948890, -1108900, 2085120, -5904150, -1209990, 1639320, -6163860, -6325.46, 1610610, -6171410, -16810.8, 1625440, -6166710, -100775, -3677070, 5174710, 616159, -3559720, 5229320, 811702, -3566300, 5243720, 680002, -3575910, 5203360, 901688, -3559720, 5229320, 811702, -3677070, 5174710, 616159, -3575910, 5203360, 901688, -3677070, 5174710, 616159, -3593500, 5191230, 901688, -3593500, 5191230, 901688, -3582220, 5192540, 938055, -3575910, 5203360, 901688, -3677070, 5174710, 616159, -3613230, 5177520, 901688, -3593500, 5191230, 901688, -3592800, 5176100, 986837, -3582220, 5192540, 938055, -3593500, 5191230, 901688, -3592800, 5176100, 986837, -3593500, 5191230, 901688, -3613230, 5177520, 901688, -3619460, 5173160, 901688, -3613230, 5177520, 901688, -3677070, 5174710, 616159, -3619460, 5173160, 901688, -3677070, 5174710, 616159, -3665770, 5165120, 748693, -3619460, 5173160, 901688, -3592800, 5176100, 986837, -3613230, 5177520, 901688, -3699790, 5152020, 667719, -3665770, 5165120, 748693, -3677070, 5174710, 616159, -3730030, 5094010, 901688, -3744280, 5116470, 692417, -3767520, 5084630, 792918, -3730030, 5094010, 901688, -3767520, 5084630, 792918, -3745570, 5082600, 901688, -3745570, 5082600, 901688, -3719960, 5078400, 1022400, -3730030, 5094010, 901688, -3711600, 5107460, 901688, -3703730, 5129490, 804365, -3744280, 5116470, 692417, -3711600, 5107460, 901688, -3744280, 5116470, 692417, -3730030, 5094010, 901688, -3719960, 5078400, 1022400, -3711600, 5107460, 901688, -3730030, 5094010, 901688, -3711600, 5107460, 901688, -3679170, 5130870, 901688, -3703730, 5129490, 804365, -3719960, 5078400, 1022400, -3656040, 5131070, 989742, -3679170, 5130870, 901688, -3719960, 5078400, 1022400, -3679170, 5130870, 901688, -3711600, 5107460, 901688, -3660250, 5144380, 901688, -3665770, 5165120, 748693, -3703730, 5129490, 804365, -3660250, 5144380, 901688, -3703730, 5129490, 804365, -3679170, 5130870, 901688, -3679170, 5130870, 901688, -3656040, 5131070, 989742, -3660250, 5144380, 901688, -3660250, 5144380, 901688, -3619460, 5173160, 901688, -3665770, 5165120, 748693, -3656040, 5131070, 989742, -3592800, 5176100, 986837, -3619460, 5173160, 901688, -3656040, 5131070, 989742, -3619460, 5173160, 901688, -3660250, 5144380, 901688, -3767520, 5084630, 792918, -3746100, 5082210, 901688, -3745570, 5082600, 901688, -3732580, 5079990, 967395, -3719960, 5078400, 1022400, -3745570, 5082600, 901688, -3732580, 5079990, 967395, -3745570, 5082600, 901688, -3746100, 5082210, 901688, -3767520, 5084630, 792918, -3747260, 5081360, 901688, -3746100, 5082210, 901688, -3742390, 5080320, 927176, -3732580, 5079990, 967395, -3746100, 5082210, 901688, -3742390, 5080320, 927176, -3746100, 5082210, 901688, -3747260, 5081360, 901688, -3747700, 5081030, 901688, -3747260, 5081360, 901688, -3767520, 5084630, 792918, -3747700, 5081030, 901688, -3767520, 5084630, 792918, -3757570, 5081960, 854430, -3747700, 5081030, 901688, -3742390, 5080320, 927176, -3747260, 5081360, 901688, -3575910, 5203360, 901688, -3518480, 5242370, 901688, -3559720, 5229320, 811702, -3582220, 5192540, 938055, -3515490, 5243260, 908092, -3518480, 5242370, 901688, -3582220, 5192540, 938055, -3518480, 5242370, 901688, -3575910, 5203360, 901688, -3512990, 5246050, 901688, -3497810, 5262630, 863545, -3559720, 5229320, 811702, -3512990, 5246050, 901688, -3559720, 5229320, 811702, -3518480, 5242370, 901688, -3518480, 5242370, 901688, -3515490, 5243260, 908092, -3512990, 5246050, 901688, -3512990, 5246050, 901688, -3490340, 5261150, 901688, -3497810, 5262630, 863545, -3515490, 5243260, 908092, -3479050, 5258670, 957613, -3490340, 5261150, 901688, -3515490, 5243260, 908092, -3490340, 5261150, 901688, -3512990, 5246050, 901688, -3476550, 5270260, 901688, -3472250, 5286800, 818093, -3497810, 5262630, 863545, -3476550, 5270260, 901688, -3497810, 5262630, 863545, -3490340, 5261150, 901688, -3490340, 5261150, 901688, -3479050, 5258670, 957613, -3476550, 5270260, 901688, -3476550, 5270260, 901688, -3438200, 5295370, 901688, -3472250, 5286800, 818093, -3479050, 5258670, 957613, -3432140, 5296760, 916401, -3438200, 5295370, 901688, -3479050, 5258670, 957613, -3438200, 5295370, 901688, -3476550, 5270260, 901688, -3431630, 5299620, 901688, -3428470, 5314650, 822313, -3472250, 5286800, 818093, -3431630, 5299620, 901688, -3472250, 5286800, 818093, -3438200, 5295370, 901688, -3438200, 5295370, 901688, -3432140, 5296760, 916401, -3431630, 5299620, 901688, -3405410, 5316510, 901688, -3376050, 5337910, 885609, -3428470, 5314650, 822313, -3405410, 5316510, 901688, -3428470, 5314650, 822313, -3431630, 5299620, 901688, -3432140, 5296760, 916401, -3405410, 5316510, 901688, -3431630, 5299620, 901688, -3428470, 5314650, 822313, -3376050, 5337910, 885609, -3363640, 5365020, 761093, -3376050, 5337910, 885609, -3345980, 5371370, 793218, -3363640, 5365020, 761093, -3478970, 5231710, 1094810, -3449510, 5243800, 1129360, -3456760, 5260410, 1025910, -3505790, 5182320, 1234260, -3449510, 5243800, 1129360, -3478970, 5231710, 1094810, -3505790, 5182320, 1234260, -3478970, 5231710, 1094810, -3508110, 5204510, 1130600, -3492080, 5142110, 1425140, -3459410, 5156880, 1451030, -3489060, 5157770, 1375420, -3489060, 5157770, 1375420, -3459410, 5156880, 1451030, -3412010, 5194690, 1428370, -3460100, 5139470, 1509580, -3412010, 5194690, 1428370, -3459410, 5156880, 1451030, -3460100, 5139470, 1509580, -3371220, 5205340, 1484940, -3412010, 5194690, 1428370, -3460100, 5139470, 1509580, -3339200, 5201130, 1569080, -3371220, 5205340, 1484940, -3371220, 5205340, 1484940, -3339200, 5201130, 1569080, -3352820, 5228370, 1445430, -3339200, 5201130, 1569080, -3300700, 5229470, 1556400, -3352820, 5228370, 1445430, -3352820, 5228370, 1445430, -3300700, 5229470, 1556400, -3286390, 5252170, 1509840, -3300700, 5229470, 1556400, -3250600, 5257220, 1568210, -3286390, 5252170, 1509840, -3286390, 5252170, 1509840, -3250600, 5257220, 1568210, -3204650, 5306970, 1493950, -3250600, 5257220, 1568210, -3218320, 5250790, 1653430, -3204650, 5306970, 1493950, -3218320, 5250790, 1653430, -3145210, 5168690, 2011370, -3204650, 5306970, 1493950, -3205950, 5142970, 1981380, -3145210, 5168690, 2011370, -3218320, 5250790, 1653430, -3179910, 5293940, 1589320, -3090440, 5201580, 2011490, -3148940, 5304900, 1614080, -3145210, 5168690, 2011370, -3090440, 5201580, 2011490, -3179910, 5293940, 1589320, -3145210, 5168690, 2011370, -3179910, 5293940, 1589320, -3204650, 5306970, 1493950, -3204650, 5306970, 1493950, -3179910, 5293940, 1589320, -3154520, 5317250, 1562060, -3142100, 5320620, 1575490, -3092250, 5294720, 1750410, -3088030, 5333560, 1636990, -3142100, 5320620, 1575490, -3076520, 5245890, 1916140, -3092250, 5294720, 1750410, -3090440, 5201580, 2011490, -3076520, 5245890, 1916140, -3142100, 5320620, 1575490, -3090440, 5201580, 2011490, -3142100, 5320620, 1575490, -3148940, 5304900, 1614080, -3092250, 5294720, 1750410, -3049960, 5307480, 1785380, -3067850, 5330640, 1683480, -3092250, 5294720, 1750410, -3067850, 5330640, 1683480, -3088030, 5333560, 1636990, -3430720, 5283650, 993586, -3383390, 5293310, 1098180, -3367050, 5309720, 1069010, -3430720, 5283650, 993586, -3403600, 5273860, 1128690, -3383390, 5293310, 1098180, -3430720, 5283650, 993586, -3406860, 5256750, 1196180, -3403600, 5273860, 1128690, -3456670, 5222660, 1202560, -3406860, 5256750, 1196180, -3430720, 5283650, 993586, -3456670, 5222660, 1202560, -3430720, 5283650, 993586, -3449510, 5243800, 1129360, -3449510, 5243800, 1129360, -3430720, 5283650, 993586, -3456760, 5260410, 1025910, -3003990, 5531500, 1025710, -2989390, 5531770, 1065870, -2924520, 5578900, 998469, -3040700, 5488500, 1141210, -2989390, 5531770, 1065870, -3003990, 5531500, 1025710, -3048260, 5492650, 1100650, -3040700, 5488500, 1141210, -3003990, 5531500, 1025710, -3080560, 5442420, 1249120, -3040700, 5488500, 1141210, -3048260, 5492650, 1100650, -3106040, 5447670, 1160580, -3080560, 5442420, 1249120, -3048260, 5492650, 1100650, -3380040, 5277500, 1180900, -3316980, 5300460, 1254120, -3324580, 5319820, 1148250, -3380040, 5277500, 1180900, -3356170, 5271380, 1272160, -3316980, 5300460, 1254120, -3414460, 5233770, 1272320, -3356170, 5271380, 1272160, -3380040, 5277500, 1180900, -3414460, 5233770, 1272320, -3380040, 5277500, 1180900, -3417700, 5242540, 1227020, -3591880, 5086730, 1375310, -3570720, 5122690, 1295130, -3576700, 5128790, 1254100, -3591880, 5086730, 1375310, -3576700, 5128790, 1254100, -3588820, 5123080, 1242810, -3594820, 5127650, 1206380, -3588820, 5123080, 1242810, -3576700, 5128790, 1254100, -3594820, 5127650, 1206380, -3576700, 5128790, 1254100, -3583840, 5156090, 1114920, -3576700, 5128790, 1254100, -3571990, 5147080, 1191410, -3583840, 5156090, 1114920, -3576700, 5128790, 1254100, -3544290, 5164890, 1197050, -3571990, 5147080, 1191410, -3576700, 5128790, 1254100, -3522890, 5163780, 1262750, -3544290, 5164890, 1197050, -3660760, 5078950, 1214010, -3591880, 5086730, 1375310, -3588820, 5123080, 1242810, -3660760, 5078950, 1214010, -3621470, 5076550, 1335e3, -3591880, 5086730, 1375310, -3249290, 5296760, 1432910, -3212430, 5308530, 1471680, -3235610, 5329610, 1339640, -3235610, 5329610, 1339640, -3212430, 5308530, 1471680, -3189610, 5343410, 1393530, -3212430, 5308530, 1471680, -3132190, 5355170, 1475630, -3189610, 5343410, 1393530, -3277970, 5142220, 1862730, -3234550, 5141550, 1938410, -3268330, 5179590, 1774620, -3268330, 5179590, 1774620, -3234550, 5141550, 1938410, -3205950, 5142970, 1981380, -3228710, 5117990, 2008740, -3205950, 5142970, 1981380, -3234550, 5141550, 1938410, -3241570, 5120340, 1982040, -3228710, 5117990, 2008740, -3234550, 5141550, 1938410, -3205950, 5142970, 1981380, -3218320, 5250790, 1653430, -3220250, 5221570, 1739390, -3268330, 5179590, 1774620, -3205950, 5142970, 1981380, -3220250, 5221570, 1739390, -3204650, 5306970, 1493950, -3154520, 5317250, 1562060, -3155540, 5329570, 1517700, -3591880, 5086730, 1375310, -3505850, 5145750, 1377700, -3570720, 5122690, 1295130, -3623920, 5122600, 1139300, -3594820, 5127650, 1206380, -3583840, 5156090, 1114920, -3356170, 5271380, 1272160, -3297110, 5300320, 1305690, -3316980, 5300460, 1254120, -3316980, 5300460, 1254120, -3316190, 5313830, 1198770, -3324580, 5319820, 1148250, -3003990, 5531500, 1025710, -2924520, 5578900, 998469, -2882060, 5614140, 922010, -3719960, 5078400, 1022400, -3642680, 5123470, 1074130, -3656040, 5131070, 989742, -3559720, 5229320, 811702, -3535470, 5253600, 759525, -3566300, 5243720, 680002, -5624030, 2973120, -458357, -5592500, 3031680, -460454, -5593850, 3018530, -525418, -5624030, 2973120, -458357, -5593850, 3018530, -525418, -5605130, 2982430, -604828, -5605130, 2982430, -604828, -5593850, 3018530, -525418, -5576850, 3033150, -613879, -5593850, 3018530, -525418, -5565760, 3047040, -644739, -5576850, 3033150, -613879, -5593850, 3018530, -525418, -5561220, 3071220, -564707, -5565760, 3047040, -644739, -5565760, 3047040, -644739, -5561220, 3071220, -564707, -5542940, 3096950, -602383, -5565760, 3047040, -644739, -5542940, 3096950, -602383, -5533980, 3098670, -671469, -5542940, 3096950, -602383, -5503590, 3146710, -697194, -5533980, 3098670, -671469, -5542940, 3096950, -602383, -5511160, 3151540, -610790, -5503590, 3146710, -697194, -5503590, 3146710, -697194, -5489760, 3189220, -607849, -5474200, 3197580, -697058, -5503590, 3146710, -697194, -5502310, 3177270, -555059, -5489760, 3189220, -607849, -5503590, 3146710, -697194, -5510480, 3163550, -552333, -5502310, 3177270, -555059, -5503590, 3146710, -697194, -5511160, 3151540, -610790, -5510480, 3163550, -552333, -5430840, 3277380, -665122, -5408260, 3326930, -600392, -5400600, 3333e3, -634442, -5458290, 3241150, -616461, -5408260, 3326930, -600392, -5430840, 3277380, -665122, -5474200, 3197580, -697058, -5458290, 3241150, -616461, -5430840, 3277380, -665122, -5489760, 3189220, -607849, -5458290, 3241150, -616461, -5474200, 3197580, -697058, -5627910, 2952340, -537604, -5624030, 2973120, -458357, -5605130, 2982430, -604828, -5633290, 2952650, -476462, -5624030, 2973120, -458357, -5627910, 2952340, -537604, -5478700, 3061690, -1132230, -5430590, 3131810, -1171250, -5467700, 3069460, -1163660, -5478700, 3061690, -1132230, -5421620, 3157740, -1143060, -5430590, 3131810, -1171250, -5478700, 3061690, -1132230, -5427990, 3166910, -1086410, -5421620, 3157740, -1143060, -5421620, 3157740, -1143060, -5427990, 3166910, -1086410, -5407460, 3214930, -1047320, -5447570, 3140210, -1065850, -5407460, 3214930, -1047320, -5427990, 3166910, -1086410, -5358530, 3338900, -901688, -5320130, 3335630, -1114450, -5375580, 3239810, -1130830, -5358530, 3338900, -901688, -5375580, 3239810, -1130830, -5362200, 3333e3, -901688, -5362200, 3333e3, -901688, -5361060, 3338910, -886611, -5358530, 3338900, -901688, -5364120, 3329910, -901688, -5362200, 3333e3, -901688, -5375580, 3239810, -1130830, -5364120, 3329910, -901688, -5375580, 3239810, -1130830, -5383580, 3268900, -1002590, -5364120, 3329910, -901688, -5361060, 3338910, -886611, -5362200, 3333e3, -901688, -5416510, 3215190, -998966, -5383580, 3268900, -1002590, -5375580, 3239810, -1130830, -5416510, 3215190, -998966, -5375580, 3239810, -1130830, -5407460, 3214930, -1047320, -5421620, 3157740, -1143060, -5407460, 3214930, -1047320, -5375580, 3239810, -1130830, -5751020, 2661360, -721171, -5756420, 2676560, -614595, -5744340, 2707980, -589627, -5772330, 2624760, -684322, -5756420, 2676560, -614595, -5751020, 2661360, -721171, -5766430, 2615770, -763351, -5772330, 2624760, -684322, -5751020, 2661360, -721171, -5789950, 2575430, -721619, -5772330, 2624760, -684322, -5766430, 2615770, -763351, -5789950, 2575430, -721619, -5766430, 2615770, -763351, -5780350, 2588100, -752373, -5737380, 2708500, -651350, -5741920, 2720080, -556858, -5734490, 2733490, -567508, -5744340, 2707980, -589627, -5741920, 2720080, -556858, -5737380, 2708500, -651350, -5751020, 2661360, -721171, -5744340, 2707980, -589627, -5737380, 2708500, -651350, -5358530, 3338900, -901688, -5319e3, 3401510, -901688, -5320130, 3335630, -1114450, -5361060, 3338910, -886611, -5316560, 3427340, -814708, -5319e3, 3401510, -901688, -5361060, 3338910, -886611, -5319e3, 3401510, -901688, -5358530, 3338900, -901688, -5305310, 3422840, -901688, -5284450, 3414090, -1044920, -5320130, 3335630, -1114450, -5305310, 3422840, -901688, -5320130, 3335630, -1114450, -5319e3, 3401510, -901688, -5319e3, 3401510, -901688, -5316560, 3427340, -814708, -5305310, 3422840, -901688, -5305310, 3422840, -901688, -5298550, 3433300, -901688, -5284450, 3414090, -1044920, -5316560, 3427340, -814708, -5310880, 3452750, -741573, -5298550, 3433300, -901688, -5316560, 3427340, -814708, -5298550, 3433300, -901688, -5305310, 3422840, -901688, -5277350, 3465780, -901688, -5258540, 3471580, -984886, -5284450, 3414090, -1044920, -5277350, 3465780, -901688, -5284450, 3414090, -1044920, -5298550, 3433300, -901688, -5298550, 3433300, -901688, -5310880, 3452750, -741573, -5277350, 3465780, -901688, -5277350, 3465780, -901688, -5241390, 3519940, -901688, -5258540, 3471580, -984886, -5310880, 3452750, -741573, -5238690, 3527160, -889162, -5241390, 3519940, -901688, -5310880, 3452750, -741573, -5241390, 3519940, -901688, -5277350, 3465780, -901688, -5238690, 3527160, -889162, -5258140, 3569400, -538578, -5226870, 3622900, -483163, -5238690, 3527160, -889162, -5262720, 3552160, -603458, -5258140, 3569400, -538578, -5310880, 3452750, -741573, -5262720, 3552160, -603458, -5238690, 3527160, -889162, -5357960, 3393970, -671458, -5262720, 3552160, -603458, -5310880, 3452750, -741573, -5366810, 3367770, -729749, -5357960, 3393970, -671458, -5310880, 3452750, -741573, -5162460, 3649270, -841254, -5186240, 3687850, -426657, -5104500, 3722670, -872506, -5226870, 3622900, -483163, -5186240, 3687850, -426657, -5162460, 3649270, -841254, -5238690, 3527160, -889162, -5226870, 3622900, -483163, -5162460, 3649270, -841254, -5059010, 3755230, -989313, -5060400, 3773830, -908658, -5002210, 3820600, -1026850, -5018930, 3830460, -901688, -5002210, 3820600, -1026850, -5060400, 3773830, -908658, -5018930, 3830460, -901688, -5060400, 3773830, -908658, -5060740, 3775050, -901688, -5060740, 3775050, -901688, -5067690, 3855660, -363500, -5018930, 3830460, -901688, -5062460, 3772750, -901688, -5060740, 3775050, -901688, -5060400, 3773830, -908658, -5186240, 3687850, -426657, -5067690, 3855660, -363500, -5060740, 3775050, -901688, -5186240, 3687850, -426657, -5060740, 3775050, -901688, -5062460, 3772750, -901688, -5068970, 3764e3, -901688, -5062460, 3772750, -901688, -5060400, 3773830, -908658, -5186240, 3687850, -426657, -5062460, 3772750, -901688, -5068970, 3764e3, -901688, -5186240, 3687850, -426657, -5068970, 3764e3, -901688, -5104500, 3722670, -872506, -4987340, 3871510, -901688, -4966970, 3871140, -1008590, -5002210, 3820600, -1026850, -4987340, 3871510, -901688, -5002210, 3820600, -1026850, -5018930, 3830460, -901688, -5067690, 3855660, -363500, -4987340, 3871510, -901688, -5018930, 3830460, -901688, -4927840, 3946960, -901688, -4896870, 3960600, -1004040, -4966970, 3871140, -1008590, -4927840, 3946960, -901688, -4966970, 3871140, -1008590, -4987340, 3871510, -901688, -5067690, 3855660, -363500, -4927840, 3946960, -901688, -4987340, 3871510, -901688, -4927840, 3946960, -901688, -4908630, 3970820, -901688, -4896870, 3960600, -1004040, -5067690, 3855660, -363500, -4932210, 3991600, -646751, -4908630, 3970820, -901688, -5067690, 3855660, -363500, -4908630, 3970820, -901688, -4927840, 3946960, -901688, -5067690, 3855660, -363500, -4951670, 4009790, -287413, -4932210, 3991600, -646751, -5654700, 2902750, -526449, -5653180, 2925320, -404430, -5649670, 2923630, -461372, -5670360, 2886700, -439741, -5653180, 2925320, -404430, -5654700, 2902750, -526449, -5672600, 2872890, -497081, -5670360, 2886700, -439741, -5654700, 2902750, -526449, -5618900, 2993540, -382587, -5614470, 3007930, -331571, -5597600, 3041780, -307276, -5635090, 2966020, -358075, -5614470, 3007930, -331571, -5618900, 2993540, -382587, -5640360, 2947960, -418748, -5635090, 2966020, -358075, -5618900, 2993540, -382587, -5653180, 2925320, -404430, -5635090, 2966020, -358075, -5640360, 2947960, -418748, -5653180, 2925320, -404430, -5640360, 2947960, -418748, -5649670, 2923630, -461372, -5591240, 3050470, -335486, -5569930, 3095090, -276350, -5553790, 3121480, -303025, -5597600, 3041780, -307276, -5569930, 3095090, -276350, -5591240, 3050470, -335486, -5618900, 2993540, -382587, -5597600, 3041780, -307276, -5591240, 3050470, -335486, 3863400, 1622150, 4792560, 3835690, 1590240, 4825180, 3865030, 1605540, 4796810, 3865030, 1605540, 4796810, 3835690, 1590240, 4825180, 3861e3, 1529290, 4824700, 3438130, 1440390, 5158090, 3861e3, 1529290, 4824700, 3835690, 1590240, 4825180, 3745080, 1622700, 4884780, 3438130, 1440390, 5158090, 3835690, 1590240, 4825180, 3606480, 1568740, 5004420, 3577400, 1533240, 5035980, 3745080, 1622700, 4884780, 3641640, 1585480, 4973790, 3606480, 1568740, 5004420, 3745080, 1622700, 4884780, 3721770, 1651030, 4893030, 3641640, 1585480, 4973790, 3745080, 1622700, 4884780, 3696660, 1648180, 4912850, 3641640, 1585480, 4973790, 3721770, 1651030, 4893030, 3745080, 1622700, 4884780, 3577400, 1533240, 5035980, 3438130, 1440390, 5158090, 3433970, 1474930, 5151140, 3438130, 1440390, 5158090, 3577400, 1533240, 5035980, 3544650, 1563320, 5049780, 3433970, 1474930, 5151140, 3577400, 1533240, 5035980, 3544650, 1563320, 5049780, 3488470, 1518820, 5101860, 3433970, 1474930, 5151140, 3512130, 1549390, 5076540, 3488470, 1518820, 5101860, 3544650, 1563320, 5049780, 3438130, 1440390, 5158090, 3483850, 1329810, 5157110, 3861e3, 1529290, 4824700, 3861e3, 1529290, 4824700, 3483850, 1329810, 5157110, 3891060, 1484920, 4814470, 3483850, 1329810, 5157110, 3895040, 1449770, 4821910, 3891060, 1484920, 4814470, 3483850, 1329810, 5157110, 3926790, 1415670, 4806360, 3895040, 1449770, 4821910, 3483850, 1329810, 5157110, 3501950, 1251160, 5164480, 3926790, 1415670, 4806360, 3926790, 1415670, 4806360, 3501950, 1251160, 5164480, 3910850, 1371150, 4832020, 3501950, 1251160, 5164480, 3931460, 1346770, 4822220, 3910850, 1371150, 4832020, 3501950, 1251160, 5164480, 3927950, 1341250, 4826580, 3931460, 1346770, 4822220, 3501950, 1251160, 5164480, 3521430, 1191680, 5165300, 3927950, 1341250, 4826580, 3927950, 1341250, 4826580, 3521430, 1191680, 5165300, 3502030, 1179990, 5181040, 3927950, 1341250, 4826580, 3502030, 1179990, 5181040, 3898940, 1296470, 4861970, 3502030, 1179990, 5181040, 3910530, 1244200, 4866290, 3898940, 1296470, 4861970, 3502030, 1179990, 5181040, 3507420, 1114150, 5191880, 3910530, 1244200, 4866290, 3910530, 1244200, 4866290, 3507420, 1114150, 5191880, 3887070, 1229660, 4888580, 3507420, 1114150, 5191880, 3892320, 1180260, 4896510, 3887070, 1229660, 4888580, 3507420, 1114150, 5191880, 3916570, 1176480, 4878180, 3892320, 1180260, 4896510, 3507420, 1114150, 5191880, 3560540, 1045460, 5170110, 3916570, 1176480, 4878180, 3916570, 1176480, 4878180, 3560540, 1045460, 5170110, 3886610, 1132010, 4912310, 3560540, 1045460, 5170110, 3893830, 1079200, 4918440, 3886610, 1132010, 4912310, 3560540, 1045460, 5170110, 3875760, 1039740, 4941010, 3893830, 1079200, 4918440, 3560540, 1045460, 5170110, 3628100, 958782, 5140060, 3875760, 1039740, 4941010, 3757400, 967366, 5045310, 3705200, 948116, 5087120, 3732820, 935852, 5069290, 3628100, 958782, 5140060, 3705200, 948116, 5087120, 3757400, 967366, 5045310, 3628100, 958782, 5140060, 3757400, 967366, 5045310, 3798790, 995532, 5008960, 3875760, 1039740, 4941010, 3628100, 958782, 5140060, 3798790, 995532, 5008960, 3875760, 1039740, 4941010, 3798790, 995532, 5008960, 3829350, 997979, 4985300, 3628100, 958782, 5140060, 3664890, 921896, 5120800, 3705200, 948116, 5087120, 3488470, 1518820, 5101860, 3453230, 1500370, 5131010, 3433970, 1474930, 5151140, 3916570, 1176480, 4878180, 3886610, 1132010, 4912310, 3910540, 1134360, 4892870, 2504300, -5518410, 1982370, 2410110, -5569420, 1956470, 2483150, -5537460, 1955850, 2504300, -5518410, 1982370, 2353660, -5594810, 1952760, 2410110, -5569420, 1956470, 2504300, -5518410, 1982370, 2342260, -5583590, 1997760, 2353660, -5594810, 1952760, 2380450, -5563800, 2007730, 2354070, -5573070, 2013100, 2347410, -5579020, 2004440, 2347410, -5579020, 2004440, 2342260, -5583590, 1997760, 2504300, -5518410, 1982370, 2347410, -5579020, 2004440, 2504300, -5518410, 1982370, 2380450, -5563800, 2007730, 2428550, -5541230, 2012530, 2354070, -5573070, 2013100, 2380450, -5563800, 2007730, 2428550, -5541230, 2012530, 2380450, -5563800, 2007730, 2504300, -5518410, 1982370, 2428550, -5541230, 2012530, 2504300, -5518410, 1982370, 2433510, -5539060, 2012500, 2504300, -5518410, 1982370, 2484090, -5519950, 2003250, 2433510, -5539060, 2012500, -2858480, 4024210, 4025700, -2862360, 4067740, 3979240, -2875990, 4073660, 3963430, -2858480, 4024210, 4025700, -2875990, 4073660, 3963430, -2909350, 4118160, 3892940, -2909350, 4118160, 3892940, -2875990, 4073660, 3963430, -2863850, 4092130, 3953240, -2909350, 4118160, 3892940, -2863850, 4092130, 3953240, -2887120, 4126150, 3900960, -2863850, 4092130, 3953240, -2861510, 4130690, 3914910, -2887120, 4126150, 3900960, -2847640, 3897800, 4154800, -2938240, 4090640, 3900190, -2980480, 4076040, 3883510, -2847640, 3897800, 4154800, -2980480, 4076040, 3883510, -2849750, 3896260, 4154800, -2841230, 3884600, 4171410, -2847640, 3897800, 4154800, -2849750, 3896260, 4154800, -2847300, 3898050, 4154800, -2937030, 4107250, 3883730, -2938240, 4090640, 3900190, -2847300, 3898050, 4154800, -2938240, 4090640, 3900190, -2847640, 3897800, 4154800, -2841230, 3884600, 4171410, -2847300, 3898050, 4154800, -2847640, 3897800, 4154800, -2843490, 3900830, 4154800, -2858480, 4024210, 4025700, -2937030, 4107250, 3883730, -2843490, 3900830, 4154800, -2937030, 4107250, 3883730, -2847300, 3898050, 4154800, -2841230, 3884600, 4171410, -2843490, 3900830, 4154800, -2847300, 3898050, 4154800, -2937030, 4107250, 3883730, -2858480, 4024210, 4025700, -2919250, 4126810, 3876440, -2858480, 4024210, 4025700, -2909350, 4118160, 3892940, -2919250, 4126810, 3876440, -2924830, 3840220, 4154800, -2899770, 3859180, 4154800, -3023130, 4001210, 3927810, -2901810, 3803110, 4204440, -2856300, 3808530, 4230440, -2899770, 3859180, 4154800, -2901810, 3803110, 4204440, -2899770, 3859180, 4154800, -2924830, 3840220, 4154800, -2924830, 3840220, 4154800, -3023130, 4001210, 3927810, -3004500, 3931850, 4010710, -2924830, 3840220, 4154800, -3004500, 3931850, 4010710, -2928920, 3837110, 4154800, -2928920, 3837110, 4154800, -2901810, 3803110, 4204440, -2924830, 3840220, 4154800, -3070230, 3960970, 3932020, -3004500, 3931850, 4010710, -3023130, 4001210, 3927810, -3038710, 3919890, 3996710, -3004500, 3931850, 4010710, -3070230, 3960970, 3932020, -3096790, 3934470, 3937760, -3038710, 3919890, 3996710, -3070230, 3960970, 3932020, -3096300, 3913570, 3958770, -3038710, 3919890, 3996710, -3096790, 3934470, 3937760, -2849750, 3896260, 4154800, -2980480, 4076040, 3883510, -2981240, 4067830, 3891470, -2849750, 3896260, 4154800, -2981240, 4067830, 3891470, -2849960, 3896110, 4154800, -2849960, 3896110, 4154800, -2841230, 3884600, 4171410, -2849750, 3896260, 4154800, -2886550, 3869080, 4154800, -2849960, 3896110, 4154800, -2981240, 4067830, 3891470, -2856300, 3808530, 4230440, -2841230, 3884600, 4171410, -2849960, 3896110, 4154800, -2856300, 3808530, 4230440, -2849960, 3896110, 4154800, -2886550, 3869080, 4154800, -2886550, 3869080, 4154800, -2981240, 4067830, 3891470, -3014330, 4046390, 3888350, -2886550, 3869080, 4154800, -3014330, 4046390, 3888350, -2893430, 3863930, 4154800, -2856300, 3808530, 4230440, -2886550, 3869080, 4154800, -2893430, 3863930, 4154800, -2893430, 3863930, 4154800, -3014330, 4046390, 3888350, -3023130, 4001210, 3927810, -2893430, 3863930, 4154800, -3023130, 4001210, 3927810, -2899770, 3859180, 4154800, -2899770, 3859180, 4154800, -2856300, 3808530, 4230440, -2893430, 3863930, 4154800, -2847180, 4018090, 4039710, -2788420, 3970470, 4126250, -2801680, 4040560, 4049020, -2822070, 3916360, 4154800, -2788420, 3970470, 4126250, -2847180, 4018090, 4039710, -2822070, 3916360, 4154800, -2847180, 4018090, 4039710, -2842270, 3901720, 4154800, -2841230, 3884600, 4171410, -2822070, 3916360, 4154800, -2842270, 3901720, 4154800, -2842270, 3901720, 4154800, -2847180, 4018090, 4039710, -2858480, 4024210, 4025700, -2842270, 3901720, 4154800, -2858480, 4024210, 4025700, -2843490, 3900830, 4154800, -2841230, 3884600, 4171410, -2842270, 3901720, 4154800, -2843490, 3900830, 4154800, -3005440, 3633340, 4280570, -2926200, 3738370, 4245130, -2960490, 3761030, 4201410, -3034130, 3754470, 4154800, -2998010, 3783360, 4154800, -3046190, 3811390, 4094110, -3005440, 3633340, 4280570, -2960490, 3761030, 4201410, -2998010, 3783360, 4154800, -3005440, 3633340, 4280570, -2998010, 3783360, 4154800, -3034130, 3754470, 4154800, -2979560, 3797920, 4154800, -3008920, 3855810, 4080150, -3046190, 3811390, 4094110, -2979560, 3797920, 4154800, -3046190, 3811390, 4094110, -2998010, 3783360, 4154800, -2998010, 3783360, 4154800, -2960490, 3761030, 4201410, -2979560, 3797920, 4154800, -2971130, 3804510, 4154800, -2991270, 3893650, 4057270, -3008920, 3855810, 4080150, -2971130, 3804510, 4154800, -3008920, 3855810, 4080150, -2979560, 3797920, 4154800, -2960490, 3761030, 4201410, -2971130, 3804510, 4154800, -2979560, 3797920, 4154800, -2971130, 3804510, 4154800, -2932460, 3834400, 4154800, -2991270, 3893650, 4057270, -2960490, 3761030, 4201410, -2901810, 3803110, 4204440, -2932460, 3834400, 4154800, -2960490, 3761030, 4201410, -2932460, 3834400, 4154800, -2971130, 3804510, 4154800, -2932460, 3834400, 4154800, -2928920, 3837110, 4154800, -3004500, 3931850, 4010710, -2932460, 3834400, 4154800, -3004500, 3931850, 4010710, -2991270, 3893650, 4057270, -2932460, 3834400, 4154800, -2901810, 3803110, 4204440, -2928920, 3837110, 4154800, -2991270, 3893650, 4057270, -3004500, 3931850, 4010710, -3007800, 3919550, 4020200, -3003410, 3580090, 4326320, -3005440, 3633340, 4280570, -3048980, 3676820, 4212580, -3085010, 3715250, 4152590, -3083720, 3713840, 4154800, -3083660, 3713890, 4154800, -3048980, 3676820, 4212580, -3005440, 3633340, 4280570, -3083660, 3713890, 4154800, -3048980, 3676820, 4212580, -3083660, 3713890, 4154800, -3083720, 3713840, 4154800, -3053870, 3738420, 4154800, -3061490, 3755360, 4134010, -3085010, 3715250, 4152590, -3053870, 3738420, 4154800, -3085010, 3715250, 4152590, -3083660, 3713890, 4154800, -3083660, 3713890, 4154800, -3005440, 3633340, 4280570, -3053870, 3738420, 4154800, -3046890, 3744120, 4154800, -3057830, 3774750, 4119130, -3061490, 3755360, 4134010, -3046890, 3744120, 4154800, -3061490, 3755360, 4134010, -3053870, 3738420, 4154800, -3005440, 3633340, 4280570, -3046890, 3744120, 4154800, -3053870, 3738420, 4154800, -3034130, 3754470, 4154800, -3046190, 3811390, 4094110, -3057830, 3774750, 4119130, -3034130, 3754470, 4154800, -3057830, 3774750, 4119130, -3046890, 3744120, 4154800, -3005440, 3633340, 4280570, -3034130, 3754470, 4154800, -3046890, 3744120, 4154800, -3063100, 3599130, 4268670, -3003410, 3580090, 4326320, -3051950, 3641560, 4240760, -3072550, 3579740, 4278110, -3003410, 3580090, 4326320, -3063100, 3599130, 4268670, -3089830, 3582130, 4263730, -3072550, 3579740, 4278110, -3063100, 3599130, 4268670, -3003410, 3580090, 4326320, -3048980, 3676820, 4212580, -3051950, 3641560, 4240760, -2788420, 3970470, 4126250, -2757640, 4047710, 4071900, -2801680, 4040560, 4049020, 4792350, -579034, 4154800, 4789980, -598356, 4154800, 4836720, -597080, 4100850, 4792350, -579034, 4154800, 4836720, -597080, 4100850, 4836830, -594736, 4101060, 4836830, -594736, 4101060, 4836720, -597080, 4100850, 4842870, -596896, 4093660, 4778120, -574082, 4171730, 4715050, -599940, 4238860, 4789980, -598356, 4154800, 4778120, -574082, 4171730, 4789980, -598356, 4154800, 4792350, -579034, 4154800, 4789980, -598356, 4154800, 4789490, -602236, 4154800, 4836410, -603495, 4100270, 4789980, -598356, 4154800, 4836410, -603495, 4100270, 4836720, -597080, 4100850, 4836720, -597080, 4100850, 4836410, -603495, 4100270, 4875890, -604437, 4053430, 4836720, -597080, 4100850, 4875890, -604437, 4053430, 4842870, -596896, 4093660, 4789980, -598356, 4154800, 4715050, -599940, 4238860, 4789490, -602236, 4154800, 4789490, -602236, 4154800, 4788390, -610980, 4154800, 4836220, -607532, 4099910, 4789490, -602236, 4154800, 4836220, -607532, 4099910, 4836410, -603495, 4100270, 4875890, -604437, 4053430, 4836410, -603495, 4100270, 4836220, -607532, 4099910, 4715050, -599940, 4238860, 4722510, -615234, 4228420, 4788390, -610980, 4154800, 4715050, -599940, 4238860, 4788390, -610980, 4154800, 4789490, -602236, 4154800, 4786420, -626200, 4154800, 4834830, -634588, 4097460, 4836220, -607532, 4099910, 4786420, -626200, 4154800, 4836220, -607532, 4099910, 4788390, -610980, 4154800, 4834830, -634588, 4097460, 4876970, -641947, 4046400, 4875890, -604437, 4053430, 4834830, -634588, 4097460, 4875890, -604437, 4053430, 4836220, -607532, 4099910, 4788390, -610980, 4154800, 4722510, -615234, 4228420, 4786420, -626200, 4154800, 4785910, -630053, 4154800, 4834450, -641602, 4096820, 4834830, -634588, 4097460, 4785910, -630053, 4154800, 4834830, -634588, 4097460, 4786420, -626200, 4154800, 4834450, -641602, 4096820, 5062810, -698526, 3803050, 4876970, -641947, 4046400, 4834450, -641602, 4096820, 4876970, -641947, 4046400, 4834830, -634588, 4097460, 4722510, -615234, 4228420, 4785910, -630053, 4154800, 4786420, -626200, 4154800, 4876970, -641947, 4046400, 5062810, -698526, 3803050, 5027390, -665181, 3855300, 5050410, -660751, 3826060, 5027390, -665181, 3855300, 5062810, -698526, 3803050, 4989460, -615217, 3912070, 4965420, -642612, 3938e3, 5006380, -629480, 3888270, 5006380, -629480, 3888270, 4965420, -642612, 3938e3, 5027390, -665181, 3855300, 4965420, -642612, 3938e3, 4876970, -641947, 4046400, 5027390, -665181, 3855300, 4923200, -613046, 3994910, 4876970, -641947, 4046400, 4965420, -642612, 3938e3, 4723480, -552258, 4235970, 4715050, -599940, 4238860, 4778120, -574082, 4171730, 4762900, -533326, 4194330, 4723480, -552258, 4235970, 4778120, -574082, 4171730, 4826240, -762034, 4085920, 4821520, -761701, 4091520, 4826130, -763450, 4085800, 4826130, -763450, 4085800, 4849040, -772204, 4057120, 4954620, -770558, 3928690, 4826130, -763450, 4085800, 4954620, -770558, 3928690, 4826240, -762034, 4085920, 4781440, -737530, 4142320, 4821520, -761701, 4091520, 4826240, -762034, 4085920, 4781440, -737530, 4142320, 4826240, -762034, 4085920, 4827500, -746239, 4087350, 4827500, -746239, 4087350, 4826240, -762034, 4085920, 4954620, -770558, 3928690, 4827640, -744251, 4087540, 4781440, -737530, 4142320, 4827500, -746239, 4087350, 4827500, -746239, 4087350, 4954620, -770558, 3928690, 4997370, -768821, 3874870, 4827500, -746239, 4087350, 4997370, -768821, 3874870, 4827640, -744251, 4087540, 4770920, -735016, 4154800, 4781440, -737530, 4142320, 4827640, -744251, 4087540, 4770920, -735016, 4154800, 4827640, -744251, 4087540, 4828030, -739250, 4087990, 4770920, -735016, 4154800, 4828030, -739250, 4087990, 4771760, -729519, 4154800, 4828030, -739250, 4087990, 4827640, -744251, 4087540, 4997370, -768821, 3874870, 4682820, -714226, 4256710, 4770920, -735016, 4154800, 4771760, -729519, 4154800, 4771760, -729519, 4154800, 4828030, -739250, 4087990, 4828960, -726827, 4089110, 4771760, -729519, 4154800, 4828960, -726827, 4089110, 4772890, -722106, 4154800, 4828030, -739250, 4087990, 4997370, -768821, 3874870, 5046900, -743715, 3815520, 4828030, -739250, 4087990, 5046900, -743715, 3815520, 4828960, -726827, 4089110, 4772890, -722106, 4154800, 4682820, -714226, 4256710, 4771760, -729519, 4154800, 4776710, -696390, 4154800, 4772890, -722106, 4154800, 4828960, -726827, 4089110, 4776710, -696390, 4154800, 4828960, -726827, 4089110, 4830460, -705685, 4091030, 4830460, -705685, 4091030, 4828960, -726827, 4089110, 5046900, -743715, 3815520, 4677020, -679291, 4268710, 4682820, -714226, 4256710, 4772890, -722106, 4154800, 4677020, -679291, 4268710, 4772890, -722106, 4154800, 4776710, -696390, 4154800, 4776710, -696390, 4154800, 4830460, -705685, 4091030, 4831640, -688135, 4092610, 4776710, -696390, 4154800, 4831640, -688135, 4092610, 4778320, -685246, 4154800, 4830460, -705685, 4091030, 5046900, -743715, 3815520, 5062810, -698526, 3803050, 4830460, -705685, 4091030, 5062810, -698526, 3803050, 4831640, -688135, 4092610, 4778320, -685246, 4154800, 4677020, -679291, 4268710, 4776710, -696390, 4154800, 4780400, -670576, 4154800, 4778320, -685246, 4154800, 4831640, -688135, 4092610, 4780400, -670576, 4154800, 4831640, -688135, 4092610, 4832420, -675892, 4093730, 5062810, -698526, 3803050, 4832420, -675892, 4093730, 4831640, -688135, 4092610, 4716010, -663898, 4228320, 4677020, -679291, 4268710, 4778320, -685246, 4154800, 4716010, -663898, 4228320, 4778320, -685246, 4154800, 4780400, -670576, 4154800, 4785910, -630053, 4154800, 4780400, -670576, 4154800, 4832420, -675892, 4093730, 4785910, -630053, 4154800, 4832420, -675892, 4093730, 4834450, -641602, 4096820, 4834450, -641602, 4096820, 4832420, -675892, 4093730, 5062810, -698526, 3803050, 4722510, -615234, 4228420, 4716010, -663898, 4228320, 4780400, -670576, 4154800, 4722510, -615234, 4228420, 4780400, -670576, 4154800, 4785910, -630053, 4154800, 4942180, -808203, 3936720, 4868880, -810140, 4026050, 4912920, -824483, 3969620, 4849040, -772204, 4057120, 4868880, -810140, 4026050, 4942180, -808203, 3936720, 4954620, -770558, 3928690, 4849040, -772204, 4057120, 4942180, -808203, 3936720, 4770920, -735016, 4154800, 4770690, -736534, 4154800, 4781440, -737530, 4142320, 4682820, -714226, 4256710, 4750670, -734665, 4177850, 4770690, -736534, 4154800, 4682820, -714226, 4256710, 4770690, -736534, 4154800, 4770920, -735016, 4154800, 4682820, -714226, 4256710, 4722040, -747119, 4207790, 4750670, -734665, 4177850, 4682820, -714226, 4256710, 4696860, -746835, 4235740, 4722040, -747119, 4207790, 5046900, -743715, 3815520, 4997370, -768821, 3874870, 5047250, -790275, 3805760, 4792350, -579034, 4154800, 4836830, -594736, 4101060, 4837170, -587121, 4101740, 4792350, -579034, 4154800, 4837170, -587121, 4101740, 4834110, -581912, 4106060, 4792350, -579034, 4154800, 4834110, -581912, 4106060, 4792710, -576116, 4154800, 4837170, -587121, 4101740, 4836830, -594736, 4101060, 4842870, -596896, 4093660, 4778120, -574082, 4171730, 4792350, -579034, 4154800, 4792710, -576116, 4154800, 3035620, -4785190, -2917230, 3081060, -4861290, -2739540, 2958130, -4849660, -2890420, 3128140, -4890200, -2633360, 3081060, -4861290, -2739540, 3035620, -4785190, -2917230, 3128140, -4890200, -2633360, 3035620, -4785190, -2917230, 3144350, -4879790, -2633360, 3226170, -4945440, -2403360, 3128140, -4890200, -2633360, 3144350, -4879790, -2633360, 3144350, -4879790, -2633360, 3035620, -4785190, -2917230, 3124530, -4718260, -2932240, 3144350, -4879790, -2633360, 3124530, -4718260, -2932240, 3186140, -4852610, -2633360, 3186140, -4852610, -2633360, 3226170, -4945440, -2403360, 3144350, -4879790, -2633360, 3205800, -4839640, -2633360, 3186140, -4852610, -2633360, 3124530, -4718260, -2932240, 3265840, -4929160, -2383270, 3226170, -4945440, -2403360, 3186140, -4852610, -2633360, 3265840, -4929160, -2383270, 3186140, -4852610, -2633360, 3205800, -4839640, -2633360, 3205800, -4839640, -2633360, 3124530, -4718260, -2932240, 3193990, -4681470, -2916440, 3205800, -4839640, -2633360, 3193990, -4681470, -2916440, 3236700, -4819030, -2633360, 3236700, -4819030, -2633360, 3265840, -4929160, -2383270, 3205800, -4839640, -2633360, 3193990, -4681470, -2916440, 3266850, -4798640, -2633360, 3236700, -4819030, -2633360, 3317340, -4880960, -2411010, 3265840, -4929160, -2383270, 3236700, -4819030, -2633360, 3317340, -4880960, -2411010, 3236700, -4819030, -2633360, 3266850, -4798640, -2633360, 3275960, -4792430, -2633360, 3266850, -4798640, -2633360, 3193990, -4681470, -2916440, 3326130, -4859640, -2441570, 3317340, -4880960, -2411010, 3266850, -4798640, -2633360, 3326130, -4859640, -2441570, 3266850, -4798640, -2633360, 3275960, -4792430, -2633360, 3289910, -4661810, -2840820, 3331480, -4754e3, -2633360, 3307590, -4770650, -2633360, 3341560, -4777190, -2578420, 3311540, -4800480, -2573920, 3307590, -4770650, -2633360, 3341560, -4777190, -2578420, 3307590, -4770650, -2633360, 3331480, -4754e3, -2633360, 3355580, -4737020, -2633360, 3331480, -4754e3, -2633360, 3289910, -4661810, -2840820, 3376960, -4761140, -2562040, 3341560, -4777190, -2578420, 3331480, -4754e3, -2633360, 3376960, -4761140, -2562040, 3331480, -4754e3, -2633360, 3355580, -4737020, -2633360, 3355580, -4737020, -2633360, 3289910, -4661810, -2840820, 3328170, -4687580, -2753070, 3355580, -4737020, -2633360, 3328170, -4687580, -2753070, 3359270, -4734400, -2633360, 3359270, -4734400, -2633360, 3376960, -4761140, -2562040, 3355580, -4737020, -2633360, 3379750, -4719810, -2633360, 3359270, -4734400, -2633360, 3328170, -4687580, -2753070, 3402040, -4733220, -2580410, 3376960, -4761140, -2562040, 3359270, -4734400, -2633360, 3402040, -4733220, -2580410, 3359270, -4734400, -2633360, 3379750, -4719810, -2633360, 3379750, -4719810, -2633360, 3328170, -4687580, -2753070, 3360200, -4698490, -2695350, 3379750, -4719810, -2633360, 3360200, -4698490, -2695350, 3382950, -4717510, -2633360, 3402040, -4733220, -2580410, 3379750, -4719810, -2633360, 3382950, -4717510, -2633360, 3382950, -4717510, -2633360, 3360200, -4698490, -2695350, 3387380, -4712900, -2635910, 3382950, -4717510, -2633360, 3387380, -4712900, -2635910, 3388060, -4713850, -2633360, 3402040, -4733220, -2580410, 3382950, -4717510, -2633360, 3388060, -4713850, -2633360, 3289910, -4661810, -2840820, 3307590, -4770650, -2633360, 3305980, -4771770, -2633360, 3311540, -4800480, -2573920, 3311470, -4821390, -2534910, 3305980, -4771770, -2633360, 3311540, -4800480, -2573920, 3305980, -4771770, -2633360, 3307590, -4770650, -2633360, 3282780, -4787760, -2633360, 3193990, -4681470, -2916440, 3289910, -4661810, -2840820, 3282780, -4787760, -2633360, 3289910, -4661810, -2840820, 3305980, -4771770, -2633360, 3305980, -4771770, -2633360, 3311470, -4821390, -2534910, 3282780, -4787760, -2633360, 3282780, -4787760, -2633360, 3275960, -4792430, -2633360, 3193990, -4681470, -2916440, 3326130, -4859640, -2441570, 3275960, -4792430, -2633360, 3282780, -4787760, -2633360, 3326130, -4859640, -2441570, 3282780, -4787760, -2633360, 3311470, -4821390, -2534910, 3009320, -4964200, -2633360, 3001180, -4956920, -2656110, 3080050, -4886720, -2695360, 3009320, -4964200, -2633360, 3080050, -4886720, -2695360, 3091230, -4913620, -2633360, 3091230, -4913620, -2633360, 3158980, -5088260, -2186070, 3009320, -4964200, -2633360, 3080050, -4886720, -2695360, 3092610, -4912750, -2633360, 3091230, -4913620, -2633360, 3138770, -5010850, -2383670, 3158980, -5088260, -2186070, 3091230, -4913620, -2633360, 3138770, -5010850, -2383670, 3091230, -4913620, -2633360, 3092610, -4912750, -2633360, 3111780, -4900620, -2633360, 3092610, -4912750, -2633360, 3080050, -4886720, -2695360, 3226170, -4945440, -2403360, 3138770, -5010850, -2383670, 3092610, -4912750, -2633360, 3226170, -4945440, -2403360, 3092610, -4912750, -2633360, 3111780, -4900620, -2633360, 3111780, -4900620, -2633360, 3080050, -4886720, -2695360, 3081060, -4861290, -2739540, 3111780, -4900620, -2633360, 3081060, -4861290, -2739540, 3128140, -4890200, -2633360, 3226170, -4945440, -2403360, 3111780, -4900620, -2633360, 3128140, -4890200, -2633360, 2842670, -5096080, -2566210, 2841100, -5295590, -2129550, 2781100, -5289590, -2221050, 3006200, -5216050, -2099180, 2841100, -5295590, -2129550, 2842670, -5096080, -2566210, 2911680, -5049080, -2581600, 3006200, -5216050, -2099180, 2842670, -5096080, -2566210, 3090070, -5166200, -2100660, 3006200, -5216050, -2099180, 2911680, -5049080, -2581600, 3001180, -4956920, -2656110, 3005470, -4966530, -2633360, 2974120, -4985370, -2633360, 3090070, -5166200, -2100660, 2911680, -5049080, -2581600, 2974120, -4985370, -2633360, 3090070, -5166200, -2100660, 2974120, -4985370, -2633360, 3005470, -4966530, -2633360, 3009080, -4964350, -2633360, 3005470, -4966530, -2633360, 3001180, -4956920, -2656110, 3163630, -5099130, -2154e3, 3090070, -5166200, -2100660, 3005470, -4966530, -2633360, 3163630, -5099130, -2154e3, 3005470, -4966530, -2633360, 3009080, -4964350, -2633360, 3009320, -4964200, -2633360, 3009080, -4964350, -2633360, 3001180, -4956920, -2656110, 3163630, -5099130, -2154e3, 3009080, -4964350, -2633360, 3009320, -4964200, -2633360, 3163630, -5099130, -2154e3, 3009320, -4964200, -2633360, 3158980, -5088260, -2186070, 2842670, -5096080, -2566210, 2768950, -5272110, -2276730, 2710200, -5247560, -2399960, 2842670, -5096080, -2566210, 2781100, -5289590, -2221050, 2768950, -5272110, -2276730, 3173760, -5053670, -2243740, 3158980, -5088260, -2186070, 3138770, -5010850, -2383670, 4437580, 3153340, 3312260, 4454890, 3115930, 3324320, 4469740, 3121310, 3299420, 4437580, 3153340, 3312260, 4434410, 3131140, 3337300, 4454890, 3115930, 3324320, 4386220, 3133940, 3397400, 4434410, 3131140, 3337300, 4437580, 3153340, 3312260, 4386220, 3133940, 3397400, 4437580, 3153340, 3312260, 4415550, 3154850, 3339950, 4434410, 3131140, 3337300, 4399180, 3101430, 3410360, 4442720, 3107890, 3347880, 4386220, 3133940, 3397400, 4399180, 3101430, 3410360, 4434410, 3131140, 3337300, 3620160, 4533200, 2641610, 3662100, 4491790, 2654420, 3644100, 4518190, 2634450, 3620160, 4533200, 2641610, 3645630, 4461060, 2727410, 3662100, 4491790, 2654420, 3620160, 4533200, 2641610, 3608730, 4458540, 2779760, 3645630, 4461060, 2727410, 3620160, 4533200, 2641610, 3584160, 4471600, 2790470, 3608730, 4458540, 2779760, 3569940, 4502380, 2759240, 3584160, 4471600, 2790470, 3620160, 4533200, 2641610, 3585900, 4525370, 2700710, 3569940, 4502380, 2759240, 3620160, 4533200, 2641610, 3924570, 2231870, 4490130, 3907800, 2220240, 4510340, 3913400, 2182620, 4523730, 3924570, 2231870, 4490130, 3913400, 2182620, 4523730, 3958070, 2206800, 4473200, 3913400, 2182620, 4523730, 3963280, 2182250, 4480580, 3958070, 2206800, 4473200, 3913400, 2182620, 4523730, 3942340, 2156560, 4511170, 3963280, 2182250, 4480580, 4056130, 2207630, 4384660, 3920730, 2089470, 4560970, 4071450, 2162100, 4393080, 4056130, 2207630, 4384660, 3946160, 2118900, 4525560, 3920730, 2089470, 4560970, 3942340, 2156560, 4511170, 3946160, 2118900, 4525560, 4056130, 2207630, 4384660, 3963280, 2182250, 4480580, 3942340, 2156560, 4511170, 4056130, 2207630, 4384660, 3920730, 2089470, 4560970, 3834220, 2000320, 4672360, 4071450, 2162100, 4393080, 3856600, 2061650, 4627370, 3834220, 2000320, 4672360, 3920730, 2089470, 4560970, 3886690, 2080530, 4593840, 3856600, 2061650, 4627370, 3920730, 2089470, 4560970, 4073640, 2097380, 4422140, 3820100, 1879510, 4733280, 4132010, 2021140, 4403570, 4073640, 2097380, 4422140, 3806170, 1907590, 4733260, 3820100, 1879510, 4733280, 4073640, 2097380, 4422140, 3803160, 1931480, 4726040, 3806170, 1907590, 4733260, 4073640, 2097380, 4422140, 3814440, 1963210, 4703970, 3803160, 1931480, 4726040, 3834220, 2000320, 4672360, 3814440, 1963210, 4703970, 4073640, 2097380, 4422140, 4071450, 2162100, 4393080, 3834220, 2000320, 4672360, 4073640, 2097380, 4422140, 4167050, 1993770, 4383120, 3876670, 1824860, 4708770, 3898960, 1807050, 4697300, 3845720, 1871190, 4715920, 3876670, 1824860, 4708770, 4167050, 1993770, 4383120, 4132010, 2021140, 4403570, 3845720, 1871190, 4715920, 4167050, 1993770, 4383120, 3820100, 1879510, 4733280, 3845720, 1871190, 4715920, 4132010, 2021140, 4403570, 4167050, 1993770, 4383120, 3898960, 1807050, 4697300, 3895120, 1767080, 4715530, 4167050, 1993770, 4383120, 3895120, 1767080, 4715530, 4213080, 1884660, 4387350, 3895120, 1767080, 4715530, 3914370, 1723260, 4715800, 4213080, 1884660, 4387350, 4213080, 1884660, 4387350, 3914370, 1723260, 4715800, 4226970, 1823240, 4399850, 3914370, 1723260, 4715800, 3924340, 1677290, 4724030, 4226970, 1823240, 4399850, 4226970, 1823240, 4399850, 3924340, 1677290, 4724030, 4244390, 1796810, 4393990, 3924340, 1677290, 4724030, 3953180, 1654500, 4708100, 4244390, 1796810, 4393990, 4244390, 1796810, 4393990, 3953180, 1654500, 4708100, 4197950, 1756530, 4454070, 3953180, 1654500, 4708100, 4196490, 1734730, 4463910, 4197950, 1756530, 4454070, 4197950, 1756530, 4454070, 4217170, 1744570, 4440690, 4224060, 1763260, 4426830, 4244390, 1796810, 4393990, 4197950, 1756530, 4454070, 4224060, 1763260, 4426830, 4222130, 1718300, 4446180, 4051370, 1606220, 4641320, 4218310, 1666910, 4469150, 4222130, 1718300, 4446180, 3986600, 1618770, 4692430, 4051370, 1606220, 4641320, 3953180, 1654500, 4708100, 3986600, 1618770, 4692430, 4222130, 1718300, 4446180, 3953180, 1654500, 4708100, 4222130, 1718300, 4446180, 4196490, 1734730, 4463910, 4190450, 1649270, 4501560, 4119260, 1583050, 4589590, 4190390, 1598e3, 4519950, 4051370, 1606220, 4641320, 4119260, 1583050, 4589590, 4190450, 1649270, 4501560, 4051370, 1606220, 4641320, 4190450, 1649270, 4501560, 4218310, 1666910, 4469150, 4119260, 1583050, 4589590, 4155220, 1530490, 4575080, 4169890, 1580850, 4544710, 4119260, 1583050, 4589590, 4169890, 1580850, 4544710, 4190390, 1598e3, 4519950, -2661930, -26343.2, 5776610, -2614260, -5292.44, 5798250, -2705010, .236479, 5756750, -2614260, -5292.44, 5798250, -2296210, .200741, 5930520, -2705010, .236479, 5756750, -2373330, -101546, 5899410, -2296210, .200741, 5930520, -2614260, -5292.44, 5798250, -2373330, -101546, 5899410, -2614260, -5292.44, 5798250, -2589390, -59394.2, 5809020, -2468380, -219081, 5857350, -2661020, -176418, 5774400, -2704090, -189847, 5754070, -2468380, -219081, 5857350, -2647170, -128402, 5781980, -2661020, -176418, 5774400, -2468380, -219081, 5857350, -2373330, -101546, 5899410, -2647170, -128402, 5781980, -2647170, -128402, 5781980, -2373330, -101546, 5899410, -2662350, -76225.9, 5775980, -2373330, -101546, 5899410, -2589390, -59394.2, 5809020, -2662350, -76225.9, 5775980, -2662350, -76225.9, 5775980, -2589390, -59394.2, 5809020, -2627430, -50311.5, 5792110, -2614740, -419233, 5782960, -2482860, -355265, 5844620, -2636070, -345641, 5778170, -2482860, -355265, 5844620, -2759480, -295293, 5723460, -2636070, -345641, 5778170, -2482860, -355265, 5844620, -2554750, -253197, 5819070, -2759480, -295293, 5723460, -2759480, -295293, 5723460, -2554750, -253197, 5819070, -2728250, -255301, 5740210, -2554750, -253197, 5819070, -2532210, -220916, 5830150, -2728250, -255301, 5740210, -2728250, -255301, 5740210, -2532210, -220916, 5830150, -2704090, -189847, 5754070, -2468380, -219081, 5857350, -2704090, -189847, 5754070, -2532210, -220916, 5830150, -2636070, -345641, 5778170, -2759480, -295293, 5723460, -2757260, -340747, 5722010, -2636070, -345641, 5778170, -2757260, -340747, 5722010, -2734080, -357278, 5732050, -2028270, -.177317, 6026770, -2071820, 46111.3, 6011860, -2105450, 40316.3, 6000290, -2028270, -.177317, 6026770, -2105450, 40316.3, 6000290, -2100450, -.183627, 6002160, 3603460, 2768940, 4460330, 3563350, 2724700, 4519020, 3607790, 2686770, 4506540, 3471150, 2734750, 4583810, 3563350, 2724700, 4519020, 3603460, 2768940, 4460330, 3471150, 2734750, 4583810, 3603460, 2768940, 4460330, 3580740, 2831440, 4439490, 3471150, 2734750, 4583810, 3580740, 2831440, 4439490, 3563510, 2849560, 4441740, 3570540, 2858490, 4430420, 3563510, 2849560, 4441740, 3580740, 2831440, 4439490, 3376650, 2748800, 4645160, 3471150, 2734750, 4583810, 3563510, 2849560, 4441740, 3376650, 2748800, 4645160, 3563510, 2849560, 4441740, 3560340, 2852880, 4442150, 3560340, 2852880, 4442150, 3563510, 2849560, 4441740, 3570540, 2858490, 4430420, 3504140, 2910480, 4449420, 3376650, 2748800, 4645160, 3560340, 2852880, 4442150, 3560340, 2852880, 4442150, 3570540, 2858490, 4430420, 3555910, 2979010, 4362720, 3560340, 2852880, 4442150, 3555910, 2979010, 4362720, 3504140, 2910480, 4449420, 3294330, 2738730, 4709350, 3376650, 2748800, 4645160, 3504140, 2910480, 4449420, 3294330, 2738730, 4709350, 3504140, 2910480, 4449420, 3493490, 2921170, 4450780, 3555910, 2979010, 4362720, 3493490, 2921170, 4450780, 3504140, 2910480, 4449420, 3265630, 2730070, 4734130, 3294330, 2738730, 4709350, 3493490, 2921170, 4450780, 3265630, 2730070, 4734130, 3493490, 2921170, 4450780, 3491240, 2923410, 4451070, 3555910, 2979010, 4362720, 3491240, 2923410, 4451070, 3493490, 2921170, 4450780, 2488780, 2398590, 5342380, 3258830, 3139670, 4479720, 3225860, 3167960, 4483640, 2488780, 2398590, 5342380, 3225860, 3167960, 4483640, 2479200, 2408490, 5342380, 3258830, 3139670, 4479720, 3388800, 3264670, 4291220, 3345630, 3292060, 4304050, 3258830, 3139670, 4479720, 3345630, 3292060, 4304050, 3225860, 3167960, 4483640, 2207830, 2137320, 5570350, 1867880, 1800620, 5807080, 2213260, 2133290, 5569750, 2213260, 2133290, 5569750, 2488780, 2398590, 5342380, 2479200, 2408490, 5342380, 2213260, 2133290, 5569750, 2479200, 2408490, 5342380, 2207830, 2137320, 5570350, 2491550, 2395720, 5342380, 3268370, 3131380, 4478580, 3258830, 3139670, 4479720, 2491550, 2395720, 5342380, 3258830, 3139670, 4479720, 2488780, 2398590, 5342380, 3268370, 3131380, 4478580, 3388660, 3244620, 4306400, 3388800, 3264670, 4291220, 3268370, 3131380, 4478580, 3388800, 3264670, 4291220, 3258830, 3139670, 4479720, 1867880, 1800620, 5807080, 2214840, 2132120, 5569570, 2213260, 2133290, 5569750, 2214840, 2132120, 5569570, 2491550, 2395720, 5342380, 2488780, 2398590, 5342380, 2214840, 2132120, 5569570, 2488780, 2398590, 5342380, 2213260, 2133290, 5569750, 2491550, 2395720, 5342380, 2515450, 2370600, 5342380, 3273430, 3126970, 4477970, 2491550, 2395720, 5342380, 3273430, 3126970, 4477970, 3268370, 3131380, 4478580, 3268370, 3131380, 4478580, 3273430, 3126970, 4477970, 3388660, 3244620, 4306400, 1867880, 1800620, 5807080, 1870890, 1745610, 5822780, 2246580, 2108140, 5566010, 1867880, 1800620, 5807080, 2246580, 2108140, 5566010, 2214840, 2132120, 5569570, 2214840, 2132120, 5569570, 2246580, 2108140, 5566010, 2515450, 2370600, 5342380, 2214840, 2132120, 5569570, 2515450, 2370600, 5342380, 2491550, 2395720, 5342380, 2537310, 2347190, 5342380, 3347630, 3060640, 4468990, 3273430, 3126970, 4477970, 2537310, 2347190, 5342380, 3273430, 3126970, 4477970, 2515450, 2370600, 5342380, 3347630, 3060640, 4468990, 3437980, 3138700, 4345370, 3388660, 3244620, 4306400, 3347630, 3060640, 4468990, 3388660, 3244620, 4306400, 3273430, 3126970, 4477970, 2246580, 2108140, 5566010, 1870890, 1745610, 5822780, 2259700, 2098030, 5564530, 2259700, 2098030, 5564530, 2537310, 2347190, 5342380, 2515450, 2370600, 5342380, 2259700, 2098030, 5564530, 2515450, 2370600, 5342380, 2246580, 2108140, 5566010, 2537310, 2347190, 5342380, 2560080, 2322340, 5342380, 3351230, 3057350, 4468550, 2537310, 2347190, 5342380, 3351230, 3057350, 4468550, 3347630, 3060640, 4468990, 3347630, 3060640, 4468990, 3351230, 3057350, 4468550, 3437980, 3138700, 4345370, 1870890, 1745610, 5822780, 1894400, 1711300, 5825340, 2290310, 2074010, 5561040, 1870890, 1745610, 5822780, 2290310, 2074010, 5561040, 2259700, 2098030, 5564530, 2259700, 2098030, 5564530, 2290310, 2074010, 5561040, 2560080, 2322340, 5342380, 2259700, 2098030, 5564530, 2560080, 2322340, 5342380, 2537310, 2347190, 5342380, 2583690, 2296040, 5342380, 3431780, 2981700, 4458580, 3351230, 3057350, 4468550, 2583690, 2296040, 5342380, 3351230, 3057350, 4468550, 2560080, 2322340, 5342380, 3431780, 2981700, 4458580, 3508170, 3041260, 4358450, 3437980, 3138700, 4345370, 3431780, 2981700, 4458580, 3437980, 3138700, 4345370, 3351230, 3057350, 4468550, 2290310, 2074010, 5561040, 1894400, 1711300, 5825340, 2304970, 2062270, 5559360, 2304970, 2062270, 5559360, 2583690, 2296040, 5342380, 2560080, 2322340, 5342380, 2304970, 2062270, 5559360, 2560080, 2322340, 5342380, 2290310, 2074010, 5561040, 2583690, 2296040, 5342380, 2624170, 2249670, 5342380, 3437050, 2976630, 4457920, 2583690, 2296040, 5342380, 3437050, 2976630, 4457920, 3431780, 2981700, 4458580, 3431780, 2981700, 4458580, 3437050, 2976630, 4457920, 3508170, 3041260, 4358450, 1894400, 1711300, 5825340, 2075410, 1768540, 5746560, 2359790, 2017040, 5553e3, 1894400, 1711300, 5825340, 2359790, 2017040, 5553e3, 2304970, 2062270, 5559360, 2304970, 2062270, 5559360, 2359790, 2017040, 5553e3, 2624170, 2249670, 5342380, 2304970, 2062270, 5559360, 2624170, 2249670, 5342380, 2583690, 2296040, 5342380, 3445440, 2968510, 4456870, 3437050, 2976630, 4457920, 2624170, 2249670, 5342380, 3445440, 2968510, 4456870, 2624170, 2249670, 5342380, 2637570, 2233940, 5342380, 3445440, 2968510, 4456870, 2637570, 2233940, 5342380, 3188e3, 2682720, 4812920, 3508170, 3041260, 4358450, 3437050, 2976630, 4457920, 3445440, 2968510, 4456870, 2359790, 2017040, 5553e3, 2075410, 1768540, 5746560, 2367100, 2010840, 5552140, 2367100, 2010840, 5552140, 2637570, 2233940, 5342380, 2624170, 2249670, 5342380, 2367100, 2010840, 5552140, 2624170, 2249670, 5342380, 2359790, 2017040, 5553e3, 2637920, 2233520, 5342380, 3169560, 2666090, 4834150, 3188e3, 2682720, 4812920, 2637920, 2233520, 5342380, 3188e3, 2682720, 4812920, 2637570, 2233940, 5342380, 2075410, 1768540, 5746560, 2367290, 2010680, 5552110, 2367100, 2010840, 5552140, 2367290, 2010680, 5552110, 2637920, 2233520, 5342380, 2637570, 2233940, 5342380, 2367290, 2010680, 5552110, 2637570, 2233940, 5342380, 2367100, 2010840, 5552140, 3445440, 2968510, 4456870, 3188e3, 2682720, 4812920, 3483540, 2931090, 4452050, 3483540, 2931090, 4452050, 3542650, 2980760, 4372240, 3508170, 3041260, 4358450, 3483540, 2931090, 4452050, 3508170, 3041260, 4358450, 3445440, 2968510, 4456870, 3188e3, 2682720, 4812920, 3489130, 2925530, 4451330, 3483540, 2931090, 4452050, 3489130, 2925530, 4451330, 3555910, 2979010, 4362720, 3542650, 2980760, 4372240, 3489130, 2925530, 4451330, 3542650, 2980760, 4372240, 3483540, 2931090, 4452050, 3188e3, 2682720, 4812920, 3265630, 2730070, 4734130, 3491240, 2923410, 4451070, 3188e3, 2682720, 4812920, 3491240, 2923410, 4451070, 3489130, 2925530, 4451330, 3489130, 2925530, 4451330, 3491240, 2923410, 4451070, 3555910, 2979010, 4362720, 3188e3, 2682720, 4812920, 3240790, 2688130, 4774750, 3265630, 2730070, 4734130, 1799410, 1770270, 5837740, 1721880, 1673750, 5889020, 1780720, 1701600, 5863660, 1639110, 1712230, 5901480, 1721880, 1673750, 5889020, 1799410, 1770270, 5837740, 1639110, 1712230, 5901480, 1799410, 1770270, 5837740, 1709210, 1742660, 5872810, 2438390, 2449800, 5342380, 2463880, 2424160, 5342380, 3222480, 3170830, 4484040, 2438390, 2449800, 5342380, 3222480, 3170830, 4484040, 3216860, 3175570, 4484710, 3216860, 3175570, 4484710, 3222480, 3170830, 4484040, 3345630, 3292060, 4304050, 1709210, 1742660, 5872810, 1799410, 1770270, 5837740, 2187550, 2152210, 5572610, 1709210, 1742660, 5872810, 2187550, 2152210, 5572610, 2153670, 2176510, 5576340, 2153670, 2176510, 5576340, 2187550, 2152210, 5572610, 2463880, 2424160, 5342380, 2153670, 2176510, 5576340, 2463880, 2424160, 5342380, 2438390, 2449800, 5342380, 2463880, 2424160, 5342380, 2479200, 2408490, 5342380, 3225860, 3167960, 4483640, 2463880, 2424160, 5342380, 3225860, 3167960, 4483640, 3222480, 3170830, 4484040, 3345630, 3292060, 4304050, 3222480, 3170830, 4484040, 3225860, 3167960, 4483640, 1799410, 1770270, 5837740, 1867880, 1800620, 5807080, 2207830, 2137320, 5570350, 1799410, 1770270, 5837740, 2207830, 2137320, 5570350, 2187550, 2152210, 5572610, 2187550, 2152210, 5572610, 2207830, 2137320, 5570350, 2479200, 2408490, 5342380, 2187550, 2152210, 5572610, 2479200, 2408490, 5342380, 2463880, 2424160, 5342380, 2637920, 2233520, 5342380, 2654610, 2213660, 5342380, 3169560, 2666090, 4834150, 2075410, 1768540, 5746560, 2120100, 1753490, 5734930, 2393700, 1987950, 5548990, 2075410, 1768540, 5746560, 2393700, 1987950, 5548990, 2367290, 2010680, 5552110, 2367290, 2010680, 5552110, 2393700, 1987950, 5548990, 2654610, 2213660, 5342380, 2367290, 2010680, 5552110, 2654610, 2213660, 5342380, 2637920, 2233520, 5342380, 2682480, 2179810, 5342380, 3215500, 2566440, 4857530, 3169560, 2666090, 4834150, 2682480, 2179810, 5342380, 3169560, 2666090, 4834150, 2654610, 2213660, 5342380, 2393700, 1987950, 5548990, 2120100, 1753490, 5734930, 2408900, 1974640, 5547180, 2408900, 1974640, 5547180, 2682480, 2179810, 5342380, 2654610, 2213660, 5342380, 2408900, 1974640, 5547180, 2654610, 2213660, 5342380, 2393700, 1987950, 5548990, 2693470, 2166220, 5342380, 3242230, 2534070, 4856760, 3215500, 2566440, 4857530, 2693470, 2166220, 5342380, 3215500, 2566440, 4857530, 2682480, 2179810, 5342380, 2120100, 1753490, 5734930, 2415020, 1969230, 5546450, 2408900, 1974640, 5547180, 2415020, 1969230, 5546450, 2693470, 2166220, 5342380, 2682480, 2179810, 5342380, 2415020, 1969230, 5546450, 2682480, 2179810, 5342380, 2408900, 1974640, 5547180, 2706370, 2150080, 5342380, 3237560, 2474720, 4890140, 3242230, 2534070, 4856760, 2706370, 2150080, 5342380, 3242230, 2534070, 4856760, 2693470, 2166220, 5342380, 2120100, 1753490, 5734930, 2422290, 1962760, 5545580, 2415020, 1969230, 5546450, 2422290, 1962760, 5545580, 2706370, 2150080, 5342380, 2693470, 2166220, 5342380, 2422290, 1962760, 5545580, 2693470, 2166220, 5342380, 2415020, 1969230, 5546450, 2706370, 2150080, 5342380, 2749830, 2094200, 5342380, 3237560, 2474720, 4890140, 2120100, 1753490, 5734930, 2142140, 1624560, 5764440, 2494430, 1896260, 5536790, 2120100, 1753490, 5734930, 2494430, 1896260, 5536790, 2422290, 1962760, 5545580, 2422290, 1962760, 5545580, 2494430, 1896260, 5536790, 2749830, 2094200, 5342380, 2422290, 1962760, 5545580, 2749830, 2094200, 5342380, 2706370, 2150080, 5342380, 2142140, 1624560, 5764440, 2190780, 1623440, 5746560, 2208080, 1672500, 5725970, 3237560, 2474720, 4890140, 2749830, 2094200, 5342380, 2750660, 2093110, 5342380, 2142140, 1624560, 5764440, 2208080, 1672500, 5725970, 2495780, 1894970, 5536620, 2142140, 1624560, 5764440, 2495780, 1894970, 5536620, 2494430, 1896260, 5536790, 2494430, 1896260, 5536790, 2495780, 1894970, 5536620, 2750660, 2093110, 5342380, 2494430, 1896260, 5536790, 2750660, 2093110, 5342380, 2749830, 2094200, 5342380, 3237560, 2474720, 4890140, 2750660, 2093110, 5342380, 2753240, 2089720, 5342380, 2208080, 1672500, 5725970, 2250680, 1696790, 5702360, 2499990, 1890950, 5536100, 2208080, 1672500, 5725970, 2499990, 1890950, 5536100, 2495780, 1894970, 5536620, 2495780, 1894970, 5536620, 2499990, 1890950, 5536100, 2753240, 2089720, 5342380, 2495780, 1894970, 5536620, 2753240, 2089720, 5342380, 2750660, 2093110, 5342380, 2766770, 2071770, 5342380, 3281290, 2439230, 4878880, 3237560, 2474720, 4890140, 2766770, 2071770, 5342380, 3237560, 2474720, 4890140, 2753240, 2089720, 5342380, 2499990, 1890950, 5536100, 2250680, 1696790, 5702360, 2507270, 1883970, 5535200, 2507270, 1883970, 5535200, 2766770, 2071770, 5342380, 2753240, 2089720, 5342380, 2507270, 1883970, 5535200, 2753240, 2089720, 5342380, 2499990, 1890950, 5536100, 2766770, 2071770, 5342380, 2781180, 2052390, 5342380, 3281290, 2439230, 4878880, 2250680, 1696790, 5702360, 2252620, 1650560, 5715060, 2530710, 1861160, 5532260, 2250680, 1696790, 5702360, 2530710, 1861160, 5532260, 2507270, 1883970, 5535200, 2507270, 1883980, 5535200, 2530710, 1861160, 5532260, 2781180, 2052390, 5342380, 2507270, 1883980, 5535200, 2781180, 2052390, 5342380, 2766770, 2071770, 5342380, 2803650, 2021590, 5342380, 3295280, 2339920, 4917680, 3281290, 2439230, 4878880, 2803650, 2021590, 5342380, 3281290, 2439230, 4878880, 2781180, 2052390, 5342380, 2530710, 1861160, 5532260, 2252620, 1650560, 5715060, 2543690, 1848320, 5530630, 2543690, 1848320, 5530630, 2803650, 2021590, 5342380, 2781180, 2052390, 5342380, 2543690, 1848320, 5530630, 2781180, 2052390, 5342380, 2530710, 1861160, 5532260, 2810800, 2011640, 5342380, 3279040, 2297900, 4948050, 3295280, 2339920, 4917680, 2810800, 2011640, 5342380, 3295280, 2339920, 4917680, 2803650, 2021590, 5342380, 2252620, 1650560, 5715060, 2547900, 1844130, 5530090, 2543690, 1848320, 5530630, 2547900, 1844130, 5530090, 2810800, 2011640, 5342380, 2803650, 2021590, 5342380, 2547900, 1844130, 5530090, 2803650, 2021590, 5342380, 2543690, 1848320, 5530630, 3364100, 2736e3, 4661690, 3386880, 2670490, 4682980, 3416880, 2691090, 4649510, 3364100, 2736e3, 4661690, 3344820, 2686480, 4703880, 3386880, 2670490, 4682980, 3294330, 2738730, 4709350, 3344820, 2686480, 4703880, 3364100, 2736e3, 4661690, 3294330, 2738730, 4709350, 3364100, 2736e3, 4661690, 3376650, 2748800, 4645160, 3279040, 2297900, 4948050, 3263800, 2234080, 4986930, 3307230, 2249680, 4951420, 2846640, 1960580, 5342380, 3263800, 2234080, 4986930, 3279040, 2297900, 4948050, 2846640, 1960580, 5342380, 3279040, 2297900, 4948050, 2833580, 1979420, 5342380, 2587100, 1804240, 5525080, 2144190, 1491070, 5799410, 2596410, 1794540, 5523880, 2596410, 1794540, 5523880, 2846640, 1960580, 5342380, 2833580, 1979420, 5342380, 2596410, 1794540, 5523880, 2833580, 1979420, 5342380, 2587100, 1804240, 5525080, 3279040, 2297900, 4948050, 2832730, 1980630, 5342380, 2833580, 1979420, 5342380, 2181190, 1520410, 5778100, 2144190, 1491070, 5799410, 2587100, 1804240, 5525080, 2181190, 1520410, 5778100, 2587100, 1804240, 5525080, 2585660, 1805720, 5525270, 2585660, 1805720, 5525270, 2587100, 1804240, 5525080, 2833580, 1979420, 5342380, 2585660, 1805720, 5525270, 2833580, 1979420, 5342380, 2832730, 1980630, 5342380, 3279040, 2297900, 4948050, 2831860, 1981870, 5342380, 2832730, 1980630, 5342380, 2264040, 1581990, 5729820, 2181190, 1520410, 5778100, 2585660, 1805720, 5525270, 2264040, 1581990, 5729820, 2585660, 1805720, 5525270, 2584170, 1807260, 5525460, 2584170, 1807260, 5525460, 2585660, 1805720, 5525270, 2832730, 1980630, 5342380, 2584170, 1807260, 5525460, 2832730, 1980630, 5342380, 2831860, 1981870, 5342380, 2810800, 2011640, 5342380, 2831860, 1981870, 5342380, 3279040, 2297900, 4948050, 2252620, 1650560, 5715060, 2264040, 1581990, 5729820, 2584170, 1807260, 5525460, 2252620, 1650560, 5715060, 2584170, 1807260, 5525460, 2547900, 1844130, 5530090, 2547900, 1844130, 5530090, 2584170, 1807260, 5525460, 2831860, 1981870, 5342380, 2547900, 1844130, 5530090, 2831860, 1981870, 5342380, 2810800, 2011640, 5342380, 3300540, 2095560, 5022520, 3241310, 2049430, 5079420, 3326680, 2091630, 5006990, 3210910, 2060860, 5093980, 3241310, 2049430, 5079420, 3300540, 2095560, 5022520, 3293100, 2115420, 5019100, 3210910, 2060860, 5093980, 3300540, 2095560, 5022520, 2904140, 1874360, 5342380, 3210910, 2060860, 5093980, 3293100, 2115420, 5019100, 2904140, 1874360, 5342380, 3293100, 2115420, 5019100, 2902800, 1876440, 5342380, 2123170, 1388540, 5832280, 2661120, 1724800, 5515350, 2660070, 1725970, 5515500, 2661120, 1724800, 5515350, 2904140, 1874360, 5342380, 2902800, 1876440, 5342380, 2661120, 1724800, 5515350, 2902800, 1876440, 5342380, 2660070, 1725970, 5515500, 2902800, 1876440, 5342380, 3293100, 2115420, 5019100, 3247210, 2169940, 5025670, 2902800, 1876440, 5342380, 3247210, 2169940, 5025670, 2880430, 1910600, 5342380, 2642820, 1744970, 5517790, 2123170, 1388540, 5832280, 2660070, 1725970, 5515500, 2660070, 1725970, 5515500, 2902800, 1876440, 5342380, 2880430, 1910600, 5342380, 2660070, 1725970, 5515500, 2880430, 1910600, 5342380, 2642820, 1744970, 5517790, 2860840, 1939800, 5342380, 2880430, 1910600, 5342380, 3247210, 2169940, 5025670, 2144190, 1491070, 5799410, 2123170, 1388540, 5832280, 2642820, 1744970, 5517790, 2144190, 1491070, 5799410, 2642820, 1744970, 5517790, 2606680, 1783760, 5522540, 2606680, 1783760, 5522540, 2642820, 1744970, 5517790, 2880430, 1910600, 5342380, 2606680, 1783760, 5522540, 2880430, 1910600, 5342380, 2860840, 1939800, 5342380, 2860840, 1939800, 5342380, 3247210, 2169940, 5025670, 3263800, 2234080, 4986930, 2860840, 1939800, 5342380, 3263800, 2234080, 4986930, 2846640, 1960580, 5342380, 2144190, 1491070, 5799410, 2606680, 1783760, 5522540, 2596410, 1794540, 5523880, 2606680, 1783760, 5522540, 2860840, 1939800, 5342380, 2846640, 1960580, 5342380, 2606680, 1783760, 5522540, 2846640, 1960580, 5342380, 2596410, 1794540, 5523880, 3092940, 3276550, 4499130, 2922520, 3076080, 4746090, 3097660, 3272840, 4498590, 3092940, 3276550, 4499130, 3097660, 3272840, 4498590, 3265220, 3463280, 4231310, 3092940, 3276550, 4499130, 3265220, 3463280, 4231310, 3120280, 3309070, 4456540, 2914660, 3160270, 4695680, 2922520, 3076080, 4746090, 3092940, 3276550, 4499130, 2914660, 3160270, 4695680, 3092940, 3276550, 4499130, 3084e3, 3283550, 4500160, 3084e3, 3283550, 4500160, 3092940, 3276550, 4499130, 3120280, 3309070, 4456540, 2914660, 3160270, 4695680, 3084e3, 3283550, 4500160, 3055260, 3305820, 4503440, 2914660, 3160270, 4695680, 3055260, 3305820, 4503440, 3007670, 3302590, 4537480, 3055260, 3305820, 4503440, 3084e3, 3283550, 4500160, 3120280, 3309070, 4456540, 2871960, 3196050, 4697770, 2914660, 3160270, 4695680, 3007670, 3302590, 4537480, 2942690, 3343160, 4550270, 2871960, 3196050, 4697770, 3007670, 3302590, 4537480, 2942690, 3343160, 4550270, 2905690, 3295090, 4608350, 2871960, 3196050, 4697770, 2884900, 3330570, 4595970, 2905690, 3295090, 4608350, 2942690, 3343160, 4550270, 3097660, 3272840, 4498590, 2922520, 3076080, 4746090, 3106300, 3266010, 4497590, 3106300, 3266010, 4497590, 3280460, 3445410, 4234090, 3265220, 3463280, 4231310, 3106300, 3266010, 4497590, 3265220, 3463280, 4231310, 3097660, 3272840, 4498590, 2383240, 2503480, 5342380, 2384950, 2501850, 5342380, 3108660, 3264140, 4497330, 2383240, 2503480, 5342380, 3108660, 3264140, 4497330, 3106300, 3266010, 4497590, 2383240, 2503480, 5342380, 3106300, 3266010, 4497590, 2922520, 3076080, 4746090, 3106300, 3266010, 4497590, 3108660, 3264140, 4497330, 3280460, 3445410, 4234090, 2105620, 2209760, 5581570, 1748640, 1833e3, 5833840, 2106590, 2209110, 5581470, 2105620, 2209760, 5581570, 2106590, 2209110, 5581470, 2384950, 2501850, 5342380, 2105620, 2209760, 5581570, 2384950, 2501850, 5342380, 2383240, 2503480, 5342380, 2350600, 2534160, 5342380, 2383240, 2503480, 5342380, 2922520, 3076080, 4746090, 1683680, 1862990, 5843370, 1748640, 1833e3, 5833840, 2105620, 2209760, 5581570, 1683680, 1862990, 5843370, 2105620, 2209760, 5581570, 2056060, 2242640, 5586900, 2056060, 2242640, 5586900, 2105620, 2209760, 5581570, 2383240, 2503480, 5342380, 2056060, 2242640, 5586900, 2383240, 2503480, 5342380, 2350600, 2534160, 5342380, 2350600, 2534160, 5342380, 2922520, 3076080, 4746090, 2851970, 3031900, 4816440, 2350600, 2534160, 5342380, 2851970, 3031900, 4816440, 2345480, 2538890, 5342380, 1683680, 1862990, 5843370, 2056060, 2242640, 5586900, 2053170, 2244520, 5587210, 2056060, 2242640, 5586900, 2350600, 2534160, 5342380, 2345480, 2538890, 5342380, 2056060, 2242640, 5586900, 2345480, 2538890, 5342380, 2053170, 2244520, 5587210, 2848190, 3058980, 4801630, 2851970, 3031900, 4816440, 2922520, 3076080, 4746090, 3149590, 3570550, 4229810, 3157460, 3444860, 4326410, 3206530, 3559620, 4196330, 3206530, 3559620, 4196330, 3157460, 3444860, 4326410, 3229690, 3563820, 4175100, 3229690, 3563820, 4175100, 3157460, 3444860, 4326410, 3253730, 3535100, 4180810, 3157460, 3444860, 4326410, 3265220, 3463280, 4231310, 3253730, 3535100, 4180810, 3116910, 3412370, 4380860, 3265220, 3463280, 4231310, 3157460, 3444860, 4326410, 1902480, 3516800, 4952580, 1971150, 3409660, 5000090, 1937490, 3544390, 4919450, 1937490, 3544390, 4919450, 1971150, 3409660, 5000090, 2021930, 3492610, 4922480, 1731580, 2991470, 5342380, 2021930, 3492610, 4922480, 1971150, 3409660, 5000090, 1731580, 2991470, 5342380, 1971150, 3409660, 5000090, 1730380, 2992160, 5342380, 1467620, 2536900, 5645880, 1185790, 2049e3, 5902660, 1468190, 2536700, 5645830, 1468190, 2536700, 5645830, 1731580, 2991470, 5342380, 1730380, 2992160, 5342380, 1468190, 2536700, 5645830, 1730380, 2992160, 5342380, 1467620, 2536900, 5645880, 1740980, 2986010, 5342380, 2052520, 3504360, 4901560, 2021930, 3492610, 4922480, 1740980, 2986010, 5342380, 2021930, 3492610, 4922480, 1731580, 2991470, 5342380, 1185790, 2049e3, 5902660, 1472630, 2535070, 5645400, 1468190, 2536700, 5645830, 1472630, 2535070, 5645400, 1740980, 2986010, 5342380, 1731580, 2991470, 5342380, 1472630, 2535070, 5645400, 1731580, 2991470, 5342380, 1468190, 2536700, 5645830, 1740980, 2986010, 5342380, 1762920, 2973110, 5342380, 2052520, 3504360, 4901560, 1185790, 2049e3, 5902660, 1193890, 1971510, 5927200, 1509630, 2521190, 5641870, 1185790, 2049e3, 5902660, 1509630, 2521190, 5641870, 1472630, 2535070, 5645400, 1472630, 2535070, 5645400, 1509630, 2521190, 5641870, 1762920, 2973110, 5342380, 1472630, 2535070, 5645400, 1762920, 2973110, 5342380, 1740980, 2986010, 5342380, 1805170, 2947650, 5342380, 2106800, 3419640, 4937990, 2052520, 3504360, 4901560, 1805170, 2947650, 5342380, 2052520, 3504360, 4901560, 1762920, 2973110, 5342380, 1509630, 2521190, 5641870, 1193890, 1971510, 5927200, 1531020, 2512900, 5639820, 1531020, 2512900, 5639820, 1805170, 2947650, 5342380, 1762920, 2973110, 5342380, 1531020, 2512900, 5639820, 1762920, 2973110, 5342380, 1509630, 2521190, 5641870, 1805170, 2947650, 5342380, 1832170, 2930940, 5342380, 2106800, 3419640, 4937990, 1193890, 1971510, 5927200, 1267840, 1976160, 5910380, 1578140, 2493940, 5635280, 1193890, 1971510, 5927200, 1578140, 2493940, 5635280, 1531020, 2512900, 5639820, 1531020, 2512900, 5639820, 1578140, 2493940, 5635280, 1832170, 2930940, 5342380, 1531020, 2512900, 5639820, 1832170, 2930940, 5342380, 1805170, 2947650, 5342380, 1884020, 2897890, 5342380, 2201550, 3361500, 4936590, 2106800, 3419640, 4937990, 1884020, 2897890, 5342380, 2106800, 3419640, 4937990, 1832170, 2930940, 5342380, 1578140, 2493940, 5635280, 1267840, 1976160, 5910380, 1604370, 2482960, 5632740, 1604370, 2482960, 5632740, 1884020, 2897890, 5342380, 1832170, 2930940, 5342380, 1604370, 2482960, 5632740, 1832170, 2930940, 5342380, 1578140, 2493940, 5635280, 1917140, 2876080, 5342380, 2283910, 3350210, 4906950, 2201550, 3361500, 4936590, 1917140, 2876080, 5342380, 2201550, 3361500, 4936590, 1884020, 2897890, 5342380, 1267840, 1976160, 5910380, 1621480, 2475630, 5631070, 1604370, 2482960, 5632740, 1621480, 2475630, 5631070, 1917140, 2876080, 5342380, 1884020, 2897890, 5342380, 1621480, 2475630, 5631070, 1884020, 2897890, 5342380, 1604370, 2482960, 5632740, 2093690, 2750220, 5342380, 2419820, 3134120, 4983470, 2332410, 3273890, 4935380, 2093690, 2750220, 5342380, 2332410, 3273890, 4935380, 2024240, 2801740, 5342380, 1761060, 2410910, 5617310, 1413390, 1909100, 5899470, 1798690, 2391900, 5613540, 1798690, 2391900, 5613540, 2093690, 2750220, 5342380, 2024240, 2801740, 5342380, 1798690, 2391900, 5613540, 2024240, 2801740, 5342380, 1761060, 2410910, 5617310, 2002100, 2817600, 5342380, 2024240, 2801740, 5342380, 2332410, 3273890, 4935380, 1377970, 1948070, 5895140, 1413390, 1909100, 5899470, 1761060, 2410910, 5617310, 1377970, 1948070, 5895140, 1761060, 2410910, 5617310, 1722780, 2429560, 5621120, 1722780, 2429560, 5621120, 1761060, 2410910, 5617310, 2024240, 2801740, 5342380, 1722780, 2429560, 5621120, 2024240, 2801740, 5342380, 2002100, 2817600, 5342380, 2002100, 2817600, 5342380, 2332410, 3273890, 4935380, 2283910, 3350210, 4906950, 2002100, 2817600, 5342380, 2283910, 3350210, 4906950, 1965720, 2843100, 5342380, 1703900, 2438510, 5622980, 1377970, 1948070, 5895140, 1722780, 2429560, 5621120, 1722780, 2429560, 5621120, 2002100, 2817600, 5342380, 1965720, 2843100, 5342380, 1722780, 2429560, 5621120, 1965720, 2843100, 5342380, 1703900, 2438510, 5622980, 2283910, 3350210, 4906950, 1952070, 2852490, 5342380, 1965720, 2843100, 5342380, 1333420, 1935990, 5909250, 1377970, 1948070, 5895140, 1703900, 2438510, 5622980, 1333420, 1935990, 5909250, 1703900, 2438510, 5622980, 1680950, 2449160, 5625250, 1680950, 2449160, 5625250, 1703900, 2438510, 5622980, 1965720, 2843100, 5342380, 1680950, 2449160, 5625250, 1965720, 2843100, 5342380, 1952070, 2852490, 5342380, 1917140, 2876080, 5342380, 1952070, 2852490, 5342380, 2283910, 3350210, 4906950, 1267840, 1976160, 5910380, 1333420, 1935990, 5909250, 1680950, 2449160, 5625250, 1267840, 1976160, 5910380, 1680950, 2449160, 5625250, 1621480, 2475630, 5631070, 1621480, 2475630, 5631070, 1680950, 2449160, 5625250, 1952070, 2852490, 5342380, 1621480, 2475630, 5631070, 1952070, 2852490, 5342380, 1917140, 2876080, 5342380, 1892950, 3404770, 5033310, 1892300, 3377550, 5051730, 1971150, 3409660, 5000090, 1711760, 3002850, 5342380, 1971150, 3409660, 5000090, 1892300, 3377550, 5051730, 1711760, 3002850, 5342380, 1892300, 3377550, 5051730, 1684440, 3018260, 5342380, 1111650, 2011900, 5929600, 1432190, 2549590, 5649250, 1418750, 2554250, 5650520, 1432190, 2549590, 5649250, 1711760, 3002850, 5342380, 1684440, 3018260, 5342380, 1432190, 2549590, 5649250, 1684440, 3018260, 5342380, 1418750, 2554250, 5650520, 1684440, 3018260, 5342380, 1892300, 3377550, 5051730, 1837390, 3311760, 5114740, 1684440, 3018260, 5342380, 1837390, 3311760, 5114740, 1675650, 3023150, 5342380, 1111650, 2011900, 5929600, 1418750, 2554250, 5650520, 1414460, 2555740, 5650920, 1418750, 2554250, 5650520, 1684440, 3018260, 5342380, 1675650, 3023150, 5342380, 1418750, 2554250, 5650520, 1675650, 3023150, 5342380, 1414460, 2555740, 5650920, 1824510, 3388480, 5069200, 1837390, 3311760, 5114740, 1892300, 3377550, 5051730, 419200, 1902940, 6052830, 484766, 1930380, 6039330, 487384, 2008330, 6013810, 777633, 3367870, 5342380, 789155, 3365190, 5342380, 842097, 3616150, 5168650, 419200, 1902940, 6052830, 487384, 2008330, 6013810, 645218, 2704150, 5721130, 419200, 1902940, 6052830, 645218, 2704150, 5721130, 611251, 2705580, 5724160, 611251, 2705580, 5724160, 645218, 2704150, 5721130, 789155, 3365190, 5342380, 611251, 2705580, 5724160, 789155, 3365190, 5342380, 777633, 3367870, 5342380, 842097, 3616150, 5168650, 789155, 3365190, 5342380, 799477, 3362750, 5342380, 487384, 2008330, 6013810, 519904, 1980210, 6020370, 675337, 2702520, 5718440, 487384, 2008330, 6013810, 675337, 2702520, 5718440, 645218, 2704150, 5721130, 645218, 2704150, 5721130, 675337, 2702520, 5718440, 799477, 3362750, 5342380, 645218, 2704150, 5721130, 799477, 3362750, 5342380, 789155, 3365190, 5342380, 842097, 3616150, 5168650, 799477, 3362750, 5342380, 806577, 3361060, 5342380, 519904, 1980210, 6020370, 624464, 2339020, 5881030, 695890, 2701230, 5716600, 519904, 1980210, 6020370, 695890, 2701230, 5716600, 675337, 2702520, 5718440, 675337, 2702520, 5718440, 695890, 2701230, 5716600, 806577, 3361060, 5342380, 675337, 2702520, 5718440, 806577, 3361060, 5342380, 799477, 3362750, 5342380, 519904, 1980210, 6020370, 483104, 1823060, 6072490, 624464, 2339020, 5881030, 483104, 1823060, 6072490, 596094, 2214720, 5931540, 624464, 2339020, 5881030, 483104, 1823060, 6072490, 511956, 1896180, 6047850, 596094, 2214720, 5931540, 596094, 2214720, 5931540, 511956, 1896180, 6047850, 570536, 2043400, 5994780, 511956, 1896180, 6047850, 591692, 1947620, 6024340, 570536, 2043400, 5994780, 570536, 2043400, 5994780, 628681, 2136340, 5956700, 635862, 2194710, 5934830, 596094, 2214720, 5931540, 570536, 2043400, 5994780, 635862, 2194710, 5934830, 1052440, 3292360, 5342380, 1136670, 3545460, 5161280, 1065660, 3599580, 5139070, 1052440, 3292360, 5342380, 1065660, 3599580, 5139070, 997935, 3309290, 5342380, 840783, 2687630, 5703610, 780303, 2463260, 5811750, 852921, 2686130, 5702520, 852921, 2686130, 5702520, 1052440, 3292360, 5342380, 997935, 3309290, 5342380, 852921, 2686130, 5702520, 997935, 3309290, 5342380, 840783, 2687630, 5703610, 1065660, 3599580, 5139070, 991499, 3311220, 5342380, 997935, 3309290, 5342380, 752321, 2433480, 5827860, 780303, 2463260, 5811750, 840783, 2687630, 5703610, 752321, 2433480, 5827860, 840783, 2687630, 5703610, 824072, 2689590, 5705110, 824072, 2689590, 5705110, 840783, 2687630, 5703610, 997935, 3309290, 5342380, 824072, 2689590, 5705110, 997935, 3309290, 5342380, 991499, 3311220, 5342380, 975144, 3316080, 5342380, 991499, 3311220, 5342380, 1065660, 3599580, 5139070, 698175, 2422210, 5839200, 752321, 2433480, 5827860, 824072, 2689590, 5705110, 698175, 2422210, 5839200, 824072, 2689590, 5705110, 781180, 2694160, 5708960, 781180, 2694160, 5708960, 824072, 2689590, 5705110, 991499, 3311220, 5342380, 781180, 2694160, 5708960, 991499, 3311220, 5342380, 975144, 3316080, 5342380, 975144, 3316080, 5342380, 1065660, 3599580, 5139070, 1022300, 3657730, 5106930, 975144, 3316080, 5342380, 1022300, 3657730, 5106930, 937979, 3326780, 5342380, 771850, 2695060, 5709800, 698175, 2422210, 5839200, 781180, 2694160, 5708960, 781180, 2694160, 5708960, 975144, 3316080, 5342380, 937979, 3326780, 5342380, 781180, 2694160, 5708960, 937979, 3326780, 5342380, 771850, 2695060, 5709800, 1022300, 3657730, 5106930, 1065660, 3599580, 5139070, 1084840, 3644990, 5103160, 1052440, 3292360, 5342380, 1068390, 3287220, 5342380, 1136670, 3545460, 5161280, 780303, 2463260, 5811750, 824459, 2432960, 5818370, 897728, 2680150, 5698480, 780303, 2463260, 5811750, 897728, 2680150, 5698480, 852921, 2686130, 5702520, 852921, 2686130, 5702520, 897728, 2680150, 5698480, 1068390, 3287220, 5342380, 852921, 2686130, 5702520, 1068390, 3287220, 5342380, 1052440, 3292360, 5342380, 1113570, 3272190, 5342380, 1208180, 3544970, 5145450, 1136670, 3545460, 5161280, 1113570, 3272190, 5342380, 1136670, 3545460, 5161280, 1068390, 3287220, 5342380, 897728, 2680150, 5698480, 824459, 2432960, 5818370, 908783, 2678560, 5697480, 908783, 2678560, 5697480, 1113570, 3272190, 5342380, 1068390, 3287220, 5342380, 908783, 2678560, 5697480, 1068390, 3287220, 5342380, 897728, 2680150, 5698480, 1128540, 3267060, 5342380, 1196790, 3449380, 5212200, 1208180, 3544970, 5145450, 1128540, 3267060, 5342380, 1208180, 3544970, 5145450, 1113570, 3272190, 5342380, 824459, 2432960, 5818370, 912494, 2678010, 5697150, 908783, 2678560, 5697480, 912494, 2678010, 5697150, 1128540, 3267060, 5342380, 1113570, 3272190, 5342380, 912494, 2678010, 5697150, 1113570, 3272190, 5342380, 908783, 2678560, 5697480, 1128540, 3267060, 5342380, 1139200, 3263350, 5342380, 1196790, 3449380, 5212200, 824459, 2432960, 5818370, 640132, 1753030, 6078550, 950213, 2672180, 5693740, 824459, 2432960, 5818370, 950213, 2672180, 5693740, 912494, 2678010, 5697150, 912494, 2678010, 5697150, 950213, 2672180, 5693740, 1139200, 3263350, 5342380, 912494, 2678010, 5697150, 1139200, 3263350, 5342380, 1128540, 3267060, 5342380, 635399, 1938060, 6022980, 640132, 1753030, 6078550, 824459, 2432960, 5818370, 686222, 2185020, 5932810, 635399, 1938060, 6022980, 824459, 2432960, 5818370, 698762, 2320070, 5880190, 686222, 2185020, 5932810, 824459, 2432960, 5818370, 686222, 2185020, 5932810, 624467, 1976960, 6011550, 635399, 1938060, 6022980, 635138, 2050770, 5985820, 624467, 1976960, 6011550, 686222, 2185020, 5932810, 1022300, 3657730, 5106930, 933525, 3328030, 5342380, 937979, 3326780, 5342380, 673097, 2376540, 5860730, 698175, 2422210, 5839200, 771850, 2695060, 5709800, 673097, 2376540, 5860730, 771850, 2695060, 5709800, 761201, 2696060, 5710750, 761201, 2696060, 5710750, 771850, 2695060, 5709800, 937979, 3326780, 5342380, 761201, 2696060, 5710750, 937979, 3326780, 5342380, 933525, 3328030, 5342380, 920233, 3331730, 5342380, 933525, 3328030, 5342380, 1022300, 3657730, 5106930, 624464, 2339020, 5881030, 673097, 2376540, 5860730, 761201, 2696060, 5710750, 624464, 2339020, 5881030, 761201, 2696060, 5710750, 729239, 2698790, 5713610, 729239, 2698790, 5713610, 761201, 2696060, 5710750, 933525, 3328030, 5342380, 729239, 2698790, 5713610, 933525, 3328030, 5342380, 920233, 3331730, 5342380, 920233, 3331730, 5342380, 1022300, 3657730, 5106930, 842097, 3616150, 5168650, 920233, 3331730, 5342380, 842097, 3616150, 5168650, 806577, 3361060, 5342380, 695890, 2701230, 5716600, 624464, 2339020, 5881030, 729239, 2698790, 5713610, 729239, 2698790, 5713610, 920233, 3331730, 5342380, 806577, 3361060, 5342380, 729239, 2698790, 5713610, 806577, 3361060, 5342380, 695890, 2701230, 5716600, 353158, 3438390, 5342380, 425959, 4009040, 4925780, 397100, 4061900, 4884980, 353158, 3438390, 5342380, 397100, 4061900, 4884980, 332058, 3440490, 5342380, 168066, 1794640, 6097630, 265413, 2695650, 5755040, 256378, 2694780, 5755850, 168066, 1794640, 6097630, 256378, 2694780, 5755850, 167953, 1794650, 6097630, 265413, 2695650, 5755040, 353158, 3438390, 5342380, 332058, 3440490, 5342380, 265413, 2695650, 5755040, 332058, 3440490, 5342380, 256378, 2694780, 5755850, 166206, 1776570, 6102930, 168066, 1794640, 6097630, 167953, 1794650, 6097630, 377489, 3435810, 5342380, 462776, 3989290, 4938390, 425959, 4009040, 4925780, 377489, 3435810, 5342380, 425959, 4009040, 4925780, 353158, 3438390, 5342380, 168195, 1794620, 6097630, 275899, 2696610, 5754100, 265413, 2695650, 5755040, 168195, 1794620, 6097630, 265413, 2695650, 5755040, 168066, 1794640, 6097630, 275899, 2696610, 5754100, 377489, 3435810, 5342380, 353158, 3438390, 5342380, 275899, 2696610, 5754100, 353158, 3438390, 5342380, 265413, 2695650, 5755040, 166206, 1776570, 6102930, 168195, 1794620, 6097630, 168066, 1794640, 6097630, 377489, 3435810, 5342380, 416778, 3431260, 5342380, 462776, 3989290, 4938390, 168195, 1794620, 6097630, 242737, 1786070, 6097630, 346103, 2701980, 5747820, 168195, 1794620, 6097630, 346103, 2701980, 5747820, 275899, 2696610, 5754100, 275899, 2696610, 5754100, 346103, 2701980, 5747820, 416778, 3431260, 5342380, 275899, 2696610, 5754100, 416778, 3431260, 5342380, 377489, 3435810, 5342380, 166206, 1776570, 6102930, 239981, 1763350, 6104300, 242737, 1786070, 6097630, 166206, 1776570, 6102930, 242737, 1786070, 6097630, 168195, 1794620, 6097630, 479185, 3423100, 5342380, 565784, 3998410, 4920370, 462776, 3989290, 4938390, 479185, 3423100, 5342380, 462776, 3989290, 4938390, 416778, 3431260, 5342380, 243154, 1786010, 6097630, 373720, 2703590, 5745360, 346103, 2701980, 5747820, 243154, 1786010, 6097630, 346103, 2701980, 5747820, 242737, 1786070, 6097630, 373720, 2703590, 5745360, 479185, 3423100, 5342380, 416778, 3431260, 5342380, 373720, 2703590, 5745360, 416778, 3431260, 5342380, 346103, 2701980, 5747820, 242737, 1786070, 6097630, 239981, 1763350, 6104300, 243154, 1786010, 6097630, 479185, 3423100, 5342380, 492492, 3421220, 5342380, 565784, 3998410, 4920370, 245445, 1785700, 6097630, 296130, 1981450, 6035010, 396971, 2704710, 5743280, 245445, 1785700, 6097630, 396971, 2704710, 5743280, 373720, 2703590, 5745360, 245445, 1785700, 6097630, 373720, 2703590, 5745360, 243154, 1786010, 6097630, 373720, 2703590, 5745360, 396971, 2704710, 5743280, 492492, 3421220, 5342380, 373720, 2703590, 5745360, 492492, 3421220, 5342380, 479185, 3423100, 5342380, 239981, 1763350, 6104300, 245445, 1785700, 6097630, 243154, 1786010, 6097630, 550381, 3412380, 5342380, 653574, 3934450, 4960620, 565784, 3998410, 4920370, 550381, 3412380, 5342380, 565784, 3998410, 4920370, 492492, 3421220, 5342380, 396971, 2704710, 5743280, 296130, 1981450, 6035010, 420048, 2705630, 5741220, 420048, 2705630, 5741220, 550381, 3412380, 5342380, 492492, 3421220, 5342380, 420048, 2705630, 5741220, 492492, 3421220, 5342380, 396971, 2704710, 5743280, 571382, 3408930, 5342380, 697979, 3972870, 4924060, 653574, 3934450, 4960620, 571382, 3408930, 5342380, 653574, 3934450, 4960620, 550381, 3412380, 5342380, 296130, 1981450, 6035010, 428516, 2705910, 5740470, 420048, 2705630, 5741220, 428516, 2705910, 5740470, 571382, 3408930, 5342380, 550381, 3412380, 5342380, 428516, 2705910, 5740470, 550381, 3412380, 5342380, 420048, 2705630, 5741220, 777633, 3367870, 5342380, 842097, 3616150, 5168650, 805224, 3724590, 5097500, 777633, 3367870, 5342380, 805224, 3724590, 5097500, 733099, 3377840, 5342380, 591485, 2706210, 5725930, 419200, 1902940, 6052830, 611251, 2705580, 5724160, 611251, 2705580, 5724160, 777633, 3367870, 5342380, 733099, 3377840, 5342380, 611251, 2705580, 5724160, 733099, 3377840, 5342380, 591485, 2706210, 5725930, 708047, 3383180, 5342380, 733099, 3377840, 5342380, 805224, 3724590, 5097500, 349004, 1911340, 6054630, 419200, 1902940, 6052830, 591485, 2706210, 5725930, 349004, 1911340, 6054630, 591485, 2706210, 5725930, 532064, 2707250, 5731230, 532064, 2707250, 5731230, 591485, 2706210, 5725930, 733099, 3377840, 5342380, 532064, 2707250, 5731230, 733099, 3377840, 5342380, 708047, 3383180, 5342380, 708047, 3383180, 5342380, 805224, 3724590, 5097500, 697979, 3972870, 4924060, 708047, 3383180, 5342380, 697979, 3972870, 4924060, 604904, 3403140, 5342380, 487520, 2707160, 5735200, 349004, 1911340, 6054630, 532064, 2707250, 5731230, 532064, 2707250, 5731230, 708047, 3383180, 5342380, 604904, 3403140, 5342380, 532064, 2707250, 5731230, 604904, 3403140, 5342380, 487520, 2707160, 5735200, 571382, 3408930, 5342380, 604904, 3403140, 5342380, 697979, 3972870, 4924060, 296130, 1981450, 6035010, 349004, 1911340, 6054630, 487520, 2707160, 5735200, 296130, 1981450, 6035010, 487520, 2707160, 5735200, 428516, 2705910, 5740470, 428516, 2705910, 5740470, 487520, 2707160, 5735200, 604904, 3403140, 5342380, 428516, 2705910, 5740470, 604904, 3403140, 5342380, 571382, 3408930, 5342380, 125127, 3454220, 5342380, 163518, 4164220, 4812180, 86563.5, 4151900, 4824730, 125127, 3454220, 5342380, 86563.5, 4151900, 4824730, 81029.6, 3455530, 5342380, 54013.9, 1801680, 6097630, 88657.6, 2672980, 5770920, 69762.6, 2669820, 5772630, 54013.9, 1801680, 6097630, 69762.6, 2669820, 5772630, 52073.7, 1801740, 6097630, 88657.6, 2672980, 5770920, 125127, 3454220, 5342380, 81029.6, 3455530, 5342380, 88657.6, 2672980, 5770920, 81029.6, 3455530, 5342380, 69762.6, 2669820, 5772630, 52073.7, 1801740, 6097630, 48216.5, 1639730, 6142900, 54013.9, 1801680, 6097630, 141307, 3453590, 5342380, 192272, 4169930, 4806210, 163518, 4164220, 4812180, 141307, 3453590, 5342380, 163518, 4164220, 4812180, 125127, 3454220, 5342380, 54727.6, 1801660, 6097630, 95638.9, 2674110, 5770290, 88657.6, 2672980, 5770920, 54727.6, 1801660, 6097630, 88657.6, 2672980, 5770920, 54013.9, 1801680, 6097630, 95638.9, 2674110, 5770290, 141307, 3453590, 5342380, 125127, 3454220, 5342380, 95638.9, 2674110, 5770290, 125127, 3454220, 5342380, 88657.6, 2672980, 5770920, 48216.5, 1639730, 6142900, 54727.6, 1801660, 6097630, 54013.9, 1801680, 6097630, 141307, 3453590, 5342380, 162829, 3452640, 5342380, 192272, 4169930, 4806210, 54727.6, 1801660, 6097630, 88745.4, 1800300, 6097630, 129129, 2679250, 5767270, 54727.6, 1801660, 6097630, 129129, 2679250, 5767270, 95638.9, 2674110, 5770290, 95638.9, 2674110, 5770290, 129129, 2679250, 5767270, 162829, 3452640, 5342380, 95638.9, 2674110, 5770290, 162829, 3452640, 5342380, 141307, 3453590, 5342380, 48216.5, 1639730, 6142900, 81231.2, 1641400, 6142120, 88745.4, 1800300, 6097630, 48216.5, 1639730, 6142900, 88745.4, 1800300, 6097630, 54727.6, 1801660, 6097630, 185193, 3451520, 5342380, 228018, 4116300, 4850380, 192272, 4169930, 4806210, 185193, 3451520, 5342380, 192272, 4169930, 4806210, 162829, 3452640, 5342380, 89713.1, 1800250, 6097630, 138878, 2680670, 5766390, 129129, 2679250, 5767270, 89713.1, 1800250, 6097630, 129129, 2679250, 5767270, 88745.4, 1800300, 6097630, 138878, 2680670, 5766390, 185193, 3451520, 5342380, 162829, 3452640, 5342380, 138878, 2680670, 5766390, 162829, 3452640, 5342380, 129129, 2679250, 5767270, 88745.4, 1800300, 6097630, 81231.2, 1641400, 6142120, 89713.1, 1800250, 6097630, 185193, 3451520, 5342380, 191307, 3451180, 5342380, 228018, 4116300, 4850380, 89713.1, 1800250, 6097630, 99913.8, 1799720, 6097630, 148781, 2682060, 5765500, 89713.1, 1800250, 6097630, 148781, 2682060, 5765500, 138878, 2680670, 5766390, 138878, 2680670, 5766390, 148781, 2682060, 5765500, 191307, 3451180, 5342380, 138878, 2680670, 5766390, 191307, 3451180, 5342380, 185193, 3451520, 5342380, 81231.2, 1641400, 6142120, 98131.8, 1767560, 6106990, 99913.8, 1799720, 6097630, 81231.2, 1641400, 6142120, 99913.8, 1799720, 6097630, 89713.1, 1800250, 6097630, 244614, 3447810, 5342380, 321377, 4121460, 4840760, 228018, 4116300, 4850380, 244614, 3447810, 5342380, 228018, 4116300, 4850380, 191307, 3451180, 5342380, 100417, 1799690, 6097630, 170971, 2685060, 5763510, 148781, 2682060, 5765500, 100417, 1799690, 6097630, 148781, 2682060, 5765500, 99913.8, 1799720, 6097630, 170971, 2685060, 5763510, 244614, 3447810, 5342380, 191307, 3451180, 5342380, 170971, 2685060, 5763510, 191307, 3451180, 5342380, 148781, 2682060, 5765500, 99913.8, 1799720, 6097630, 98131.8, 1767560, 6106990, 100417, 1799690, 6097630, 263475, 3446420, 5342380, 348915, 4082980, 4871170, 321377, 4121460, 4840760, 263475, 3446420, 5342380, 321377, 4121460, 4840760, 244614, 3447810, 5342380, 100592, 1799680, 6097630, 178894, 2686070, 5762800, 170971, 2685060, 5763510, 100592, 1799680, 6097630, 170971, 2685060, 5763510, 100417, 1799690, 6097630, 178894, 2686070, 5762800, 263475, 3446420, 5342380, 244614, 3447810, 5342380, 178894, 2686070, 5762800, 244614, 3447810, 5342380, 170971, 2685060, 5763510, 98131.8, 1767560, 6106990, 100592, 1799680, 6097630, 100417, 1799690, 6097630, 332058, 3440490, 5342380, 397100, 4061900, 4884980, 348915, 4082980, 4871170, 332058, 3440490, 5342380, 348915, 4082980, 4871170, 302664, 3443200, 5342380, 167953, 1794650, 6097630, 256378, 2694780, 5755850, 243866, 2693540, 5756960, 167953, 1794650, 6097630, 243866, 2693540, 5756960, 167794, 1794660, 6097630, 256378, 2694780, 5755850, 332058, 3440490, 5342380, 302664, 3443200, 5342380, 256378, 2694780, 5755850, 302664, 3443200, 5342380, 243866, 2693540, 5756960, 167794, 1794660, 6097630, 166206, 1776570, 6102930, 167953, 1794650, 6097630, 263475, 3446420, 5342380, 302664, 3443200, 5342380, 348915, 4082980, 4871170, 100592, 1799680, 6097630, 167794, 1794660, 6097630, 243866, 2693540, 5756960, 100592, 1799680, 6097630, 243866, 2693540, 5756960, 178894, 2686080, 5762790, 178894, 2686070, 5762800, 243866, 2693540, 5756960, 302664, 3443200, 5342380, 178894, 2686070, 5762800, 302664, 3443200, 5342380, 263475, 3446420, 5342380, 98131.8, 1767560, 6106990, 166206, 1776570, 6102930, 167794, 1794660, 6097630, 98131.8, 1767560, 6106990, 167794, 1794660, 6097630, 100592, 1799680, 6097630, 251680, 1784830, 6097630, 297118, 1777830, 6097630, 312415, 1889340, 6063470, 239981, 1763350, 6104300, 296943, 1776580, 6098e3, 297118, 1777830, 6097630, 239981, 1763350, 6104300, 297118, 1777830, 6097630, 251680, 1784830, 6097630, 251680, 1784830, 6097630, 312415, 1889340, 6063470, 296130, 1981450, 6035010, 251680, 1784830, 6097630, 296130, 1981450, 6035010, 245445, 1785700, 6097630, 239981, 1763350, 6104300, 251680, 1784830, 6097630, 245445, 1785700, 6097630, -515166, 4097510, 4844320, -521684, 4095970, 4844930, -412843, 3431740, 5342380, -515166, 4097510, 4844320, -412843, 3431740, 5342380, -350908, 3438620, 5342380, -515166, 4097510, 4844320, -350908, 3438620, 5342380, -416319, 4088640, 4861180, -522049, 4098040, 4843150, -521684, 4095970, 4844930, -515166, 4097510, 4844320, -183893, 1793080, 6097630, -264954, 2589450, 5803290, -289372, 2581680, 5805570, -183893, 1793080, 6097630, -289372, 2581680, 5805570, -188183, 1792640, 6097630, -264954, 2589450, 5803290, -350908, 3438620, 5342380, -412843, 3431740, 5342380, -264954, 2589450, 5803290, -412843, 3431740, 5342380, -289372, 2581680, 5805570, -188183, 1792640, 6097630, -156489, 1524720, 6170480, -183893, 1793080, 6097630, -426759, 3430030, 5342380, -412843, 3431740, 5342380, -521684, 4095970, 4844930, -426759, 3430030, 5342380, -521684, 4095970, 4844930, -521741, 4095960, 4844930, -522049, 4098040, 4843150, -521741, 4095960, 4844930, -521684, 4095970, 4844930, -211197, 1790070, 6097630, -188183, 1792640, 6097630, -289372, 2581680, 5805570, -211197, 1790070, 6097630, -289372, 2581680, 5805570, -311386, 2574430, 5807640, -311386, 2574430, 5807640, -289372, 2581680, 5805570, -412843, 3431740, 5342380, -311386, 2574430, 5807640, -412843, 3431740, 5342380, -426759, 3430030, 5342380, -181074, 1546480, 6164420, -156489, 1524720, 6170480, -188183, 1792640, 6097630, -181074, 1546480, 6164420, -188183, 1792640, 6097630, -211197, 1790070, 6097630, -464878, 3425080, 5342380, -426759, 3430030, 5342380, -521741, 4095960, 4844930, -464878, 3425080, 5342380, -521741, 4095960, 4844930, -521889, 4095930, 4844940, -521889, 4095930, 4844940, -521741, 4095960, 4844930, -522049, 4098040, 4843150, -274126, 1781520, 6097630, -211197, 1790070, 6097630, -311386, 2574430, 5807640, -274126, 1781520, 6097630, -311386, 2574430, 5807640, -371834, 2553380, 5813330, -371834, 2553380, 5813330, -311386, 2574430, 5807640, -426759, 3430030, 5342380, -371834, 2553380, 5813330, -426759, 3430030, 5342380, -464878, 3425080, 5342380, -232561, 1481300, 6178590, -181074, 1546480, 6164420, -211197, 1790070, 6097630, -232561, 1481300, 6178590, -211197, 1790070, 6097630, -274126, 1781520, 6097630, -464878, 3425080, 5342380, -521889, 4095930, 4844940, -522587, 4095760, 4845010, -464878, 3425080, 5342380, -522587, 4095760, 4845010, -547510, 3983630, 4934320, -464878, 3425080, 5342380, -547510, 3983630, 4934320, -486766, 3422030, 5342380, -522587, 4095760, 4845010, -521889, 4095930, 4844940, -522049, 4098040, 4843150, -274129, 1781520, 6097630, -371834, 2553380, 5813330, -380316, 2550300, 5814130, -274129, 1781520, 6097630, -380316, 2550300, 5814130, -275796, 1781260, 6097630, -371834, 2553380, 5813330, -464878, 3425080, 5342380, -486766, 3422030, 5342380, -371834, 2553380, 5813330, -486766, 3422030, 5342380, -380316, 2550300, 5814130, -232561, 1481300, 6178590, -274126, 1781520, 6097630, -275796, 1781260, 6097630, -547510, 3983630, 4934320, -522587, 4095760, 4845010, -524582, 4095280, 4845190, -547510, 3983630, 4934320, -524582, 4095280, 4845190, -582987, 4029810, 4892860, -524582, 4095280, 4845190, -522587, 4095760, 4845010, -522049, 4098040, 4843150, -387092, 1344010, 6202030, -337940, 1320780, 6209840, -361849, 1378800, 6195960, -873783, 3344210, 5342380, -868529, 3345580, 5342380, -1027790, 3940120, 4892690, -873783, 3344210, 5342380, -1027790, 3940120, 4892690, -1027930, 3940070, 4892700, -1027930, 3940070, 4892700, -1027790, 3940120, 4892690, -1031060, 3952080, 4882420, -457213, 1743540, 6097630, -448017, 1745920, 6097630, -629943, 2443020, 5838300, -457213, 1743540, 6097630, -629943, 2443020, 5838300, -638559, 2438720, 5839150, -638559, 2438720, 5839150, -629943, 2443020, 5838300, -868529, 3345580, 5342380, -638559, 2438720, 5839150, -868529, 3345580, 5342380, -873783, 3344210, 5342380, -361849, 1378800, 6195960, -337940, 1320780, 6209840, -448017, 1745920, 6097630, -361849, 1378800, 6195960, -448017, 1745920, 6097630, -457213, 1743540, 6097630, -827532, 3355960, 5342380, -964950, 3963490, 4886640, -1027790, 3940120, 4892690, -827532, 3355960, 5342380, -1027790, 3940120, 4892690, -868529, 3345580, 5342380, -964950, 3963490, 4886640, -969483, 3983930, 4869220, -1031060, 3952080, 4882420, -964950, 3963490, 4886640, -1031060, 3952080, 4882420, -1027790, 3940120, 4892690, -443749, 1747010, 6097630, -614790, 2450480, 5836800, -629943, 2443020, 5838300, -443749, 1747010, 6097630, -629943, 2443020, 5838300, -448017, 1745920, 6097630, -614790, 2450480, 5836800, -827532, 3355960, 5342380, -868529, 3345580, 5342380, -614790, 2450480, 5836800, -868529, 3345580, 5342380, -629943, 2443020, 5838300, -448017, 1745920, 6097630, -337940, 1320780, 6209840, -443749, 1747010, 6097630, -921877, 3978830, 4882520, -964950, 3963490, 4886640, -827532, 3355960, 5342380, -921877, 3978830, 4882520, -827532, 3355960, 5342380, -764425, 3370890, 5342380, -921877, 3978830, 4882520, -764425, 3370890, 5342380, -862747, 3971570, 4899100, -964950, 3963490, 4886640, -921877, 3978830, 4882520, -969483, 3983930, 4869220, -437252, 1748650, 6097630, -591132, 2461860, 5834470, -614790, 2450480, 5836800, -437252, 1748650, 6097630, -614790, 2450480, 5836800, -443749, 1747010, 6097630, -591132, 2461860, 5834470, -764425, 3370890, 5342380, -827532, 3355960, 5342380, -591132, 2461860, 5834470, -827532, 3355960, 5342380, -614790, 2450480, 5836800, -337940, 1320780, 6209840, -437252, 1748650, 6097630, -443749, 1747010, 6097630, -753125, 3373440, 5342380, -835985, 3911170, 4951690, -862747, 3971570, 4899100, -753125, 3373440, 5342380, -862747, 3971570, 4899100, -764425, 3370890, 5342380, -436061, 1748950, 6097630, -586886, 2463870, 5834050, -591132, 2461860, 5834470, -436061, 1748950, 6097630, -591132, 2461860, 5834470, -437252, 1748650, 6097630, -586886, 2463870, 5834050, -753125, 3373440, 5342380, -764425, 3370890, 5342380, -586886, 2463870, 5834050, -764425, 3370890, 5342380, -591132, 2461860, 5834470, -337940, 1320780, 6209840, -436061, 1748950, 6097630, -437252, 1748650, 6097630, -753125, 3373440, 5342380, -721475, 3380350, 5342380, -835985, 3911170, 4951690, -436061, 1748950, 6097630, -374789, 1763090, 6097630, -530220, 2489790, 5828510, -436061, 1748950, 6097630, -530220, 2489790, 5828510, -586886, 2463870, 5834050, -586886, 2463870, 5834050, -530220, 2489790, 5828510, -721475, 3380350, 5342380, -586886, 2463870, 5834050, -721475, 3380350, 5342380, -753125, 3373440, 5342380, -337940, 1320780, 6209840, -292536, 1377340, 6199920, -374789, 1763090, 6097630, -337940, 1320780, 6209840, -374789, 1763090, 6097630, -436061, 1748950, 6097630, -835985, 3911170, 4951690, -721475, 3380350, 5342380, -708195, 3383150, 5342380, -374789, 1763090, 6097630, -349025, 1768370, 6097630, -506475, 2500120, 5826210, -374789, 1763090, 6097630, -506475, 2500120, 5826210, -530220, 2489790, 5828510, -530220, 2489790, 5828510, -506475, 2500120, 5826210, -708195, 3383150, 5342380, -530220, 2489790, 5828510, -708195, 3383150, 5342380, -721475, 3380350, 5342380, -292536, 1377340, 6199920, -278379, 1427480, 6189290, -349025, 1768370, 6097630, -292536, 1377340, 6199920, -349025, 1768370, 6097630, -374789, 1763090, 6097630, -654967, 3393860, 5342380, -751316, 3905570, 4969530, -835985, 3911170, 4951690, -654967, 3393860, 5342380, -835985, 3911170, 4951690, -708195, 3383150, 5342380, -344456, 1769270, 6097630, -486488, 2508610, 5824280, -506475, 2500120, 5826210, -344456, 1769270, 6097630, -506475, 2500120, 5826210, -349025, 1768370, 6097630, -486488, 2508610, 5824280, -654967, 3393860, 5342380, -708195, 3383150, 5342380, -486488, 2508610, 5824280, -708195, 3383150, 5342380, -506475, 2500120, 5826210, -349025, 1768370, 6097630, -278379, 1427480, 6189290, -344456, 1769270, 6097630, -654967, 3393860, 5342380, -651176, 3394590, 5342380, -751316, 3905570, 4969530, -344456, 1769270, 6097630, -336949, 1770710, 6097630, -479635, 2511480, 5823620, -344456, 1769270, 6097630, -479635, 2511480, 5823620, -486488, 2508610, 5824280, -486488, 2508610, 5824280, -479635, 2511480, 5823620, -651176, 3394590, 5342380, -486488, 2508610, 5824280, -651176, 3394590, 5342380, -654967, 3393860, 5342380, -278379, 1427480, 6189290, -280276, 1474850, 6178160, -336949, 1770710, 6097630, -278379, 1427480, 6189290, -336949, 1770710, 6097630, -344456, 1769270, 6097630, -609656, 3402290, 5342380, -687609, 3906920, 4977630, -751316, 3905570, 4969530, -609656, 3402290, 5342380, -751316, 3905570, 4969530, -651176, 3394590, 5342380, -333796, 1771310, 6097630, -464155, 2517840, 5822130, -479635, 2511480, 5823620, -333796, 1771310, 6097630, -479635, 2511480, 5823620, -336949, 1770710, 6097630, -464155, 2517840, 5822130, -609656, 3402290, 5342380, -651176, 3394590, 5342380, -464155, 2517840, 5822130, -651176, 3394590, 5342380, -479635, 2511480, 5823620, -336949, 1770710, 6097630, -280276, 1474850, 6178160, -333796, 1771310, 6097630, -609656, 3402290, 5342380, -584818, 3406650, 5342380, -687609, 3906920, 4977630, -333796, 1771310, 6097630, -283292, 1780090, 6097630, -417842, 2536200, 5817700, -333796, 1771310, 6097630, -417842, 2536200, 5817700, -464155, 2517840, 5822130, -464155, 2517840, 5822130, -417842, 2536200, 5817700, -584818, 3406650, 5342380, -464155, 2517840, 5822130, -584818, 3406650, 5342380, -609656, 3402290, 5342380, -280276, 1474850, 6178160, -232561, 1481300, 6178590, -283292, 1780090, 6097630, -280276, 1474850, 6178160, -283292, 1780090, 6097630, -333796, 1771310, 6097630, -533240, 3415100, 5342380, -605527, 3883880, 5006050, -687609, 3906920, 4977630, -533240, 3415100, 5342380, -687609, 3906920, 4977630, -584818, 3406650, 5342380, -279345, 1780710, 6097630, -398195, 2543660, 5815830, -417842, 2536200, 5817700, -279345, 1780710, 6097630, -417842, 2536200, 5817700, -283292, 1780090, 6097630, -398195, 2543660, 5815830, -533240, 3415100, 5342380, -584818, 3406650, 5342380, -398195, 2543660, 5815830, -584818, 3406650, 5342380, -417842, 2536200, 5817700, -283292, 1780090, 6097630, -232561, 1481300, 6178590, -279345, 1780710, 6097630, -486766, 3422030, 5342380, -547510, 3983630, 4934320, -605527, 3883880, 5006050, -486766, 3422030, 5342380, -605527, 3883880, 5006050, -533240, 3415100, 5342380, -275796, 1781260, 6097630, -380316, 2550300, 5814130, -398195, 2543660, 5815830, -275796, 1781260, 6097630, -398195, 2543660, 5815830, -279345, 1780710, 6097630, -380316, 2550300, 5814130, -486766, 3422030, 5342380, -533240, 3415100, 5342380, -380316, 2550300, 5814130, -533240, 3415100, 5342380, -398195, 2543660, 5815830, -232561, 1481300, 6178590, -275796, 1781260, 6097630, -279345, 1780710, 6097630, -307622, 3442760, 5342380, -344778, 4092220, 4863750, -416319, 4088640, 4861180, -307622, 3442760, 5342380, -416319, 4088640, 4861180, -350908, 3438620, 5342380, -180898, 1793390, 6097630, -247691, 2594780, 5801690, -264954, 2589450, 5803290, -180898, 1793390, 6097630, -264954, 2589450, 5803290, -183893, 1793080, 6097630, -247691, 2594780, 5801690, -307622, 3442760, 5342380, -350908, 3438620, 5342380, -247691, 2594780, 5801690, -350908, 3438620, 5342380, -264954, 2589450, 5803290, -156489, 1524720, 6170480, -180898, 1793390, 6097630, -183893, 1793080, 6097630, -277260, 3445340, 5342380, -294134, 4056130, 4896970, -344778, 4092220, 4863750, -277260, 3445340, 5342380, -344778, 4092220, 4863750, -307622, 3442760, 5342380, -178801, 1793600, 6097630, -235486, 2598460, 5800560, -247690, 2594770, 5801690, -178801, 1793600, 6097630, -247690, 2594770, 5801690, -180901, 1793390, 6097630, -235486, 2598460, 5800560, -277260, 3445340, 5342380, -307622, 3442760, 5342380, -235486, 2598460, 5800560, -307622, 3442760, 5342380, -247691, 2594780, 5801690, -156489, 1524720, 6170480, -178801, 1793600, 6097630, -180898, 1793390, 6097630, -277260, 3445340, 5342380, -235389, 3448460, 5342380, -294134, 4056130, 4896970, -178801, 1793600, 6097630, -104396, 1799460, 6097630, -164785, 2618520, 5794010, -178801, 1793600, 6097630, -164785, 2618520, 5794010, -235486, 2598460, 5800560, -235486, 2598460, 5800560, -164785, 2618520, 5794010, -235389, 3448460, 5342380, -235486, 2598460, 5800560, -235389, 3448460, 5342380, -277260, 3445340, 5342380, -156489, 1524720, 6170480, -87040, 1540330, 6167990, -104396, 1799460, 6097630, -156489, 1524720, 6170480, -104396, 1799460, 6097630, -178801, 1793600, 6097630, -189254, 3451300, 5342380, -220156, 4059540, 4898020, -294134, 4056130, 4896970, -189254, 3451300, 5342380, -294134, 4056130, 4896970, -235389, 3448460, 5342380, -101306, 1799640, 6097630, -145842, 2623520, 5792270, -164785, 2618520, 5794010, -101306, 1799640, 6097630, -164785, 2618520, 5794010, -104396, 1799460, 6097630, -145842, 2623520, 5792270, -189254, 3451300, 5342380, -235389, 3448460, 5342380, -145842, 2623520, 5792270, -235389, 3448460, 5342380, -164785, 2618520, 5794010, -104396, 1799460, 6097630, -87040, 1540330, 6167990, -101306, 1799640, 6097630, -189254, 3451300, 5342380, -183886, 3451590, 5342380, -220156, 4059540, 4898020, -101306, 1799640, 6097630, -91752.5, 1800150, 6097630, -136765, 2625860, 5791440, -101306, 1799640, 6097630, -136765, 2625860, 5791440, -145842, 2623520, 5792270, -145842, 2623520, 5792270, -136765, 2625860, 5791440, -183886, 3451590, 5342380, -145842, 2623520, 5792270, -183886, 3451590, 5342380, -189254, 3451300, 5342380, -87040, 1540330, 6167990, -79570.7, 1570420, 6160540, -91752.5, 1800150, 6097630, -87040, 1540330, 6167990, -91752.5, 1800150, 6097630, -101306, 1799640, 6097630, -145177, 3453430, 5342380, -157497, 4036040, 4919670, -220156, 4059540, 4898020, -145177, 3453430, 5342380, -220156, 4059540, 4898020, -183886, 3451590, 5342380, -89421.1, 1800270, 6097630, -120885, 2629880, 5789980, -136765, 2625860, 5791440, -89421.1, 1800270, 6097630, -136765, 2625860, 5791440, -91752.5, 1800150, 6097630, -120885, 2629880, 5789980, -145177, 3453430, 5342380, -183886, 3451590, 5342380, -120885, 2629880, 5789980, -183886, 3451590, 5342380, -136765, 2625860, 5791440, -91752.5, 1800150, 6097630, -79570.7, 1570420, 6160540, -89421.1, 1800270, 6097630, -79039.9, 3455580, 5342380, -50815.1, 4079210, 4886430, -157497, 4036040, 4919670, -79039.9, 3455580, 5342380, -157497, 4036040, 4919670, -145177, 3453430, 5342380, -85440.1, 1800460, 6097630, -93430.3, 2636570, 5787460, -120885, 2629880, 5789980, -85440.1, 1800460, 6097630, -120885, 2629880, 5789980, -89421.1, 1800270, 6097630, -93430.3, 2636570, 5787460, -79039.9, 3455580, 5342380, -145177, 3453430, 5342380, -93430.3, 2636570, 5787460, -145177, 3453430, 5342380, -120885, 2629880, 5789980, -79570.7, 1570420, 6160540, -85440.1, 1800460, 6097630, -89421.1, 1800270, 6097630, -79039.9, 3455580, 5342380, -35544.4, 3456300, 5342380, -50815.1, 4079210, 4886430, -85440.1, 1800460, 6097630, -9308.81, 1802460, 6097630, -20460.6, 2652790, 5780800, -85440.1, 1800460, 6097630, -20460.6, 2652790, 5780800, -93430.3, 2636570, 5787460, -93430.3, 2636570, 5787460, -20460.6, 2652790, 5780800, -35544.4, 3456300, 5342380, -93430.3, 2636570, 5787460, -35544.4, 3456300, 5342380, -79039.9, 3455580, 5342380, -79570.7, 1570420, 6160540, -7201.03, 1586840, 6156870, -9308.81, 1802460, 6097630, -79570.7, 1570420, 6160540, -9308.81, 1802460, 6097630, -85440.1, 1800460, 6097630, 45895.5, 3456180, 5342380, 86563.5, 4151900, 4824730, -50815.1, 4079210, 4886430, 45895.5, 3456180, 5342380, -50815.1, 4079210, 4886430, -35544.4, 3456300, 5342380, -4677.98, 1802480, 6097630, 14279.3, 2659740, 5777650, -20460.6, 2652790, 5780800, -4677.98, 1802480, 6097630, -20460.6, 2652790, 5780800, -9308.81, 1802460, 6097630, 14279.3, 2659740, 5777650, 45895.5, 3456180, 5342380, -35544.4, 3456300, 5342380, 14279.3, 2659740, 5777650, -35544.4, 3456300, 5342380, -20460.6, 2652790, 5780800, -9308.81, 1802460, 6097630, -7201.03, 1586840, 6156870, -4674.86, 1802480, 6097630, 45895.5, 3456180, 5342380, 81029.6, 3455530, 5342380, 86563.5, 4151900, 4824730, -4674.86, 1802480, 6097630, 52073.7, 1801740, 6097630, 69762.6, 2669820, 5772630, -4674.86, 1802480, 6097630, 69762.6, 2669820, 5772630, 14279.3, 2659740, 5777650, 14279.3, 2659740, 5777650, 69762.6, 2669820, 5772630, 81029.6, 3455530, 5342380, 14279.3, 2659740, 5777650, 81029.6, 3455530, 5342380, 45895.5, 3456180, 5342380, -7201.03, 1586840, 6156870, 48216.5, 1639730, 6142900, 52073.7, 1801740, 6097630, -7201.03, 1586840, 6156870, 52073.7, 1801740, 6097630, -4674.86, 1802480, 6097630, 566891, 1807570, 6069900, 640132, 1753030, 6078550, 635399, 1938060, 6022980, 577818, 1866170, 6051230, 566891, 1807570, 6069900, 635399, 1938060, 6022980, 1281980, 3209950, 5342380, 1364490, 3406150, 5199490, 1297330, 3391730, 5225870, 1281980, 3209950, 5342380, 1297330, 3391730, 5225870, 1239500, 3226590, 5342380, 1035290, 2657080, 5686020, 874237, 2220770, 5894940, 1051210, 2653940, 5684580, 1051210, 2653940, 5684580, 1281980, 3209950, 5342380, 1239500, 3226590, 5342380, 1051210, 2653940, 5684580, 1239500, 3226590, 5342380, 1035290, 2657080, 5686020, 1233950, 3228720, 5342380, 1239500, 3226590, 5342380, 1297330, 3391730, 5225870, 828984, 2180100, 5916470, 874237, 2220770, 5894940, 1035290, 2657080, 5686020, 828984, 2180100, 5916470, 1035290, 2657080, 5686020, 1014160, 2661080, 5687940, 1014160, 2661080, 5687940, 1035290, 2657080, 5686020, 1239500, 3226590, 5342380, 1014160, 2661080, 5687940, 1239500, 3226590, 5342380, 1233950, 3228720, 5342380, 1233950, 3228720, 5342380, 1297330, 3391730, 5225870, 1196790, 3449380, 5212200, 1233950, 3228720, 5342380, 1196790, 3449380, 5212200, 1148010, 3260270, 5342380, 980926, 2667040, 5690960, 828984, 2180100, 5916470, 1014160, 2661080, 5687940, 1014160, 2661080, 5687940, 1233950, 3228720, 5342380, 1148010, 3260270, 5342380, 1014160, 2661080, 5687940, 1148010, 3260270, 5342380, 980926, 2667040, 5690960, 1196790, 3449380, 5212200, 1144310, 3261570, 5342380, 1148010, 3260270, 5342380, 670278, 1764190, 6072110, 828984, 2180100, 5916470, 980926, 2667040, 5690960, 670278, 1764190, 6072110, 980926, 2667040, 5690960, 968084, 2669240, 5692120, 968084, 2669240, 5692120, 980926, 2667040, 5690960, 1148010, 3260270, 5342380, 968084, 2669240, 5692120, 1148010, 3260270, 5342380, 1144310, 3261570, 5342380, 1196790, 3449380, 5212200, 1139200, 3263350, 5342380, 1144310, 3261570, 5342380, 640132, 1753030, 6078550, 670278, 1764190, 6072110, 968084, 2669240, 5692120, 640132, 1753030, 6078550, 968084, 2669240, 5692120, 950213, 2672180, 5693740, 950213, 2672180, 5693740, 968084, 2669240, 5692120, 1144310, 3261570, 5342380, 950213, 2672180, 5693740, 1144310, 3261570, 5342380, 1139200, 3263350, 5342380, 1563830, 3381110, 5159820, 1454120, 3135730, 5342380, 1468590, 3128980, 5342380, 962488, 2053580, 5941310, 997249, 2000520, 5953580, 1258240, 2604360, 5665550, 962488, 2053580, 5941310, 1258240, 2604360, 5665550, 1219060, 2615020, 5669180, 1219060, 2615020, 5669180, 1258240, 2604360, 5665550, 1468590, 3128980, 5342380, 1219060, 2615020, 5669180, 1468590, 3128980, 5342380, 1454120, 3135730, 5342380, 1412120, 3154870, 5342380, 1454120, 3135730, 5342380, 1563830, 3381110, 5159820, 874237, 2220770, 5894940, 962488, 2053580, 5941310, 1219060, 2615020, 5669180, 874237, 2220770, 5894940, 1219060, 2615020, 5669180, 1101790, 2643360, 5679960, 1101790, 2643360, 5679960, 1219060, 2615020, 5669180, 1454120, 3135730, 5342380, 1101790, 2643360, 5679960, 1454120, 3135730, 5342380, 1412120, 3154870, 5342380, 1412120, 3154870, 5342380, 1563830, 3381110, 5159820, 1525730, 3373930, 5175790, 1412120, 3154870, 5342380, 1525730, 3373930, 5175790, 1393170, 3163280, 5342380, 874237, 2220770, 5894940, 1101790, 2643360, 5679960, 1094250, 2644990, 5680650, 1101790, 2643360, 5679960, 1412120, 3154870, 5342380, 1393170, 3163280, 5342380, 1101790, 2643360, 5679960, 1393170, 3163280, 5342380, 1094250, 2644990, 5680650, 1393170, 3163280, 5342380, 1525730, 3373930, 5175790, 1364490, 3406150, 5199490, 1393170, 3163280, 5342380, 1364490, 3406150, 5199490, 1281980, 3209950, 5342380, 874237, 2220770, 5894940, 1094250, 2644990, 5680650, 1051210, 2653940, 5684580, 1094250, 2644990, 5680650, 1393170, 3163280, 5342380, 1281980, 3209950, 5342380, 1094250, 2644990, 5680650, 1281980, 3209950, 5342380, 1051210, 2653940, 5684580, 1111650, 2011900, 5929600, 1083450, 1918900, 5965300, 1118070, 1938900, 5952520, 997249, 2000520, 5953580, 1083450, 1918900, 5965300, 1111650, 2011900, 5929600, 1629580, 3048230, 5342380, 1656810, 3033520, 5342380, 1796170, 3299430, 5137150, 997249, 2000520, 5953580, 1111650, 2011900, 5929600, 1405320, 2558850, 5651790, 997249, 2000520, 5953580, 1405320, 2558850, 5651790, 1336380, 2581270, 5658270, 1336380, 2581270, 5658270, 1405320, 2558850, 5651790, 1656810, 3033520, 5342380, 1336380, 2581270, 5658270, 1656810, 3033520, 5342380, 1629580, 3048230, 5342380, 1629580, 3048230, 5342380, 1796170, 3299430, 5137150, 1563830, 3381110, 5159820, 1629580, 3048230, 5342380, 1563830, 3381110, 5159820, 1468590, 3128980, 5342380, 1258240, 2604360, 5665550, 997249, 2000520, 5953580, 1336380, 2581270, 5658270, 1336380, 2581270, 5658270, 1629580, 3048230, 5342380, 1468590, 3128980, 5342380, 1336380, 2581270, 5658270, 1468590, 3128980, 5342380, 1258240, 2604360, 5665550, 828984, 2180100, 5916470, 725808, 1846360, 6041420, 847056, 2113980, 5937730, 725808, 1846360, 6041420, 839894, 2093020, 5946110, 847056, 2113980, 5937730, 725808, 1846360, 6041420, 848639, 2024750, 5968320, 839894, 2093020, 5946110, 839894, 2093020, 5946110, 848639, 2024750, 5968320, 879713, 2065460, 5949960, 725808, 1846360, 6041420, 822793, 1910020, 6009330, 835119, 1941450, 5997630, 725808, 1846360, 6041420, 835119, 1941450, 5997630, 848639, 2024750, 5968320, 2142930, 2712030, 5342380, 2505790, 3068740, 4981690, 2419820, 3134120, 4983470, 2142930, 2712030, 5342380, 2419820, 3134120, 4983470, 2093690, 2750220, 5342380, 1413390, 1909100, 5899470, 1826240, 2377540, 5610760, 1798690, 2391900, 5613540, 1826240, 2377540, 5610760, 2142930, 2712030, 5342380, 2093690, 2750220, 5342380, 1826240, 2377540, 5610760, 2093690, 2750220, 5342380, 1798690, 2391900, 5613540, 2142930, 2712030, 5342380, 2194760, 2670260, 5342380, 2505790, 3068740, 4981690, 1413390, 1909100, 5899470, 1533020, 1841800, 5891040, 1921370, 2325080, 5601030, 1413390, 1909100, 5899470, 1921370, 2325080, 5601030, 1826240, 2377540, 5610760, 1826240, 2377540, 5610760, 1921370, 2325080, 5601030, 2194760, 2670260, 5342380, 1826240, 2377540, 5610760, 2194760, 2670260, 5342380, 2142930, 2712030, 5342380, 1365360, 1859900, 5926250, 1533020, 1841800, 5891040, 1413390, 1909100, 5899470, 1343730, 1881880, 5924270, 1365360, 1859900, 5926250, 1413390, 1909100, 5899470, 2724820, 3088290, 4853830, 2295130, 2584500, 5342380, 2300230, 2579960, 5342380, 1631950, 1821320, 5870930, 1683680, 1862990, 5843370, 2028010, 2260630, 5589880, 1631950, 1821320, 5870930, 2028010, 2260630, 5589880, 2019840, 2265790, 5590740, 2019840, 2265790, 5590740, 2028010, 2260630, 5589880, 2300230, 2579960, 5342380, 2019840, 2265790, 5590740, 2300230, 2579960, 5342380, 2295130, 2584500, 5342380, 2256190, 2618560, 5342380, 2295130, 2584500, 5342380, 2724820, 3088290, 4853830, 1533020, 1841800, 5891040, 1631950, 1821320, 5870930, 2019840, 2265790, 5590740, 1533020, 1841800, 5891040, 2019840, 2265790, 5590740, 1956820, 2304330, 5597360, 1956820, 2304330, 5597360, 2019840, 2265790, 5590740, 2295130, 2584500, 5342380, 1956820, 2304330, 5597360, 2295130, 2584500, 5342380, 2256190, 2618560, 5342380, 2256190, 2618560, 5342380, 2724820, 3088290, 4853830, 2676890, 3047300, 4905780, 2256190, 2618560, 5342380, 2676890, 3047300, 4905780, 2254560, 2619970, 5342380, 1533020, 1841800, 5891040, 1956820, 2304330, 5597360, 1955860, 2304900, 5597460, 1956820, 2304330, 5597360, 2256190, 2618560, 5342380, 2254560, 2619970, 5342380, 1956820, 2304330, 5597360, 2254560, 2619970, 5342380, 1955860, 2304900, 5597460, 2254560, 2619970, 5342380, 2676890, 3047300, 4905780, 2505790, 3068740, 4981690, 2254560, 2619970, 5342380, 2505790, 3068740, 4981690, 2194760, 2670260, 5342380, 1921370, 2325080, 5601030, 1533020, 1841800, 5891040, 1955860, 2304900, 5597460, 1955860, 2304900, 5597460, 2254560, 2619970, 5342380, 2194760, 2670260, 5342380, 1955860, 2304900, 5597460, 2194760, 2670260, 5342380, 1921370, 2325080, 5601030, 2345480, 2538890, 5342380, 2851970, 3031900, 4816440, 2746380, 3002350, 4895150, 2345480, 2538890, 5342380, 2746380, 3002350, 4895150, 2326590, 2556220, 5342380, 1683680, 1862990, 5843370, 2053170, 2244520, 5587210, 2042570, 2251350, 5588340, 2053170, 2244520, 5587210, 2345480, 2538890, 5342380, 2326590, 2556220, 5342380, 2053170, 2244520, 5587210, 2326590, 2556220, 5342380, 2042570, 2251350, 5588340, 2326590, 2556220, 5342380, 2746380, 3002350, 4895150, 2724820, 3088290, 4853830, 2326590, 2556220, 5342380, 2724820, 3088290, 4853830, 2300230, 2579960, 5342380, 2028010, 2260630, 5589880, 1683680, 1862990, 5843370, 2042570, 2251350, 5588340, 2042570, 2251350, 5588340, 2326590, 2556220, 5342380, 2300230, 2579960, 5342380, 2042570, 2251350, 5588340, 2300230, 2579960, 5342380, 2028010, 2260630, 5589880, 2421810, 2466200, 5342380, 3165210, 3218570, 4490770, 3148560, 3232150, 4492700, 2421810, 2466200, 5342380, 3148560, 3232150, 4492700, 2416450, 2471440, 5342380, 3165210, 3218570, 4490770, 3302640, 3357300, 4286940, 3306050, 3396880, 4253230, 3165210, 3218570, 4490770, 3306050, 3396880, 4253230, 3148560, 3232150, 4492700, 2140090, 2186040, 5577830, 1709210, 1742660, 5872810, 2143390, 2183740, 5577470, 2143390, 2183740, 5577470, 2421810, 2466200, 5342380, 2416450, 2471440, 5342380, 2143390, 2183740, 5577470, 2416450, 2471440, 5342380, 2140090, 2186040, 5577830, 2416400, 2471490, 5342380, 2416450, 2471440, 5342380, 3148560, 3232150, 4492700, 2416400, 2471490, 5342380, 3148560, 3232150, 4492700, 3148540, 3232160, 4492710, 3306050, 3396880, 4253230, 3148540, 3232160, 4492710, 3148560, 3232150, 4492700, 1749090, 1783740, 5848850, 1709210, 1742660, 5872810, 2140090, 2186040, 5577830, 1749090, 1783740, 5848850, 2140090, 2186040, 5577830, 2140030, 2186090, 5577830, 2140030, 2186090, 5577830, 2140090, 2186040, 5577830, 2416450, 2471440, 5342380, 2140030, 2186090, 5577830, 2416450, 2471440, 5342380, 2416400, 2471490, 5342380, 2395420, 2491830, 5342380, 2416400, 2471490, 5342380, 3148540, 3232160, 4492710, 2395420, 2491830, 5342380, 3148540, 3232160, 4492710, 3142690, 3236900, 4493390, 3142690, 3236900, 4493390, 3148540, 3232160, 4492700, 3306050, 3396880, 4253230, 1748640, 1833e3, 5833840, 1749090, 1783740, 5848850, 2140030, 2186090, 5577830, 1748640, 1833e3, 5833840, 2140030, 2186090, 5577830, 2112520, 2205080, 5580830, 2112520, 2205080, 5580830, 2140030, 2186090, 5577830, 2416400, 2471490, 5342380, 2112520, 2205080, 5580830, 2416400, 2471490, 5342380, 2395420, 2491830, 5342380, 2395420, 2491830, 5342380, 3142690, 3236900, 4493390, 3108660, 3264140, 4497330, 2395420, 2491830, 5342380, 3108660, 3264140, 4497330, 2384950, 2501850, 5342380, 3142690, 3236900, 4493390, 3306050, 3396880, 4253230, 3280460, 3445410, 4234090, 3142690, 3236900, 4493390, 3280460, 3445410, 4234090, 3108660, 3264140, 4497330, 2106590, 2209110, 5581470, 1748640, 1833e3, 5833840, 2112520, 2205080, 5580830, 2112520, 2205080, 5580830, 2395420, 2491830, 5342380, 2384950, 2501850, 5342380, 2112520, 2205080, 5580830, 2384950, 2501850, 5342380, 2106590, 2209110, 5581470, 1898690, 1657850, 5839290, 1849040, 1610740, 5868140, 1833040, 1554110, 5888260, 1898690, 1657850, 5839290, 1833040, 1554110, 5888260, 1971610, 1655310, 5815960, 1833040, 1554110, 5888260, 2039300, 1615340, 5803920, 1971610, 1655310, 5815960, 1833040, 1554110, 5888260, 1837130, 1360100, 5934500, 2039300, 1615340, 5803920, 3201090, 2031920, 5111640, 3195470, 1980610, 5135080, 3211360, 1985800, 5123230, 2935660, 1824600, 5342380, 3195470, 1980610, 5135080, 3201090, 2031920, 5111640, 2935660, 1824600, 5342380, 3201090, 2031920, 5111640, 2920200, 1849240, 5342380, 2685500, 1697390, 5512060, 1861120, 1168960, 5967440, 2699200, 1681690, 5510190, 2699200, 1681690, 5510190, 2935660, 1824600, 5342380, 2920200, 1849240, 5342380, 2699200, 1681690, 5510190, 2920200, 1849240, 5342380, 2685500, 1697390, 5512060, 2911130, 1863490, 5342380, 2920200, 1849240, 5342380, 3201090, 2031920, 5111640, 2123170, 1388540, 5832280, 1861120, 1168960, 5967440, 2685500, 1697390, 5512060, 2123170, 1388540, 5832280, 2685500, 1697390, 5512060, 2666600, 1718690, 5514620, 2666600, 1718690, 5514620, 2685500, 1697390, 5512060, 2920200, 1849240, 5342380, 2666600, 1718690, 5514620, 2920200, 1849240, 5342380, 2911130, 1863490, 5342380, 1879390, 1256980, 5943940, 1861120, 1168960, 5967440, 2123170, 1388540, 5832280, 2094400, 1408370, 5837890, 1879390, 1256980, 5943940, 2123170, 1388540, 5832280, 1837130, 1360100, 5934500, 1879390, 1256980, 5943940, 2094400, 1408370, 5837890, 2039300, 1615340, 5803920, 1837130, 1360100, 5934500, 2094400, 1408370, 5837890, 3054410, 1617980, 5342380, 3098380, 1637410, 5311250, 3137430, 1680640, 5274950, 3054410, 1617980, 5342380, 3137430, 1680640, 5274950, 3047330, 1631280, 5342380, 3047330, 1631280, 5342380, 2878700, 1539130, 5461120, 3054410, 1617980, 5342380, 3058240, 1610720, 5342380, 3060730, 1611700, 5340670, 3098380, 1637410, 5311250, 3058240, 1610720, 5342380, 3098380, 1637410, 5311250, 3054410, 1617980, 5342380, 2878700, 1539130, 5461120, 3058240, 1610720, 5342380, 3054410, 1617980, 5342380, 3058240, 1610720, 5342380, 3058460, 1610310, 5342380, 3060730, 1611700, 5340670, 2878700, 1539130, 5461120, 3016690, 1584920, 5373420, 3058460, 1610310, 5342380, 2878700, 1539130, 5461120, 3058460, 1610310, 5342380, 3058240, 1610720, 5342380, 3060730, 1611700, 5340670, 3058460, 1610310, 5342380, 3060050, 1607280, 5342380, 3016690, 1584920, 5373420, 3054990, 1576e3, 5354500, 3060050, 1607280, 5342380, 3016690, 1584920, 5373420, 3060050, 1607280, 5342380, 3058460, 1610310, 5342380, 2613120, 1521550, 5596960, 2778060, 1481480, 5528310, 2790700, 1554410, 5502040, 3009670, 1699760, 5342380, 3017450, 1685890, 5342380, 3126240, 1749310, 5259350, 2613120, 1521550, 5596960, 2790700, 1554410, 5502040, 2799710, 1559620, 5496020, 2613120, 1521550, 5596960, 2799710, 1559620, 5496020, 2771900, 1594670, 5500030, 2771900, 1594670, 5500030, 2799710, 1559620, 5496020, 3017450, 1685890, 5342380, 2771900, 1594670, 5500030, 3017450, 1685890, 5342380, 3009670, 1699760, 5342380, 3039170, 1646420, 5342380, 3137430, 1680640, 5274950, 3126240, 1749310, 5259350, 3039170, 1646420, 5342380, 3126240, 1749310, 5259350, 3017450, 1685890, 5342380, 2799710, 1559620, 5496020, 2790700, 1554410, 5502040, 2800760, 1558290, 5495860, 2800760, 1558290, 5495860, 3039170, 1646420, 5342380, 3017450, 1685890, 5342380, 2800760, 1558290, 5495860, 3017450, 1685890, 5342380, 2799710, 1559620, 5496020, 3039170, 1646420, 5342380, 3047330, 1631280, 5342380, 3137430, 1680640, 5274950, 2790700, 1554410, 5502040, 2805640, 1552010, 5495160, 2800760, 1558290, 5495860, 2805640, 1552010, 5495160, 2878700, 1539130, 5461120, 3047330, 1631280, 5342380, 2805640, 1552010, 5495160, 3047330, 1631280, 5342380, 3039170, 1646420, 5342380, 2805640, 1552010, 5495160, 3039170, 1646420, 5342380, 2800760, 1558290, 5495860, 2790700, 1554410, 5502040, 2809340, 1547250, 5494610, 2805640, 1552010, 5495160, 2809340, 1547250, 5494610, 2867950, 1523700, 5471020, 2878700, 1539130, 5461120, 2809340, 1547250, 5494610, 2878700, 1539130, 5461120, 2805640, 1552010, 5495160, 2102640, 1212850, 5878410, 2006930, 1093850, 5934560, 2073700, 1123390, 5906210, 2102640, 1212850, 5878410, 1982950, 1117310, 5938220, 2006930, 1093850, 5934560, 1913040, 1154070, 5954e3, 1982950, 1117310, 5938220, 2102640, 1212850, 5878410, 1913040, 1154070, 5954e3, 2102640, 1212850, 5878410, 2265070, 1319240, 5795120, 2265070, 1319240, 5795120, 2102640, 1212850, 5878410, 2189720, 1216510, 5845980, 2399340, 1410200, 5719670, 2265070, 1319240, 5795120, 2356010, 1335380, 5755290, 1913040, 1154070, 5954e3, 2265070, 1319240, 5795120, 2399340, 1410200, 5719670, 2486270, 1524550, 5653270, 1913040, 1154070, 5954e3, 2399340, 1410200, 5719670, 1861120, 1168960, 5967440, 1913040, 1154070, 5954e3, 2486270, 1524550, 5653270, 2935660, 1824600, 5342380, 2941150, 1815730, 5342380, 3195470, 1980610, 5135080, 1861120, 1168960, 5967440, 2486270, 1524550, 5653270, 2711080, 1667900, 5508560, 1861120, 1168960, 5967440, 2711080, 1667900, 5508560, 2699200, 1681690, 5510190, 2699200, 1681690, 5510190, 2711080, 1667900, 5508560, 2941150, 1815730, 5342380, 2699200, 1681690, 5510190, 2941150, 1815730, 5342380, 2935660, 1824600, 5342380, 3195410, 1949300, 5147e3, 3137440, 1883060, 5206580, 3165580, 1883880, 5189340, 2962080, 1781380, 5342380, 3137440, 1883060, 5206580, 3195410, 1949300, 5147e3, 2962080, 1781380, 5342380, 3195410, 1949300, 5147e3, 2953680, 1795280, 5342380, 2725430, 1651030, 5506580, 2539420, 1534300, 5627120, 2729750, 1645900, 5505980, 2729750, 1645900, 5505980, 2962080, 1781380, 5342380, 2953680, 1795280, 5342380, 2729750, 1645900, 5505980, 2953680, 1795280, 5342380, 2725430, 1651030, 5506580, 2949290, 1802490, 5342380, 2953680, 1795280, 5342380, 3195410, 1949300, 5147e3, 2486270, 1524550, 5653270, 2539420, 1534300, 5627120, 2725430, 1651030, 5506580, 2486270, 1524550, 5653270, 2725430, 1651030, 5506580, 2715670, 1662520, 5507930, 2715670, 1662520, 5507930, 2725430, 1651030, 5506580, 2953680, 1795280, 5342380, 2715670, 1662520, 5507930, 2953680, 1795280, 5342380, 2949290, 1802490, 5342380, 2949290, 1802490, 5342380, 3195410, 1949300, 5147e3, 3195470, 1980610, 5135080, 2949290, 1802490, 5342380, 3195470, 1980610, 5135080, 2941150, 1815730, 5342380, 2711080, 1667900, 5508560, 2486270, 1524550, 5653270, 2715670, 1662520, 5507930, 2715670, 1662520, 5507930, 2949290, 1802490, 5342380, 2941150, 1815730, 5342380, 2715670, 1662520, 5507930, 2941150, 1815730, 5342380, 2711080, 1667900, 5508560, 3297930, 2024140, 5053220, 3267220, 2001970, 5081730, 3281030, 1995300, 5075500, 3241310, 2049430, 5079420, 3267220, 2001970, 5081730, 3297930, 2024140, 5053220, 3241310, 2049430, 5079420, 3297930, 2024140, 5053220, 3337220, 2068030, 5009760, 3241310, 2049430, 5079420, 3337220, 2068030, 5009760, 3326680, 2091630, 5006990, 2994180, 1726890, 5342380, 3115960, 1791490, 5251300, 3103760, 1855640, 5236330, 2994180, 1726890, 5342380, 3103760, 1855640, 5236330, 2972350, 1764200, 5342380, 2754630, 1615920, 5502490, 2613120, 1521550, 5596960, 2764580, 1603740, 5501070, 2764580, 1603740, 5501070, 2994180, 1726890, 5342380, 2972350, 1764200, 5342380, 2764580, 1603740, 5501070, 2972350, 1764200, 5342380, 2754630, 1615920, 5502490, 2964610, 1777180, 5342380, 2972350, 1764200, 5342380, 3103760, 1855640, 5236330, 2539420, 1534300, 5627120, 2613120, 1521550, 5596960, 2754630, 1615920, 5502490, 2539420, 1534300, 5627120, 2754630, 1615920, 5502490, 2731060, 1644340, 5505800, 2731060, 1644340, 5505800, 2754630, 1615920, 5502490, 2972350, 1764200, 5342380, 2731060, 1644340, 5505800, 2972350, 1764200, 5342380, 2964610, 1777180, 5342380, 2964610, 1777180, 5342380, 3103760, 1855640, 5236330, 3137440, 1883060, 5206580, 2964610, 1777180, 5342380, 3137440, 1883060, 5206580, 2962080, 1781380, 5342380, 2539420, 1534300, 5627120, 2731060, 1644340, 5505800, 2729750, 1645900, 5505980, 2731060, 1644340, 5505800, 2964610, 1777180, 5342380, 2962080, 1781380, 5342380, 2731060, 1644340, 5505800, 2962080, 1781380, 5342380, 2729750, 1645900, 5505980, 3009670, 1699760, 5342380, 3126240, 1749310, 5259350, 3141810, 1768270, 5243820, 3009670, 1699760, 5342380, 3141810, 1768270, 5243820, 3005640, 1706870, 5342380, 2613120, 1521550, 5596960, 2771900, 1594670, 5500030, 2769980, 1597060, 5500300, 2771900, 1594670, 5500030, 3009670, 1699760, 5342380, 3005640, 1706870, 5342380, 2771900, 1594670, 5500030, 3005640, 1706870, 5342380, 2769980, 1597060, 5500300, 3005640, 1706870, 5342380, 3141810, 1768270, 5243820, 3115960, 1791490, 5251300, 3005640, 1706870, 5342380, 3115960, 1791490, 5251300, 2994180, 1726890, 5342380, 2613120, 1521550, 5596960, 2769980, 1597060, 5500300, 2764580, 1603740, 5501070, 2769980, 1597060, 5500300, 3005640, 1706870, 5342380, 2994180, 1726890, 5342380, 2769980, 1597060, 5500300, 2994180, 1726890, 5342380, 2764580, 1603740, 5501070, 3393190, 1423430, 5192210, 3390700, 1391710, 5202360, 3418810, 1426690, 5174600, 3438130, 1440390, 5158090, 3418810, 1426690, 5174600, 3390700, 1391710, 5202360, 3438130, 1440390, 5158090, 3390700, 1391710, 5202360, 3400660, 1323700, 5213520, 3438130, 1440390, 5158090, 3400660, 1323700, 5213520, 3483850, 1329810, 5157110, 3400660, 1323700, 5213520, 3459370, 1251490, 5192830, 3483850, 1329810, 5157110, 3483850, 1329810, 5157110, 3459370, 1251490, 5192830, 3501950, 1251160, 5164480, -2093500, -47727.3, 6004380, -2023830, -4521.32, 6028250, -2100450, .183627, 6002160, -2093500, -47727.3, 6004380, -2023770, -34476.7, 6028180, -2023830, -4521.32, 6028250, -2052470, -86813.2, 6018e3, -2023770, -34476.7, 6028180, -2093500, -47727.3, 6004380, -2052470, -86813.2, 6018e3, -2093500, -47727.3, 6004380, -2067030, -84321, 6013090, -1392640, 1144340, 6097630, -1407760, 1179660, 6087490, -1458450, 1135870, 6083900, -1392640, 1144340, 6097630, -1458450, 1135870, 6083900, -1402870, 1131770, 6097630, -1402870, 1131770, 6097630, -1386380, 1130220, 6101660, -1392640, 1144340, 6097630, -1458450, 1135870, 6083900, -1421750, 1107960, 6097630, -1402870, 1131770, 6097630, -1402890, 1093610, 6104540, -1386380, 1130220, 6101660, -1402870, 1131770, 6097630, -1402890, 1093610, 6104540, -1402870, 1131770, 6097630, -1421750, 1107960, 6097630, -1437330, 1087680, 6097630, -1421750, 1107960, 6097630, -1458450, 1135870, 6083900, -1437330, 1087680, 6097630, -1458450, 1135870, 6083900, -1462480, 1082850, 6092540, -1437330, 1087680, 6097630, -1402890, 1093610, 6104540, -1421750, 1107960, 6097630, -1487390, 1096440, 6084130, -1462480, 1082850, 6092540, -1458450, 1135870, 6083900, -3502010, 1129970, 5192110, -3456400, 1143030, 5219560, -3509560, 1251840, 5159180, -3270180, 1119440, 5342380, -3415300, 1198560, 5234040, -3428370, 1133030, 5240050, -3270180, 1119440, 5342380, -3428370, 1133030, 5240050, -3282960, 1081410, 5342380, -3415300, 1198560, 5234040, -3509560, 1251840, 5159180, -3456400, 1143030, 5219560, -3415300, 1198560, 5234040, -3456400, 1143030, 5219560, -3428370, 1133030, 5240050, -3006910, 984435, 5519490, -3270180, 1119440, 5342380, -3282960, 1081410, 5342380, -3430280, 1122850, 5240980, -3391630, 1093510, 5272040, -3288410, 1064730, 5342380, -3430280, 1122850, 5240980, -3288410, 1064730, 5342380, -3282960, 1081410, 5342380, -3430280, 1122850, 5240980, -3282960, 1081410, 5342380, -3428370, 1133030, 5240050, -3430280, 1122850, 5240980, -3428370, 1133030, 5240050, -3456400, 1143030, 5219560, -3288410, 1064730, 5342380, -3006910, 984435, 5519490, -3282960, 1081410, 5342380, -3391630, 1093510, 5272040, -3288590, 1064150, 5342380, -3288410, 1064730, 5342380, -3200660, 1038910, 5400050, -3006910, 984435, 5519490, -3288410, 1064730, 5342380, -3200660, 1038910, 5400050, -3288410, 1064730, 5342380, -3288590, 1064150, 5342380, -3391630, 1093510, 5272040, -3288760, 1063630, 5342380, -3288590, 1064150, 5342380, -3237650, 1048670, 5376220, -3200660, 1038910, 5400050, -3288590, 1064150, 5342380, -3237650, 1048670, 5376220, -3288590, 1064150, 5342380, -3288760, 1063630, 5342380, -2971960, 40046.4, 5624350, -2739680, 123881, 5739110, -2947600, 135705, 5635590, -2971960, 40046.4, 5624350, -2794760, 82311.6, 5713420, -2739680, 123881, 5739110, -2971960, 40046.4, 5624350, -2877760, 54853.4, 5672680, -2794760, 82311.6, 5713420, -2904890, 31942.2, 5659100, -2877760, 54853.4, 5672680, -2971960, 40046.4, 5624350, -2945950, 26428.9, 5638e3, -2904890, 31942.2, 5659100, -2971960, 40046.4, 5624350, -2296210, -.200741, 5930520, -2705560, 330.488, 5756500, -2705010, -.236479, 5756750, -2296210, -.200741, 5930520, -2749160, 62051, 5735600, -2705560, 330.488, 5756500, -2296210, -.200741, 5930520, -2250030, 54989.2, 5947820, -2749160, 62051, 5735600, -2749160, 62051, 5735600, -2250030, 54989.2, 5947820, -2739680, 123881, 5739110, -2250030, 54989.2, 5947820, -2194660, 164093, 5966340, -2739680, 123881, 5739110, -2739680, 123881, 5739110, -2194660, 164093, 5966340, -2947600, 135705, 5635590, -2947600, 135705, 5635590, -2194660, 164093, 5966340, -3011320, 286297, 5596390, -3075900, 424082, 5552640, -2261640, 365617, 5932520, -3123e3, 511467, 5519110, -2193490, 244334, 5964040, -2261640, 365617, 5932520, -3075900, 424082, 5552640, -3017870, 334243, 5590240, -2193490, 244334, 5964040, -3075900, 424082, 5552640, -2194660, 164093, 5966340, -2193490, 244334, 5964040, -3017870, 334243, 5590240, -2194660, 164093, 5966340, -3017870, 334243, 5590240, -3011320, 286297, 5596390, -2261640, 365617, 5932520, -2147590, 361195, 5974730, -2190550, 385937, 5957680, -2193490, 244334, 5964040, -2147590, 361195, 5974730, -2261640, 365617, 5932520, -3304530, 1013580, 5342380, -3288760, 1063630, 5342380, -3391630, 1093510, 5272040, -3278060, 990203, 5362890, -3237650, 1048670, 5376220, -3288760, 1063630, 5342380, -3278060, 990203, 5362890, -3288760, 1063630, 5342380, -3304530, 1013580, 5342380, -3304530, 1013580, 5342380, -3391630, 1093510, 5272040, -3405620, 1037440, 5274330, -3304530, 1013580, 5342380, -3405620, 1037440, 5274330, -3308260, 1001340, 5342380, -3278060, 990203, 5362890, -3304530, 1013580, 5342380, -3308260, 1001340, 5342380, -3270180, 1119440, 5342380, -3252950, 1168570, 5342380, -3410760, 1219950, 5232070, -3270180, 1119440, 5342380, -3410760, 1219950, 5232070, -3415300, 1198560, 5234040, -3415300, 1198560, 5234040, -3410760, 1219950, 5232070, -3509560, 1251840, 5159180, -3006910, 984435, 5519490, -3069130, 1107920, 5461920, -3252950, 1168570, 5342380, -3006910, 984435, 5519490, -3252950, 1168570, 5342380, -3270180, 1119440, 5342380, -3250250, 1176060, 5342380, -3407360, 1235530, 5230640, -3410760, 1219950, 5232070, -3250250, 1176060, 5342380, -3410760, 1219950, 5232070, -3252950, 1168570, 5342380, -3407360, 1235530, 5230640, -3598260, 1308090, 5084080, -3509560, 1251840, 5159180, -3407360, 1235530, 5230640, -3509560, 1251840, 5159180, -3410760, 1219950, 5232070, -3252950, 1168570, 5342380, -3069130, 1107920, 5461920, -3250250, 1176060, 5342380, -3240330, 1203140, 5342380, -3394220, 1292940, 5225340, -3407360, 1235530, 5230640, -3240330, 1203140, 5342380, -3407360, 1235530, 5230640, -3250250, 1176060, 5342380, -3394220, 1292940, 5225340, -3583200, 1409220, 5067780, -3598260, 1308090, 5084080, -3394220, 1292940, 5225340, -3598260, 1308090, 5084080, -3407360, 1235530, 5230640, -3069130, 1107920, 5461920, -3240330, 1203140, 5342380, -3250250, 1176060, 5342380, -3240330, 1203140, 5342380, -3213530, 1272980, 5342380, -3383700, 1336010, 5221360, -3240330, 1203140, 5342380, -3383700, 1336010, 5221360, -3394220, 1292940, 5225340, -3394220, 1292940, 5225340, -3383700, 1336010, 5221360, -3583200, 1409220, 5067780, -3069130, 1107920, 5461920, -3144460, 1247260, 5389030, -3213530, 1272980, 5342380, -3069130, 1107920, 5461920, -3213530, 1272980, 5342380, -3240330, 1203140, 5342380, -3175860, 1364260, 5342380, -3353310, 1449300, 5210800, -3355830, 1440460, 5211630, -3175860, 1364260, 5342380, -3355830, 1440460, 5211630, -3176e3, 1363930, 5342380, -3353310, 1449300, 5210800, -3630460, 1584600, 4982180, -3695630, 1584710, 4934320, -3353310, 1449300, 5210800, -3695630, 1584710, 4934320, -3355830, 1440460, 5211630, -3176e3, 1363930, 5342380, -3168050, 1360580, 5347910, -3175860, 1364260, 5342380, -3177190, 1361150, 5342380, -3176e3, 1363930, 5342380, -3355830, 1440460, 5211630, -3177190, 1361150, 5342380, -3355830, 1440460, 5211630, -3356400, 1438420, 5211820, -3356400, 1438420, 5211820, -3355830, 1440460, 5211630, -3695630, 1584710, 4934320, -3128890, 1340400, 5375800, -3168050, 1360580, 5347910, -3176e3, 1363930, 5342380, -3128890, 1340400, 5375800, -3176e3, 1363930, 5342380, -3177190, 1361150, 5342380, -3177190, 1361150, 5342380, -3356400, 1438420, 5211820, -3367320, 1398920, 5215510, -3177190, 1361150, 5342380, -3367320, 1398920, 5215510, -3180410, 1353610, 5342380, -3356400, 1438420, 5211820, -3695630, 1584710, 4934320, -3659010, 1461200, 4998880, -3356400, 1438420, 5211820, -3659010, 1461200, 4998880, -3367320, 1398920, 5215510, -3180410, 1353610, 5342380, -3128890, 1340400, 5375800, -3177190, 1361150, 5342380, -3212580, 1275390, 5342380, -3180410, 1353610, 5342380, -3367320, 1398920, 5215510, -3212580, 1275390, 5342380, -3367320, 1398920, 5215510, -3381350, 1345330, 5220490, -3381350, 1345330, 5220490, -3367320, 1398920, 5215510, -3659010, 1461200, 4998880, -3144460, 1247260, 5389030, -3128890, 1340400, 5375800, -3180410, 1353610, 5342380, -3144460, 1247260, 5389030, -3180410, 1353610, 5342380, -3212580, 1275390, 5342380, -3212580, 1275390, 5342380, -3381350, 1345330, 5220490, -3383700, 1336010, 5221360, -3212580, 1275390, 5342380, -3383700, 1336010, 5221360, -3213530, 1272980, 5342380, -3381350, 1345330, 5220490, -3659010, 1461200, 4998880, -3583200, 1409220, 5067780, -3381350, 1345330, 5220490, -3583200, 1409220, 5067780, -3383700, 1336010, 5221360, -3213530, 1272980, 5342380, -3144460, 1247260, 5389030, -3212580, 1275390, 5342380, -3198590, 1429860, 5311780, -3303030, 1509870, 5225600, -3333030, 1517690, 5204380, -3198590, 1429860, 5311780, -3333030, 1517690, 5204380, -3341100, 1491050, 5206890, -3500980, 1559320, 5081170, -3341100, 1491050, 5206890, -3333030, 1517690, 5204380, -3172870, 1371180, 5342380, -3198590, 1429860, 5311780, -3341100, 1491050, 5206890, -3172870, 1371180, 5342380, -3341100, 1491050, 5206890, -3348390, 1466360, 5209210, -3172870, 1371180, 5342380, -3348390, 1466360, 5209210, -3175570, 1364920, 5342380, -3348390, 1466360, 5209210, -3341100, 1491050, 5206890, -3500980, 1559320, 5081170, -3168050, 1360580, 5347910, -3172870, 1371180, 5342380, -3175570, 1364920, 5342380, -3175570, 1364920, 5342380, -3348390, 1466360, 5209210, -3353310, 1449300, 5210800, -3175570, 1364920, 5342380, -3353310, 1449300, 5210800, -3175860, 1364260, 5342380, -3348390, 1466360, 5209210, -3500980, 1559320, 5081170, -3630460, 1584600, 4982180, -3348390, 1466360, 5209210, -3630460, 1584600, 4982180, -3353310, 1449300, 5210800, -3168050, 1360580, 5347910, -3175570, 1364920, 5342380, -3175860, 1364260, 5342380, -3111350, 840846, 5485470, -2840310, 789075, 5637060, -2961880, 867797, 5562940, -3111350, 840846, 5485470, -2961880, 867797, 5562940, -3078210, 909527, 5493150, -2961880, 867797, 5562940, -3133510, 945049, 5456e3, -3078210, 909527, 5493150, -2961880, 867797, 5562940, -3200660, 1038910, 5400050, -3133510, 945049, 5456e3, -2961880, 867797, 5562940, -3006910, 984435, 5519490, -3200660, 1038910, 5400050, -3125870, 762294, 5488660, -2175980, 544954, 5950640, -3084980, 778330, 5509370, -2181510, 470225, 5954960, -2175980, 544954, 5950640, -3125870, 762294, 5488660, -3082830, 604827, 5532150, -2181510, 470225, 5954960, -3125870, 762294, 5488660, -2285930, 420453, 5919650, -2181510, 470225, 5954960, -3082830, 604827, 5532150, -3162920, 538887, 5493880, -2285930, 420453, 5919650, -3082830, 604827, 5532150, -2261640, 365617, 5932520, -2285930, 420453, 5919650, -3162920, 538887, 5493880, -2261640, 365617, 5932520, -3162920, 538887, 5493880, -3123e3, 511467, 5519110, -2175980, 544954, 5950640, -3111350, 840846, 5485470, -3084980, 778330, 5509370, -2175980, 544954, 5950640, -2840310, 789075, 5637060, -3111350, 840846, 5485470, -2175980, 544954, 5950640, -2137130, 610712, 5958280, -2840310, 789075, 5637060, -2840310, 789075, 5637060, -2137130, 610712, 5958280, -2830900, 851574, 5632730, -2137130, 610712, 5958280, -2899250, 905347, 5589700, -2830900, 851574, 5632730, -2829210, 1068950, 5596650, -1957520, 751500, 6003420, -1914240, 812270, 6009420, -2079460, 768845, 5960360, -1957520, 751500, 6003420, -2829210, 1068950, 5596650, -2957080, 1069220, 5530540, -2079460, 768845, 5960360, -2829210, 1068950, 5596650, -2123650, 733677, 5949280, -2079460, 768845, 5960360, -2957080, 1069220, 5530540, -2899250, 905347, 5589700, -2123650, 733677, 5949280, -2957080, 1069220, 5530540, -2899250, 905347, 5589700, -2119820, 677376, 5957260, -2123650, 733677, 5949280, -2137130, 610712, 5958280, -2119820, 677376, 5957260, -2899250, 905347, 5589700, -2939100, 1509710, 5437260, -2847230, 1556360, 5472640, -2905910, 1593180, 5431330, -1870060, 954119, 6002530, -2847230, 1556360, 5472640, -2939100, 1509710, 5437260, -2899830, 1400710, 5486960, -1870060, 954119, 6002530, -2939100, 1509710, 5437260, -1914240, 812270, 6009420, -1870060, 954119, 6002530, -2899830, 1400710, 5486960, -1914240, 812270, 6009420, -2899830, 1400710, 5486960, -2808780, 1208430, 5578650, -2829210, 1068950, 5596650, -1914240, 812270, 6009420, -2808780, 1208430, 5578650, -1424230, 890752, 6132320, -1333970, 887698, 6152890, -1359280, 912747, 6143740, -1376010, 852428, 6148640, -1333970, 887698, 6152890, -1424230, 890752, 6132320, -1456840, 855543, 6129690, -1376010, 852428, 6148640, -1424230, 890752, 6132320, -1436660, 805159, 6141190, -1376010, 852428, 6148640, -1456840, 855543, 6129690, -1308100, 913021, 6154720, -1203050, 957911, 6169210, -1360530, 977642, 6133540, -1360530, 977642, 6133540, -1203050, 957911, 6169210, -1292560, 1061190, 6134340, -1203050, 957911, 6169210, -1280480, 1114870, 6127400, -1292560, 1061190, 6134340, -1203050, 957911, 6169210, -1154050, 1009200, 6170390, -1280480, 1114870, 6127400, -1280480, 1114870, 6127400, -1145500, 1049220, 6165340, -1189940, 1110650, 6146260, -1280480, 1114870, 6127400, -1154050, 1009200, 6170390, -1145500, 1049220, 6165340, 1133790, 1782140, 5998060, 1143750, 1671830, 6027650, 1157140, 1778100, 5994820, 1157140, 1778100, 5994820, 1143750, 1671830, 6027650, 1248500, 1698220, 5999610, 1143750, 1671830, 6027650, 1049120, 1466880, 6097350, 1248500, 1698220, 5999610, 1049120, 1466880, 6097350, 1228440, 1654820, 6015750, 1248500, 1698220, 5999610, 1049120, 1466880, 6097350, 1189250, 1548640, 6051550, 1228440, 1654820, 6015750, 1228440, 1654820, 6015750, 1189250, 1548640, 6051550, 1262490, 1592980, 6025320, 1189250, 1548640, 6051550, 1230890, 1544990, 6044200, 1262490, 1592980, 6025320, 1143750, 1671830, 6027650, 1099660, 1595200, 6056360, 1049120, 1466880, 6097350, 1048230, 1466350, 6097630, 1049120, 1466880, 6097350, 1099660, 1595200, 6056360, 1048230, 1466350, 6097630, 1099660, 1595200, 6056360, 1016e3, 1488860, 6097630, 950832, 1404500, 6127870, 1048230, 1466350, 6097630, 1016e3, 1488860, 6097630, 1016e3, 1488860, 6097630, 1099660, 1595200, 6056360, 999740, 1538690, 6088e3, 1016e3, 1488860, 6097630, 999740, 1538690, 6088e3, 988747, 1507100, 6097630, 988747, 1507100, 6097630, 950832, 1404500, 6127870, 1016e3, 1488860, 6097630, 978952, 1513480, 6097630, 988747, 1507100, 6097630, 999740, 1538690, 6088e3, 845750, 1346600, 6156020, 950832, 1404500, 6127870, 988747, 1507100, 6097630, 845750, 1346600, 6156020, 988747, 1507100, 6097630, 978952, 1513480, 6097630, 969805, 1519360, 6097630, 978952, 1513480, 6097630, 999740, 1538690, 6088e3, 845750, 1346600, 6156020, 978952, 1513480, 6097630, 969805, 1519360, 6097630, 845750, 1346600, 6156020, 969805, 1519360, 6097630, 904683, 1474990, 6118360, 733251, 1332130, 6173460, 845750, 1346600, 6156020, 904683, 1474990, 6118360, 774641, 1431680, 6146240, 733251, 1332130, 6173460, 904683, 1474990, 6118360, 645930, 1354120, 6178390, 733251, 1332130, 6173460, 774641, 1431680, 6146240, 675194, 1424350, 6159570, 645930, 1354120, 6178390, 774641, 1431680, 6146240, 588932, 1335980, 6187960, 645930, 1354120, 6178390, 675194, 1424350, 6159570, 565916, 1413500, 6172970, 588932, 1335980, 6187960, 675194, 1424350, 6159570, 565916, 1413500, 6172970, 537969, 1342100, 6191260, 588932, 1335980, 6187960, 537128, 1388550, 6181150, 537969, 1342100, 6191260, 565916, 1413500, 6172970, -337282, 1252190, 6223970, -233497, 1172260, 6244130, -219569, 1320860, 6215100, -337282, 1252190, 6223970, -247688, 1156740, 6246460, -233497, 1172260, 6244130, -337282, 1252190, 6223970, -264435, 1160350, 6245110, -247688, 1156740, 6246460, -331981, 1207550, 6233010, -264435, 1160350, 6245110, -337282, 1252190, 6223970, 748703, 819536, 6259740, 714852, 768532, 6270090, 746118, 786321, 6264280, 681514, 765412, 6274150, 714852, 768532, 6270090, 748703, 819536, 6259740, 719844, 820966, 6262920, 681514, 765412, 6274150, 748703, 819536, 6259740, 719844, 820966, 6262920, 698440, 790076, 6269270, 681514, 765412, 6274150, 673214, 777103, 6273620, 698440, 790076, 6269270, 719844, 820966, 6262920, 643444, 809584, 6272640, 648664, 774139, 6276550, 659429, 818296, 6269870, 659429, 818296, 6269870, 648664, 774139, 6276550, 687797, 813716, 6267430, 648664, 774139, 6276550, 673214, 777103, 6273620, 687797, 813716, 6267430, 687797, 813716, 6267430, 673214, 777103, 6273620, 705970, 809108, 6266020, 673214, 777103, 6273620, 719844, 820966, 6262920, 705970, 809108, 6266020, 714852, 768532, 6270090, 702483, 748045, 6273940, 741783, 737832, 6270640, 681514, 765412, 6274150, 702483, 748045, 6273940, 714852, 768532, 6270090, -1682750, 3019210, 5342380, -1682750, 3019210, 5342380, -1933570, 3452200, 4985650, -1682750, 3019210, 5342380, -1933570, 3452200, 4985650, -1933630, 3452170, 4985650, -1933630, 3452170, 4985650, -1933570, 3452200, 4985650, -2003600, 3572130, 4872990, -1933630, 3452170, 4985650, -2003600, 3572130, 4872990, -1984610, 3539570, 4904210, -1153860, 2090470, 5894490, -870204, 1584470, 6096100, -1153860, 2090470, 5894490, -1153860, 2090470, 5894490, -1153860, 2090470, 5894490, -1682750, 3019210, 5342380, -1153860, 2090470, 5894490, -1682750, 3019210, 5342380, -1682750, 3019210, 5342380, -1686380, 3017180, 5342380, -1682750, 3019210, 5342380, -1933630, 3452170, 4985650, -1686380, 3017180, 5342380, -1933630, 3452170, 4985650, -1934300, 3451680, 4985730, -1984610, 3539570, 4904210, -1934300, 3451680, 4985730, -1933630, 3452170, 4985650, -901203, 1624480, 6081140, -870204, 1584470, 6096100, -1153860, 2090470, 5894490, -901203, 1624480, 6081140, -1153860, 2090470, 5894490, -1159620, 2085320, 5895180, -1159620, 2085320, 5895180, -1153860, 2090470, 5894490, -1682750, 3019210, 5342380, -1159620, 2085320, 5895180, -1682750, 3019210, 5342380, -1686380, 3017180, 5342380, -1751750, 2979700, 5342380, -1686380, 3017180, 5342380, -1934300, 3451680, 4985730, -1751750, 2979700, 5342380, -1934300, 3451680, 4985730, -1946790, 3442630, 4987120, -1946790, 3442630, 4987120, -1934300, 3451680, 4985730, -1984610, 3539570, 4904210, -1025940, 1567740, 6076300, -901203, 1624480, 6081140, -1159620, 2085320, 5895180, -1025940, 1567740, 6076300, -1159620, 2085320, 5895180, -1261750, 1988200, 5907660, -1261750, 1988200, 5907660, -1159620, 2085320, 5895180, -1686380, 3017180, 5342380, -1261750, 1988200, 5907660, -1686380, 3017180, 5342380, -1751750, 2979700, 5342380, -1751750, 2979700, 5342380, -1946790, 3442630, 4987120, -1963270, 3430560, 4988960, -1751750, 2979700, 5342380, -1963270, 3430560, 4988960, -1944600, 3344240, 5054010, -1751750, 2979700, 5342380, -1944600, 3344240, 5054010, -1772610, 2967340, 5342380, -1963270, 3430560, 4988960, -1946790, 3442630, 4987120, -1984610, 3539570, 4904210, -1025940, 1567740, 6076300, -1261750, 1988200, 5907660, -1265270, 1984630, 5908100, -1261750, 1988200, 5907660, -1751750, 2979700, 5342380, -1772610, 2967340, 5342380, -1261750, 1988200, 5907660, -1772610, 2967340, 5342380, -1265270, 1984630, 5908100, -1985510, 3414060, 4991460, -1944600, 3344240, 5054010, -1963270, 3430560, 4988960, -1963270, 3430560, 4988960, -1984610, 3539570, 4904210, -1993970, 3428450, 4978290, -1963270, 3430560, 4988960, -1993970, 3428450, 4978290, -1985510, 3414060, 4991460, -1631660, 3047120, 5342380, -1859870, 3504100, 4977530, -1933570, 3452200, 4985650, -1631660, 3047120, 5342380, -1933570, 3452200, 4985650, -1682750, 3019210, 5342380, -1859870, 3504100, 4977530, -1940270, 3667790, 4827650, -2003600, 3572130, 4872990, -1859870, 3504100, 4977530, -2003600, 3572130, 4872990, -1933570, 3452200, 4985650, -1153860, 2090470, 5894490, -870204, 1584470, 6096100, -1143380, 2099710, 5893260, -1143380, 2099710, 5893260, -1631660, 3047120, 5342380, -1682750, 3019210, 5342380, -1143380, 2099710, 5893260, -1682750, 3019210, 5342380, -1153860, 2090470, 5894490, -1587030, 3070600, 5342380, -1794210, 3548240, 4970400, -1859870, 3504100, 4977530, -1587030, 3070600, 5342380, -1859870, 3504100, 4977530, -1631660, 3047120, 5342380, -1794210, 3548240, 4970400, -1848660, 3679010, 4854810, -1940270, 3667790, 4827650, -1794210, 3548240, 4970400, -1940270, 3667790, 4827650, -1859870, 3504100, 4977530, -870204, 1584470, 6096100, -1134160, 2107760, 5892170, -1143380, 2099710, 5893260, -1134160, 2107760, 5892170, -1587030, 3070600, 5342380, -1631660, 3047120, 5342380, -1134160, 2107760, 5892170, -1631660, 3047120, 5342380, -1143380, 2099710, 5893260, -1587030, 3070600, 5342380, -1533360, 3097750, 5342380, -1781300, 3556700, 4969010, -1587030, 3070600, 5342380, -1781300, 3556700, 4969010, -1794210, 3548240, 4970400, -1794210, 3548240, 4970400, -1781300, 3556700, 4969010, -1848660, 3679010, 4854810, -841519, 1593990, 6097630, -778063, 1625910, 6097630, -1053420, 2174740, 5882870, -841519, 1593990, 6097630, -1053420, 2174740, 5882870, -1134160, 2107760, 5892170, -841519, 1593990, 6097630, -1134160, 2107760, 5892170, -870204, 1584470, 6096100, -1134160, 2107760, 5892170, -1053420, 2174740, 5882870, -1533360, 3097750, 5342380, -1134160, 2107760, 5892170, -1533360, 3097750, 5342380, -1587030, 3070600, 5342380, -841519, 1593990, 6097630, -772536, 1614720, 6101280, -778063, 1625910, 6097630, -1488650, 3119480, 5342380, -1715720, 3598540, 4962e3, -1781300, 3556700, 4969010, -1488650, 3119480, 5342380, -1781300, 3556700, 4969010, -1533360, 3097750, 5342380, -1715720, 3598540, 4962e3, -1774710, 3723090, 4848830, -1848660, 3679010, 4854810, -1715720, 3598540, 4962e3, -1848660, 3679010, 4854810, -1781300, 3556700, 4969010, -777893, 1625990, 6097630, -1043300, 2182720, 5881730, -1053420, 2174740, 5882870, -777893, 1625990, 6097630, -1053420, 2174740, 5882870, -778063, 1625910, 6097630, -1043300, 2182720, 5881730, -1488650, 3119480, 5342380, -1533360, 3097750, 5342380, -1043300, 2182720, 5881730, -1533360, 3097750, 5342380, -1053420, 2174740, 5882870, -778063, 1625910, 6097630, -772536, 1614720, 6101280, -777893, 1625990, 6097630, -1468700, 3128930, 5342380, -1686040, 3616890, 4958860, -1715720, 3598540, 4962e3, -1468700, 3128930, 5342380, -1715720, 3598540, 4962e3, -1488650, 3119480, 5342380, -1686040, 3616890, 4958860, -1728540, 3713300, 4872800, -1774710, 3723090, 4848830, -1686040, 3616890, 4958860, -1774710, 3723090, 4848830, -1715720, 3598540, 4962e3, -777836, 1626020, 6097630, -1038770, 2186260, 5881220, -1043300, 2182720, 5881730, -777836, 1626020, 6097630, -1043300, 2182720, 5881730, -777893, 1625990, 6097630, -1038770, 2186260, 5881220, -1468700, 3128930, 5342380, -1488650, 3119480, 5342380, -1038770, 2186260, 5881220, -1488650, 3119480, 5342380, -1043300, 2182720, 5881730, -772536, 1614720, 6101280, -777836, 1626020, 6097630, -777893, 1625990, 6097630, -1347e3, 3183210, 5342380, -1559620, 3691050, 4945660, -1644610, 3641890, 4954500, -1347e3, 3183210, 5342380, -1644610, 3641890, 4954500, -1403950, 3158510, 5342380, -1559620, 3691050, 4945660, -1613420, 3819860, 483e4, -1685750, 3722780, 4880500, -1559620, 3691050, 4945660, -1685750, 3722780, 4880500, -1644610, 3641890, 4954500, -704809, 1658980, 6097630, -954142, 2249240, 5871870, -968161, 2239220, 5873390, -704809, 1658980, 6097630, -968161, 2239220, 5873390, -705418, 1658720, 6097630, -954142, 2249240, 5871870, -1347e3, 3183210, 5342380, -1403950, 3158510, 5342380, -954142, 2249240, 5871870, -1403950, 3158510, 5342380, -968161, 2239220, 5873390, -705418, 1658720, 6097630, -690596, 1625360, 6108230, -704809, 1658980, 6097630, -1411880, 3154970, 5342380, -1403950, 3158510, 5342380, -1644610, 3641890, 4954500, -1411880, 3154970, 5342380, -1644610, 3641890, 4954500, -1645870, 3641140, 4954630, -1685750, 3722780, 4880500, -1645870, 3641140, 4954630, -1644610, 3641890, 4954500, -968161, 2239220, 5873390, -980637, 2230140, 5874760, -732476, 1682170, 6088070, -968161, 2239220, 5873390, -732476, 1682170, 6088070, -712677, 1655610, 6097630, -968161, 2239220, 5873390, -712677, 1655610, 6097630, -705418, 1658720, 6097630, -980637, 2230140, 5874760, -968161, 2239220, 5873390, -1403950, 3158510, 5342380, -980637, 2230140, 5874760, -1403950, 3158510, 5342380, -1411880, 3154970, 5342380, -712677, 1655610, 6097630, -690596, 1625360, 6108230, -705418, 1658720, 6097630, -1419310, 3151640, 5342380, -1411880, 3154970, 5342380, -1645870, 3641140, 4954630, -1419310, 3151640, 5342380, -1645870, 3641140, 4954630, -1647140, 3640390, 4954770, -1685750, 3722780, 4880500, -1647140, 3640390, 4954770, -1645870, 3641140, 4954630, -734052, 1651110, 6096320, -732476, 1682170, 6088070, -980637, 2230140, 5874760, -734052, 1651110, 6096320, -980637, 2230140, 5874760, -992311, 2221560, 5876050, -992311, 2221560, 5876050, -980637, 2230140, 5874760, -1411880, 3154970, 5342380, -992311, 2221560, 5876050, -1411880, 3154970, 5342380, -1419310, 3151640, 5342380, -1445610, 3139660, 5342380, -1419310, 3151640, 5342380, -1647140, 3640390, 4954770, -1445610, 3139660, 5342380, -1647140, 3640390, 4954770, -1651480, 3637800, 4955220, -1651480, 3637800, 4955220, -1647140, 3640390, 4954770, -1685750, 3722780, 4880500, -744301, 1641640, 6097630, -734052, 1651110, 6096320, -992311, 2221560, 5876050, -744301, 1641640, 6097630, -992311, 2221560, 5876050, -1033500, 2190350, 5880630, -744301, 1641640, 6097630, -1033500, 2190350, 5880630, -777751, 1626060, 6097630, -1033500, 2190350, 5880630, -992311, 2221560, 5876050, -1419310, 3151640, 5342380, -1033500, 2190350, 5880630, -1419310, 3151640, 5342380, -1445610, 3139660, 5342380, -772536, 1614720, 6101280, -744301, 1641640, 6097630, -777751, 1626060, 6097630, -1445610, 3139660, 5342380, -1651480, 3637800, 4955220, -1686040, 3616890, 4958860, -1445610, 3139660, 5342380, -1686040, 3616890, 4958860, -1468700, 3128930, 5342380, -1651480, 3637800, 4955220, -1685750, 3722780, 4880500, -1728540, 3713300, 4872800, -1651480, 3637800, 4955220, -1728540, 3713300, 4872800, -1686040, 3616890, 4958860, -777751, 1626060, 6097630, -1033500, 2190350, 5880630, -1038770, 2186260, 5881220, -777751, 1626060, 6097630, -1038770, 2186260, 5881220, -777836, 1626020, 6097630, -1033500, 2190350, 5880630, -1445610, 3139660, 5342380, -1468700, 3128930, 5342380, -1033500, 2190350, 5880630, -1468700, 3128930, 5342380, -1038770, 2186260, 5881220, -772536, 1614720, 6101280, -777751, 1626060, 6097630, -777836, 1626020, 6097630, -1347e3, 3183210, 5342380, -1331090, 3189900, 5342380, -1555940, 3693120, 4945270, -1347e3, 3183210, 5342380, -1555940, 3693120, 4945270, -1559620, 3691050, 4945660, -1559620, 3691050, 4945660, -1555940, 3693120, 4945270, -1613420, 3819860, 483e4, -704809, 1658980, 6097630, -678839, 1669770, 6097630, -930340, 2265920, 5869290, -704809, 1658980, 6097630, -930340, 2265920, 5869290, -954142, 2249240, 5871870, -954142, 2249240, 5871870, -930340, 2265920, 5869290, -1331090, 3189900, 5342380, -954142, 2249240, 5871870, -1331090, 3189900, 5342380, -1347e3, 3183210, 5342380, -690596, 1625360, 6108230, -672591, 1654820, 6102370, -678839, 1669770, 6097630, -690596, 1625360, 6108230, -678839, 1669770, 6097630, -704809, 1658980, 6097630, -1281100, 3210300, 5342380, -1479990, 3734610, 4937480, -1555940, 3693120, 4945270, -1281100, 3210300, 5342380, -1555940, 3693120, 4945270, -1331090, 3189900, 5342380, -1479990, 3734610, 4937480, -1530340, 3868950, 4818030, -1613420, 3819860, 483e4, -1479990, 3734610, 4937480, -1613420, 3819860, 483e4, -1555940, 3693120, 4945270, -678606, 1669870, 6097630, -917998, 2274410, 5867960, -930340, 2265920, 5869290, -678606, 1669870, 6097630, -930340, 2265920, 5869290, -678839, 1669770, 6097630, -917998, 2274410, 5867960, -1281100, 3210300, 5342380, -1331090, 3189900, 5342380, -917998, 2274410, 5867960, -1331090, 3189900, 5342380, -930340, 2265920, 5869290, -678839, 1669770, 6097630, -672591, 1654820, 6102370, -678606, 1669870, 6097630, -1246740, 3223800, 5342380, -1426990, 3762300, 4932090, -1479990, 3734610, 4937480, -1246740, 3223800, 5342380, -1479990, 3734610, 4937480, -1281100, 3210300, 5342380, -1426990, 3762300, 4932090, -1475460, 3912540, 4800040, -1530340, 3868950, 4818030, -1426990, 3762300, 4932090, -1530340, 3868950, 4818030, -1479990, 3734610, 4937480, -678431, 1669940, 6097630, -909442, 2280230, 5867040, -917998, 2274410, 5867960, -678431, 1669940, 6097630, -917998, 2274410, 5867960, -678606, 1669870, 6097630, -909442, 2280230, 5867040, -1246740, 3223800, 5342380, -1281100, 3210300, 5342380, -909442, 2280230, 5867040, -1281100, 3210300, 5342380, -917998, 2274410, 5867960, -672591, 1654820, 6102370, -678431, 1669940, 6097630, -678606, 1669870, 6097630, -1246740, 3223800, 5342380, -1219240, 3234300, 5342380, -142e4, 3765880, 4931380, -1246740, 3223800, 5342380, -142e4, 3765880, 4931380, -1426990, 3762300, 4932090, -1426990, 3762300, 4932090, -142e4, 3765880, 4931380, -1475460, 3912540, 4800040, -678431, 1669940, 6097630, -635368, 1686790, 6097630, -869203, 2306850, 5862760, -678431, 1669940, 6097630, -869203, 2306850, 5862760, -909442, 2280230, 5867040, -909442, 2280230, 5867040, -869203, 2306850, 5862760, -1219240, 3234300, 5342380, -909442, 2280230, 5867040, -1219240, 3234300, 5342380, -1246740, 3223800, 5342380, -672591, 1654820, 6102370, -620118, 1646310, 6110170, -635368, 1686790, 6097630, -672591, 1654820, 6102370, -635368, 1686790, 6097630, -678431, 1669940, 6097630, -1050420, 3293e3, 5342380, -1046340, 3294300, 5342380, -1239650, 3852290, 4913360, -1050420, 3293e3, 5342380, -1239650, 3852290, 4913360, -1240240, 3852030, 4913410, -1265780, 3926430, 4848010, -1240240, 3852030, 4913410, -1239650, 3852290, 4913360, -536225, 1720880, 6097630, -529403, 1722990, 6097630, -742338, 2383520, 5849600, -536225, 1720880, 6097630, -742338, 2383520, 5849600, -748659, 2379950, 5850240, -748659, 2379950, 5850240, -742338, 2383520, 5849600, -1046340, 3294300, 5342380, -748659, 2379950, 5850240, -1046340, 3294300, 5342380, -1050420, 3293e3, 5342380, -443333, 1428650, 6179460, -420924, 1379360, 6192120, -529403, 1722990, 6097630, -443333, 1428650, 6179460, -529403, 1722990, 6097630, -536225, 1720880, 6097630, -1065130, 3288280, 5342380, -1050420, 3293e3, 5342380, -1240240, 3852030, 4913410, -1065130, 3288280, 5342380, -1240240, 3852030, 4913410, -1242250, 3851120, 4913620, -1242250, 3851120, 4913620, -1240240, 3852030, 4913410, -1265780, 3926430, 4848010, -560619, 1713090, 6097630, -536225, 1720880, 6097630, -748659, 2379950, 5850240, -560619, 1713090, 6097630, -748659, 2379950, 5850240, -771421, 2366880, 5852570, -771421, 2366880, 5852570, -748659, 2379950, 5850240, -1050420, 3293e3, 5342380, -771421, 2366880, 5852570, -1050420, 3293e3, 5342380, -1065130, 3288280, 5342380, -457830, 1396280, 6185750, -443333, 1428650, 6179460, -536225, 1720880, 6097630, -457830, 1396280, 6185750, -536225, 1720880, 6097630, -560619, 1713090, 6097630, -1065130, 3288280, 5342380, -1242250, 3851120, 4913620, -1279730, 3834040, 4917330, -1065130, 3288280, 5342380, -1279730, 3834040, 4917330, -109e4, 3280110, 5342380, -1242250, 3851120, 4913620, -1265780, 3926430, 4848010, -1321010, 3953830, 4811110, -1242250, 3851120, 4913620, -1321010, 3953830, 4811110, -1279730, 3834040, 4917330, -560619, 1713090, 6097630, -771421, 2366880, 5852570, -779628, 2362080, 5853420, -560619, 1713090, 6097630, -779628, 2362080, 5853420, -562681, 1712410, 6097630, -771421, 2366880, 5852570, -1065130, 3288280, 5342380, -109e4, 3280110, 5342380, -771421, 2366880, 5852570, -109e4, 3280110, 5342380, -779628, 2362080, 5853420, -562681, 1712410, 6097630, -457830, 1396280, 6185750, -560619, 1713090, 6097630, -1112310, 3272620, 5342380, -109e4, 3280110, 5342380, -1279730, 3834040, 4917330, -1112310, 3272620, 5342380, -1279730, 3834040, 4917330, -1284430, 3831870, 4917790, -1284430, 3831870, 4917790, -1279730, 3834040, 4917330, -1321010, 3953830, 4811110, -598123, 1700360, 6097630, -562681, 1712410, 6097630, -779628, 2362080, 5853420, -598123, 1700360, 6097630, -779628, 2362080, 5853420, -812929, 2342180, 5856860, -812929, 2342180, 5856860, -779628, 2362080, 5853420, -109e4, 3280110, 5342380, -812929, 2342180, 5856860, -109e4, 3280110, 5342380, -1112310, 3272620, 5342380, -579354, 1645160, 6114450, -457830, 1396280, 6185750, -562681, 1712410, 6097630, -579354, 1645160, 6114450, -562681, 1712410, 6097630, -598123, 1700360, 6097630, -1112310, 3272620, 5342380, -1284430, 3831870, 4917790, -1340260, 3805450, 4923360, -1112310, 3272620, 5342380, -1340260, 3805450, 4923360, -1148220, 3260190, 5342380, -1284430, 3831870, 4917790, -1321010, 3953830, 4811110, -1384510, 3931100, 4811870, -1284430, 3831870, 4917790, -1384510, 3931100, 4811870, -1340260, 3805450, 4923360, -598123, 1700360, 6097630, -812929, 2342180, 5856860, -822743, 2336180, 5857880, -598123, 1700360, 6097630, -822743, 2336180, 5857880, -598717, 1700150, 6097630, -812929, 2342180, 5856860, -1112310, 3272620, 5342380, -1148220, 3260190, 5342380, -812929, 2342180, 5856860, -1148220, 3260190, 5342380, -822743, 2336180, 5857880, -598717, 1700150, 6097630, -579354, 1645160, 6114450, -598123, 1700360, 6097630, -1170900, 3252120, 5342380, -1148220, 3260190, 5342380, -1340260, 3805450, 4923360, -1170900, 3252120, 5342380, -1340260, 3805450, 4923360, -1345300, 3803020, 4923860, -1345300, 3803020, 4923860, -1340260, 3805450, 4923360, -1384510, 3931100, 4811870, -634779, 1687010, 6097630, -598717, 1700150, 6097630, -822743, 2336180, 5857880, -634779, 1687010, 6097630, -822743, 2336180, 5857880, -856488, 2315010, 5861420, -856488, 2315010, 5861420, -822743, 2336180, 5857880, -1148220, 3260190, 5342380, -856488, 2315010, 5861420, -1148220, 3260190, 5342380, -1170900, 3252120, 5342380, -620118, 1646310, 6110170, -579354, 1645160, 6114450, -598717, 1700150, 6097630, -620118, 1646310, 6110170, -598717, 1700150, 6097630, -634779, 1687010, 6097630, -1170960, 3252100, 5342380, -1345300, 3803020, 4923860, -142e4, 3765880, 4931380, -1170960, 3252100, 5342380, -142e4, 3765880, 4931380, -1219240, 3234300, 5342380, -1345300, 3803020, 4923860, -1384510, 3931100, 4811870, -1475460, 3912540, 4800040, -1345300, 3803020, 4923860, -1475460, 3912540, 4800040, -142e4, 3765880, 4931380, -634779, 1687010, 6097630, -856488, 2315010, 5861420, -869203, 2306850, 5862760, -634779, 1687010, 6097630, -869203, 2306850, 5862760, -635368, 1686790, 6097630, -856488, 2315010, 5861420, -1170900, 3252120, 5342380, -1219240, 3234300, 5342380, -856488, 2315010, 5861420, -1219240, 3234300, 5342380, -869203, 2306850, 5862760, -635368, 1686790, 6097630, -620118, 1646310, 6110170, -634779, 1687010, 6097630, -1987290, 3343530, 5037960, -1944600, 3344240, 5054010, -1985510, 3414060, 4991460, -1987290, 3343530, 5037960, -1985510, 3414060, 4991460, -1992570, 3408780, 4992250, -1992570, 3408780, 4992250, -1985510, 3414060, 4991460, -1993970, 3428450, 4978290, -1987290, 3343530, 5037960, -1992570, 3408780, 4992250, -2007410, 3397590, 4993920, -1987290, 3343530, 5037960, -2007410, 3397590, 4993920, -2012820, 3384860, 5000340, -2007410, 3397590, 4993920, -1992570, 3408780, 4992250, -1993970, 3428450, 4978290, -2864880, 2494e3, 5106600, -2809920, 2459470, 5153350, -2858170, 2503900, 5105520, -2858170, 2503900, 5105520, -3266510, 2884380, 4641730, -3249960, 2721050, 4749970, -2858170, 2503900, 5105520, -3249960, 2721050, 4749970, -2864880, 2494e3, 5106600, -2860980, 2408990, 5149130, -2809920, 2459470, 5153350, -2864880, 2494e3, 5106600, -2860980, 2408990, 5149130, -2864880, 2494e3, 5106600, -2900210, 2440730, 5112350, -3249960, 2721050, 4749970, -2900210, 2440730, 5112350, -2864880, 2494e3, 5106600, -2904340, 2434360, 5113040, -2860980, 2408990, 5149130, -2900210, 2440730, 5112350, -2904340, 2434360, 5113040, -2900210, 2440730, 5112350, -3249960, 2721050, 4749970, -2904340, 2434360, 5113040, -3249960, 2721050, 4749970, -3091780, 2539890, 4950280, -2923400, 2404650, 5116210, -2860980, 2408990, 5149130, -2904340, 2434360, 5113040, -2923400, 2404650, 5116210, -2904340, 2434360, 5113040, -3091780, 2539890, 4950280, -2923400, 2404650, 5116210, -3091780, 2539890, 4950280, -2997730, 2397770, 5076540, -3057970, 2442980, 5019120, -2997730, 2397770, 5076540, -3091780, 2539890, 4950280, -2800280, 2586560, 5096440, -2757970, 2554530, 5135260, -2796320, 2592050, 5095830, -2796320, 2592050, 5095830, -3288290, 3081220, 4498610, -3291290, 2940680, 4588960, -2796320, 2592050, 5095830, -3291290, 2940680, 4588960, -2800280, 2586560, 5096440, -2815790, 2520710, 5120670, -2757970, 2554530, 5135260, -2800280, 2586560, 5096440, -2815790, 2520710, 5120670, -2800280, 2586560, 5096440, -2834930, 2537660, 5101830, -3291290, 2940680, 4588960, -2834930, 2537660, 5101830, -2800280, 2586560, 5096440, -2809920, 2459470, 5153350, -2815790, 2520710, 5120670, -2834930, 2537660, 5101830, -2809920, 2459470, 5153350, -2834930, 2537660, 5101830, -2857080, 2505500, 5105350, -2857080, 2505500, 5105350, -2834930, 2537660, 5101830, -3291290, 2940680, 4588960, -2809920, 2459470, 5153350, -2857080, 2505500, 5105350, -2858170, 2503900, 5105520, -2857080, 2505500, 5105350, -3291290, 2940680, 4588960, -3266510, 2884380, 4641730, -2857080, 2505500, 5105350, -3266510, 2884380, 4641730, -2858170, 2503900, 5105520, -2757970, 2554530, 5135260, -2694780, 2539260, 5175940, -2778620, 2616330, 5093130, -2757970, 2554530, 5135260, -2778620, 2616330, 5093130, -2796320, 2592050, 5095830, -2796320, 2592050, 5095830, -2778620, 2616330, 5093130, -3288290, 3081220, 4498610, -2778620, 2616330, 5093130, -2694780, 2539260, 5175940, -2772090, 2625190, 5092130, -2772090, 2625190, 5092130, -3279170, 3220750, 4407210, -3288290, 3081220, 4498610, -2772090, 2625190, 5092130, -3288290, 3081220, 4498610, -2778620, 2616330, 5093130, -2694780, 2539260, 5175940, -2615810, 2604330, 5184060, -2716120, 2698920, 5083790, -2694780, 2539260, 5175940, -2716120, 2698920, 5083790, -2772090, 2625190, 5092130, -2772090, 2625190, 5092130, -2716120, 2698920, 5083790, -3279170, 3220750, 4407210, -2716120, 2698920, 5083790, -2615810, 2604330, 5184060, -2712800, 2703160, 5083310, -2712800, 2703160, 5083310, -2996700, 2993980, 4752290, -3279170, 3220750, 4407210, -2712800, 2703160, 5083310, -3279170, 3220750, 4407210, -2716120, 2698920, 5083790, -2441240, 2446960, 5342380, -2426030, 2462040, 5342380, -2699700, 2719840, 5081410, -2441240, 2446960, 5342380, -2699700, 2719840, 5081410, -2712800, 2703160, 5083310, -2441240, 2446960, 5342380, -2712800, 2703160, 5083310, -2615810, 2604330, 5184060, -2712800, 2703160, 5083310, -2699700, 2719840, 5081410, -2996700, 2993980, 4752290, -1559620, 1614750, 5949970, -1414810, 1472370, 6022180, -1558560, 1616420, 5949800, -1559620, 1614750, 5949970, -1558560, 1616420, 5949800, -2426030, 2462040, 5342380, -1559620, 1614750, 5949970, -2426030, 2462040, 5342380, -2441240, 2446960, 5342380, -2382040, 2504620, 5342380, -2644020, 2788650, 5073440, -2699700, 2719840, 5081410, -2382040, 2504620, 5342380, -2699700, 2719840, 5081410, -2426030, 2462040, 5342380, -2644020, 2788650, 5073440, -2925960, 3096930, 4730500, -2996700, 2993980, 4752290, -2644020, 2788650, 5073440, -2996700, 2993980, 4752290, -2699700, 2719840, 5081410, -1558560, 1616420, 5949800, -1414810, 1472370, 6022180, -1555550, 1621150, 5949300, -1555550, 1621150, 5949300, -2382040, 2504620, 5342380, -2426030, 2462040, 5342380, -1555550, 1621150, 5949300, -2426030, 2462040, 5342380, -1558560, 1616420, 5949800, -2359520, 2525850, 5342380, -2614860, 2823400, 5069350, -2644020, 2788650, 5073440, -2359520, 2525850, 5342380, -2644020, 2788650, 5073440, -2382040, 2504620, 5342380, -2614860, 2823400, 5069350, -2900780, 3164870, 4701150, -2925960, 3096930, 4730500, -2614860, 2823400, 5069350, -2925960, 3096930, 4730500, -2644020, 2788650, 5073440, -1414810, 1472370, 6022180, -1554010, 1623570, 5949050, -1555550, 1621150, 5949300, -1554010, 1623570, 5949050, -2359520, 2525850, 5342380, -2382040, 2504620, 5342380, -1554010, 1623570, 5949050, -2382040, 2504620, 5342380, -1555550, 1621150, 5949300, -3274640, 3289650, 4359750, -3063800, 3198250, 4574260, -3227970, 3397170, 4312160, -3274640, 3289650, 4359750, -3021180, 3116310, 4657840, -3063800, 3198250, 4574260, -3274640, 3289650, 4359750, -3021280, 3074370, 4685380, -3021180, 3116310, 4657840, -2996700, 2993980, 4752290, -3021280, 3074370, 4685380, -3274640, 3289650, 4359750, -3279170, 3220750, 4407210, -2996700, 2993980, 4752290, -3274640, 3289650, 4359750, -3063800, 3198250, 4574260, -3078830, 3290460, 4498660, -3227970, 3397170, 4312160, -3227970, 3397170, 4312160, -3078830, 3290460, 4498660, -3191030, 3433230, 4311100, -3078830, 3290460, 4498660, -3128410, 3440730, 4350570, -3191030, 3433230, 4311100, -3078830, 3290460, 4498660, -2999100, 3344540, 4512520, -3128410, 3440730, 4350570, -2999100, 3344540, 4512520, -2966940, 3410070, 4484830, -3026670, 3446530, 4417e3, -3128410, 3440730, 4350570, -2999100, 3344540, 4512520, -3026670, 3446530, 4417e3, -3128410, 3440730, 4350570, -3026670, 3446530, 4417e3, -3077480, 3522190, 4321810, -3128410, 3440730, 4350570, -3077480, 3522190, 4321810, -3083250, 3554880, 4291030, -3077480, 3522190, 4321810, -3072550, 3579740, 4278110, -3083250, 3554880, 4291030, -3083250, 3554880, 4291030, -3072550, 3579740, 4278110, -3089830, 3582130, 4263730, -3335230, 2497430, 4812860, -3002060, 2294670, 5121140, -3403900, 2606340, 4706570, -2997360, 2283040, 5129030, -2960720, 2259140, 5160580, -2994420, 2288080, 5128500, -2994420, 2288080, 5128500, -3002060, 2294670, 5121140, -3335230, 2497430, 4812860, -2994420, 2288080, 5128500, -3335230, 2497430, 4812860, -2997360, 2283040, 5129030, -3001890, 2275250, 5129830, -2960720, 2259140, 5160580, -2997360, 2283040, 5129030, -3001890, 2275250, 5129830, -2997360, 2283040, 5129030, -3335230, 2497430, 4812860, -3001890, 2275250, 5129830, -3335230, 2497430, 4812860, -3018470, 2281610, 5117350, -3169350, 2367960, 4986090, -3018470, 2281610, 5117350, -3335230, 2497430, 4812860, -3256850, 2396950, 4915830, -3169350, 2367960, 4986090, -3335230, 2497430, 4812860, -3421270, 2426520, 4788840, -3256850, 2396950, 4915830, -3335230, 2497430, 4812860, -3002060, 2294670, 5121140, -2996970, 2368310, 5090700, -3180420, 2468770, 4930200, -3002060, 2294670, 5121140, -3180420, 2468770, 4930200, -3403900, 2606340, 4706570, -3403900, 2606340, 4706570, -3180420, 2468770, 4930200, -3268850, 2541430, 4835170, -3485380, 2650530, 4622070, -3403900, 2606340, 4706570, -3268850, 2541430, 4835170, -3485380, 2650530, 4622070, -3268850, 2541430, 4835170, -3503920, 2728510, 4562680, -3268850, 2541430, 4835170, -3308640, 2593940, 4780270, -3384440, 2642500, 4700480, -3268850, 2541430, 4835170, -3384440, 2642500, 4700480, -3503920, 2728510, 4562680, -3503920, 2728510, 4562680, -3384440, 2642500, 4700480, -3441950, 2698150, 4627020, -3515110, 2597910, 4629360, -3403900, 2606340, 4706570, -3485380, 2650530, 4622070, -3515110, 2597910, 4629360, -3485380, 2650530, 4622070, -3559130, 2633140, 4575880, -1831250, 970048, 6011870, -1754370, 998606, 6029970, -1816e3, 1031420, 6006310, -1831250, 970048, 6011870, -1816e3, 1031420, 6006310, -2847230, 1556360, 5472640, -1831250, 970048, 6011870, -2847230, 1556360, 5472640, -1870060, 954119, 6002530, -1816e3, 1031420, 6006310, -1754370, 998606, 6029970, -1815170, 1034550, 6006030, -1815170, 1034550, 6006030, -2791380, 1625670, 5481200, -2847230, 1556360, 5472640, -1815170, 1034550, 6006030, -2847230, 1556360, 5472640, -1816e3, 1031420, 6006310, -1754370, 998606, 6029970, -1685100, 992598, 6050550, -1807260, 1063280, 6003410, -1754370, 998606, 6029970, -1807260, 1063280, 6003410, -1815170, 1034550, 6006030, -1815170, 1034550, 6006030, -1807260, 1063280, 6003410, -2791380, 1625670, 5481200, -1807260, 1063280, 6003410, -1685100, 992598, 6050550, -1805930, 1067980, 6002980, -1805930, 1067980, 6002980, -2795760, 1710230, 5453350, -2791380, 1625670, 5481200, -1805930, 1067980, 6002980, -2791380, 1625670, 5481200, -1807260, 1063280, 6003410, -1685100, 992598, 6050550, -1802470, 1079990, 6001880, -1805930, 1067980, 6002980, -1802470, 1079990, 6001880, -2686990, 1847610, 5463140, -2795760, 1710230, 5453350, -1802470, 1079990, 6001880, -2795760, 1710230, 5453350, -1805930, 1067980, 6002980, -2619100, 2255570, 5342380, -2607450, 2269020, 5342380, -2620010, 2280910, 5331240, -1678570, 1401210, 5971540, -1553040, 1309170, 6025780, -1672130, 1414360, 5970260, -1672130, 1414360, 5970260, -2607450, 2269020, 5342380, -2619100, 2255570, 5342380, -1672130, 1414360, 5970260, -2619100, 2255570, 5342380, -2598960, 2016110, 5446230, -1672130, 1414360, 5970260, -2598960, 2016110, 5446230, -1678570, 1401210, 5971540, -1455070, 1200830, 6072310, -1553040, 1309170, 6025780, -1678570, 1401210, 5971540, -1455070, 1200830, 6072310, -1678570, 1401210, 5971540, -1689880, 1377440, 5973870, -2598960, 2016110, 5446230, -1689880, 1377440, 5973870, -1678570, 1401210, 5971540, -1685100, 992598, 6050550, -1455070, 1200830, 6072310, -1689880, 1377440, 5973870, -1685100, 992598, 6050550, -1689880, 1377440, 5973870, -1798680, 1092800, 6000710, -1798680, 1092800, 6000710, -1689880, 1377440, 5973870, -2598960, 2016110, 5446230, -1685100, 992598, 6050550, -1798680, 1092800, 6000710, -1802470, 1079990, 6001880, -1798680, 1092800, 6000710, -2598960, 2016110, 5446230, -2686990, 1847610, 5463140, -1798680, 1092800, 6000710, -2686990, 1847610, 5463140, -1802470, 1079990, 6001880, -2452280, 2435900, 5342380, -2615810, 2604330, 5184060, -2620010, 2280910, 5331240, -2452280, 2435900, 5342380, -2620010, 2280910, 5331240, -2605270, 2271520, 5342380, -1601900, 1545200, 5957160, -1437650, 1409720, 6031690, -1591280, 1563250, 5955310, -1591280, 1563250, 5955310, -2452280, 2435900, 5342380, -2605270, 2271520, 5342380, -1591280, 1563250, 5955310, -2605270, 2271520, 5342380, -1601900, 1545200, 5957160, -2620010, 2280910, 5331240, -2606260, 2270390, 5342380, -2605270, 2271520, 5342380, -1508460, 1382340, 6020800, -1437650, 1409720, 6031690, -1601900, 1545200, 5957160, -1508460, 1382340, 6020800, -1601900, 1545200, 5957160, -1633650, 1488750, 5962870, -1633650, 1488750, 5962870, -1601900, 1545200, 5957160, -2605270, 2271520, 5342380, -1633650, 1488750, 5962870, -2605270, 2271520, 5342380, -2606260, 2270390, 5342380, -2620010, 2280910, 5331240, -2606620, 2269980, 5342380, -2606260, 2270390, 5342380, -1503960, 1343090, 6030730, -1508460, 1382340, 6020800, -1633650, 1488750, 5962870, -1503960, 1343090, 6030730, -1633650, 1488750, 5962870, -1646110, 1465440, 5965200, -1646110, 1465440, 5965200, -1633650, 1488750, 5962870, -2606260, 2270390, 5342380, -1646110, 1465440, 5965200, -2606260, 2270390, 5342380, -2606620, 2269980, 5342380, -2607450, 2269020, 5342380, -2606620, 2269980, 5342380, -2620010, 2280910, 5331240, -1553040, 1309170, 6025780, -1503960, 1343090, 6030730, -1646110, 1465440, 5965200, -1553040, 1309170, 6025780, -1646110, 1465440, 5965200, -1672130, 1414360, 5970260, -1672130, 1414360, 5970260, -1646110, 1465440, 5965200, -2606620, 2269980, 5342380, -1672130, 1414360, 5970260, -2606620, 2269980, 5342380, -2607450, 2269020, 5342380, -2272750, 2604200, 5342380, -2536650, 2912640, 5058670, -2589740, 2852680, 5065880, -2272750, 2604200, 5342380, -2589740, 2852680, 5065880, -2313020, 2568500, 5342380, -2536650, 2912640, 5058670, -2815750, 3240630, 4701230, -2900780, 3164870, 4701150, -2536650, 2912640, 5058670, -2900780, 3164870, 4701150, -2589740, 2852680, 5065880, -1500310, 1703450, 5940550, -1389140, 1581840, 6000500, -1497860, 1706900, 5940180, -1497860, 1706900, 5940180, -2272750, 2604200, 5342380, -2313020, 2568500, 5342380, -1497860, 1706900, 5940180, -2313020, 2568500, 5342380, -1500310, 1703450, 5940550, -2331030, 2552170, 5342380, -2313020, 2568500, 5342380, -2589740, 2852680, 5065880, -2331030, 2552170, 5342380, -2589740, 2852680, 5065880, -2599390, 2841510, 5067210, -2900780, 3164870, 4701150, -2599390, 2841510, 5067210, -2589740, 2852680, 5065880, -1340990, 1476150, 6038020, -1389140, 1581840, 6000500, -1500310, 1703450, 5940550, -1340990, 1476150, 6038020, -1500310, 1703450, 5940550, -1521320, 1673080, 5943810, -1521320, 1673080, 5943810, -1500310, 1703450, 5940550, -2313020, 2568500, 5342380, -1521320, 1673080, 5943810, -2313020, 2568500, 5342380, -2331030, 2552170, 5342380, -2359520, 2525850, 5342380, -2331030, 2552170, 5342380, -2599390, 2841510, 5067210, -2359520, 2525850, 5342380, -2599390, 2841510, 5067210, -2614860, 2823400, 5069350, -2614860, 2823400, 5069350, -2599390, 2841510, 5067210, -2900780, 3164870, 4701150, -1414810, 1472370, 6022180, -1340990, 1476150, 6038020, -1521320, 1673080, 5943810, -1414810, 1472370, 6022180, -1521320, 1673080, 5943810, -1554010, 1623570, 5949050, -1554010, 1623570, 5949050, -1521320, 1673080, 5943810, -2331030, 2552170, 5342380, -1554010, 1623570, 5949050, -2331030, 2552170, 5342380, -2359520, 2525850, 5342380, -2124650, 2726380, 5342380, -2381230, 3074620, 5038450, -2453610, 3001570, 5047700, -2124650, 2726380, 5342380, -2453610, 3001570, 5047700, -2178610, 2683450, 5342380, -2381230, 3074620, 5038450, -2522090, 3268260, 4845610, -2637400, 3211060, 4822560, -2381230, 3074620, 5038450, -2637400, 3211060, 4822560, -2453610, 3001570, 5047700, -1432200, 1794990, 5930460, -1230920, 1549700, 6043e3, -1426180, 1802620, 5929610, -1426180, 1802620, 5929610, -2124650, 2726380, 5342380, -2178610, 2683450, 5342380, -1426180, 1802620, 5929610, -2178610, 2683450, 5342380, -1432200, 1794990, 5930460, -2199150, 2666650, 5342380, -2178610, 2683450, 5342380, -2453610, 3001570, 5047700, -2199150, 2666650, 5342380, -2453610, 3001570, 5047700, -2462150, 2992670, 5048820, -2462150, 2992670, 5048820, -2453610, 3001570, 5047700, -2637400, 3211060, 4822560, -1317830, 1586430, 6015260, -1230920, 1549700, 6043e3, -1432200, 1794990, 5930460, -1317830, 1586430, 6015260, -1432200, 1794990, 5930460, -1459720, 1759170, 5934460, -1459720, 1759170, 5934460, -1432200, 1794990, 5930460, -2178610, 2683450, 5342380, -1459720, 1759170, 5934460, -2178610, 2683450, 5342380, -2199150, 2666650, 5342380, -2199150, 2666650, 5342380, -2462150, 2992670, 5048820, -2507950, 2944020, 5054840, -2199150, 2666650, 5342380, -2507950, 2944020, 5054840, -2233450, 2637980, 5342380, -2462150, 2992670, 5048820, -2637400, 3211060, 4822560, -2742060, 3201250, 4770780, -2462150, 2992670, 5048820, -2742060, 3201250, 4770780, -2507950, 2944020, 5054840, -1462500, 1755470, 5934870, -1317830, 1586430, 6015260, -1459720, 1759170, 5934460, -1459720, 1759170, 5934460, -2199150, 2666650, 5342380, -2233450, 2637980, 5342380, -1459720, 1759170, 5934460, -2233450, 2637980, 5342380, -1462500, 1755470, 5934870, -2261090, 2614330, 5342380, -2233450, 2637980, 5342380, -2507950, 2944020, 5054840, -2261090, 2614330, 5342380, -2507950, 2944020, 5054840, -2521070, 2929770, 5056580, -2521070, 2929770, 5056580, -2507950, 2944020, 5054840, -2742060, 3201250, 4770780, -1389140, 1581840, 6000500, -1317830, 1586430, 6015260, -1462500, 1755470, 5934870, -1389140, 1581840, 6000500, -1462500, 1755470, 5934870, -1497160, 1707910, 5940070, -1497160, 1707910, 5940070, -1462500, 1755470, 5934870, -2233450, 2637980, 5342380, -1497160, 1707910, 5940070, -2233450, 2637980, 5342380, -2261090, 2614330, 5342380, -2261090, 2614330, 5342380, -2521070, 2929770, 5056580, -2536650, 2912640, 5058670, -2261090, 2614330, 5342380, -2536650, 2912640, 5058670, -2272750, 2604200, 5342380, -2521070, 2929770, 5056580, -2742060, 3201250, 4770780, -2815750, 3240630, 4701230, -2521070, 2929770, 5056580, -2815750, 3240630, 4701230, -2536650, 2912640, 5058670, -1389140, 1581840, 6000500, -1497160, 1707910, 5940070, -1497860, 1706900, 5940180, -1497160, 1707910, 5940070, -2261090, 2614330, 5342380, -2272700, 2604240, 5342380, -1497160, 1707910, 5940070, -2272700, 2604240, 5342380, -1497860, 1706900, 5940180, -2111250, 2736770, 5342380, -2362980, 3092440, 5036150, -2381230, 3074620, 5038450, -2111250, 2736770, 5342380, -2381230, 3074620, 5038450, -2124650, 2726380, 5342380, -2362980, 3092440, 5036150, -2450180, 3217840, 4915280, -2522090, 3268260, 4845610, -2362980, 3092440, 5036150, -2522090, 3268260, 4845610, -2381230, 3074620, 5038450, -1230920, 1549700, 6043e3, -1424700, 1804500, 5929400, -1426180, 1802620, 5929610, -1424700, 1804500, 5929400, -2111250, 2736770, 5342380, -2124650, 2726380, 5342380, -1424700, 1804500, 5929400, -2124650, 2726380, 5342380, -1426180, 1802620, 5929610, -2111250, 2736770, 5342380, -2089690, 2753260, 5342380, -2357090, 3098150, 5035410, -2111250, 2736770, 5342380, -2357090, 3098150, 5035410, -2362980, 3092440, 5036150, -2362980, 3092440, 5036150, -2357090, 3098150, 5035410, -2450180, 3217840, 4915280, -1230920, 1549700, 6043e3, -1088730, 1446050, 6095400, -1392090, 1844610, 5924820, -1230920, 1549700, 6043e3, -1392090, 1844610, 5924820, -1424700, 1804500, 5929400, -1424700, 1804500, 5929400, -1392090, 1844610, 5924820, -2089690, 2753260, 5342380, -1424700, 1804500, 5929400, -2089690, 2753260, 5342380, -2111250, 2736770, 5342380, -1164170, 1458810, 6078500, -1088730, 1446050, 6095400, -1230920, 1549700, 6043e3, -1218840, 1502350, 6057290, -1164170, 1458810, 6078500, -1230920, 1549700, 6043e3, -2077700, 2762320, 5342380, -2341140, 3113460, 5033420, -2357090, 3098150, 5035410, -2077700, 2762320, 5342380, -2357090, 3098150, 5035410, -2089690, 2753260, 5342380, -2341140, 3113460, 5033420, -2398660, 3190190, 4958230, -2450180, 3217840, 4915280, -2341140, 3113460, 5033420, -2450180, 3217840, 4915280, -2357090, 3098150, 5035410, -1392090, 1844610, 5924820, -1088730, 1446050, 6095400, -1390150, 1846930, 5924560, -1390150, 1846930, 5924560, -2077700, 2762320, 5342380, -2089690, 2753260, 5342380, -1390150, 1846930, 5924560, -2089690, 2753260, 5342380, -1392090, 1844610, 5924820, -2064130, 2772480, 5342380, -2323e3, 3130660, 5031170, -2341140, 3113460, 5033420, -2064130, 2772480, 5342380, -2341140, 3113460, 5033420, -2077700, 2762320, 5342380, -2323e3, 3130660, 5031170, -2355390, 3175700, 4987990, -2398660, 3190190, 4958230, -2323e3, 3130660, 5031170, -2398660, 3190190, 4958230, -2341140, 3113460, 5033420, -1088730, 1446050, 6095400, -1387970, 1849540, 5924260, -1390150, 1846930, 5924560, -1387970, 1849540, 5924260, -2064130, 2772480, 5342380, -2077700, 2762320, 5342380, -1387970, 1849540, 5924260, -2077700, 2762320, 5342380, -1390150, 1846930, 5924560, -2304080, 3148360, 5028840, -2323e3, 3130660, 5031170, -2064130, 2772480, 5342380, -2304080, 3148360, 5028840, -2064130, 2772480, 5342380, -2039910, 2790350, 5342380, -2304080, 3148360, 5028840, -2039910, 2790350, 5342380, -2268880, 3129050, 5056630, -2323e3, 3130660, 5031170, -2304080, 3148360, 5028840, -2355390, 3175700, 4987990, -1088730, 1446050, 6095400, -1384080, 1854180, 5923720, -1387970, 1849540, 5924260, -1384080, 1854180, 5923720, -2039910, 2790350, 5342380, -2064130, 2772480, 5342380, -1384080, 1854180, 5923720, -2064130, 2772480, 5342380, -1387970, 1849540, 5924260, -2039910, 2790350, 5342380, -2023070, 2802580, 5342380, -2268880, 3129050, 5056630, -1088730, 1446050, 6095400, -1048370, 1476290, 6095220, -1350790, 1892830, 5919210, -1088730, 1446050, 6095400, -1350790, 1892830, 5919210, -1384080, 1854180, 5923720, -1384080, 1854180, 5923720, -1350790, 1892830, 5919210, -2023070, 2802580, 5342380, -1384080, 1854180, 5923720, -2023070, 2802580, 5342380, -2039910, 2790350, 5342380, -2104480, 3170980, 5101110, -1908360, 2881910, 5342380, -1907710, 2882340, 5342380, -1287760, 1961470, 5910960, -1289290, 1959850, 5911160, -988529, 1507240, 6097630, -1287760, 1961470, 5910960, -988529, 1507240, 6097630, -988292, 1507400, 6097630, -1287760, 1961470, 5910960, -988292, 1507400, 6097630, -1025940, 1567740, 6076300, -1289290, 1959850, 5911160, -1287760, 1961470, 5910960, -1907710, 2882340, 5342380, -1289290, 1959850, 5911160, -1907710, 2882340, 5342380, -1908360, 2881910, 5342380, -988529, 1507240, 6097630, -982711, 1498430, 6100720, -988292, 1507400, 6097630, -1928590, 2868420, 5342380, -1908360, 2881910, 5342380, -2104480, 3170980, 5101110, -1019750, 1486300, 6097630, -988529, 1507240, 6097630, -1289290, 1959850, 5911160, -1019750, 1486300, 6097630, -1289290, 1959850, 5911160, -1334780, 1910800, 5917080, -1019750, 1486300, 6097630, -1334780, 1910800, 5917080, -1048370, 1476290, 6095220, -1334780, 1910800, 5917080, -1289290, 1959850, 5911160, -1908360, 2881910, 5342380, -1334780, 1910800, 5917080, -1908360, 2881910, 5342380, -1928590, 2868420, 5342380, -1019750, 1486300, 6097630, -982711, 1498430, 6100720, -988529, 1507240, 6097630, -1928590, 2868420, 5342380, -2104480, 3170980, 5101110, -2201870, 3136670, 5081310, -1928590, 2868420, 5342380, -2201870, 3136670, 5081310, -1989020, 2826840, 5342380, -1048370, 1476290, 6095220, -1334780, 1910800, 5917080, -1345050, 1899330, 5918440, -1334780, 1910800, 5917080, -1928590, 2868420, 5342380, -1989020, 2826840, 5342380, -1334780, 1910800, 5917080, -1989020, 2826840, 5342380, -1345050, 1899330, 5918440, -1989020, 2826840, 5342380, -2201870, 3136670, 5081310, -2268880, 3129050, 5056630, -1989020, 2826840, 5342380, -2268880, 3129050, 5056630, -2023070, 2802580, 5342380, -1350790, 1892830, 5919210, -1048370, 1476290, 6095220, -1345050, 1899330, 5918440, -1345050, 1899330, 5918440, -1989020, 2826840, 5342380, -2023070, 2802580, 5342380, -1345050, 1899330, 5918440, -2023070, 2802580, 5342380, -1350790, 1892830, 5919210, -1853760, 2917340, 5342380, -2031890, 3220840, 5099310, -2104480, 3170980, 5101110, -1853760, 2917340, 5342380, -2104480, 3170980, 5101110, -1907710, 2882340, 5342380, -1287760, 1961470, 5910960, -1025940, 1567740, 6076300, -1278840, 1970740, 5909820, -1278840, 1970740, 5909820, -1853760, 2917340, 5342380, -1907710, 2882340, 5342380, -1278840, 1970740, 5909820, -1907710, 2882340, 5342380, -1287760, 1961470, 5910960, -1803490, 2948680, 5342380, -1969830, 3277960, 5087330, -2031890, 3220840, 5099310, -1803490, 2948680, 5342380, -2031890, 3220840, 5099310, -1853760, 2917340, 5342380, -1025940, 1567740, 6076300, -1270430, 1979360, 5908760, -1278840, 1970740, 5909820, -1270430, 1979360, 5908760, -1803490, 2948680, 5342380, -1853760, 2917340, 5342380, -1270430, 1979360, 5908760, -1853760, 2917340, 5342380, -1278840, 1970740, 5909820, -1772610, 2967340, 5342380, -1944600, 3344240, 5054010, -1969830, 3277960, 5087330, -1772610, 2967340, 5342380, -1969830, 3277960, 5087330, -1803490, 2948680, 5342380, -1025940, 1567740, 6076300, -1265270, 1984630, 5908100, -1270440, 1979370, 5908760, -1265270, 1984630, 5908100, -1772610, 2967340, 5342380, -1803490, 2948680, 5342380, -1265270, 1984630, 5908100, -1803490, 2948680, 5342380, -1270440, 1979370, 5908760, -639638, 1427660, 6162580, -603521, 1399210, 6172670, -656182, 1481810, 6148130, -656182, 1481810, 6148130, -603521, 1399210, 6172670, -639820, 1523640, 6139690, -603521, 1399210, 6172670, -528960, 1372470, 6185410, -639820, 1523640, 6139690, -639820, 1523640, 6139690, -528960, 1372470, 6185410, -589884, 1607500, 6123390, -528960, 1372470, 6185410, -579354, 1645160, 6114450, -589884, 1607500, 6123390, -873783, 3344210, 5342380, -1027930, 3940070, 4892700, -1111560, 3907090, 4900800, -873783, 3344210, 5342380, -1111560, 3907090, 4900800, -928529, 3329430, 5342380, -1027930, 3940070, 4892700, -1031060, 3952080, 4882420, -1114990, 3917590, 4891700, -1027930, 3940070, 4892700, -1114990, 3917590, 4891700, -1111560, 3907090, 4900800, -457213, 1743540, 6097630, -638559, 2438720, 5839150, -658077, 2428830, 5841100, -457213, 1743540, 6097630, -658077, 2428830, 5841100, -462232, 1742210, 6097630, -638559, 2438720, 5839150, -873783, 3344210, 5342380, -928529, 3329430, 5342380, -638559, 2438720, 5839150, -928529, 3329430, 5342380, -658077, 2428830, 5841100, -462232, 1742210, 6097630, -361849, 1378800, 6195960, -457213, 1743540, 6097630, -962416, 3319790, 5342380, -928529, 3329430, 5342380, -1111560, 3907090, 4900800, -962416, 3319790, 5342380, -1111560, 3907090, 4900800, -1112290, 3906790, 4900870, -1112290, 3906790, 4900870, -1111560, 3907090, 4900800, -1114990, 3917590, 4891700, -522e3, 1725250, 6097630, -462232, 1742210, 6097630, -658077, 2428830, 5841100, -522e3, 1725250, 6097630, -658077, 2428830, 5841100, -713578, 2399460, 5846680, -713578, 2399460, 5846680, -658077, 2428830, 5841100, -928529, 3329430, 5342380, -713578, 2399460, 5846680, -928529, 3329430, 5342380, -962416, 3319790, 5342380, -420924, 1379360, 6192120, -361849, 1378800, 6195960, -462232, 1742210, 6097630, -420924, 1379360, 6192120, -462232, 1742210, 6097630, -522e3, 1725250, 6097630, -962416, 3319790, 5342380, -1112290, 3906790, 4900870, -1177900, 3879360, 4907280, -962416, 3319790, 5342380, -1177900, 3879360, 4907280, -1005380, 3307030, 5342380, -1112290, 3906790, 4900870, -1114990, 3917590, 4891700, -1186610, 3908280, 4882340, -1112290, 3906790, 4900870, -1186610, 3908280, 4882340, -1177900, 3879360, 4907280, -522e3, 1725250, 6097630, -713578, 2399460, 5846680, -728367, 2391330, 5848170, -522e3, 1725250, 6097630, -728367, 2391330, 5848170, -525793, 1724100, 6097630, -713578, 2399460, 5846680, -962416, 3319790, 5342380, -1005380, 3307030, 5342380, -713578, 2399460, 5846680, -1005380, 3307030, 5342380, -728367, 2391330, 5848170, -420924, 1379360, 6192120, -522e3, 1725250, 6097630, -525793, 1724100, 6097630, -1005380, 3307030, 5342380, -1177900, 3879360, 4907280, -1239650, 3852290, 4913360, -1005380, 3307030, 5342380, -1239650, 3852290, 4913360, -1046340, 3294300, 5342380, -1177900, 3879360, 4907280, -1186610, 3908280, 4882340, -1265780, 3926430, 4848010, -1177900, 3879360, 4907280, -1265780, 3926430, 4848010, -1239650, 3852290, 4913360, -525793, 1724100, 6097630, -728367, 2391330, 5848170, -742338, 2383520, 5849600, -525793, 1724100, 6097630, -742338, 2383520, 5849600, -529403, 1722990, 6097630, -728367, 2391330, 5848170, -1005380, 3307030, 5342380, -1046340, 3294300, 5342380, -728367, 2391330, 5848170, -1046340, 3294300, 5342380, -742338, 2383520, 5849600, -529403, 1722990, 6097630, -420924, 1379360, 6192120, -525793, 1724100, 6097630, -200797, 1117440, 6255230, -141134, 1019200, 6273490, -213005, 1215480, 6236640, -213005, 1215480, 6236640, -141134, 1019200, 6273490, -168418, 1236240, 6233940, -141134, 1019200, 6273490, -100750, 968180, 6282290, -168418, 1236240, 6233940, -168418, 1236240, 6233940, -100750, 968180, 6282290, -105407, 1211470, 6240150, -100750, 968180, 6282290, -65775, 996152, 6278400, -105407, 1211470, 6240150, -105407, 1211470, 6240150, -65775, 996152, 6278400, -67853.9, 1172210, 6248110, -65775, 996152, 6278400, -48645.6, 1094270, 6262310, -67853.9, 1172210, 6248110, -65775, 996152, 6278400, -22129.6, 1073360, 6266050, -48645.6, 1094270, 6262310, -528960, 1372470, 6185410, -457830, 1396280, 6185750, -579354, 1645160, 6114450, -1455070, 1200830, 6072310, -1461920, 1264210, 6057880, -1553040, 1309170, 6025780, -2452280, 2435900, 5342380, -2441240, 2446960, 5342380, -2615810, 2604330, 5184060, -1437650, 1409720, 6031690, -1414810, 1472370, 6022180, -1559620, 1614750, 5949970, -1437650, 1409720, 6031690, -1559620, 1614750, 5949970, -1591280, 1563250, 5955310, -1591280, 1563250, 5955310, -1559620, 1614750, 5949970, -2441240, 2446960, 5342380, -1591280, 1563250, 5955310, -2441240, 2446960, 5342380, -2452280, 2435900, 5342380, -2973060, 1383580, 5452240, -2899830, 1400710, 5486960, -2939100, 1509710, 5437260, -2960720, 2259140, 5160580, -2953110, 2289840, 5151460, -2991130, 2293680, 5127920, -2960720, 2259140, 5160580, -2991130, 2293680, 5127920, -2994420, 2288080, 5128500, -2994420, 2288080, 5128500, -2991130, 2293680, 5127920, -3002060, 2294670, 5121140, -3180420, 2468770, 4930200, -2996970, 2368310, 5090700, -3087980, 2448030, 4998380, -3101040, 2314730, 5053130, -3018470, 2281610, 5117350, -3169350, 2367960, 4986090, -3077480, 3522190, 4321810, -3047270, 3551050, 4319610, -3072550, 3579740, 4278110, -3091780, 2539890, 4950280, -3249960, 2721050, 4749970, -3167330, 2609740, 4866040, 845750, 1346600, 6156020, 929848, 1359630, 6141110, 950832, 1404500, 6127870, 1048230, 1466350, 6097630, 1050260, 1464900, 6097630, 1049120, 1466880, 6097350, 950832, 1404500, 6127870, 1064730, 1439330, 6101180, 1050260, 1464900, 6097630, 950832, 1404500, 6127870, 1050260, 1464900, 6097630, 1048230, 1466350, 6097630, 1049120, 1466880, 6097350, 1154790, 1501920, 6069840, 1189250, 1548640, 6051550, -2009090, 738006, 5988140, -1957520, 751500, 6003420, -2079460, 768845, 5960360, -1390900, 1146450, 6097630, -1399820, 1180300, 6089180, -1407760, 1179660, 6087490, -1390900, 1146450, 6097630, -1407760, 1179660, 6087490, -1392640, 1144340, 6097630, -1386380, 1130220, 6101660, -1390900, 1146450, 6097630, -1392640, 1144340, 6097630, -2023830, -4521.32, 6028250, -2028270, .177317, 6026770, -2100450, .183627, 6002160, 2486270, 1524550, 5653270, 2399340, 1410200, 5719670, 2465810, 1425700, 5687690, 2878700, 1539130, 5461120, 2946430, 1528600, 5428070, 3016690, 1584920, 5373420, 2911130, 1863490, 5342380, 3201090, 2031920, 5111640, 3210910, 2060860, 5093980, 2911130, 1863490, 5342380, 3210910, 2060860, 5093980, 2904140, 1874360, 5342380, 2123170, 1388540, 5832280, 2666600, 1718690, 5514620, 2661120, 1724800, 5515350, 2666600, 1718690, 5514620, 2911130, 1863490, 5342380, 2904140, 1874360, 5342380, 2666600, 1718690, 5514620, 2904140, 1874360, 5342380, 2661120, 1724800, 5515350, 1639110, 1712230, 5901480, 1696560, 1607320, 5914650, 1721880, 1673750, 5889020, 2438390, 2449800, 5342380, 3216860, 3175570, 4484710, 3165210, 3218570, 4490770, 2438390, 2449800, 5342380, 3165210, 3218570, 4490770, 2421810, 2466200, 5342380, 3216860, 3175570, 4484710, 3345630, 3292060, 4304050, 3302640, 3357300, 4286940, 3216860, 3175570, 4484710, 3302640, 3357300, 4286940, 3165210, 3218570, 4490770, 1709210, 1742660, 5872810, 2153670, 2176510, 5576340, 2143390, 2183740, 5577470, 2153670, 2176510, 5576340, 2438390, 2449800, 5342380, 2421810, 2466200, 5342380, 2153670, 2176510, 5576340, 2421810, 2466200, 5342380, 2143390, 2183740, 5577470, 1661570, 1770710, 5878050, 1639110, 1712230, 5901480, 1709210, 1742660, 5872810, 3116910, 3412370, 4380860, 3120280, 3309070, 4456540, 3265220, 3463280, 4231310, 670278, 1764190, 6072110, 725808, 1846360, 6041420, 828984, 2180100, 5916470, 1711760, 3002850, 5342380, 1730380, 2992160, 5342380, 1971150, 3409660, 5000090, 1111650, 2011900, 5929600, 1185790, 2049e3, 5902660, 1467620, 2536900, 5645880, 1111650, 2011900, 5929600, 1467620, 2536900, 5645880, 1432190, 2549590, 5649250, 1432190, 2549590, 5649250, 1467620, 2536900, 5645880, 1730380, 2992160, 5342380, 1432190, 2549590, 5649250, 1730380, 2992160, 5342380, 1711760, 3002850, 5342380, 1675650, 3023150, 5342380, 1837390, 3311760, 5114740, 1796170, 3299430, 5137150, 1675650, 3023150, 5342380, 1796170, 3299430, 5137150, 1656810, 3033520, 5342380, 1405320, 2558850, 5651790, 1111650, 2011900, 5929600, 1414460, 2555740, 5650920, 1414460, 2555740, 5650920, 1675650, 3023150, 5342380, 1656810, 3033520, 5342380, 1414460, 2555740, 5650920, 1656810, 3033520, 5342380, 1405320, 2558850, 5651790, 81231.2, 1641400, 6142120, 119286, 1709980, 6122880, 98131.8, 1767560, 6106990, 805224, 3724590, 5097500, 842097, 3616150, 5168650, 871779, 3638270, 5148300, 661942, 2258970, 5907990, 686222, 2185020, 5932810, 698762, 2320070, 5880190, 483104, 1823060, 6072490, 499594, 1821130, 6071740, 511956, 1896180, 6047850, 480960, 1884620, 6053970, 483104, 1823060, 6072490, 519904, 1980210, 6020370, 624464, 2339020, 5881030, 596094, 2214720, 5931540, 632472, 2275890, 5904740, 2872320, 3268890, 4647490, 2871960, 3196050, 4697770, 2905690, 3295090, 4608350, 3263800, 2234080, 4986930, 3288140, 2229750, 4972960, 3307230, 2249680, 4951420, 3281290, 2439230, 4878880, 3295280, 2339920, 4917680, 3309970, 2348460, 4903810, 1894400, 1711300, 5825340, 2039100, 1696660, 5780900, 2075410, 1768540, 5746560, 3376650, 2748800, 4645160, 3472440, 2681260, 4614120, 3471150, 2734750, 4583810, -2482860, -355265, 5844620, -2481670, -235810, 5851120, -2554750, -253197, 5819070, -2563470, -456624, 5802910, -2482860, -355265, 5844620, -2614740, -419233, 5782960, 5536850, 3149480, -322504, 5545380, 3147590, -148301, 5560410, 3119320, -179114, 5531790, 3170850, -159578, 5545380, 3147590, -148301, 5536850, 3149480, -322504, 5522440, 3180470, -259611, 5531790, 3170850, -159578, 5536850, 3149480, -322504, 5499080, 3228760, -125456, 5531790, 3170850, -159578, 5522440, 3180470, -259611, 5492450, 3231390, -266833, 5499080, 3228760, -125456, 5522440, 3180470, -259611, 5475250, 3265990, -187829, 5499080, 3228760, -125456, 5492450, 3231390, -266833, 5475250, 3265990, -187829, 5492450, 3231390, -266833, 5476600, 3259310, -252845, 5536850, 3149480, -322504, 5567660, 3101150, -253393, 5570300, 3090830, -313823, 5536850, 3149480, -322504, 5560510, 3114650, -244874, 5567660, 3101150, -253393, 5536850, 3149480, -322504, 5560410, 3119320, -179114, 5560510, 3114650, -244874, 5666240, -1262130, 2633360, 5710940, -1302840, 2515120, 5726840, -1214210, 2523250, 5666240, -1262130, 2633360, 5726840, -1214210, 2523250, 5669470, -1247570, 2633360, 5710940, -1302840, 2515120, 5714360, -1306060, 2505720, 5731100, -1211620, 2514850, 5710940, -1302840, 2515120, 5731100, -1211620, 2514850, 5726840, -1214210, 2523250, 5669470, -1247570, 2633360, 5657350, -1254310, 2655970, 5666240, -1262130, 2633360, 5665960, -1263420, 2633360, 5709370, -1311170, 2514360, 5710940, -1302840, 2515120, 5665960, -1263420, 2633360, 5710940, -1302840, 2515120, 5666240, -1262130, 2633360, 5709370, -1311170, 2514360, 5730400, -1335490, 2453380, 5714360, -1306060, 2505720, 5709370, -1311170, 2514360, 5714360, -1306060, 2505720, 5710940, -1302840, 2515120, 5657350, -1254310, 2655970, 5665960, -1263420, 2633360, 5666240, -1262130, 2633360, 5661060, -1285160, 2633360, 5672870, -1402960, 2546980, 5696880, -1375330, 2508450, 5661060, -1285160, 2633360, 5696880, -1375330, 2508450, 5709370, -1311170, 2514360, 5661060, -1285160, 2633360, 5709370, -1311170, 2514360, 5665960, -1263420, 2633360, 5709370, -1311170, 2514360, 5696880, -1375330, 2508450, 5730400, -1335490, 2453380, 5657350, -1254310, 2655970, 5661060, -1285160, 2633360, 5665960, -1263420, 2633360, 5696880, -1375330, 2508450, 5672870, -1402960, 2546980, 5693670, -1391210, 2506980, 5696880, -1375330, 2508450, 5693670, -1391210, 2506980, 5793300, -1329940, 2305170, 5696880, -1375330, 2508450, 5793300, -1329940, 2305170, 5730400, -1335490, 2453380, 5693670, -1391210, 2506980, 5672870, -1402960, 2546980, 5688300, -1417290, 2504580, 5688300, -1417290, 2504580, 5722620, -1450300, 2406230, 5793300, -1329940, 2305170, 5688300, -1417290, 2504580, 5793300, -1329940, 2305170, 5693670, -1391210, 2506980, 5793300, -1329940, 2305170, 5722620, -1450300, 2406230, 5730200, -1495900, 2360130, 5688700, -1722420, 2305810, 5680560, -1737050, 2314820, 5679970, -1738750, 2314980, 5741300, -1511670, 2323050, 5680560, -1737050, 2314820, 5688700, -1722420, 2305810, 5793300, -1329940, 2305170, 5741300, -1511670, 2323050, 5688700, -1722420, 2305810, 5793300, -1329940, 2305170, 5730200, -1495900, 2360130, 5741300, -1511670, 2323050, 5679260, -1202190, 2633360, 5678710, -1204820, 2633360, 5727360, -1211140, 2523530, 5679260, -1202190, 2633360, 5727360, -1211140, 2523530, 5727390, -1210950, 2523550, 5731100, -1211620, 2514850, 5727390, -1210950, 2523550, 5727360, -1211140, 2523530, 5614770, -1190320, 2772430, 5608860, -1195350, 2782140, 5678710, -1204820, 2633360, 5614770, -1190320, 2772430, 5678710, -1204820, 2633360, 5679260, -1202190, 2633360, 5611810, -1164010, 2789420, 5608860, -1195350, 2782140, 5614770, -1190320, 2772430, 5676210, -867293, 2767220, 5611810, -1164010, 2789420, 5614770, -1190320, 2772430, 5676210, -867293, 2767220, 5580570, -1124490, 2866700, 5611810, -1164010, 2789420, 5676210, -867293, 2767220, 5591180, -1041440, 2877310, 5580570, -1124490, 2866700, 5676210, -867293, 2767220, 5604060, -1007260, 2864470, 5591180, -1041440, 2877310, 5676210, -867293, 2767220, 5611870, -962818, 2864470, 5604060, -1007260, 2864470, 5676210, -867293, 2767220, 5605910, -929364, 2886950, 5611870, -962818, 2864470, 5676210, -867293, 2767220, 5614010, -868581, 2890130, 5605910, -929364, 2886950, 5601880, -855646, 2917210, 5614010, -868581, 2890130, 5676210, -867293, 2767220, 5592360, -852268, 2936260, 5588960, -851796, 2942830, 5601880, -855646, 2917210, 5588960, -851796, 2942830, 5614010, -868581, 2890130, 5601880, -855646, 2917210, 5588960, -851796, 2942830, 5586670, -866643, 2942830, 5614010, -868581, 2890130, 5678710, -1204820, 2633360, 5669470, -1247570, 2633360, 5726840, -1214210, 2523250, 5678710, -1204820, 2633360, 5726840, -1214210, 2523250, 5727360, -1211140, 2523530, 5731100, -1211620, 2514850, 5727360, -1211140, 2523530, 5726840, -1214210, 2523250, 5608860, -1195350, 2782140, 5657350, -1254310, 2655970, 5669470, -1247570, 2633360, 5608860, -1195350, 2782140, 5669470, -1247570, 2633360, 5678710, -1204820, 2633360, 5688700, -1722420, 2305810, 5679970, -1738750, 2314980, 5694850, -1747980, 2271370, 4163250, 4045570, 2633360, 4420510, 4177460, 1914120, 4396680, 4215010, 1886670, 4163250, 4045570, 2633360, 4396680, 4215010, 1886670, 4151080, 4058060, 2633360, 3960780, 3920810, 3091230, 3987190, 3937890, 3035440, 3985640, 3939310, 3035630, 3987190, 3937890, 3035440, 4163250, 4045570, 2633360, 4151080, 4058060, 2633360, 3987190, 3937890, 3035440, 4151080, 4058060, 2633360, 3985640, 3939310, 3035630, 4168890, 4039760, 2633360, 4451620, 4168050, 1862190, 4420510, 4177460, 1914120, 4168890, 4039760, 2633360, 4420510, 4177460, 1914120, 4163250, 4045570, 2633360, 3960780, 3920810, 3091230, 3987910, 3937230, 3035350, 3987190, 3937890, 3035440, 3987910, 3937230, 3035350, 4168890, 4039760, 2633360, 4163250, 4045570, 2633360, 3987910, 3937230, 3035350, 4163250, 4045570, 2633360, 3987190, 3937890, 3035440, 4174970, 4033480, 2633360, 4493320, 4157840, 1783700, 4451620, 4168050, 1862190, 4174970, 4033480, 2633360, 4451620, 4168050, 1862190, 4168890, 4039760, 2633360, 3960780, 3920810, 3091230, 3988690, 3936510, 3035260, 3987910, 3937230, 3035350, 3988690, 3936510, 3035260, 4174970, 4033480, 2633360, 4168890, 4039760, 2633360, 3988690, 3936510, 3035260, 4168890, 4039760, 2633360, 3987910, 3937230, 3035350, 4454010, 4185290, 1817550, 4451620, 4168050, 1862190, 4493320, 4157840, 1783700, 3714150, 4753900, 2063350, 3619450, 4569510, 2579720, 3615990, 4558890, 2603100, 3616370, 4628860, 2476840, 3619450, 4569510, 2579720, 3714150, 4753900, 2063350, 3439070, 4911500, 2167700, 3616370, 4628860, 2476840, 3714150, 4753900, 2063350, 3381030, 4829840, 2425340, 3616370, 4628860, 2476840, 3439070, 4911500, 2167700, 3336930, 4885660, 2374410, 3381030, 4829840, 2425340, 3439070, 4911500, 2167700, 3336930, 4885660, 2374410, 3358890, 4834310, 2446950, 3381030, 4829840, 2425340, 3790160, 4397040, 2633360, 3957540, 4571400, 2023190, 3714150, 4753900, 2063350, 3790160, 4397040, 2633360, 3714150, 4753900, 2063350, 3713560, 4461920, 2633360, 3713560, 4461920, 2633360, 3693190, 4293670, 2923660, 3790160, 4397040, 2633360, 3714150, 4753900, 2063350, 3710400, 4464550, 2633360, 3713560, 4461920, 2633360, 3691930, 4318250, 2889070, 3693190, 4293670, 2923660, 3713560, 4461920, 2633360, 3691930, 4318250, 2889070, 3713560, 4461920, 2633360, 3710400, 4464550, 2633360, 3714150, 4753900, 2063350, 3693030, 4478930, 2633360, 3710400, 4464550, 2633360, 3680280, 4403650, 2773480, 3691930, 4318250, 2889070, 3710400, 4464550, 2633360, 3680280, 4403650, 2773480, 3710400, 4464550, 2633360, 3693030, 4478930, 2633360, 3714150, 4753900, 2063350, 3690710, 4480840, 2633360, 3693030, 4478930, 2633360, 3680900, 4424210, 2739960, 3680280, 4403650, 2773480, 3693030, 4478930, 2633360, 3680900, 4424210, 2739960, 3693030, 4478930, 2633360, 3690710, 4480840, 2633360, 3714150, 4753900, 2063350, 3676100, 4492840, 2633360, 3690710, 4480840, 2633360, 3667140, 4452930, 2711940, 3680900, 4424210, 2739960, 3690710, 4480840, 2633360, 3667140, 4452930, 2711940, 3690710, 4480840, 2633360, 3676100, 4492840, 2633360, 3714150, 4753900, 2063350, 3671980, 4496200, 2633360, 3676100, 4492840, 2633360, 3666560, 4473390, 2679060, 3667140, 4452930, 2711940, 3676100, 4492840, 2633360, 3666560, 4473390, 2679060, 3676100, 4492840, 2633360, 3671980, 4496200, 2633360, 3714150, 4753900, 2063350, 3664800, 4502060, 2633360, 3671980, 4496200, 2633360, 3662100, 4491790, 2654420, 3666560, 4473390, 2679060, 3671980, 4496200, 2633360, 3662100, 4491790, 2654420, 3671980, 4496200, 2633360, 3664800, 4502060, 2633360, 3714150, 4753900, 2063350, 3644270, 4518690, 2633360, 3664800, 4502060, 2633360, 3644100, 4518190, 2634450, 3662100, 4491790, 2654420, 3664800, 4502060, 2633360, 3644100, 4518190, 2634450, 3664800, 4502060, 2633360, 3644270, 4518690, 2633360, 3714150, 4753900, 2063350, 3621810, 4536720, 2633360, 3644270, 4518690, 2633360, 3620160, 4533200, 2641610, 3644100, 4518190, 2634450, 3644270, 4518690, 2633360, 3620160, 4533200, 2641610, 3644270, 4518690, 2633360, 3621810, 4536720, 2633360, 3619280, 4538730, 2633360, 3621810, 4536720, 2633360, 3714150, 4753900, 2063350, 3619280, 4538730, 2633360, 3714150, 4753900, 2063350, 3615990, 4558890, 2603100, 3619280, 4538730, 2633360, 3620160, 4533200, 2641610, 3621810, 4536720, 2633360, 3937550, 4265560, 2633360, 4162100, 4463310, 1847540, 4121960, 4493080, 1865180, 3937550, 4265560, 2633360, 4121960, 4493080, 1865180, 3924680, 4277400, 2633360, 3779670, 4118990, 3060320, 3774510, 4113350, 3074140, 3780080, 4118650, 3060270, 3780080, 4118650, 3060270, 3937550, 4265560, 2633360, 3924680, 4277400, 2633360, 3780080, 4118650, 3060270, 3924680, 4277400, 2633360, 3779670, 4118990, 3060320, 3912570, 4288480, 2633360, 3924680, 4277400, 2633360, 4121960, 4493080, 1865180, 3774330, 4123420, 3060940, 3774510, 4113350, 3074140, 3779670, 4118990, 3060320, 3774330, 4123420, 3060940, 3779670, 4118990, 3060320, 3924680, 4277400, 2633360, 3774330, 4123420, 3060940, 3924680, 4277400, 2633360, 3912570, 4288480, 2633360, 3774330, 4123420, 3060940, 3912570, 4288480, 2633360, 3773680, 4148520, 3027860, 3912570, 4288480, 2633360, 4121960, 4493080, 1865180, 4041960, 4518030, 1975920, 3912570, 4288480, 2633360, 4041960, 4518030, 1975920, 3892560, 4306650, 2633360, 3892560, 4306650, 2633360, 3773680, 4148520, 3027860, 3912570, 4288480, 2633360, 3859740, 4336090, 2633360, 3892560, 4306650, 2633360, 4041960, 4518030, 1975920, 3721280, 4193760, 3030380, 3773680, 4148520, 3027860, 3892560, 4306650, 2633360, 3721280, 4193760, 3030380, 3892560, 4306650, 2633360, 3859740, 4336090, 2633360, 3859740, 4336090, 2633360, 4041960, 4518030, 1975920, 3957540, 4571400, 2023190, 3859740, 4336090, 2633360, 3957540, 4571400, 2023190, 3831490, 4361080, 2633360, 3831490, 4361080, 2633360, 3721280, 4193760, 3030380, 3859740, 4336090, 2633360, 3957540, 4571400, 2023190, 3815010, 4375500, 2633360, 3831490, 4361080, 2633360, 3722210, 4252980, 2946090, 3721280, 4193760, 3030380, 3831490, 4361080, 2633360, 3722210, 4252980, 2946090, 3831490, 4361080, 2633360, 3815010, 4375500, 2633360, 3790160, 4397040, 2633360, 3815010, 4375500, 2633360, 3957540, 4571400, 2023190, 3693190, 4293670, 2923660, 3722210, 4252980, 2946090, 3815010, 4375500, 2633360, 3693190, 4293670, 2923660, 3815010, 4375500, 2633360, 3790160, 4397040, 2633360, 3996620, 4210260, 2633360, 4204820, 4410360, 1877510, 4174100, 4437200, 1882790, 3996620, 4210260, 2633360, 4174100, 4437200, 1882790, 3985780, 4220530, 2633360, 3845890, 4063160, 3052490, 3834450, 4050380, 3083490, 3846650, 4062500, 3052410, 3846650, 4062500, 3052410, 3996620, 4210260, 2633360, 3985780, 4220530, 2633360, 3846650, 4062500, 3052410, 3985780, 4220530, 2633360, 3845890, 4063160, 3052490, 3944980, 4258690, 2633360, 3985780, 4220530, 2633360, 4174100, 4437200, 1882790, 3774510, 4113350, 3074140, 3834450, 4050380, 3083490, 3845890, 4063160, 3052490, 3774510, 4113350, 3074140, 3845890, 4063160, 3052490, 3780330, 4118440, 3060240, 3780330, 4118440, 3060240, 3845890, 4063160, 3052490, 3985780, 4220530, 2633360, 3780330, 4118440, 3060240, 3985780, 4220530, 2633360, 3944980, 4258690, 2633360, 3944980, 4258690, 2633360, 4174100, 4437200, 1882790, 4162100, 4463310, 1847540, 3944980, 4258690, 2633360, 4162100, 4463310, 1847540, 3937550, 4265560, 2633360, 3774510, 4113350, 3074140, 3780330, 4118440, 3060240, 3780080, 4118650, 3060270, 3780330, 4118440, 3060240, 3944980, 4258690, 2633360, 3937550, 4265560, 2633360, 3780330, 4118440, 3060240, 3937550, 4265560, 2633360, 3780080, 4118650, 3060270, 4024080, 4184030, 2633360, 4276320, 4336450, 1888080, 4204820, 4410360, 1877510, 4024080, 4184030, 2633360, 4204820, 4410360, 1877510, 3996620, 4210260, 2633360, 3834450, 4050380, 3083490, 3848630, 4060800, 3052170, 3846650, 4062500, 3052410, 3848630, 4060800, 3052170, 4024080, 4184030, 2633360, 3996620, 4210260, 2633360, 3848630, 4060800, 3052170, 3996620, 4210260, 2633360, 3846650, 4062500, 3052410, 4029580, 4178730, 2633360, 4287850, 4320400, 1898640, 4276320, 4336450, 1888080, 4029580, 4178730, 2633360, 4276320, 4336450, 1888080, 4024080, 4184030, 2633360, 3834450, 4050380, 3083490, 3849030, 4060460, 3052120, 3848630, 4060800, 3052170, 3849030, 4060460, 3052120, 4029580, 4178730, 2633360, 4024080, 4184030, 2633360, 3849030, 4060460, 3052120, 4024080, 4184030, 2633360, 3848630, 4060800, 3052170, 4029580, 4178730, 2633360, 4111300, 4098350, 2633360, 4287850, 4320400, 1898640, 3834450, 4050380, 3083490, 3960780, 3920810, 3091230, 3980660, 3943870, 3036240, 3834450, 4050380, 3083490, 3980660, 3943870, 3036240, 3849030, 4060460, 3052120, 3849030, 4060460, 3052120, 3980660, 3943870, 3036240, 4111300, 4098350, 2633360, 3849030, 4060460, 3052120, 4111300, 4098350, 2633360, 4029580, 4178730, 2633360, 4143710, 4065590, 2633360, 4374540, 4233690, 1896220, 4287850, 4320400, 1898640, 4143710, 4065590, 2633360, 4287850, 4320400, 1898640, 4111300, 4098350, 2633360, 3980660, 3943870, 3036240, 3960780, 3920810, 3091230, 3984700, 3940170, 3035740, 3984700, 3940170, 3035740, 4143710, 4065590, 2633360, 4111300, 4098350, 2633360, 3984700, 3940170, 3035740, 4111300, 4098350, 2633360, 3980660, 3943870, 3036240, 4151080, 4058060, 2633360, 4396680, 4215010, 1886670, 4374540, 4233690, 1896220, 4151080, 4058060, 2633360, 4374540, 4233690, 1896220, 4143710, 4065590, 2633360, 3960780, 3920810, 3091230, 3985640, 3939310, 3035630, 3984700, 3940170, 3035740, 3985640, 3939310, 3035630, 4151080, 4058060, 2633360, 4143710, 4065590, 2633360, 3985640, 3939310, 3035630, 4143710, 4065590, 2633360, 3984700, 3940170, 3035740, 4180070, 4028190, 2633360, 4492820, 4138540, 1828960, 4493320, 4157840, 1783700, 4180070, 4028190, 2633360, 4493320, 4157840, 1783700, 4174970, 4033480, 2633360, 3960780, 3920810, 3091230, 3989350, 3935910, 3035170, 3988690, 3936510, 3035260, 3989350, 3935910, 3035170, 4180070, 4028190, 2633360, 4174970, 4033480, 2633360, 3989350, 3935910, 3035170, 4174970, 4033480, 2633360, 3988690, 3936510, 3035260, 4189520, 4018360, 2633360, 4507370, 4108300, 1860850, 4492820, 4138540, 1828960, 4189520, 4018360, 2633360, 4492820, 4138540, 1828960, 4180070, 4028190, 2633360, 3960780, 3920810, 3091230, 3990580, 3934770, 3035020, 3989350, 3935910, 3035170, 3990580, 3934770, 3035020, 4189520, 4018360, 2633360, 4180070, 4028190, 2633360, 3990580, 3934770, 3035020, 4180070, 4028190, 2633360, 3989350, 3935910, 3035170, 4193820, 4013880, 2633360, 4503190, 4093410, 1903010, 4507370, 4108300, 1860850, 4193820, 4013880, 2633360, 4507370, 4108300, 1860850, 4189520, 4018360, 2633360, 3960780, 3920810, 3091230, 3991150, 3934250, 3034950, 3990580, 3934770, 3035020, 3991150, 3934250, 3034950, 4193820, 4013880, 2633360, 4189520, 4018360, 2633360, 3991150, 3934250, 3034950, 4189520, 4018360, 2633360, 3990580, 3934770, 3035020, 4193820, 4013880, 2633360, 4308980, 3889980, 2633360, 4503190, 4093410, 1903010, 3960780, 3920810, 3091230, 4065400, 3646400, 3283930, 4176180, 3756110, 3011750, 3960780, 3920810, 3091230, 4176180, 3756110, 3011750, 3991150, 3934250, 3034950, 3991150, 3934250, 3034950, 4176180, 3756110, 3011750, 4308980, 3889980, 2633360, 3991150, 3934250, 3034950, 4308980, 3889980, 2633360, 4193820, 4013880, 2633360, 4326050, 3870990, 2633360, 4530940, 4044640, 1940800, 4503190, 4093410, 1903010, 4326050, 3870990, 2633360, 4503190, 4093410, 1903010, 4308980, 3889980, 2633360, 4176180, 3756110, 3011750, 4065400, 3646400, 3283930, 4183600, 3748620, 3010790, 4183600, 3748620, 3010790, 4326050, 3870990, 2633360, 4308980, 3889980, 2633360, 4183600, 3748620, 3010790, 4308980, 3889980, 2633360, 4176180, 3756110, 3011750, 4345410, 3849240, 2633360, 4546500, 3983160, 2028950, 4530940, 4044640, 1940800, 4345410, 3849240, 2633360, 4530940, 4044640, 1940800, 4326050, 3870990, 2633360, 4065400, 3646400, 3283930, 4192100, 3739990, 3009700, 4183600, 3748620, 3010790, 4192100, 3739990, 3009700, 4345410, 3849240, 2633360, 4326050, 3870990, 2633360, 4192100, 3739990, 3009700, 4326050, 3870990, 2633360, 4183600, 3748620, 3010790, 4357800, 3835210, 2633360, 4543790, 3941410, 2114190, 4546500, 3983160, 2028950, 4357800, 3835210, 2633360, 4546500, 3983160, 2028950, 4345410, 3849240, 2633360, 4065400, 3646400, 3283930, 4197600, 3734400, 3008990, 4192100, 3739990, 3009700, 4197600, 3734400, 3008990, 4357800, 3835210, 2633360, 4345410, 3849240, 2633360, 4197600, 3734400, 3008990, 4345410, 3849240, 2633360, 4192100, 3739990, 3009700, 4357800, 3835210, 2633360, 4399770, 3786990, 2633360, 4543790, 3941410, 2114190, 4065400, 3646400, 3283930, 4127930, 3513140, 3350080, 4272430, 3656620, 2999240, 4065400, 3646400, 3283930, 4272430, 3656620, 2999240, 4197600, 3734400, 3008990, 4197600, 3734400, 3008990, 4272430, 3656620, 2999240, 4399770, 3786990, 2633360, 4197600, 3734400, 3008990, 4399770, 3786990, 2633360, 4357800, 3835210, 2633360, 4611330, 3752800, 2301540, 4574760, 3713340, 2433810, 4596850, 3725610, 2373070, 4505490, 3660580, 2633360, 4574760, 3713340, 2433810, 4611330, 3752800, 2301540, 4505490, 3660580, 2633360, 4611330, 3752800, 2301540, 4501440, 3665560, 2633360, 4188510, 3415520, 3375560, 4366860, 3554010, 2986650, 4364630, 3556490, 2986950, 4366860, 3554010, 2986650, 4505490, 3660580, 2633360, 4501440, 3665560, 2633360, 4366860, 3554010, 2986650, 4501440, 3665560, 2633360, 4364630, 3556490, 2986950, 4501440, 3665560, 2633360, 4611330, 3752800, 2301540, 4596450, 3829850, 2202910, 4501440, 3665560, 2633360, 4596450, 3829850, 2202910, 4473820, 3699220, 2633360, 4349630, 3573120, 2988970, 4188510, 3415520, 3375560, 4364630, 3556490, 2986950, 4364630, 3556490, 2986950, 4501440, 3665560, 2633360, 4473820, 3699220, 2633360, 4364630, 3556490, 2986950, 4473820, 3699220, 2633360, 4349630, 3573120, 2988970, 4445700, 3732970, 2633360, 4473820, 3699220, 2633360, 4596450, 3829850, 2202910, 4127930, 3513140, 3350080, 4188510, 3415520, 3375560, 4349630, 3573120, 2988970, 4127930, 3513140, 3350080, 4349630, 3573120, 2988970, 4295970, 3631520, 2996140, 4295970, 3631520, 2996140, 4349630, 3573120, 2988970, 4473820, 3699220, 2633360, 4295970, 3631520, 2996140, 4473820, 3699220, 2633360, 4445700, 3732970, 2633360, 4445700, 3732970, 2633360, 4596450, 3829850, 2202910, 4571310, 3869580, 2185850, 4445700, 3732970, 2633360, 4571310, 3869580, 2185850, 4427080, 3755030, 2633360, 4127930, 3513140, 3350080, 4295970, 3631520, 2996140, 4286360, 3641810, 2997400, 4295970, 3631520, 2996140, 4445700, 3732970, 2633360, 4427080, 3755030, 2633360, 4295970, 3631520, 2996140, 4427080, 3755030, 2633360, 4286360, 3641810, 2997400, 4427080, 3755030, 2633360, 4571310, 3869580, 2185850, 4543790, 3941410, 2114190, 4427080, 3755030, 2633360, 4543790, 3941410, 2114190, 4399770, 3786990, 2633360, 4272430, 3656620, 2999240, 4127930, 3513140, 3350080, 4286360, 3641810, 2997400, 4286360, 3641810, 2997400, 4427080, 3755030, 2633360, 4399770, 3786990, 2633360, 4286360, 3641810, 2997400, 4399770, 3786990, 2633360, 4272430, 3656620, 2999240, 4505490, 3660580, 2633360, 4508e3, 3657480, 2633360, 4574760, 3713340, 2433810, 4188510, 3415520, 3375560, 4206760, 3407160, 3361390, 4374100, 3545920, 2985670, 4188510, 3415520, 3375560, 4374100, 3545920, 2985670, 4366860, 3554010, 2986650, 4366860, 3554010, 2986650, 4374100, 3545920, 2985670, 4508e3, 3657480, 2633360, 4366860, 3554010, 2986650, 4508e3, 3657480, 2633360, 4505490, 3660580, 2633360, 4540250, 3617370, 2633360, 4573940, 3637340, 2546730, 4574760, 3713340, 2433810, 4540250, 3617370, 2633360, 4574760, 3713340, 2433810, 4508e3, 3657480, 2633360, 4374100, 3545920, 2985670, 4206760, 3407160, 3361390, 4391630, 3526220, 2983280, 4391630, 3526220, 2983280, 4540250, 3617370, 2633360, 4508e3, 3657480, 2633360, 4391630, 3526220, 2983280, 4508e3, 3657480, 2633360, 4374100, 3545920, 2985670, 4569390, 3580490, 2633360, 4589770, 3589e3, 2586240, 4573940, 3637340, 2546730, 4569390, 3580490, 2633360, 4573940, 3637340, 2546730, 4540250, 3617370, 2633360, 4206760, 3407160, 3361390, 4407750, 3507930, 2981080, 4391630, 3526220, 2983280, 4407750, 3507930, 2981080, 4569390, 3580490, 2633360, 4540250, 3617370, 2633360, 4407750, 3507930, 2981080, 4540250, 3617370, 2633360, 4391630, 3526220, 2983280, 4569390, 3580490, 2633360, 4573120, 3575740, 2633360, 4589770, 3589e3, 2586240, 4206760, 3407160, 3361390, 4334020, 3385960, 3219070, 4440450, 3470340, 2976580, 4206760, 3407160, 3361390, 4440450, 3470340, 2976580, 4407750, 3507930, 2981080, 4407750, 3507930, 2981080, 4440450, 3470340, 2976580, 4573120, 3575740, 2633360, 4407750, 3507930, 2981080, 4573120, 3575740, 2633360, 4569390, 3580490, 2633360, 4206760, 3407160, 3361390, 4346640, 3275690, 3314080, 4334020, 3385960, 3219070, 3653810, 4378040, 2847540, 3691930, 4318250, 2889070, 3680280, 4403650, 2773480, 3662230, 4397560, 2806610, 3653810, 4378040, 2847540, 3680280, 4403650, 2773480, 4556980, 3330620, 2960150, 4504060, 3280670, 3093030, 4583110, 3297980, 2956370, 4583110, 3297980, 2956370, 4606200, 3302600, 2915320, 4603520, 3375330, 2835690, 4583110, 3297980, 2956370, 4603520, 3375330, 2835690, 4556980, 3330620, 2960150, 4465730, 3304610, 3122770, 4504060, 3280670, 3093030, 4556980, 3330620, 2960150, 4465730, 3304610, 3122770, 4556980, 3330620, 2960150, 4544780, 3345690, 2961900, 4544780, 3345690, 2961900, 4556980, 3330620, 2960150, 4603520, 3375330, 2835690, 4532090, 3361250, 2963710, 4465730, 3304610, 3122770, 4544780, 3345690, 2961900, 4544780, 3345690, 2961900, 4603520, 3375330, 2835690, 4609610, 3428340, 2761740, 4544780, 3345690, 2961900, 4609610, 3428340, 2761740, 4532090, 3361250, 2963710, 4436060, 3311410, 3157430, 4465730, 3304610, 3122770, 4532090, 3361250, 2963710, 4436060, 3311410, 3157430, 4532090, 3361250, 2963710, 4524070, 3371020, 2964860, 4524070, 3371020, 2964860, 4532090, 3361250, 2963710, 4609610, 3428340, 2761740, 4515420, 3381520, 2966080, 4436060, 3311410, 3157430, 4524070, 3371020, 2964860, 4524070, 3371020, 2964860, 4609610, 3428340, 2761740, 4600650, 3458240, 2739470, 4524070, 3371020, 2964860, 4600650, 3458240, 2739470, 4515420, 3381520, 2966080, 4385480, 3365540, 3170740, 4436060, 3311410, 3157430, 4515420, 3381520, 2966080, 4385480, 3365540, 3170740, 4515420, 3381520, 2966080, 4489870, 3412210, 2969690, 4489870, 3412210, 2969690, 4515420, 3381520, 2966080, 4600650, 3458240, 2739470, 4385480, 3365540, 3170740, 4489870, 3412210, 2969690, 4480590, 3423250, 2971e3, 4489870, 3412210, 2969690, 4600650, 3458240, 2739470, 4603400, 3495380, 2687560, 4489870, 3412210, 2969690, 4603400, 3495380, 2687560, 4480590, 3423250, 2971e3, 4606460, 3532680, 2633360, 4612010, 3525430, 2633360, 4615960, 3539850, 2607140, 4385480, 3365540, 3170740, 4480590, 3423250, 2971e3, 4473220, 3431980, 2972020, 4612010, 3525430, 2633360, 4606460, 3532680, 2633360, 4473220, 3431980, 2972020, 4612010, 3525430, 2633360, 4473220, 3431980, 2972020, 4480590, 3423250, 2971e3, 4612010, 3525430, 2633360, 4480590, 3423250, 2971e3, 4603400, 3495380, 2687560, 4615960, 3539850, 2607140, 4612010, 3525430, 2633360, 4615690, 3520610, 2633360, 4603400, 3495380, 2687560, 4615160, 3497360, 2664860, 4615690, 3520610, 2633360, 4603400, 3495380, 2687560, 4615690, 3520610, 2633360, 4612010, 3525430, 2633360, 4606460, 3532680, 2633360, 4615960, 3539850, 2607140, 4589770, 3589e3, 2586240, 4606460, 3532680, 2633360, 4589770, 3589e3, 2586240, 4575560, 3572620, 2633360, 4461380, 3445920, 2973680, 4385480, 3365540, 3170740, 4473220, 3431980, 2972020, 4473220, 3431980, 2972020, 4606460, 3532680, 2633360, 4575560, 3572620, 2633360, 4473220, 3431980, 2972020, 4575560, 3572620, 2633360, 4461380, 3445920, 2973680, 4589770, 3589e3, 2586240, 4574660, 3573770, 2633360, 4575560, 3572620, 2633360, 4361030, 3366710, 3202830, 4385480, 3365540, 3170740, 4461380, 3445920, 2973680, 4361030, 3366710, 3202830, 4461380, 3445920, 2973680, 4453710, 3454900, 2974740, 4453710, 3454900, 2974740, 4461380, 3445920, 2973680, 4575560, 3572620, 2633360, 4453710, 3454900, 2974740, 4575560, 3572620, 2633360, 4574660, 3573770, 2633360, 4589770, 3589e3, 2586240, 4573120, 3575740, 2633360, 4574660, 3573770, 2633360, 4334020, 3385960, 3219070, 4361030, 3366710, 3202830, 4453710, 3454900, 2974740, 4334020, 3385960, 3219070, 4453710, 3454900, 2974740, 4440450, 3470340, 2976580, 4440450, 3470340, 2976580, 4453710, 3454900, 2974740, 4574660, 3573770, 2633360, 4440450, 3470340, 2976580, 4574660, 3573770, 2633360, 4573120, 3575740, 2633360, 4606450, 3241100, 2982710, 4602240, 3197190, 3035770, 4634650, 3201090, 2982230, 4606450, 3241100, 2982710, 4584420, 3190080, 3069780, 4602240, 3197190, 3035770, 4606450, 3241100, 2982710, 4559860, 3187630, 3108410, 4584420, 3190080, 3069780, 4504060, 3280670, 3093030, 4559860, 3187630, 3108410, 4606450, 3241100, 2982710, 4504060, 3280670, 3093030, 4606450, 3241100, 2982710, 4606510, 3268320, 2952960, 4504060, 3280670, 3093030, 4606510, 3268320, 2952960, 4583110, 3297980, 2956370, 4583110, 3297980, 2956370, 4606510, 3268320, 2952960, 4606200, 3302600, 2915320, 5229030, 3523700, 956689, 5216760, 3513660, 1054860, 5242370, 3512840, 923286, 5216760, 3513660, 1054860, 5275010, 3464350, 920597, 5242370, 3512840, 923286, 4733420, 3549590, 2374410, 5182600, 3503610, 1239200, 5163410, 3530770, 1242200, 5182600, 3503610, 1239200, 5275010, 3464350, 920597, 5216760, 3513660, 1054860, 5182600, 3503610, 1239200, 5216760, 3513660, 1054860, 5163410, 3530770, 1242200, 5283550, 3456340, 901688, 5291260, 3444510, 901688, 5302930, 3437740, 858224, 4733420, 3549590, 2374410, 5191890, 3490360, 1237740, 5182600, 3503610, 1239200, 5191890, 3490360, 1237740, 5291260, 3444510, 901688, 5283550, 3456340, 901688, 5191890, 3490360, 1237740, 5283550, 3456340, 901688, 5275010, 3464350, 920597, 5191890, 3490360, 1237740, 5275010, 3464350, 920597, 5182600, 3503610, 1239200, 5291260, 3444510, 901688, 5297900, 3434290, 901688, 5302930, 3437740, 858224, 4733420, 3549590, 2374410, 4967600, 3213680, 2374410, 5251860, 3402950, 1228170, 4733420, 3549590, 2374410, 5251860, 3402950, 1228170, 5191890, 3490360, 1237740, 5191890, 3490360, 1237740, 5251860, 3402950, 1228170, 5297900, 3434290, 901688, 5191890, 3490360, 1237740, 5297900, 3434290, 901688, 5291260, 3444510, 901688, 5310740, 3414400, 901688, 5356410, 3436960, 419033, 5302930, 3437740, 858224, 5310740, 3414400, 901688, 5302930, 3437740, 858224, 5297900, 3434290, 901688, 5251860, 3402950, 1228170, 4967600, 3213680, 2374410, 5262110, 3387680, 1226500, 5262110, 3387680, 1226500, 5310740, 3414400, 901688, 5297900, 3434290, 901688, 5262110, 3387680, 1226500, 5297900, 3434290, 901688, 5251860, 3402950, 1228170, 5346270, 3358500, 901688, 5405570, 3362250, 393205, 5356410, 3436960, 419033, 5346270, 3358500, 901688, 5356410, 3436960, 419033, 5310740, 3414400, 901688, 4967600, 3213680, 2374410, 5290730, 3344530, 1221830, 5262110, 3387680, 1226500, 5290730, 3344530, 1221830, 5346270, 3358500, 901688, 5310740, 3414400, 901688, 5290730, 3344530, 1221830, 5310740, 3414400, 901688, 5262110, 3387680, 1226500, 4971090, 3668960, 1578250, 4968880, 3653100, 1621120, 4999790, 3668710, 1486060, 4968880, 3653100, 1621120, 5045670, 3647580, 1379910, 4999790, 3668710, 1486060, 4733420, 3549590, 2374410, 5045670, 3647580, 1379910, 4968880, 3653100, 1621120, 4733420, 3549590, 2374410, 5093340, 3601020, 1326370, 5045670, 3647580, 1379910, 4733420, 3549590, 2374410, 5133340, 3572720, 1246860, 5132590, 3573760, 1246980, 4733420, 3549590, 2374410, 5132590, 3573760, 1246980, 5093340, 3601020, 1326370, 5132590, 3573760, 1246980, 5133340, 3572720, 1246860, 5134230, 3572580, 1243630, 4855040, 3680830, 1880660, 4787020, 3622330, 2147710, 4764570, 3586380, 2254580, 4798230, 3679390, 2022920, 4787020, 3622330, 2147710, 4855040, 3680830, 1880660, 4803040, 3739600, 1898030, 4798230, 3679390, 2022920, 4855040, 3680830, 1880660, 4803040, 3739600, 1898030, 4780480, 3716520, 1997070, 4798230, 3679390, 2022920, 4754760, 3769940, 1958210, 4780480, 3716520, 1997070, 4803040, 3739600, 1898030, 4745090, 3600250, 2273350, 4733420, 3549590, 2374410, 4764570, 3586380, 2254580, 4855040, 3680830, 1880660, 4764570, 3586380, 2254580, 4733420, 3549590, 2374410, 4855040, 3680830, 1880660, 4733420, 3549590, 2374410, 4883180, 3660070, 1848240, 4733420, 3549590, 2374410, 4906340, 3664260, 1777760, 4883180, 3660070, 1848240, 4733420, 3549590, 2374410, 4968880, 3653100, 1621120, 4906340, 3664260, 1777760, 4733420, 3549590, 2374410, 5134750, 3570770, 1246640, 5133340, 3572720, 1246860, 5134750, 3570770, 1246640, 5147640, 3568540, 1199250, 5134230, 3572580, 1243630, 5134750, 3570770, 1246640, 5134230, 3572580, 1243630, 5133340, 3572720, 1246860, 4733420, 3549590, 2374410, 5160310, 3535130, 1242680, 5134750, 3570770, 1246640, 5160310, 3535130, 1242680, 5181750, 3529120, 1168820, 5147640, 3568540, 1199250, 5160310, 3535130, 1242680, 5147640, 3568540, 1199250, 5134750, 3570770, 1246640, 4733420, 3549590, 2374410, 5163410, 3530770, 1242200, 5160310, 3535130, 1242680, 5163410, 3530770, 1242200, 5216760, 3513660, 1054860, 5181750, 3529120, 1168820, 5163410, 3530770, 1242200, 5181750, 3529120, 1168820, 5160310, 3535130, 1242680, 5761600, 2430980, 1250740, 5715910, 2369010, 1542990, 5771060, 2391480, 1282690, 5715910, 2369010, 1542990, 5759210, 2385260, 1345540, 5771060, 2391480, 1282690, 5715910, 2369010, 1542990, 5742290, 2354690, 1465510, 5759210, 2385260, 1345540, 5759210, 2385260, 1345540, 5742290, 2354690, 1465510, 5759380, 2360680, 1387230, 5742290, 2354690, 1465510, 5762610, 2332650, 1420610, 5759380, 2360680, 1387230, 5759380, 2360680, 1387230, 5762610, 2332650, 1420610, 5775040, 2325860, 1380980, 5770380, 2446710, 1177990, 5761600, 2430980, 1250740, 5766940, 2431800, 1224460, 5652950, 2402400, 1712740, 5761600, 2430980, 1250740, 5770380, 2446710, 1177990, 5652950, 2402400, 1712740, 5770380, 2446710, 1177990, 5761700, 2487980, 1133460, 5652950, 2402400, 1712740, 5761700, 2487980, 1133460, 5753700, 2505640, 1135210, 5756900, 2509660, 1109970, 5753700, 2505640, 1135210, 5761700, 2487980, 1133460, 5618060, 2488050, 1705290, 5652950, 2402400, 1712740, 5753700, 2505640, 1135210, 5618060, 2488050, 1705290, 5753700, 2505640, 1135210, 5752050, 2509250, 1135570, 5752050, 2509250, 1135570, 5753700, 2505640, 1135210, 5756900, 2509660, 1109970, 5618060, 2488050, 1705290, 5752050, 2509250, 1135570, 5750940, 2511700, 1135810, 5752050, 2509250, 1135570, 5756900, 2509660, 1109970, 5763880, 2513050, 1065510, 5752050, 2509250, 1135570, 5763880, 2513050, 1065510, 5750940, 2511700, 1135810, 5618060, 2488050, 1705290, 5750940, 2511700, 1135810, 5740320, 2534820, 1138110, 5750940, 2511700, 1135810, 5763880, 2513050, 1065510, 5769290, 2545260, 954695, 5750940, 2511700, 1135810, 5769290, 2545260, 954695, 5740320, 2534820, 1138110, 5769290, 2545260, 954695, 5763880, 2513050, 1065510, 5780120, 2508350, 986169, 5707710, 2698910, 901688, 5725620, 2685020, 826998, 5700250, 2755190, 769864, 5707710, 2698910, 901688, 5700250, 2755190, 769864, 5672020, 2773140, 901688, 5173670, 2870180, 2374410, 5639370, 2743310, 1159030, 5607710, 2804840, 1165280, 5639370, 2743310, 1159030, 5707710, 2698910, 901688, 5672020, 2773140, 901688, 5639370, 2743310, 1159030, 5672020, 2773140, 901688, 5607710, 2804840, 1165280, 5712140, 2689540, 901688, 5721720, 2682060, 862621, 5725620, 2685020, 826998, 5712140, 2689540, 901688, 5725620, 2685020, 826998, 5707710, 2698910, 901688, 5173670, 2870180, 2374410, 5643330, 2735500, 1158240, 5639370, 2743310, 1159030, 5643330, 2735500, 1158240, 5712140, 2689540, 901688, 5707710, 2698910, 901688, 5643330, 2735500, 1158240, 5707710, 2698910, 901688, 5639370, 2743310, 1159030, 5712140, 2689540, 901688, 5716900, 2679400, 901688, 5721720, 2682060, 862621, 5173670, 2870180, 2374410, 5433970, 2533900, 2168010, 5680900, 2659920, 1150610, 5173670, 2870180, 2374410, 5680900, 2659920, 1150610, 5643330, 2735500, 1158240, 5643330, 2735500, 1158240, 5680900, 2659920, 1150610, 5716900, 2679400, 901688, 5643330, 2735500, 1158240, 5716900, 2679400, 901688, 5712140, 2689540, 901688, 5721720, 2682060, 862621, 5716900, 2679400, 901688, 5739140, 2631410, 901688, 5680900, 2659920, 1150610, 5433970, 2533900, 2168010, 5701980, 2616350, 1146240, 5701980, 2616350, 1146240, 5741410, 2624670, 906874, 5739140, 2631410, 901688, 5701980, 2616350, 1146240, 5739140, 2631410, 901688, 5716900, 2679400, 901688, 5701980, 2616350, 1146240, 5716900, 2679400, 901688, 5680900, 2659920, 1150610, 5433970, 2533900, 2168010, 5618060, 2488050, 1705290, 5715190, 2588620, 1143470, 5433970, 2533900, 2168010, 5715190, 2588620, 1143470, 5701980, 2616350, 1146240, 5701980, 2616350, 1146240, 5715190, 2588620, 1143470, 5741410, 2624670, 906874, 5715190, 2588620, 1143470, 5618060, 2488050, 1705290, 5740320, 2534820, 1138110, 5740320, 2534820, 1138110, 5769290, 2545260, 954695, 5741410, 2624670, 906874, 5740320, 2534820, 1138110, 5741410, 2624670, 906874, 5715190, 2588620, 1143470, 5652950, 2402400, 1712740, 5691790, 2365520, 1634150, 5761600, 2430980, 1250740, 5761600, 2430980, 1250740, 5691790, 2365520, 1634150, 5715910, 2369010, 1542990, 5691790, 2365520, 1634150, 5718620, 2345780, 1568040, 5715910, 2369010, 1542990, 5618060, 2488050, 1705290, 5483840, 2424380, 2167700, 5498740, 2429560, 2124e3, 5433970, 2533900, 2168010, 5483840, 2424380, 2167700, 5618060, 2488050, 1705290, 5230150, 3610760, 535340, 5241350, 3545340, 796930, 5272960, 3557330, 469506, 5230150, 3610760, 535340, 5234960, 3564400, 753039, 5241350, 3545340, 796930, 5208850, 3607720, 727575, 5234960, 3564400, 753039, 5230150, 3610760, 535340, 5181710, 3668580, 607904, 5208850, 3607720, 727575, 5230150, 3610760, 535340, 5313820, 3502490, 418777, 5302930, 3437740, 858224, 5356410, 3436960, 419033, 5266670, 3494970, 850374, 5302930, 3437740, 858224, 5313820, 3502490, 418777, 5272960, 3557330, 469506, 5266670, 3494970, 850374, 5313820, 3502490, 418777, 5241350, 3545340, 796930, 5266670, 3494970, 850374, 5272960, 3557330, 469506, 5374900, 3312490, 901688, 5441200, 3301230, 417883, 5405570, 3362250, 393205, 5374900, 3312490, 901688, 5405570, 3362250, 393205, 5346270, 3358500, 901688, 4967600, 3213680, 2374410, 5314040, 3308800, 1217970, 5290730, 3344530, 1221830, 5314040, 3308800, 1217970, 5374900, 3312490, 901688, 5346270, 3358500, 901688, 5314040, 3308800, 1217970, 5346270, 3358500, 901688, 5290730, 3344530, 1221830, 5391540, 3285330, 901688, 5466430, 3263030, 387786, 5441200, 3301230, 417883, 5391540, 3285330, 901688, 5441200, 3301230, 417883, 5374900, 3312490, 901688, 4967600, 3213680, 2374410, 5327700, 3287600, 1215690, 5314040, 3308800, 1217970, 5327700, 3287600, 1215690, 5391540, 3285330, 901688, 5374900, 3312490, 901688, 5327700, 3287600, 1215690, 5374900, 3312490, 901688, 5314040, 3308800, 1217970, 5433520, 3215420, 901688, 5511660, 3176200, 461104, 5466430, 3263030, 387786, 5433520, 3215420, 901688, 5466430, 3263030, 387786, 5391540, 3285330, 901688, 4967600, 3213680, 2374410, 5362520, 3232720, 1209820, 5327700, 3287600, 1215690, 5362520, 3232720, 1209820, 5433520, 3215420, 901688, 5391540, 3285330, 901688, 5362520, 3232720, 1209820, 5391540, 3285330, 901688, 5327700, 3287600, 1215690, 5447200, 3192190, 901688, 5521640, 3151530, 508195, 5511660, 3176200, 461104, 5447200, 3192190, 901688, 5511660, 3176200, 461104, 5433520, 3215420, 901688, 4967600, 3213680, 2374410, 5373980, 3214360, 1207880, 5362520, 3232720, 1209820, 5373980, 3214360, 1207880, 5447200, 3192190, 901688, 5433520, 3215420, 901688, 5373980, 3214360, 1207880, 5433520, 3215420, 901688, 5362520, 3232720, 1209820, 5469720, 3153450, 901688, 5553610, 3098610, 484875, 5521640, 3151530, 508195, 5469720, 3153450, 901688, 5521640, 3151530, 508195, 5447200, 3192190, 901688, 4967600, 3213680, 2374410, 5392970, 3183650, 1204610, 5373980, 3214360, 1207880, 5392970, 3183650, 1204610, 5469720, 3153450, 901688, 5447200, 3192190, 901688, 5392970, 3183650, 1204610, 5447200, 3192190, 901688, 5373980, 3214360, 1207880, 5469720, 3153450, 901688, 5515130, 3073350, 901688, 5553610, 3098610, 484875, 4967600, 3213680, 2374410, 5173670, 2870180, 2374410, 5474020, 3047830, 1190320, 4967600, 3213680, 2374410, 5474020, 3047830, 1190320, 5392970, 3183650, 1204610, 5392970, 3183650, 1204610, 5474020, 3047830, 1190320, 5515130, 3073350, 901688, 5392970, 3183650, 1204610, 5515130, 3073350, 901688, 5469720, 3153450, 901688, 5534520, 3038280, 901688, 5577940, 3053420, 492131, 5553610, 3098610, 484875, 5534520, 3038280, 901688, 5553610, 3098610, 484875, 5515130, 3073350, 901688, 5474020, 3047830, 1190320, 5173670, 2870180, 2374410, 5490110, 3019910, 1187410, 5490110, 3019910, 1187410, 5534520, 3038280, 901688, 5515130, 3073350, 901688, 5490110, 3019910, 1187410, 5515130, 3073350, 901688, 5474020, 3047830, 1190320, 5545440, 3018310, 901688, 5593390, 3028e3, 473615, 5577940, 3053420, 492131, 5545440, 3018310, 901688, 5577940, 3053420, 492131, 5534520, 3038280, 901688, 5173670, 2870180, 2374410, 5499210, 3003970, 1185760, 5490110, 3019910, 1187410, 5499210, 3003970, 1185760, 5545440, 3018310, 901688, 5534520, 3038280, 901688, 5499210, 3003970, 1185760, 5534520, 3038280, 901688, 5490110, 3019910, 1187410, 5564080, 2983820, 901688, 5616050, 2983590, 486986, 5593390, 3028e3, 473615, 5564080, 2983820, 901688, 5593390, 3028e3, 473615, 5545440, 3018310, 901688, 5173670, 2870180, 2374410, 5514840, 2976330, 1182890, 5499210, 3003970, 1185760, 5514840, 2976330, 1182890, 5564080, 2983820, 901688, 5545440, 3018310, 901688, 5514840, 2976330, 1182890, 5545440, 3018310, 901688, 5499210, 3003970, 1185760, 5591920, 2931300, 901688, 5640470, 2920520, 577951, 5616050, 2983590, 486986, 5591920, 2931300, 901688, 5616050, 2983590, 486986, 5564080, 2983820, 901688, 5173670, 2870180, 2374410, 5538410, 2934010, 1178510, 5514840, 2976330, 1182890, 5538410, 2934010, 1178510, 5591920, 2931300, 901688, 5564080, 2983820, 901688, 5538410, 2934010, 1178510, 5564080, 2983820, 901688, 5514840, 2976330, 1182890, 5600150, 2915550, 901688, 5645720, 2903170, 612852, 5640470, 2920520, 577951, 5600150, 2915550, 901688, 5640470, 2920520, 577951, 5591920, 2931300, 901688, 5173670, 2870180, 2374410, 5545420, 2921260, 1177200, 5538410, 2934010, 1178510, 5545420, 2921260, 1177200, 5600150, 2915550, 901688, 5591920, 2931300, 901688, 5545420, 2921260, 1177200, 5591920, 2931300, 901688, 5538410, 2934010, 1178510, 5634400, 2848800, 901688, 5679180, 2827320, 656398, 5645720, 2903170, 612852, 5634400, 2848800, 901688, 5645720, 2903170, 612852, 5600150, 2915550, 901688, 5173670, 2870180, 2374410, 5574880, 2866960, 1171620, 5545420, 2921260, 1177200, 5574880, 2866960, 1171620, 5634400, 2848800, 901688, 5600150, 2915550, 901688, 5574880, 2866960, 1171620, 5600150, 2915550, 901688, 5545420, 2921260, 1177200, 5649790, 2818160, 901688, 5685110, 2799070, 722343, 5679180, 2827320, 656398, 5649790, 2818160, 901688, 5679180, 2827320, 656398, 5634400, 2848800, 901688, 5173670, 2870180, 2374410, 5588240, 2841880, 1169060, 5574880, 2866960, 1171620, 5588240, 2841880, 1169060, 5649790, 2818160, 901688, 5634400, 2848800, 901688, 5588240, 2841880, 1169060, 5634400, 2848800, 901688, 5574880, 2866960, 1171620, 5672020, 2773140, 901688, 5700250, 2755190, 769864, 5685110, 2799070, 722343, 5672020, 2773140, 901688, 5685110, 2799070, 722343, 5649790, 2818160, 901688, 5173670, 2870180, 2374410, 5607710, 2804840, 1165280, 5588240, 2841880, 1169060, 5607710, 2804840, 1165280, 5672020, 2773140, 901688, 5649790, 2818160, 901688, 5607710, 2804840, 1165280, 5649790, 2818160, 901688, 5588240, 2841880, 1169060, 5173670, 2870180, 2374410, 5362160, 2500410, 2374410, 5433970, 2533900, 2168010, 5715910, 2369010, 1542990, 5736970, 2339260, 1510050, 5742290, 2354690, 1465510, 5763880, 2513050, 1065510, 5777930, 2499710, 1020110, 5780120, 2508350, 986169, 6048710, -1474570, 1380760, 6016890, -1531190, 1455640, 6004670, -1576660, 1457530, 6048710, -1474570, 1380760, 6022700, -1484330, 1479790, 6016890, -1531190, 1455640, 5963610, -1424660, 1750920, 6022700, -1484330, 1479790, 6048710, -1474570, 1380760, 5963610, -1424660, 1750920, 6010100, -1503720, 1510870, 6022700, -1484330, 1479790, 5963610, -1424660, 1750920, 5938780, -1491660, 1779070, 6010100, -1503720, 1510870, 6010100, -1503720, 1510870, 5938780, -1491660, 1779070, 6005630, -1539380, 1492770, 5938780, -1491660, 1779070, 5917220, -1538820, 1810280, 6005630, -1539380, 1492770, 6005630, -1539380, 1492770, 5917220, -1538820, 1810280, 5997080, -1571850, 1493270, 5917220, -1538820, 1810280, 5979860, -1611440, 1519720, 5997080, -1571850, 1493270, 5991770, -1697380, 1373140, 5973850, -1705220, 1439450, 5981120, -1731760, 1376620, 5977540, -1679200, 1454540, 5973850, -1705220, 1439450, 5991770, -1697380, 1373140, 5997040, -1668590, 1385300, 5977540, -1679200, 1454540, 5991770, -1697380, 1373140, 5982560, -1660440, 1455420, 5977540, -1679200, 1454540, 5997040, -1668590, 1385300, 6048710, -1474570, 1380760, 5982560, -1660440, 1455420, 5997040, -1668590, 1385300, 6048710, -1474570, 1380760, 5987460, -1620160, 1480270, 5982560, -1660440, 1455420, 6048710, -1474570, 1380760, 6004670, -1576660, 1457530, 5987460, -1620160, 1480270, 5973850, -1705220, 1439450, 5945500, -1799750, 1441720, 5968580, -1788100, 1359020, 5973850, -1705220, 1439450, 5968580, -1788100, 1359020, 5981120, -1731760, 1376620, 6102090, -1259050, 1359200, 6071070, -1282440, 1470870, 6051950, -1300180, 1532410, 6086320, -1244180, 1440620, 6071070, -1282440, 1470870, 6102090, -1259050, 1359200, 6103930, -1243400, 1365300, 6086320, -1244180, 1440620, 6102090, -1259050, 1359200, 6097560, -1237010, 1398930, 6086320, -1244180, 1440620, 6103930, -1243400, 1365300, 6034280, -1301440, 1599110, 6088850, -1325200, 1355730, 6088e3, -1316670, 1367740, 6051950, -1300180, 1532410, 6034280, -1301440, 1599110, 6088e3, -1316670, 1367740, 6102090, -1259050, 1359200, 6051950, -1300180, 1532410, 6088e3, -1316670, 1367740, 6061160, -1423620, 1379650, 5963610, -1424660, 1750920, 6048710, -1474570, 1380760, 5999760, -1366490, 1672540, 5963610, -1424660, 1750920, 6061160, -1423620, 1379650, 6084220, -1348740, 1353320, 5999760, -1366490, 1672540, 6061160, -1423620, 1379650, 6034280, -1301440, 1599110, 5999760, -1366490, 1672540, 6084220, -1348740, 1353320, 6034280, -1301440, 1599110, 6084220, -1348740, 1353320, 6088850, -1325200, 1355730, 5970730, -1669820, 1492540, 5877940, -1698880, 1795150, 5877230, -1736800, 1761080, 5895060, -1648560, 1785980, 5877940, -1698880, 1795150, 5970730, -1669820, 1492540, 5971270, -1644630, 1517990, 5895060, -1648560, 1785980, 5970730, -1669820, 1492540, 5902280, -1596500, 1809110, 5895060, -1648560, 1785980, 5971270, -1644630, 1517990, 5979860, -1611440, 1519720, 5902280, -1596500, 1809110, 5971270, -1644630, 1517990, 5917220, -1538820, 1810280, 5902280, -1596500, 1809110, 5979860, -1611440, 1519720, 5970730, -1669820, 1492540, 5877230, -1736800, 1761080, 5884870, -1765620, 1706430, 5970730, -1669820, 1492540, 5884870, -1765620, 1706430, 5938630, -1783220, 1489470, 5884870, -1765620, 1706430, 5905750, -1819790, 1573050, 5938630, -1783220, 1489470, 5884870, -1765620, 1706430, 5889270, -1821370, 1631490, 5905750, -1819790, 1573050, 5905750, -1819790, 1573050, 5889270, -1821370, 1631490, 5880250, -1868150, 1611170, 1285120, 532061, 6203760, 1245110, 488356, 6215420, 1277230, 483288, 6209340, 1179840, 498003, 6227300, 1245110, 488356, 6215420, 1285120, 532061, 6203760, 1214060, 522386, 6218780, 1179840, 498003, 6227300, 1285120, 532061, 6203760, 1222890, 563092, 6213520, 1214060, 522386, 6218780, 1285120, 532061, 6203760, 1140130, 450115, 6238260, 1086390, 358275, 6253680, 1199530, 413672, 6229690, 1199530, 413672, 6229690, 1086390, 358275, 6253680, 1279760, 427499, 6212880, 1279760, 427499, 6212880, 1086390, 358275, 6253680, 1305780, 414077, 6208410, 1086390, 358275, 6253680, 1395390, 429764, 6187950, 1305780, 414077, 6208410, 1086390, 358275, 6253680, 1057310, 323068, 6260530, 1395390, 429764, 6187950, 1408200, 401484, 6186960, 1314910, 344214, 6210730, 1357810, 332572, 6202190, 1408200, 401484, 6186960, 1107140, 299616, 6253130, 1314910, 344214, 6210730, 1408200, 401484, 6186960, 1068930, 296893, 6259860, 1107140, 299616, 6253130, 1057310, 323068, 6260530, 1068930, 296893, 6259860, 1408200, 401484, 6186960, 1395390, 429764, 6187950, 1057310, 323068, 6260530, 1408200, 401484, 6186960, 1314910, 344214, 6210730, 1080810, 252921, 6259750, 1292710, 302504, 6217510, 1314910, 344214, 6210730, 1115720, 272366, 6252850, 1080810, 252921, 6259750, 1107140, 299616, 6253130, 1115720, 272366, 6252850, 1314910, 344214, 6210730, 1080810, 252921, 6259750, 1130320, 208361, 6252690, 1211650, 240404, 6236390, 1080810, 252921, 6259750, 1211650, 240404, 6236390, 1292710, 302504, 6217510, 1083310, 460385, 6247560, 956823, 404558, 6271870, 994408, 399909, 6266360, 962889, 458194, 6267280, 956823, 404558, 6271870, 1083310, 460385, 6247560, 1047e3, 508954, 6249970, 962889, 458194, 6267280, 1083310, 460385, 6247560, 980936, 508632, 6260630, 962889, 458194, 6267280, 1047e3, 508954, 6249970, 1083310, 460385, 6247560, 994408, 399909, 6266360, 979407, 365328, 6270800, 1083310, 460385, 6247560, 979407, 365328, 6270800, 1088360, 397751, 6250960, 979407, 365328, 6270800, 1061120, 384065, 6256460, 1088360, 397751, 6250960, 979407, 365328, 6270800, 1068590, 356762, 6256810, 1061120, 384065, 6256460, 979407, 365328, 6270800, 1027020, 321218, 6265630, 1068590, 356762, 6256810, 1179840, 498003, 6227300, 1217550, 462794, 6222780, 1245110, 488356, 6215420, -5901020, 2165430, -1077810, -5904940, 2183950, -1017690, -5895780, 2187940, -1061010, -5927050, 2114840, -1034870, -5904940, 2183950, -1017690, -5901020, 2165430, -1077810, -5922090, 2101430, -1088830, -5927050, 2114840, -1034870, -5901020, 2165430, -1077810, -5935370, 2079820, -1057760, -5927050, 2114840, -1034870, -5922090, 2101430, -1088830, -5936620, 2061310, -1086410, -5935370, 2079820, -1057760, -5922090, 2101430, -1088830, -5962140, 1991550, -1076750, -5964720, 2063140, -916814, -5950600, 2073620, -982153, -5962140, 1991550, -1076750, -5964860, 2021310, -1004270, -5964720, 2063140, -916814, -5970630, 1976910, -1056650, -5964860, 2021310, -1004270, -5962140, 1991550, -1076750, -5972040, 1894560, -1190150, -5969400, 1925880, -1152790, -5963260, 1947130, -1148870, -5972040, 1894560, -1190150, -5963260, 1947130, -1148870, -5948610, 1967310, -1189460, -5963260, 1947130, -1148870, -5947190, 2010700, -1122550, -5948610, 1967310, -1189460, -5883890, 2307530, -854920, -5880600, 2333040, -807250, -5873170, 2347790, -818420, -5895940, 2284520, -833566, -5880600, 2333040, -807250, -5883890, 2307530, -854920, -5900560, 2249190, -894283, -5895940, 2284520, -833566, -5883890, 2307530, -854920, -5921560, 2197500, -883974, -5895940, 2284520, -833566, -5900560, 2249190, -894283, -5924370, 2166020, -940694, -5922530, 2187640, -901688, -5904460, 2235940, -901688, -5921560, 2197500, -883974, -5900560, 2249190, -894283, -5904460, 2235940, -901688, -5921560, 2197500, -883974, -5904460, 2235940, -901688, -5922530, 2187640, -901688, -5923790, 2184230, -901688, -5922530, 2187640, -901688, -5924370, 2166020, -940694, -5923790, 2184230, -901688, -5924370, 2166020, -940694, -5925840, 2171480, -918708, -5923790, 2184230, -901688, -5921560, 2197500, -883974, -5922530, 2187640, -901688, -5821170, 2482700, -791545, -5812530, 2522170, -728137, -5808270, 2526590, -746436, -5833390, 2459320, -774510, -5812530, 2522170, -728137, -5821170, 2482700, -791545, -5836990, 2437e3, -816545, -5833390, 2459320, -774510, -5821170, 2482700, -791545, -5846160, 2417020, -810299, -5833390, 2459320, -774510, -5836990, 2437e3, -816545, -5964720, 2063140, -916814, -5952370, 2098500, -916814, -5950600, 2073620, -982153, 6194730, -1219620, 901688, 6206090, -1222840, 815661, 6207650, -1172450, 875149, 6194730, -1219620, 901688, 6207650, -1172450, 875149, 6202960, -1177010, 901688, 6202960, -1177010, 901688, 6163120, -1211110, 1105250, 6194730, -1219620, 901688, 6207650, -1172450, 875149, 6203550, -1173910, 901688, 6202960, -1177010, 901688, 6175590, -1182440, 1066270, 6163120, -1211110, 1105250, 6202960, -1177010, 901688, 6175590, -1182440, 1066270, 6202960, -1177010, 901688, 6203550, -1173910, 901688, 6204150, -1170730, 901688, 6203550, -1173910, 901688, 6207650, -1172450, 875149, 6191890, -1164910, 988669, 6175590, -1182440, 1066270, 6203550, -1173910, 901688, 6191890, -1164910, 988669, 6203550, -1173910, 901688, 6204150, -1170730, 901688, 6206250, -1159570, 901688, 6204150, -1170730, 901688, 6207650, -1172450, 875149, 6191890, -1164910, 988669, 6204150, -1170730, 901688, 6206250, -1159570, 901688, 6191890, -1164910, 988669, 6206250, -1159570, 901688, 6205200, -1150680, 919975, 6208850, -1145580, 901688, 6206250, -1159570, 901688, 6207650, -1172450, 875149, 6205200, -1150680, 919975, 6206250, -1159570, 901688, 6208850, -1145580, 901688, 6205200, -1150680, 919975, 6208850, -1145580, 901688, 6209750, -1120680, 926246, 6194050, -1223050, 901688, 6208190, -1229050, 790111, 6208370, -1228060, 790202, 6194050, -1223050, 901688, 6208370, -1228060, 790202, 6206090, -1222840, 815661, 6194050, -1223050, 901688, 6206090, -1222840, 815661, 6194730, -1219620, 901688, 6208370, -1228060, 790202, 6208190, -1229050, 790111, 6208930, -1229380, 783752, 6163120, -1211110, 1105250, 6194050, -1223050, 901688, 6194730, -1219620, 901688, 6191230, -1237260, 901688, 6204e3, -1251330, 788064, 6208190, -1229050, 790111, 6191230, -1237260, 901688, 6208190, -1229050, 790111, 6194050, -1223050, 901688, 6204e3, -1251330, 788064, 6207940, -1256120, 748630, 6208930, -1229380, 783752, 6204e3, -1251330, 788064, 6208930, -1229380, 783752, 6208190, -1229050, 790111, 6163120, -1211110, 1105250, 6191230, -1237260, 901688, 6194050, -1223050, 901688, 6187710, -1254750, 901688, 6198650, -1279130, 785508, 6204e3, -1251330, 788064, 6187710, -1254750, 901688, 6204e3, -1251330, 788064, 6191230, -1237260, 901688, 6198650, -1279130, 785508, 6201020, -1285090, 756776, 6207940, -1256120, 748630, 6198650, -1279130, 785508, 6207940, -1256120, 748630, 6204e3, -1251330, 788064, 6163120, -1211110, 1105250, 6187710, -1254750, 901688, 6191230, -1237260, 901688, 6187710, -1254750, 901688, 6180340, -1290570, 901688, 6197270, -1286210, 784856, 6187710, -1254750, 901688, 6197270, -1286210, 784856, 6198650, -1279130, 785508, 6198650, -1279130, 785508, 6197270, -1286210, 784856, 6201020, -1285090, 756776, 6163120, -1211110, 1105250, 6145590, -1297020, 1105370, 6180340, -1290570, 901688, 6163120, -1211110, 1105250, 6180340, -1290570, 901688, 6187710, -1254750, 901688, 6179030, -1361730, 800988, 6164130, -1365860, 901688, 6162710, -1372280, 901688, 6137650, -1371560, 1058850, 6139810, -1385020, 1028580, 6162710, -1372280, 901688, 6137650, -1371560, 1058850, 6162710, -1372280, 901688, 6164130, -1365860, 901688, 6165720, -1358700, 901688, 6164130, -1365860, 901688, 6179030, -1361730, 800988, 6137780, -1352390, 1082360, 6137650, -1371560, 1058850, 6164130, -1365860, 901688, 6137780, -1352390, 1082360, 6164130, -1365860, 901688, 6165720, -1358700, 901688, 6189090, -1327260, 781076, 6196340, -1290970, 784417, 6175060, -1315590, 901688, 6189090, -1327260, 781076, 6175060, -1315590, 901688, 6165720, -1358700, 901688, 6189090, -1327260, 781076, 6165720, -1358700, 901688, 6179030, -1361730, 800988, 6201020, -1285090, 756776, 6196340, -1290970, 784417, 6189090, -1327260, 781076, 6175060, -1315590, 901688, 6137780, -1352390, 1082360, 6165720, -1358700, 901688, 6177890, -1302230, 901688, 6175060, -1315590, 901688, 6196340, -1290970, 784417, 6177890, -1302230, 901688, 6196340, -1290970, 784417, 6196830, -1288450, 784649, 6201020, -1285090, 756776, 6196830, -1288450, 784649, 6196340, -1290970, 784417, 6143790, -1322760, 1084840, 6137780, -1352390, 1082360, 6175060, -1315590, 901688, 6143790, -1322760, 1084840, 6175060, -1315590, 901688, 6177890, -1302230, 901688, 6180340, -1290570, 901688, 6177890, -1302230, 901688, 6196830, -1288450, 784649, 6180340, -1290570, 901688, 6196830, -1288450, 784649, 6197270, -1286210, 784856, 6201020, -1285090, 756776, 6197270, -1286210, 784856, 6196830, -1288450, 784649, 6145590, -1297020, 1105370, 6143790, -1322760, 1084840, 6177890, -1302230, 901688, 6145590, -1297020, 1105370, 6177890, -1302230, 901688, 6180340, -1290570, 901688, 6154540, -1408470, 901688, 6158830, -1416100, 859723, 6179030, -1361730, 800988, 6154540, -1408470, 901688, 6179030, -1361730, 800988, 6162710, -1372280, 901688, 6162710, -1372280, 901688, 6139810, -1385020, 1028580, 6154540, -1408470, 901688, 6148890, -1432910, 901688, 6149010, -1433640, 899732, 6158830, -1416100, 859723, 6148890, -1432910, 901688, 6158830, -1416100, 859723, 6154540, -1408470, 901688, 6139810, -1385020, 1028580, 6148890, -1432910, 901688, 6154540, -1408470, 901688, 6148890, -1432910, 901688, 6148660, -1433890, 901688, 6149010, -1433640, 899732, 6139810, -1385020, 1028580, 6134120, -1444010, 980570, 6148660, -1433890, 901688, 6139810, -1385020, 1028580, 6148660, -1433890, 901688, 6148890, -1432910, 901688, 6187540, -1160470, 1020420, 6175590, -1182440, 1066270, 6191890, -1164910, 988669, 6199510, -1148370, 960076, 6191890, -1164910, 988669, 6205200, -1150680, 919975, 164411, -6209440, 1443080, 161708, -6191890, 1516390, 157596, -6188420, 1530860, 209005, -6187310, 1529180, 161708, -6191890, 1516390, 164411, -6209440, 1443080, 227186, -6207830, 1441460, 209005, -6187310, 1529180, 164411, -6209440, 1443080, 231299, -6188420, 1521520, 209005, -6187310, 1529180, 227186, -6207830, 1441460, 238982, -6201410, 1466820, 231299, -6188420, 1521520, 227186, -6207830, 1441460, 246101, -6190710, 1509900, 231299, -6188420, 1521520, 238982, -6201410, 1466820, 164411, -6209440, 1443080, 157596, -6188420, 1530860, 124899, -6184850, 1548060, 164411, -6209440, 1443080, 124899, -6184850, 1548060, 125355, -6207930, 1453390, 124899, -6184850, 1548060, 101558, -6179850, 1569460, 125355, -6207930, 1453390, 125355, -6207930, 1453390, 101558, -6179850, 1569460, 80483.8, -6203590, 1474780, 101558, -6179850, 1569460, 69733.6, -6177980, 1578470, 80483.8, -6203590, 1474780, 80483.8, -6203590, 1474780, 69733.6, -6177980, 1578470, 50267.4, -6183080, 1559250, 69733.6, -6177980, 1578470, 44513.8, -6179900, 1571880, 50267.4, -6183080, 1559250, 20308.1, -6202470, 1481460, -6993.32, -6193030, 1520310, -10339.6, -6196900, 1504550, 30026.2, -6186210, 1547380, -6993.32, -6193030, 1520310, 20308.1, -6202470, 1481460, 80483.8, -6203590, 1474780, 30026.2, -6186210, 1547380, 20308.1, -6202470, 1481460, 80483.8, -6203590, 1474780, 50267.4, -6183080, 1559250, 30026.2, -6186210, 1547380, 4229660, 4687440, 901688, 4240810, 4677350, 901688, 4243740, 4678450, 882108, 4185400, 4651880, 1229970, 4240810, 4677350, 901688, 4229660, 4687440, 901688, 4185400, 4651880, 1229970, 4229660, 4687440, 901688, 4177530, 4719630, 973421, 4177530, 4719630, 973421, 4153700, 4674940, 1249750, 4185400, 4651880, 1229970, 4107270, 4715230, 1251790, 4153700, 4674940, 1249750, 4177530, 4719630, 973421, 4107270, 4715230, 1251790, 4177530, 4719630, 973421, 4113370, 4721650, 1207080, 4113370, 4721650, 1207080, 4177530, 4719630, 973421, 4126720, 4736920, 1097360, 4126720, 4736920, 1097360, 4177530, 4719630, 973421, 4133130, 4744260, 1040480, 4312020, 4615720, 881438, 4311650, 4612130, 901688, 4317720, 4606450, 901688, 4301380, 4555800, 1189080, 4388860, 4475020, 1176200, 4317720, 4606450, 901688, 4301380, 4555800, 1189080, 4317720, 4606450, 901688, 4311650, 4612130, 901688, 4307310, 4616180, 901688, 4311650, 4612130, 901688, 4312020, 4615720, 881438, 4226460, 4616530, 1222820, 4301380, 4555800, 1189080, 4311650, 4612130, 901688, 4226460, 4616530, 1222820, 4311650, 4612130, 901688, 4307310, 4616180, 901688, 4307310, 4616180, 901688, 4312020, 4615720, 881438, 4243740, 4678450, 882108, 4307310, 4616180, 901688, 4243740, 4678450, 882108, 4243100, 4675270, 901688, 4243100, 4675270, 901688, 4226460, 4616530, 1222820, 4307310, 4616180, 901688, 4240810, 4677350, 901688, 4243100, 4675270, 901688, 4243740, 4678450, 882108, 4185400, 4651880, 1229970, 4226460, 4616530, 1222820, 4243100, 4675270, 901688, 4185400, 4651880, 1229970, 4243100, 4675270, 901688, 4240810, 4677350, 901688, 4554080, 4348740, 1011210, 4531590, 4325440, 1194260, 4539980, 4303870, 1239150, 4503540, 4366950, 1148740, 4531590, 4325440, 1194260, 4554080, 4348740, 1011210, 4312020, 4615720, 881438, 4327240, 4597510, 901688, 4350920, 4575110, 901688, 4503540, 4366950, 1148740, 4554080, 4348740, 1011210, 4350920, 4575110, 901688, 4503540, 4366950, 1148740, 4350920, 4575110, 901688, 4327240, 4597510, 901688, 4312020, 4615720, 881438, 4324250, 4600320, 901688, 4327240, 4597510, 901688, 4465580, 4405860, 1148380, 4503540, 4366950, 1148740, 4327240, 4597510, 901688, 4465580, 4405860, 1148380, 4327240, 4597510, 901688, 4324250, 4600320, 901688, 4312020, 4615720, 881438, 4317720, 4606450, 901688, 4324250, 4600320, 901688, 4388860, 4475020, 1176200, 4465580, 4405860, 1148380, 4324250, 4600320, 901688, 4388860, 4475020, 1176200, 4324250, 4600320, 901688, 4317720, 4606450, 901688, 4599340, 4278170, 1102630, 4597250, 4253660, 1201070, 4618790, 4241070, 1162570, 4561420, 4275270, 1259130, 4597250, 4253660, 1201070, 4599340, 4278170, 1102630, 4578280, 4313900, 1050160, 4561420, 4275270, 1259130, 4599340, 4278170, 1102630, 4539980, 4303870, 1239150, 4561420, 4275270, 1259130, 4578280, 4313900, 1050160, 4554080, 4348740, 1011210, 4539980, 4303870, 1239150, 4578280, 4313900, 1050160, 4106530, 4715400, 1253560, 4153700, 4674940, 1249750, 4107270, 4715230, 1251790, 3963980, 4866250, 1130700, 3949070, 4830320, 1319770, 4000720, 4862310, 1012870, 3916970, 4856300, 1320060, 3949070, 4830320, 1319770, 3963980, 4866250, 1130700, 3916970, 4856300, 1320060, 3963980, 4866250, 1130700, 3934870, 4866370, 1227080, 3941460, 4875180, 1169990, 3934870, 4866370, 1227080, 3963980, 4866250, 1130700, 4117260, 4812640, 750688, 4108960, 4793600, 901688, 4116960, 4786730, 901688, 4079880, 4737910, 1255700, 4106530, 4715400, 1253560, 4116960, 4786730, 901688, 4079880, 4737910, 1255700, 4116960, 4786730, 901688, 4108960, 4793600, 901688, 4097680, 4803240, 901688, 4108960, 4793600, 901688, 4117260, 4812640, 750688, 4039530, 4768070, 1271800, 4079880, 4737910, 1255700, 4108960, 4793600, 901688, 4039530, 4768070, 1271800, 4108960, 4793600, 901688, 4097680, 4803240, 901688, 4097680, 4803240, 901688, 4117260, 4812640, 750688, 4053350, 4842750, 890730, 4097680, 4803240, 901688, 4053350, 4842750, 890730, 4053170, 4840860, 901688, 4053170, 4840860, 901688, 4039530, 4768070, 1271800, 4097680, 4803240, 901688, 4051900, 4841920, 901688, 4053170, 4840860, 901688, 4053350, 4842750, 890730, 3993800, 4803520, 1282710, 4039530, 4768070, 1271800, 4053170, 4840860, 901688, 3993800, 4803520, 1282710, 4053170, 4840860, 901688, 4051900, 4841920, 901688, 4048690, 4844600, 901688, 4051900, 4841920, 901688, 4053350, 4842750, 890730, 3993800, 4803520, 1282710, 4051900, 4841920, 901688, 4048690, 4844600, 901688, 3993800, 4803520, 1282710, 4048690, 4844600, 901688, 4000720, 4862310, 1012870, 3949070, 4830320, 1319770, 3993800, 4803520, 1282710, 4000720, 4862310, 1012870, 4156080, 4752800, 901688, 4200210, 4763300, 589531, 4117260, 4812640, 750688, 4156080, 4752800, 901688, 4117260, 4812640, 750688, 4126720, 4778320, 901688, 4126720, 4778320, 901688, 4133130, 4744260, 1040480, 4156080, 4752800, 901688, 4117260, 4812640, 750688, 4123040, 4781490, 901688, 4126720, 4778320, 901688, 4126720, 4736920, 1097360, 4133130, 4744260, 1040480, 4126720, 4778320, 901688, 4126720, 4736920, 1097360, 4126720, 4778320, 901688, 4123040, 4781490, 901688, 4117260, 4812640, 750688, 4118520, 4785380, 901688, 4123040, 4781490, 901688, 4113370, 4721650, 1207080, 4126720, 4736920, 1097360, 4123040, 4781490, 901688, 4113370, 4721650, 1207080, 4123040, 4781490, 901688, 4118520, 4785380, 901688, 4117260, 4812640, 750688, 4117160, 4786560, 901688, 4118520, 4785380, 901688, 4107270, 4715230, 1251790, 4113370, 4721650, 1207080, 4118520, 4785380, 901688, 4107270, 4715230, 1251790, 4118520, 4785380, 901688, 4117160, 4786560, 901688, 4117260, 4812640, 750688, 4116960, 4786730, 901688, 4117160, 4786560, 901688, 4106530, 4715400, 1253560, 4107270, 4715230, 1251790, 4117160, 4786560, 901688, 4106530, 4715400, 1253560, 4117160, 4786560, 901688, 4116960, 4786730, 901688, 4200210, 4763300, 589531, 4243740, 4678450, 882108, 4277660, 4707820, 466144, 4229660, 4687440, 901688, 4243740, 4678450, 882108, 4200210, 4763300, 589531, 4229660, 4687440, 901688, 4200210, 4763300, 589531, 4182980, 4729140, 901688, 4182980, 4729140, 901688, 4177530, 4719630, 973421, 4229660, 4687440, 901688, 4156080, 4752800, 901688, 4182980, 4729140, 901688, 4200210, 4763300, 589531, 4133130, 4744260, 1040480, 4177530, 4719630, 973421, 4182980, 4729140, 901688, 4133130, 4744260, 1040480, 4182980, 4729140, 901688, 4156080, 4752800, 901688, 4654280, 4360880, 32309.7, 4669320, 4319250, 469804, 4717460, 4266840, 467768, 4597040, 4387030, 547507, 4669320, 4319250, 469804, 4654280, 4360880, 32309.7, 4582010, 4435330, 116410, 4597040, 4387030, 547507, 4654280, 4360880, 32309.7, 4495820, 4490110, 552362, 4597040, 4387030, 547507, 4582010, 4435330, 116410, 4462580, 4551320, 226161, 4495820, 4490110, 552362, 4582010, 4435330, 116410, 4243740, 4678450, 882108, 4495820, 4490110, 552362, 4462580, 4551320, 226161, 4243740, 4678450, 882108, 4462580, 4551320, 226161, 4379780, 4625790, 315594, 4243740, 4678450, 882108, 4379780, 4625790, 315594, 4277660, 4707820, 466144, 4736170, 4270700, -101631, 4739620, 4245920, 433e3, 4752430, 4250800, -159926, 4717460, 4266840, 467768, 4739620, 4245920, 433e3, 4736170, 4270700, -101631, 4654280, 4360880, 32309.7, 4717460, 4266840, 467768, 4736170, 4270700, -101631, 4739620, 4245920, 433e3, 4768620, 4231560, -186098, 4752430, 4250800, -159926, 4739620, 4245920, 433e3, 4813620, 4183380, -94901.3, 4768620, 4231560, -186098, 4739620, 4245920, 433e3, 4809380, 4177930, 307778, 4813620, 4183380, -94901.3, 3919e3, 4862760, 1290130, 3916970, 4856300, 1320060, 3934870, 4866370, 1227080, 4286240, 1818170, 4344630, 4271050, 1769140, 4379460, 4315900, 1796160, 4324510, 4286240, 1818170, 4344630, 4315900, 1796160, 4324510, 4312160, 1803350, 4325240, 4312160, 1803350, 4325240, 4315900, 1796160, 4324510, 4320140, 1798720, 4319250, 4315900, 1796160, 4324510, 4271050, 1769140, 4379460, 4321050, 1786200, 4323500, 4321050, 1786200, 4323500, 4347570, 1795190, 4293290, 4320140, 1798720, 4319250, 4321050, 1786200, 4323500, 4320140, 1798720, 4319250, 4315900, 1796160, 4324510, 4271050, 1769140, 4379460, 4247830, 1751730, 4408740, 4322130, 1784090, 4323290, 4271050, 1769140, 4379460, 4322130, 1784090, 4323290, 4321050, 1786200, 4323500, 4321050, 1786200, 4323500, 4322130, 1784090, 4323290, 4347570, 1795190, 4293290, 4322130, 1784090, 4323290, 4247830, 1751730, 4408740, 4323570, 1781300, 4323010, 4323570, 1781300, 4323010, 4367350, 1798350, 4271980, 4347570, 1795190, 4293290, 4323570, 1781300, 4323010, 4347570, 1795190, 4293290, 4322130, 1784090, 4323290, 4247830, 1751730, 4408740, 4222130, 1718300, 4446180, 4326500, 1775590, 4322430, 4247830, 1751730, 4408740, 4326500, 1775590, 4322430, 4323570, 1781300, 4323010, 4323570, 1781300, 4323010, 4326500, 1775590, 4322430, 4367350, 1798350, 4271980, 4326500, 1775590, 4322430, 4222130, 1718300, 4446180, 4338870, 1751290, 4319960, 4338870, 1751290, 4319960, 4382910, 1763440, 4270600, 4367350, 1798350, 4271980, 4338870, 1751290, 4319960, 4367350, 1798350, 4271980, 4326500, 1775590, 4322430, 4222130, 1718300, 4446180, 4344830, 1739420, 4318770, 4338870, 1751290, 4319960, 4344830, 1739420, 4318770, 4360860, 1742010, 4301660, 4382910, 1763440, 4270600, 4344830, 1739420, 4318770, 4382910, 1763440, 4270600, 4338870, 1751290, 4319960, 4382910, 1763440, 4270600, 4360860, 1742010, 4301660, 4381260, 1740230, 4281730, 4196490, 1734730, 4463910, 4222130, 1718300, 4446180, 4247830, 1751730, 4408740, 4217170, 1744570, 4440690, 4196490, 1734730, 4463910, 4247830, 1751730, 4408740, 4224060, 1763260, 4426830, 4217170, 1744570, 4440690, 4247830, 1751730, 4408740, 4190450, 1649270, 4501560, 4358380, 1711430, 4316320, 4358540, 1711870, 4315980, 4190450, 1649270, 4501560, 4358540, 1711870, 4315980, 4352050, 1724960, 4317310, 4365550, 1731350, 4301210, 4352050, 1724960, 4317310, 4358540, 1711870, 4315980, 4218310, 1666910, 4469150, 4190450, 1649270, 4501560, 4352050, 1724960, 4317310, 4218310, 1666910, 4469150, 4352050, 1724960, 4317310, 4351870, 1725340, 4317340, 4365550, 1731350, 4301210, 4351870, 1725340, 4317340, 4352050, 1724960, 4317310, 4222130, 1718300, 4446180, 4218310, 1666910, 4469150, 4351870, 1725340, 4317340, 4222130, 1718300, 4446180, 4351870, 1725340, 4317340, 4349500, 1730090, 4317820, 4349500, 1730090, 4317820, 4351870, 1725340, 4317340, 4365550, 1731350, 4301210, 4222130, 1718300, 4446180, 4349500, 1730090, 4317820, 4344830, 1739420, 4318770, 4349500, 1730090, 4317820, 4365550, 1731350, 4301210, 4360860, 1742010, 4301660, 4349500, 1730090, 4317820, 4360860, 1742010, 4301660, 4344830, 1739420, 4318770, 4190450, 1649270, 4501560, 4359960, 1697620, 4320150, 4358380, 1711430, 4316320, 4190450, 1649270, 4501560, 4352580, 1683310, 4333080, 4359960, 1697620, 4320150, 4190450, 1649270, 4501560, 4353640, 1667410, 4338130, 4352580, 1683310, 4333080, 4190450, 1649270, 4501560, 4190390, 1598e3, 4519950, 4353640, 1667410, 4338130, 4347730, 1652810, 4349550, 4169890, 1580850, 4544710, 4356820, 1640670, 4345080, 4190390, 1598e3, 4519950, 4169890, 1580850, 4544710, 4347730, 1652810, 4349550, 4353640, 1667410, 4338130, 4190390, 1598e3, 4519950, 4347730, 1652810, 4349550, 4169890, 1580850, 4544710, 4384350, 1638960, 4318130, 4356820, 1640670, 4345080, 4169890, 1580850, 4544710, 4387850, 1626580, 4319250, 4384350, 1638960, 4318130, 4169890, 1580850, 4544710, 4155220, 1530490, 4575080, 4387850, 1626580, 4319250, 4387850, 1626580, 4319250, 4155220, 1530490, 4575080, 4383800, 1591990, 4336110, 4155220, 1530490, 4575080, 4385140, 1564070, 4344840, 4383800, 1591990, 4336110, 4326410, 1540550, 4411170, 4272080, 1501750, 4476570, 4311050, 1494320, 4441790, 4326410, 1540550, 4411170, 4243780, 1493680, 4505900, 4272080, 1501750, 4476570, 4326410, 1540550, 4411170, 4168300, 1483940, 4578480, 4243780, 1493680, 4505900, 4155220, 1530490, 4575080, 4168300, 1483940, 4578480, 4326410, 1540550, 4411170, 4155220, 1530490, 4575080, 4326410, 1540550, 4411170, 4385140, 1564070, 4344840, 4385140, 1564070, 4344840, 4326410, 1540550, 4411170, 4379170, 1549360, 4356040, 4326410, 1540550, 4411170, 4364430, 1541580, 4373450, 4379170, 1549360, 4356040, 4381260, 1740230, 4281730, 4393160, 1734350, 4271980, 4397370, 1738970, 4265800, 4382910, 1763440, 4270600, 4381260, 1740230, 4281730, 4397370, 1738970, 4265800, 4168300, 1483940, 4578480, 4207680, 1434850, 4558210, 4230690, 1462760, 4528140, 4168300, 1483940, 4578480, 4230690, 1462760, 4528140, 4243780, 1493680, 4505900, 4243780, 1493680, 4505900, 4281700, 1474770, 4476350, 4272080, 1501750, 4476570, 4384350, 1638960, 4318130, 4387850, 1626580, 4319250, 4396250, 1622530, 4312270, 4379170, 1549360, 4356040, 4364430, 1541580, 4373450, 4373930, 1524750, 4369880, 4197950, 1756530, 4454070, 4196490, 1734730, 4463910, 4217170, 1744570, 4440690, 4352410, 1806830, 4283550, 4347570, 1795190, 4293290, 4367350, 1798350, 4271980, 3573100, -5278560, 223536, 3557190, -5288330, 245502, 3565220, -5284800, 200955, 3565220, -5284800, 200955, 3557190, -5288330, 245502, 3514750, -5318150, 21e4, 3553290, -5257930, 637274, 3528050, -5302690, 337969, 3557500, -5282770, 341180, 3528050, -5302690, 337969, 3514750, -5318150, 21e4, 3557190, -5288330, 245502, 3528050, -5302690, 337969, 3557190, -5288330, 245502, 3557500, -5282770, 341180, 3553290, -5257930, 637274, 3557500, -5282770, 341180, 3564300, -5278130, 341923, 3557500, -5282770, 341180, 3557190, -5288330, 245502, 3565670, -5281010, 277494, 3557500, -5282770, 341180, 3565670, -5281010, 277494, 3564300, -5278130, 341923, 3740920, -5150240, 400022, 3702940, -5172120, 465395, 3725360, -5164500, 359723, 3740920, -5150240, 400022, 3725360, -5164500, 359723, 3729120, -5161760, 360144, 3729120, -5161760, 360144, 3725360, -5164500, 359723, 3726850, -5163920, 352529, 3725360, -5164500, 359723, 3702940, -5172120, 465395, 3714660, -5172280, 358530, 3725360, -5164500, 359723, 3714660, -5172280, 358530, 3720440, -5171760, 302020, 3725360, -5164500, 359723, 3720440, -5171760, 302020, 3726850, -5163920, 352529, 3702940, -5172120, 465395, 3692310, -5172340, 540810, 3714260, -5172580, 358484, 3702940, -5172120, 465395, 3714260, -5172580, 358484, 3714660, -5172280, 358530, 3720440, -5171760, 302020, 3714660, -5172280, 358530, 3714260, -5172580, 358484, 3714260, -5172580, 358484, 3692310, -5172340, 540810, 3697210, -5184910, 356583, 3697210, -5184910, 356583, 3698560, -5189940, 255563, 3720440, -5171760, 302020, 3697210, -5184910, 356583, 3720440, -5171760, 302020, 3714260, -5172580, 358484, 3692310, -5172340, 540810, 3635260, -5198100, 665039, 3684590, -5193980, 355180, 3692310, -5172340, 540810, 3684590, -5193980, 355180, 3697210, -5184910, 356583, 3697210, -5184910, 356583, 3684590, -5193980, 355180, 3698560, -5189940, 255563, 3684590, -5193980, 355180, 3635260, -5198100, 665039, 3644980, -5222150, 350790, 3644980, -5222150, 350790, 3645930, -5225850, 278973, 3698560, -5189940, 255563, 3644980, -5222150, 350790, 3698560, -5189940, 255563, 3684590, -5193980, 355180, 3635260, -5198100, 665039, 3610640, -5246210, 347004, 3644980, -5222150, 350790, 3610640, -5246210, 347004, 3603010, -5256120, 267679, 3645930, -5225850, 278973, 3610640, -5246210, 347004, 3645930, -5225850, 278973, 3644980, -5222150, 350790, 3593610, -5258010, 345134, 3553290, -5257930, 637274, 3564300, -5278130, 341923, 3564300, -5278130, 341923, 3565670, -5281010, 277494, 3603010, -5256120, 267679, 3564300, -5278130, 341923, 3603010, -5256120, 267679, 3593610, -5258010, 345134, 3562010, -5249570, 657103, 3553290, -5257930, 637274, 3593610, -5258010, 345134, 3562010, -5249570, 657103, 3593610, -5258010, 345134, 3595910, -5256420, 345387, 3603010, -5256120, 267679, 3595910, -5256420, 345387, 3593610, -5258010, 345134, 3635260, -5198100, 665039, 3562010, -5249570, 657103, 3595910, -5256420, 345387, 3635260, -5198100, 665039, 3595910, -5256420, 345387, 3610640, -5246210, 347004, 3610640, -5246210, 347004, 3595910, -5256420, 345387, 3603010, -5256120, 267679, 3553290, -5257930, 637274, 3441350, -5329180, 659305, 3496180, -5323970, 334509, 3553290, -5257930, 637274, 3496180, -5323970, 334509, 3528050, -5302690, 337969, 3528050, -5302690, 337969, 3496180, -5323970, 334509, 3514750, -5318150, 21e4, 3496180, -5323970, 334509, 3441350, -5329180, 659305, 3455110, -5351e3, 330069, 3455110, -5351e3, 330069, 3455740, -5352020, 306056, 3514750, -5318150, 21e4, 3455110, -5351e3, 330069, 3514750, -5318150, 21e4, 3496180, -5323970, 334509, 3441350, -5329180, 659305, 3441670, -5357130, 368394, 3450480, -5354010, 329570, 3441350, -5329180, 659305, 3450480, -5354010, 329570, 3455110, -5351e3, 330069, 3455110, -5351e3, 330069, 3450480, -5354010, 329570, 3455740, -5352020, 306056, 3441350, -5329180, 659305, 3431640, -5346810, 560288, 3441670, -5357130, 368394, 3411680, -5376280, 368523, 3382340, -5383600, 505549, 3367260, -5398110, 448658, 3431640, -5346810, 560288, 3382340, -5383600, 505549, 3411680, -5376280, 368523, 3441670, -5357130, 368394, 3431640, -5346810, 560288, 3411680, -5376280, 368523, 3431640, -5346810, 560288, 3376120, -5384980, 531540, 3382340, -5383600, 505549, 3733960, -5131440, 635477, 3635260, -5198100, 665039, 3692310, -5172340, 540810, 3943340, 1582990, 4740610, 3891060, 1484920, 4814470, 3948590, 1500030, 4763020, 3943340, 1582990, 4740610, 3861e3, 1529290, 4824700, 3891060, 1484920, 4814470, 3892960, 1595090, 4777800, 3861e3, 1529290, 4824700, 3943340, 1582990, 4740610, 3892960, 1595090, 4777800, 3943340, 1582990, 4740610, 3929540, 1594470, 4748170, 3986260, 1469750, 4741170, 3926790, 1415670, 4806360, 4007920, 1440530, 4731930, 3895040, 1449770, 4821910, 3926790, 1415670, 4806360, 3986260, 1469750, 4741170, 3961870, 1479200, 4758530, 3895040, 1449770, 4821910, 3986260, 1469750, 4741170, 3891060, 1484920, 4814470, 3895040, 1449770, 4821910, 3961870, 1479200, 4758530, 3891060, 1484920, 4814470, 3961870, 1479200, 4758530, 3948590, 1500030, 4763020, 4029810, 1401310, 4725160, 3931460, 1346770, 4822220, 3927950, 1341250, 4826580, 3910850, 1371150, 4832020, 3931460, 1346770, 4822220, 4029810, 1401310, 4725160, 4005640, 1431180, 4736660, 3910850, 1371150, 4832020, 4029810, 1401310, 4725160, 3926790, 1415670, 4806360, 3910850, 1371150, 4832020, 4005640, 1431180, 4736660, 3926790, 1415670, 4806360, 4005640, 1431180, 4736660, 4007920, 1440530, 4731930, 4059390, 1373750, 4708010, 3934970, 1320820, 4826500, 3952950, 1314970, 4813470, 3927950, 1341250, 4826580, 3934970, 1320820, 4826500, 4059390, 1373750, 4708010, 3927950, 1341250, 4826580, 4059390, 1373750, 4708010, 4041750, 1374120, 4722960, 4029810, 1401310, 4725160, 3927950, 1341250, 4826580, 4041750, 1374120, 4722960, 4059390, 1373750, 4708010, 3997500, 1290120, 4783510, 4088700, 1317230, 4698860, 4059390, 1373750, 4708010, 3989470, 1289600, 4790300, 3997500, 1290120, 4783510, 4059390, 1373750, 4708010, 3981350, 1301690, 4793770, 3989470, 1289600, 4790300, 4059390, 1373750, 4708010, 3961670, 1300270, 4810310, 3981350, 1301690, 4793770, 4059390, 1373750, 4708010, 3952950, 1314970, 4813470, 3961670, 1300270, 4810310, 4079560, 1245670, 4726050, 4042350, 1232810, 4761040, 4054200, 1230210, 4751690, 4021720, 1237400, 4777180, 4042350, 1232810, 4761040, 4079560, 1245670, 4726050, 4088510, 1288200, 4707010, 4021720, 1237400, 4777180, 4079560, 1245670, 4726050, 4013390, 1268880, 4775940, 4021720, 1237400, 4777180, 4088510, 1288200, 4707010, 4088700, 1317230, 4698860, 4013390, 1268880, 4775940, 4088510, 1288200, 4707010, 3997500, 1290120, 4783510, 4013390, 1268880, 4775940, 4088700, 1317230, 4698860, 3865030, 1605540, 4796810, 3861e3, 1529290, 4824700, 3892960, 1595090, 4777800, 4339280, 1076890, 4533550, 4270370, 1049420, 4604390, 4310780, 1050700, 4566540, 4260840, 1112450, 4598460, 4270370, 1049420, 4604390, 4339280, 1076890, 4533550, 4260840, 1112450, 4598460, 4339280, 1076890, 4533550, 4339800, 1115240, 4523840, 4339800, 1115240, 4523840, 4339280, 1076890, 4533550, 4350420, 1061730, 4526490, 4215350, 1253830, 4603960, 4213300, 1209070, 4617710, 4252930, 1200950, 4583590, 4213300, 1209070, 4617710, 4301160, 1178600, 4544490, 4252930, 1200950, 4583590, 4213300, 1209070, 4617710, 4233200, 1145150, 4615810, 4301160, 1178600, 4544490, 4322480, 1184740, 4522750, 4301160, 1178600, 4544490, 4233200, 1145150, 4615810, 4322480, 1184740, 4522750, 4233200, 1145150, 4615810, 4329010, 1154710, 4524260, 4233200, 1145150, 4615810, 4260840, 1112450, 4598460, 4329010, 1154710, 4524260, 4329010, 1154710, 4524260, 4260840, 1112450, 4598460, 4323260, 1125730, 4536970, 4260840, 1112450, 4598460, 4339800, 1115240, 4523840, 4323260, 1125730, 4536970, 4215350, 1253830, 4603960, 4196120, 1219270, 4630560, 4213300, 1209070, 4617710, 4215350, 1253830, 4603960, 4193390, 1231840, 4629720, 4196120, 1219270, 4630560, 4252930, 1200950, 4583590, 4301160, 1178600, 4544490, 4286080, 1202460, 4552430, 2281350, 729353, 5891540, 2292930, 690917, 5891670, 3170090, 958833, 5432580, 2281350, 729353, 5891540, 3170090, 958833, 5432580, 3169870, 959292, 5432620, 3169870, 959292, 5432620, 3170090, 958833, 5432580, 3177630, 961149, 5427800, 2281350, 729353, 5891540, 3169870, 959292, 5432620, 3169840, 959356, 5432630, 2281350, 729353, 5891540, 3169840, 959356, 5432630, 2930940, 902772, 5573680, 3169840, 959356, 5432630, 3169870, 959292, 5432620, 3177630, 961149, 5427800, 2930940, 902772, 5573680, 3169840, 959356, 5432630, 3154440, 991397, 5435820, 2930940, 902772, 5573680, 3154440, 991397, 5435820, 3138430, 1011820, 5441280, 3154440, 991397, 5435820, 3169840, 959356, 5432630, 3177630, 961149, 5427800, 3138430, 1011820, 5441280, 2984860, 960133, 5535600, 2930940, 902772, 5573680, 3019270, 1027120, 5505030, 2984860, 960133, 5535600, 3138430, 1011820, 5441280, 2787280, 897462, 5647240, 2281350, 729353, 5891540, 2930940, 902772, 5573680, 2223080, 722060, 5914510, 2281350, 729353, 5891540, 2787280, 897462, 5647240, 2674930, 961922, 5690500, 2223080, 722060, 5914510, 2787280, 897462, 5647240, 2213760, 800435, 5907960, 2223080, 722060, 5914510, 2674930, 961922, 5690500, 2572170, 1006450, 5729780, 2213760, 800435, 5907960, 2674930, 961922, 5690500, 2572170, 1006450, 5729780, 2147450, 782682, 5934570, 2213760, 800435, 5907960, 2572170, 1006450, 5729780, 2517350, 977099, 5758930, 2147450, 782682, 5934570, 2517350, 977099, 5758930, 2134840, 804374, 5936210, 2147450, 782682, 5934570, 2162770, 872873, 5916520, 2134840, 804374, 5936210, 2517350, 977099, 5758930, 3343130, 877932, 5342380, 3440390, 900434, 5276920, 3429150, 975513, 5270930, 3343130, 877932, 5342380, 3429150, 975513, 5270930, 3326040, 940580, 5342380, 3198210, 897862, 5426550, 2492490, 672918, 5812710, 3219630, 849064, 5421770, 3219630, 849064, 5421770, 3343130, 877932, 5342380, 3326040, 940580, 5342380, 3219630, 849064, 5421770, 3326040, 940580, 5342380, 3198210, 897862, 5426550, 3324180, 947150, 5342380, 3326040, 940580, 5342380, 3429150, 975513, 5270930, 2371240, 684813, 5861510, 2492490, 672918, 5812710, 3198210, 897862, 5426550, 2371240, 684813, 5861510, 3198210, 897862, 5426550, 3192140, 911311, 5427880, 3192140, 911311, 5427880, 3198210, 897862, 5426550, 3326040, 940580, 5342380, 3192140, 911311, 5427880, 3326040, 940580, 5342380, 3324180, 947150, 5342380, 3324180, 947150, 5342380, 3429150, 975513, 5270930, 3335820, 984804, 5328390, 3324180, 947150, 5342380, 3335820, 984804, 5328390, 3315170, 978228, 5342380, 3180960, 935652, 5430280, 2371240, 684813, 5861510, 3192140, 911311, 5427880, 3192140, 911311, 5427880, 3324180, 947150, 5342380, 3315170, 978228, 5342380, 3192140, 911311, 5427880, 3315170, 978228, 5342380, 3180960, 935652, 5430280, 3314920, 979062, 5342380, 3315170, 978228, 5342380, 3335820, 984804, 5328390, 2292930, 690917, 5891670, 2371240, 684813, 5861510, 3180960, 935652, 5430280, 2292930, 690917, 5891670, 3180960, 935652, 5430280, 3178300, 941359, 5430850, 3178300, 941359, 5430850, 3180960, 935652, 5430280, 3315170, 978228, 5342380, 3178300, 941359, 5430850, 3315170, 978228, 5342380, 3314920, 979062, 5342380, 3314140, 981711, 5342380, 3314920, 979062, 5342380, 3335820, 984804, 5328390, 3170090, 958833, 5432580, 2292930, 690917, 5891670, 3178300, 941359, 5430850, 3314140, 981711, 5342380, 3177630, 961149, 5427800, 3170090, 958833, 5432580, 3314140, 981711, 5342380, 3170090, 958833, 5432580, 3178300, 941359, 5430850, 3314140, 981711, 5342380, 3178300, 941359, 5430850, 3314920, 979062, 5342380, 3366780, 782317, 5342380, 3541220, 813839, 5224380, 3519960, 884198, 5227290, 3366780, 782317, 5342380, 3519960, 884198, 5227290, 3354e3, 835414, 5342380, 3239320, 802203, 5417210, 2720510, 656749, 5712110, 3255660, 761684, 5413280, 3255660, 761684, 5413280, 3366780, 782317, 5342380, 3354e3, 835414, 5342380, 3255660, 761684, 5413280, 3354e3, 835414, 5342380, 3239320, 802203, 5417210, 3519960, 884198, 5227290, 3352880, 839909, 5342380, 3354e3, 835414, 5342380, 2677850, 663688, 5731310, 2720510, 656749, 5712110, 3239320, 802203, 5417210, 2677850, 663688, 5731310, 3239320, 802203, 5417210, 3236430, 809207, 5417890, 3236430, 809207, 5417890, 3239320, 802203, 5417210, 3354e3, 835414, 5342380, 3236430, 809207, 5417890, 3354e3, 835414, 5342380, 3352880, 839909, 5342380, 3349760, 852286, 5342380, 3352880, 839909, 5342380, 3519960, 884198, 5227290, 2492490, 672918, 5812710, 2677850, 663688, 5731310, 3236430, 809207, 5417890, 2492490, 672918, 5812710, 3236430, 809207, 5417890, 3228280, 828714, 5419790, 3228280, 828714, 5419790, 3236430, 809207, 5417890, 3352880, 839909, 5342380, 3228280, 828714, 5419790, 3352880, 839909, 5342380, 3349760, 852286, 5342380, 3349760, 852286, 5342380, 3519960, 884198, 5227290, 3440390, 900434, 5276920, 3349760, 852286, 5342380, 3440390, 900434, 5276920, 3343130, 877932, 5342380, 2492490, 672918, 5812710, 3228280, 828714, 5419790, 3219630, 849064, 5421770, 3228280, 828714, 5419790, 3349760, 852286, 5342380, 3343130, 877932, 5342380, 3228280, 828714, 5419790, 3343130, 877932, 5342380, 3219630, 849064, 5421770, 2434970, 992862, 5791350, 2162770, 872873, 5916520, 2517350, 977099, 5758930, 2202860, 959639, 5888420, 2162770, 872873, 5916520, 2434970, 992862, 5791350, 2347500, 1023940, 5821770, 2202860, 959639, 5888420, 2434970, 992862, 5791350, 2377730, 1053830, 5804260, 2347500, 1023940, 5821770, 2434970, 992862, 5791350, 3366780, 782317, 5342380, 3370020, 768278, 5342380, 3541220, 813839, 5224380, 2720510, 656749, 5712110, 2997140, 671648, 5571130, 3263970, 740442, 5411240, 2720510, 656749, 5712110, 3263970, 740442, 5411240, 3255660, 761684, 5413280, 3255660, 761684, 5413280, 3263970, 740442, 5411240, 3370020, 768278, 5342380, 3255660, 761684, 5413280, 3370020, 768278, 5342380, 3366780, 782317, 5342380, 3372890, 755556, 5342380, 3460690, 775149, 5283490, 3541220, 813839, 5224380, 3372890, 755556, 5342380, 3541220, 813839, 5224380, 3370020, 768278, 5342380, 3263970, 740442, 5411240, 2997140, 671648, 5571130, 3267240, 731974, 5410420, 3267240, 731974, 5410420, 3372890, 755556, 5342380, 3370020, 768278, 5342380, 3267240, 731974, 5410420, 3370020, 768278, 5342380, 3263970, 740442, 5411240, 3372890, 755556, 5342380, 3373990, 750640, 5342380, 3460690, 775149, 5283490, 2997140, 671648, 5571130, 3112590, 678677, 5507030, 3271070, 721970, 5409460, 2997140, 671648, 5571130, 3271070, 721970, 5409460, 3267240, 731974, 5410420, 3267240, 731974, 5410420, 3271070, 721970, 5409460, 3373990, 750640, 5342380, 3267240, 731974, 5410420, 3373990, 750640, 5342380, 3372890, 755556, 5342380, 3460690, 775149, 5283490, 3373990, 750640, 5342380, 3382040, 713490, 5342380, 3271070, 721970, 5409460, 3112590, 678677, 5507030, 3281110, 695256, 5406900, 3281110, 695256, 5406900, 3368060, 702883, 5352540, 3382040, 713490, 5342380, 3281110, 695256, 5406900, 3382040, 713490, 5342380, 3373990, 750640, 5342380, 3281110, 695256, 5406900, 3373990, 750640, 5342380, 3271070, 721970, 5409460, 3112590, 678677, 5507030, 3186790, 646524, 5468590, 3287610, 677547, 5405210, 3112590, 678677, 5507030, 3287610, 677547, 5405210, 3281110, 695256, 5406900, 3281110, 695256, 5406900, 3287610, 677547, 5405210, 3368060, 702883, 5352540, 3186790, 646524, 5468590, 3245760, 632524, 5435660, 3294050, 659723, 5403500, 3186790, 646524, 5468590, 3294050, 659723, 5403500, 3287610, 677547, 5405210, 3368060, 702883, 5352540, 3287610, 677547, 5405210, 3294050, 659723, 5403500, 2720510, 656749, 5712110, 2729800, 609178, 5712950, 2997140, 671648, 5571130, 2997140, 671648, 5571130, 2729800, 609178, 5712950, 2955870, 627864, 5598040, 2729800, 609178, 5712950, 2828150, 597562, 5666460, 2955870, 627864, 5598040, 2492490, 672918, 5812710, 2648570, 638588, 5747630, 2677850, 663688, 5731310, 4822050, 2997740, -2895770, 4901630, 2908750, -2852890, 4847750, 2945480, -2906410, 4822050, 2997740, -2895770, 4916840, 2916690, -2818640, 4901630, 2908750, -2852890, 4822050, 2997740, -2895770, 4918640, 2949540, -2781310, 4916840, 2916690, -2818640, 4822050, 2997740, -2895770, 4925830, 2964900, -2752300, 4918640, 2949540, -2781310, 4822050, 2997740, -2895770, 4913730, 2991500, -2745180, 4925830, 2964900, -2752300, 4822050, 2997740, -2895770, 4879710, 3030010, -2763450, 4913730, 2991500, -2745180, 4853350, 3031040, -2808080, 4879710, 3030010, -2763450, 4822050, 2997740, -2895770, 4830270, 3026700, -2851900, 4853350, 3031040, -2808080, 4822050, 2997740, -2895770, 3974760, 3455960, 3584920, 3948580, 3257570, 3792180, 4155480, 3340170, 3489110, 3974760, 3455960, 3584920, 3863400, 3319920, 3825480, 3948580, 3257570, 3792180, 3832860, 3356850, 3823980, 3863400, 3319920, 3825480, 3974760, 3455960, 3584920, 3863980, 3393360, 3760330, 3832860, 3356850, 3823980, 3974760, 3455960, 3584920, 3894130, 3431210, 3694750, 3863980, 3393360, 3760330, 3974760, 3455960, 3584920, 4155480, 3340170, 3489110, 4089460, 3089110, 3783900, 4318490, 3234660, 3389810, 4155480, 3340170, 3489110, 4014820, 3155690, 3808630, 4089460, 3089110, 3783900, 4155480, 3340170, 3489110, 3995110, 3200680, 3791900, 4014820, 3155690, 3808630, 3948580, 3257570, 3792180, 3995110, 3200680, 3791900, 4155480, 3340170, 3489110, 4318490, 3234660, 3389810, 4347280, 3139560, 3441680, 4361400, 3136280, 3426870, 4318490, 3234660, 3389810, 4287480, 3122650, 3530330, 4347280, 3139560, 3441680, 4318490, 3234660, 3389810, 4238800, 3149360, 3564980, 4287480, 3122650, 3530330, 4318490, 3234660, 3389810, 4129130, 3076120, 3751470, 4238800, 3149360, 3564980, 4318490, 3234660, 3389810, 4096690, 3057980, 3801200, 4129130, 3076120, 3751470, 4089460, 3089110, 3783900, 4096690, 3057980, 3801200, 4318490, 3234660, 3389810, 3757760, 3425250, 3837740, 3832860, 3356850, 3823980, 3863980, 3393360, 3760330, 3757760, 3425250, 3837740, 3863980, 3393360, 3760330, 3819240, 3419250, 3782370, 4228010, 3122650, 3600870, 4180810, 3054270, 3712150, 4249790, 3087470, 3605530, 4228010, 3122650, 3600870, 4155010, 3065300, 3731840, 4180810, 3054270, 3712150, 4129130, 3076120, 3751470, 4155010, 3065300, 3731840, 4228010, 3122650, 3600870, 4129130, 3076120, 3751470, 4228010, 3122650, 3600870, 4238800, 3149360, 3564980, 4287480, 3122650, 3530330, 4328030, 3123900, 3479720, 4347280, 3139560, 3441680, 4180810, 3054270, 3712150, 4215360, 3051970, 3675030, 4249790, 3087470, 3605530, 4347280, 3139560, 3441680, 4362110, 3134590, 3427500, 4361400, 3136280, 3426870, 5901340, 2152930, 1100670, 5584460, 2015960, 2322490, 5935820, 2060740, 1091790, 5935820, 2060740, 1091790, 5952290, 2060470, 999338, 5917730, 2160860, 992551, 5935820, 2060740, 1091790, 5917730, 2160860, 992551, 5901340, 2152930, 1100670, 5584460, 2015960, 2322490, 5945450, 2034180, 1089230, 5935820, 2060740, 1091790, 5945450, 2034180, 1089230, 5963870, 2031660, 989295, 5952290, 2060470, 999338, 5945450, 2034180, 1089230, 5952290, 2060470, 999338, 5935820, 2060740, 1091790, 5584460, 2015960, 2322490, 5957340, 2000820, 1086040, 5945450, 2034180, 1089230, 5957340, 2000820, 1086040, 5989730, 1991310, 912577, 5963870, 2031660, 989295, 5957340, 2000820, 1086040, 5963870, 2031660, 989295, 5945450, 2034180, 1089230, 5965980, 2043890, 950821, 5963870, 2031660, 989295, 5989730, 1991310, 912577, 5761600, 2430980, 1250740, 5771060, 2391480, 1282690, 5766940, 2431800, 1224460, 5766940, 2431800, 1224460, 5771060, 2391480, 1282690, 5796800, 2369300, 1205950, 5771060, 2391480, 1282690, 5759380, 2360680, 1387230, 5796800, 2369300, 1205950, 5771060, 2391480, 1282690, 5759210, 2385260, 1345540, 5759380, 2360680, 1387230, 5759380, 2360680, 1387230, 5775040, 2325860, 1380980, 5796800, 2369300, 1205950, 5796800, 2369300, 1205950, 5775040, 2325860, 1380980, 5825320, 2320980, 1161970, 5775040, 2325860, 1380980, 5855150, 227e4, 1112040, 5845050, 2294710, 1114450, 5775040, 2325860, 1380980, 5845050, 2294710, 1114450, 5825320, 2320980, 1161970, 5845050, 2294710, 1114450, 5855150, 227e4, 1112040, 5873750, 2254830, 1043130, 5736970, 2339260, 1510050, 5855850, 2268270, 1111870, 5855150, 227e4, 1112040, 5736970, 2339260, 1510050, 5855150, 227e4, 1112040, 5775040, 2325860, 1380980, 5855150, 227e4, 1112040, 5855850, 2268270, 1111870, 5873750, 2254830, 1043130, 5736970, 2339260, 1510050, 5775040, 2325860, 1380980, 5762610, 2332650, 1420610, 5715910, 2369010, 1542990, 5718620, 2345780, 1568040, 5736970, 2339260, 1510050, 5718620, 2345780, 1568040, 5856e3, 2267890, 1111840, 5855850, 2268270, 1111870, 5718620, 2345780, 1568040, 5855850, 2268270, 1111870, 5736970, 2339260, 1510050, 5855850, 2268270, 1111870, 5856e3, 2267890, 1111840, 5873750, 2254830, 1043130, 5718620, 2345780, 1568040, 5883410, 2199200, 1105160, 5856e3, 2267890, 1111840, 5883410, 2199200, 1105160, 5917730, 2160860, 992551, 5873750, 2254830, 1043130, 5883410, 2199200, 1105160, 5873750, 2254830, 1043130, 5856e3, 2267890, 1111840, 5498740, 2429560, 2124e3, 5886170, 2192150, 1104470, 5883410, 2199200, 1105160, 5498740, 2429560, 2124e3, 5883410, 2199200, 1105160, 5718620, 2345780, 1568040, 5883410, 2199200, 1105160, 5886170, 2192150, 1104470, 5917730, 2160860, 992551, 5498740, 2429560, 2124e3, 5718620, 2345780, 1568040, 5691790, 2365520, 1634150, 5498740, 2429560, 2124e3, 5691790, 2365520, 1634150, 5652950, 2402400, 1712740, 5618060, 2488050, 1705290, 5498740, 2429560, 2124e3, 5652950, 2402400, 1712740, 5994980, 1980480, 901688, 6004460, 1951570, 901688, 6010110, 1948730, 869831, 5584460, 2015960, 2322490, 5969320, 1966630, 1082760, 5957340, 2000820, 1086040, 5994980, 1980480, 901688, 5989730, 1991310, 912577, 5957340, 2000820, 1086040, 5994980, 1980480, 901688, 5957340, 2000820, 1086040, 5969320, 1966630, 1082760, 5994980, 1980480, 901688, 5969320, 1966630, 1082760, 6004460, 1951570, 901688, 6042350, 1830890, 901688, 6056900, 1817850, 827901, 6010110, 1948730, 869831, 6042350, 1830890, 901688, 6010110, 1948730, 869831, 6004460, 1951570, 901688, 5584460, 2015960, 2322490, 6005250, 1859960, 1072600, 5969320, 1966630, 1082760, 6005250, 1859960, 1072600, 6042350, 1830890, 901688, 6004460, 1951570, 901688, 6005250, 1859960, 1072600, 6004460, 1951570, 901688, 5969320, 1966630, 1082760, 6051560, 1800190, 901688, 6061580, 1790480, 852723, 6056900, 1817850, 827901, 6051560, 1800190, 901688, 6056900, 1817850, 827901, 6042350, 1830890, 901688, 5584460, 2015960, 2322490, 6014130, 1832540, 107e4, 6005250, 1859960, 1072600, 6014130, 1832540, 107e4, 6051560, 1800190, 901688, 6042350, 1830890, 901688, 6014130, 1832540, 107e4, 6042350, 1830890, 901688, 6005250, 1859960, 1072600, 6056730, 1782740, 901688, 6066450, 1772870, 854864, 6061580, 1790480, 852723, 6056730, 1782740, 901688, 6061580, 1790480, 852723, 6051560, 1800190, 901688, 5584460, 2015960, 2322490, 6019140, 1816920, 1068510, 6014130, 1832540, 107e4, 6019140, 1816920, 1068510, 6056730, 1782740, 901688, 6051560, 1800190, 901688, 6019140, 1816920, 1068510, 6051560, 1800190, 901688, 6014130, 1832540, 107e4, 6060200, 1770900, 901688, 6075750, 1754390, 826669, 6066450, 1772870, 854864, 6060200, 1770900, 901688, 6066450, 1772870, 854864, 6056730, 1782740, 901688, 5584460, 2015960, 2322490, 6022520, 1806290, 1067510, 6019140, 1816920, 1068510, 6022520, 1806290, 1067510, 6060200, 1770900, 901688, 6056730, 1782740, 901688, 6022520, 1806290, 1067510, 6056730, 1782740, 901688, 6019140, 1816920, 1068510, 6060200, 1770900, 901688, 6066160, 1750380, 901688, 6075750, 1754390, 826669, 5584460, 2015960, 2322490, 5752110, 1638880, 2207970, 6042800, 1741010, 1061340, 5584460, 2015960, 2322490, 6042800, 1741010, 1061340, 6022520, 1806290, 1067510, 6022520, 1806290, 1067510, 6042800, 1741010, 1061340, 6066160, 1750380, 901688, 6022520, 1806290, 1067510, 6066160, 1750380, 901688, 6060200, 1770900, 901688, 5584460, 2015960, 2322490, 5633270, 1600520, 2518420, 5752110, 1638880, 2207970, 5752110, 1638880, 2207970, 5633270, 1600520, 2518420, 5751010, 1593500, 2243500, 5633270, 1600520, 2518420, 5739360, 1588550, 2276410, 5751010, 1593500, 2243500, 5633270, 1600520, 2518420, 5739570, 1548320, 2303250, 5739360, 1588550, 2276410, 5633270, 1600520, 2518420, 5683600, 1507120, 2462740, 5739570, 1548320, 2303250, 6007070, 1564250, 1461e3, 6007240, 1492950, 1532630, 6023630, 1496780, 1463470, 6007070, 1564250, 1461e3, 5960420, 1483030, 1713130, 6007240, 1492950, 1532630, 5897920, 1607700, 1813350, 5960420, 1483030, 1713130, 6007070, 1564250, 1461e3, 5897920, 1607700, 1813350, 6007070, 1564250, 1461e3, 6025130, 1602420, 1341100, 6025130, 1602420, 1341100, 6007070, 1564250, 1461e3, 6021220, 1556720, 1410240, 6075750, 1754390, 826669, 6093100, 1682450, 848124, 6101470, 1666830, 818426, 6085700, 1681180, 901688, 6093100, 1682450, 848124, 6075750, 1754390, 826669, 6085700, 1681180, 901688, 6075750, 1754390, 826669, 6071170, 1732900, 901688, 6058750, 1687860, 1056320, 6054670, 1675460, 1098320, 6061980, 1676850, 1055290, 6061980, 1676850, 1055290, 6085700, 1681180, 901688, 6071170, 1732900, 901688, 6061980, 1676850, 1055290, 6071170, 1732900, 901688, 6058750, 1687860, 1056320, 6075750, 1754390, 826669, 6066530, 1749080, 901688, 6071170, 1732900, 901688, 5774110, 1621470, 2163240, 6054670, 1675460, 1098320, 6058750, 1687860, 1056320, 5774110, 1621470, 2163240, 6058750, 1687860, 1056320, 6044040, 1736970, 1060950, 6044040, 1736970, 1060950, 6058750, 1687860, 1056320, 6071170, 1732900, 901688, 6044040, 1736970, 1060950, 6071170, 1732900, 901688, 6066530, 1749080, 901688, 6075750, 1754390, 826669, 6066160, 1750380, 901688, 6066530, 1749080, 901688, 5752110, 1638880, 2207970, 5774110, 1621470, 2163240, 6044040, 1736970, 1060950, 5752110, 1638880, 2207970, 6044040, 1736970, 1060950, 6042800, 1741010, 1061340, 6042800, 1741010, 1061340, 6044040, 1736970, 1060950, 6066530, 1749080, 901688, 6042800, 1741010, 1061340, 6066530, 1749080, 901688, 6066160, 1750380, 901688, 6054670, 1675460, 1098320, 6037870, 1613350, 1269280, 6052710, 1613170, 1197200, 6054670, 1675460, 1098320, 5897920, 1607700, 1813350, 6037870, 1613350, 1269280, 6054670, 1675460, 1098320, 5855210, 1601850, 1950790, 5897920, 1607700, 1813350, 5774110, 1621470, 2163240, 5855210, 1601850, 1950790, 6054670, 1675460, 1098320, 6070530, 1616310, 1099390, 6079740, 1586740, 1091630, 6083460, 1601870, 1048240, 6070530, 1616310, 1099390, 6083460, 1601870, 1048240, 6077980, 1621330, 1050070, 6089390, 1629370, 968882, 6077980, 1621330, 1050070, 6083460, 1601870, 1048240, 6054670, 1675460, 1098320, 6070530, 1616310, 1099390, 6077980, 1621330, 1050070, 6054670, 1675460, 1098320, 6077980, 1621330, 1050070, 6066990, 1659670, 1053670, 6066990, 1659670, 1053670, 6077980, 1621330, 1050070, 6089390, 1629370, 968882, 6054670, 1675460, 1098320, 6066990, 1659670, 1053670, 6064500, 1668230, 1054480, 6066990, 1659670, 1053670, 6089390, 1629370, 968882, 6091970, 1646120, 923613, 6066990, 1659670, 1053670, 6091970, 1646120, 923613, 6064500, 1668230, 1054480, 6085700, 1681180, 901688, 6092410, 1656700, 901688, 6093100, 1682450, 848124, 6054670, 1675460, 1098320, 6064500, 1668230, 1054480, 6061980, 1676850, 1055290, 6064500, 1668230, 1054480, 6091970, 1646120, 923613, 6092410, 1656700, 901688, 6064500, 1668230, 1054480, 6092410, 1656700, 901688, 6085700, 1681180, 901688, 6064500, 1668230, 1054480, 6085700, 1681180, 901688, 6061980, 1676850, 1055290, 6090300, 1537860, 1102580, 6104700, 1516890, 1051140, 6103870, 1527070, 1041240, 6090300, 1537860, 1102580, 6103870, 1527070, 1041240, 6094900, 1560390, 1044360, 6098800, 1582310, 987433, 6094900, 1560390, 1044360, 6103870, 1527070, 1041240, 6079740, 1586740, 1091630, 6090300, 1537860, 1102580, 6094900, 1560390, 1044360, 6079740, 1586740, 1091630, 6094900, 1560390, 1044360, 6088180, 1584890, 1046650, 6088180, 1584890, 1046650, 6094900, 1560390, 1044360, 6098800, 1582310, 987433, 6083460, 1601870, 1048240, 6079740, 1586740, 1091630, 6088180, 1584890, 1046650, 6088180, 1584890, 1046650, 6098800, 1582310, 987433, 6089390, 1629370, 968882, 6088180, 1584890, 1046650, 6089390, 1629370, 968882, 6083460, 1601870, 1048240, 5960420, 1483030, 1713130, 6008170, 1446920, 1572360, 6007240, 1492950, 1532630, 5897920, 1607700, 1813350, 6025130, 1602420, 1341100, 6037870, 1613350, 1269280, 5498740, 2429560, 2124e3, 5584460, 2015960, 2322490, 5901340, 2152930, 1100670, 5498740, 2429560, 2124e3, 5901340, 2152930, 1100670, 5886170, 2192150, 1104470, 5886170, 2192150, 1104470, 5901340, 2152930, 1100670, 5917730, 2160860, 992551, 5742290, 2354690, 1465510, 5736970, 2339260, 1510050, 5762610, 2332650, 1420610, 6263440, 988391e-11, 1200080, 6267820, -5446.15, 1177170, 6269080, 498309e-10, 1170480, 6263440, 988391e-11, 1200080, 6269080, 498309e-10, 1170480, 6278040, 40277.2, 1121070, 6263440, 988391e-11, 1200080, 6278040, 40277.2, 1121070, 6261320, 2601.15, 1211040, 6261e3, 98307.9, 1208710, 6261320, 2601.15, 1211040, 6278040, 40277.2, 1121070, 6261e3, 98307.9, 1208710, 6278040, 40277.2, 1121070, 6272050, 84551.1, 1151490, 6272050, 84551.1, 1151490, 6278040, 40277.2, 1121070, 6305410, 50755.3, 955887, 6305410, 50755.3, 955887, 6278040, 40277.2, 1121070, 6291750, 40180.8, 1041930, 6338410, 206417, 677891, 6330620, 178926, 753695, 6343160, 117378, 654431, 6312540, 117846, 901688, 6343160, 117378, 654431, 6330620, 178926, 753695, 6312540, 117846, 901688, 6330620, 178926, 753695, 6311760, 154310, 901688, 6309820, 152025, 915422, 6277360, 118098, 1119370, 6311e3, 117861, 912334, 6311e3, 117861, 912334, 6312540, 117846, 901688, 6311760, 154310, 901688, 6311e3, 117861, 912334, 6311760, 154310, 901688, 6309820, 152025, 915422, 6330620, 178926, 753695, 6311390, 168744, 901688, 6311760, 154310, 901688, 6283250, 156309, 1081220, 6277360, 118098, 1119370, 6309820, 152025, 915422, 6283250, 156309, 1081220, 6309820, 152025, 915422, 6309220, 167699, 916838, 6309220, 167699, 916838, 6309820, 152025, 915422, 6311760, 154310, 901688, 6309220, 167699, 916838, 6311760, 154310, 901688, 6311390, 168744, 901688, 6330620, 178926, 753695, 6311380, 169112, 901688, 6311390, 168744, 901688, 6292180, 160705, 1027700, 6283250, 156309, 1081220, 6309220, 167699, 916838, 6292180, 160705, 1027700, 6309220, 167699, 916838, 6309200, 168102, 916874, 6309200, 168102, 916874, 6309220, 167699, 916838, 6311390, 168744, 901688, 6309200, 168102, 916874, 6311390, 168744, 901688, 6311380, 169112, 901688, 6311040, 181322, 901688, 6311380, 169112, 901688, 6330620, 178926, 753695, 6295230, 182932, 1005210, 6292180, 160705, 1027700, 6309200, 168102, 916874, 6295230, 182932, 1005210, 6309200, 168102, 916874, 6308650, 181581, 918093, 6308650, 181581, 918093, 6309200, 168102, 916874, 6311380, 169112, 901688, 6308650, 181581, 918093, 6311380, 169112, 901688, 6311040, 181322, 901688, 6313180, 77000.8, 901688, 6331740, 63035.1, 762733, 6339440, 92608.1, 693042, 6313180, 77000.8, 901688, 6339440, 92608.1, 693042, 6313150, 79343.9, 901688, 6312120, 78890.3, 908813, 6311080, 78433.5, 915987, 6312150, 77704.1, 908706, 6312150, 77704.1, 908706, 6313180, 77000.8, 901688, 6313150, 79343.9, 901688, 6312150, 77704.1, 908706, 6313150, 79343.9, 901688, 6312120, 78890.3, 908813, 6339440, 92608.1, 693042, 6313020, 88991.5, 901688, 6313150, 79343.9, 901688, 6272050, 84551.1, 1151490, 6311080, 78433.5, 915987, 6312120, 78890.3, 908813, 6272050, 84551.1, 1151490, 6312120, 78890.3, 908813, 6311860, 88850.7, 909713, 6311860, 88850.7, 909713, 6312120, 78890.3, 908813, 6313150, 79343.9, 901688, 6311860, 88850.7, 909713, 6313150, 79343.9, 901688, 6313020, 88991.5, 901688, 6312770, 105177, 901688, 6313020, 88991.5, 901688, 6339440, 92608.1, 693042, 6277360, 118098, 1119370, 6272050, 84551.1, 1151490, 6311860, 88850.7, 909713, 6277360, 118098, 1119370, 6311860, 88850.7, 909713, 6311380, 105749, 911240, 6311380, 105749, 911240, 6311860, 88850.7, 909713, 6313020, 88991.5, 901688, 6311380, 105749, 911240, 6313020, 88991.5, 901688, 6312770, 105177, 901688, 6312770, 105177, 901688, 6339440, 92608.1, 693042, 6343160, 117378, 654431, 6312770, 105177, 901688, 6343160, 117378, 654431, 6312540, 117846, 901688, 6277360, 118098, 1119370, 6311380, 105749, 911240, 6311e3, 117861, 912334, 6311380, 105749, 911240, 6312770, 105177, 901688, 6312540, 117846, 901688, 6311380, 105749, 911240, 6312540, 117846, 901688, 6311e3, 117861, 912334, 6272050, 84551.1, 1151490, 6305410, 50755.3, 955887, 6311080, 78433.5, 915987, 6313200, 74926, 901688, 6324970, 54198.8, 817310, 6331740, 63035.1, 762733, 6313200, 74926, 901688, 6331740, 63035.1, 762733, 6313180, 77000.8, 901688, 6311080, 78433.5, 915987, 6312180, 76623.8, 908609, 6312150, 77704.1, 908706, 6312180, 76623.8, 908609, 6313200, 74926, 901688, 6313180, 77000.8, 901688, 6312180, 76623.8, 908609, 6313180, 77000.8, 901688, 6312150, 77704.1, 908706, -1333590, 6198990, 686629, -1276190, 6204450, 743655, -1299160, 6211170, 641447, -1299160, 6211170, 641447, -1276190, 6204450, 743655, -1227790, 6227020, 628306, -1276190, 6204450, 743655, -1218180, 6222910, 684786, -1227790, 6227020, 628306, -1276190, 6204450, 743655, -1210200, 6216110, 756421, -1218180, 6222910, 684786, -1218180, 6222910, 684786, -1210200, 6216110, 756421, -1148180, 6219860, 819265, -1218180, 6222910, 684786, -1148180, 6219860, 819265, -1128470, 6234290, 732913, -1126510, 6212330, 901688, -1128470, 6234290, 732913, -1148180, 6219860, 819265, -1126510, 6212330, 901688, -1148180, 6219860, 819265, -1129220, 6211840, 901688, -1129220, 6211840, 901688, -1126400, 6210530, 914093, -1126510, 6212330, 901688, -1125420, 6212530, 901688, -1109920, 6239910, 713321, -1128470, 6234290, 732913, -1125420, 6212530, 901688, -1128470, 6234290, 732913, -1126510, 6212330, 901688, -1126400, 6210530, 914093, -1125420, 6212530, 901688, -1126510, 6212330, 901688, -1125420, 6212530, 901688, -1091260, 6218620, 901688, -1109920, 6239910, 713321, -1126400, 6210530, 914093, -1079710, 6203230, 1013860, -1091260, 6218620, 901688, -1126400, 6210530, 914093, -1091260, 6218620, 901688, -1125420, 6212530, 901688, -1074010, 6221620, 901688, -1066020, 6242570, 755470, -1109920, 6239910, 713321, -1074010, 6221620, 901688, -1109920, 6239910, 713321, -1091260, 6218620, 901688, -1091260, 6218620, 901688, -1079710, 6203230, 1013860, -1074010, 6221620, 901688, -1061490, 6223770, 901688, -1046250, 6239050, 809820, -1066020, 6242570, 755470, -1061490, 6223770, 901688, -1066020, 6242570, 755470, -1074010, 6221620, 901688, -1079710, 6203230, 1013860, -1061490, 6223770, 901688, -1074010, 6221620, 901688, -1061490, 6223770, 901688, -1029900, 6229080, 901688, -1046250, 6239050, 809820, -1079710, 6203230, 1013860, -1009030, 6214550, 1017290, -1029900, 6229080, 901688, -1079710, 6203230, 1013860, -1029900, 6229080, 901688, -1061490, 6223770, 901688, -991633, 6235280, 901688, -987060, 6240300, 871702, -1046250, 6239050, 809820, -991633, 6235280, 901688, -1046250, 6239050, 809820, -1029900, 6229080, 901688, -1029900, 6229080, 901688, -1009030, 6214550, 1017290, -991633, 6235280, 901688, -991633, 6235280, 901688, -986877, 6236040, 901688, -987060, 6240300, 871702, -983792, 6184790, 1204720, -986877, 6236040, 901688, -991633, 6235280, 901688, -983792, 6184790, 1204720, -991633, 6235280, 901688, -1009030, 6214550, 1017290, -1009030, 6214550, 1017290, -999466, 6202570, 1096220, -983792, 6184790, 1204720, -986877, 6236040, 901688, -979998, 6237120, 901688, -987060, 6240300, 871702, -983792, 6184790, 1204720, -934522, 6213270, 1092950, -979998, 6237120, 901688, -983792, 6184790, 1204720, -979998, 6237120, 901688, -986877, 6236040, 901688, -987060, 6240300, 871702, -979998, 6237120, 901688, -955944, 6240860, 901688, -934522, 6213270, 1092950, -933158, 6241070, 923631, -955944, 6240860, 901688, -934522, 6213270, 1092950, -955944, 6240860, 901688, -979998, 6237120, 901688, -927527, 6245140, 901688, -919962, 6246260, 901688, -916606, 6252770, 859269, -934522, 6213270, 1092950, -919962, 6246260, 901688, -927527, 6245140, 901688, -934522, 6213270, 1092950, -927527, 6245140, 901688, -933158, 6241070, 923631, -919962, 6246260, 901688, -912854, 6247300, 901688, -916606, 6252770, 859269, -934522, 6213270, 1092950, -905077, 6235230, 988313, -912854, 6247300, 901688, -934522, 6213270, 1092950, -912854, 6247300, 901688, -919962, 6246260, 901688, -1039630, 6154930, 1305800, -993978, 6128870, 1454420, -994163, 6140590, 1404340, -1011920, 6009e3, 1877440, -992891, 5905860, 2187100, -995437, 6012230, 1875920, -995437, 6012230, 1875920, -993978, 6128870, 1454420, -1039630, 6154930, 1305800, -995437, 6012230, 1875920, -1039630, 6154930, 1305800, -1011920, 6009e3, 1877440, -1050310, 5886890, 2211110, -992891, 5905860, 2187100, -1011920, 6009e3, 1877440, -1050310, 5886890, 2211110, -1011920, 6009e3, 1877440, -1049630, 6001440, 1880910, -1049630, 6001440, 1880910, -1011920, 6009e3, 1877440, -1039630, 6154930, 1305800, -1050310, 5886890, 2211110, -1049630, 6001440, 1880910, -1066040, 5998060, 1882430, -1049630, 6001440, 1880910, -1039630, 6154930, 1305800, -1084300, 6137470, 1350600, -1049630, 6001440, 1880910, -1084300, 6137470, 1350600, -1066040, 5998060, 1882430, -1084300, 6137470, 1350600, -1039630, 6154930, 1305800, -1031740, 6179400, 1192320, -1039630, 6154930, 1305800, -999466, 6202570, 1096220, -1031740, 6179400, 1192320, -1039630, 6154930, 1305800, -983792, 6184790, 1204720, -999466, 6202570, 1096220, -1260850, 6095380, 1387190, -1181690, 6091730, 1469860, -1169840, 6113960, 1385180, -1169990, 5975610, 1892030, -1167210, 5971360, 1907e3, -1167810, 5976100, 1891830, -1167810, 5976100, 1891830, -1181690, 6091730, 1469860, -1260850, 6095380, 1387190, -1167810, 5976100, 1891830, -1260850, 6095380, 1387190, -1169990, 5975610, 1892030, -1272610, 5929130, 1969870, -1167210, 5971360, 1907e3, -1169990, 5975610, 1892030, -1272610, 5929130, 1969870, -1169990, 5975610, 1892030, -1271920, 5951710, 1901490, -1271920, 5951710, 1901490, -1169990, 5975610, 1892030, -1260850, 6095380, 1387190, -1280380, 5949640, 1902280, -1272610, 5929130, 1969870, -1271920, 5951710, 1901490, -1271920, 5951710, 1901490, -1260850, 6095380, 1387190, -1327100, 6062200, 1467860, -1271920, 5951710, 1901490, -1327100, 6062200, 1467860, -1280380, 5949640, 1902280, -1358600, 6085530, 1337590, -1327100, 6062200, 1467860, -1260850, 6095380, 1387190, -1109750, 5988850, 1886460, -1050310, 5886890, 2211110, -1069170, 5997420, 1882710, -1069170, 5997420, 1882710, -1088010, 6109310, 1469230, -1181690, 6091730, 1469860, -1069170, 5997420, 1882710, -1181690, 6091730, 1469860, -1109750, 5988850, 1886460, -1096940, 5890420, 2179050, -1050310, 5886890, 2211110, -1109750, 5988850, 1886460, -1096940, 5890420, 2179050, -1109750, 5988850, 1886460, -1133550, 5983700, 1888660, -1181690, 6091730, 1469860, -1133550, 5983700, 1888660, -1109750, 5988850, 1886460, -1106950, 5911490, 2116470, -1096940, 5890420, 2179050, -1133550, 5983700, 1888660, -1106950, 5911490, 2116470, -1133550, 5983700, 1888660, -1134800, 5983420, 1888770, -1181690, 6091730, 1469860, -1134800, 5983420, 1888770, -1133550, 5983700, 1888660, -1158850, 5941820, 2001380, -1106950, 5911490, 2116470, -1134800, 5983420, 1888770, -1158850, 5941820, 2001380, -1134800, 5983420, 1888770, -1164380, 5976870, 1891510, -1164380, 5976870, 1891510, -1134800, 5983420, 1888770, -1181690, 6091730, 1469860, -1158850, 5941820, 2001380, -1164380, 5976870, 1891510, -1167810, 5976100, 1891830, -1158850, 5941820, 2001380, -1167810, 5976100, 1891830, -1167210, 5971360, 1907e3, -1167810, 5976100, 1891830, -1164380, 5976870, 1891510, -1181690, 6091730, 1469860, -1520150, 5885610, 1924680, -1461440, 5880740, 1983740, -1471760, 5899390, 1920150, -1520150, 5885610, 1924680, -1471760, 5899390, 1920150, -1524120, 5987640, 1577680, -1520150, 5885610, 1924680, -1524120, 5987640, 1577680, -1546410, 5887440, 1898170, -1560890, 5916520, 1793680, -1546410, 5887440, 1898170, -1524120, 5987640, 1577680, -1622970, 5965690, 1562290, -1560890, 5916520, 1793680, -1524120, 5987640, 1577680, -1651520, 5919480, 1700970, -1560890, 5916520, 1793680, -1622970, 5965690, 1562290, -1651520, 5919480, 1700970, -1622970, 5965690, 1562290, -1653430, 5944360, 1610570, -1314930, 5941060, 1905490, -1304830, 5928300, 1951310, -1307400, 5942950, 1904780, -1307400, 5942950, 1904780, -1327100, 6062200, 1467860, -1389790, 6025600, 1557200, -1307400, 5942950, 1904780, -1389790, 6025600, 1557200, -1314930, 5941060, 1905490, -1365170, 5913690, 1954350, -1304830, 5928300, 1951310, -1314930, 5941060, 1905490, -1365170, 5913690, 1954350, -1314930, 5941060, 1905490, -1368230, 5927410, 1910450, -1368230, 5927410, 1910450, -1314930, 5941060, 1905490, -1389790, 6025600, 1557200, -1383330, 5923440, 1911860, -1365170, 5913690, 1954350, -1368230, 5927410, 1910450, -1368230, 5927410, 1910450, -1389790, 6025600, 1557200, -1524120, 5987640, 1577680, -1368230, 5927410, 1910450, -1524120, 5987640, 1577680, -1383330, 5923440, 1911860, -1383170, 5897190, 1990950, -1365170, 5913690, 1954350, -1383330, 5923440, 1911860, -1383170, 5897190, 1990950, -1383330, 5923440, 1911860, -1409710, 5916420, 1914330, -1524120, 5987640, 1577680, -1409710, 5916420, 1914330, -1383330, 5923440, 1911860, -1461440, 5880740, 1983740, -1383170, 5897190, 1990950, -1409710, 5916420, 1914330, -1461440, 5880740, 1983740, -1409710, 5916420, 1914330, -1471760, 5899390, 1920150, -1524120, 5987640, 1577680, -1471760, 5899390, 1920150, -1409710, 5916420, 1914330, -979473, 6116550, 1514460, -913483, 6085080, 1673050, -905036, 6106170, 1599670, -979473, 6116550, 1514460, -948295, 6053340, 1765630, -913483, 6085080, 1673050, -955551, 6019850, 1872260, -935238, 5931860, 2141980, -945047, 6021810, 1871290, -945047, 6021810, 1871290, -948295, 6053340, 1765630, -979473, 6116550, 1514460, -945047, 6021810, 1871290, -979473, 6116550, 1514460, -955551, 6019850, 1872260, -992891, 5905860, 2187100, -935238, 5931860, 2141980, -955551, 6019850, 1872260, -992891, 5905860, 2187100, -955551, 6019850, 1872260, -988522, 6013570, 1875290, -988522, 6013570, 1875290, -955551, 6019850, 1872260, -979473, 6116550, 1514460, -992891, 5905860, 2187100, -988522, 6013570, 1875290, -995437, 6012230, 1875920, -988522, 6013570, 1875290, -979473, 6116550, 1514460, -993978, 6128870, 1454420, -988522, 6013570, 1875290, -993978, 6128870, 1454420, -995437, 6012230, 1875920, -831708, 6025380, 1912850, -820320, 5990190, 2024280, -777010, 6002410, 2005210, -862317, 5944590, 2137310, -820320, 5990190, 2024280, -831708, 6025380, 1912850, -862317, 5944590, 2137310, -831708, 6025380, 1912850, -875335, 6034330, 1864890, -862317, 5944590, 2137310, -875335, 6034330, 1864890, -897910, 6030370, 1866960, -901932, 6039440, 1835660, -897910, 6030370, 1866960, -875335, 6034330, 1864890, -935238, 5931860, 2141980, -862317, 5944590, 2137310, -897910, 6030370, 1866960, -935238, 5931860, 2141980, -897910, 6030370, 1866960, -905570, 6029e3, 1867670, -905570, 6029e3, 1867670, -897910, 6030370, 1866960, -901932, 6039440, 1835660, -935238, 5931860, 2141980, -905570, 6029e3, 1867670, -945047, 6021810, 1871290, -905570, 6029e3, 1867670, -901932, 6039440, 1835660, -948295, 6053340, 1765630, -905570, 6029e3, 1867670, -948295, 6053340, 1765630, -945047, 6021810, 1871290, -913483, 6085080, 1673050, -877559, 6095790, 1653320, -905036, 6106170, 1599670, -1050310, 5886890, 2211110, -1066040, 5998060, 1882420, -1069170, 5997420, 1882710, -1066040, 5998060, 1882420, -1084300, 6137470, 1350600, -1088010, 6109310, 1469230, -1066040, 5998060, 1882420, -1088010, 6109310, 1469230, -1069170, 5997420, 1882710, -1176940, 5899670, 2111700, -1106950, 5911490, 2116470, -1158850, 5941820, 2001380, -1304830, 5928300, 1951310, -1272610, 5929130, 1969870, -1280380, 5949640, 1902280, -1304830, 5928300, 1951310, -1280380, 5949640, 1902280, -1307400, 5942950, 1904780, -1307400, 5942950, 1904780, -1280380, 5949640, 1902280, -1327100, 6062200, 1467860, -916606, 6252770, 859269, -912854, 6247300, 901688, -901316, 6248980, 901688, -905077, 6235230, 988313, -894676, 6247230, 920096, -901316, 6248980, 901688, -905077, 6235230, 988313, -901316, 6248980, 901688, -912854, 6247300, 901688, 1386580, 4734180, 4029410, 1560690, 4858950, 3812810, 1521020, 4864560, 3821610, 1386580, 4734180, 4029410, 1594570, 4862650, 3794150, 1560690, 4858950, 3812810, 1386580, 4734180, 4029410, 1545360, 4696e3, 4016380, 1594570, 4862650, 3794150, 1594570, 4862650, 3794150, 1545360, 4696e3, 4016380, 1595360, 4779640, 3897200, 1545360, 4696e3, 4016380, 1603790, 4751310, 3928050, 1595360, 4779640, 3897200, 1595360, 4779640, 3897200, 1603790, 4751310, 3928050, 1619530, 4768080, 3901360, 1307170, 4832770, 3938490, 1354050, 4803500, 3958270, 1317080, 4857730, 3904570, 1314390, 4898530, 3854520, 1317080, 4857730, 3904570, 1354050, 4803500, 3958270, 1314390, 4898530, 3854520, 1354050, 4803500, 3958270, 1402310, 4873970, 3854660, 1354050, 4803500, 3958270, 1383500, 4802350, 3949530, 1402310, 4873970, 3854660, 1402310, 4873970, 3854660, 1383500, 4802350, 3949530, 1386580, 4734180, 4029410, 1402310, 4873970, 3854660, 1386580, 4734180, 4029410, 1459350, 4852010, 3861150, 1386580, 4734180, 4029410, 1521020, 4864560, 3821610, 1459350, 4852010, 3861150, 1643450, 4721150, 3947840, 1638630, 464e4, 4044220, 1686920, 4731220, 3917540, 1545360, 4696e3, 4016380, 1638630, 464e4, 4044220, 1643450, 4721150, 3947840, 1545360, 4696e3, 4016380, 1643450, 4721150, 3947840, 1603790, 4751310, 3928050, 1638630, 464e4, 4044220, 1704930, 4754e3, 3882240, 1686920, 4731220, 3917540, 1638630, 464e4, 4044220, 1721090, 4758770, 3869330, 1704930, 4754e3, 3882240, 1638630, 464e4, 4044220, 1770150, 4739230, 3871160, 1721090, 4758770, 3869330, 1638630, 464e4, 4044220, 1728060, 4613290, 4037590, 1770150, 4739230, 3871160, 1770150, 4739230, 3871160, 1728060, 4613290, 4037590, 1708620, 4528770, 4139560, 1770150, 4739230, 3871160, 1708620, 4528770, 4139560, 1807760, 4758040, 3830770, 1708620, 4528770, 4139560, 1750260, 4562340, 4085310, 1807760, 4758040, 3830770, 1807760, 4758040, 3830770, 1750260, 4562340, 4085310, 1831030, 4735220, 3847840, 1750260, 4562340, 4085310, 1802410, 4584230, 4038170, 1831030, 4735220, 3847840, 1831030, 4735220, 3847840, 1802410, 4584230, 4038170, 1849260, 4668780, 3919160, 1802410, 4584230, 4038170, 1847700, 4613980, 3983820, 1849260, 4668780, 3919160, 1849260, 4668780, 3919160, 1920850, 4713960, 3830230, 1898720, 4731710, 3819440, 1831030, 4735220, 3847840, 1849260, 4668780, 3919160, 1898720, 4731710, 3819440, 1621480, 4546730, 4154800, 1708620, 4528770, 4139560, 1706120, 4577730, 4086760, 1621480, 4546730, 4154800, 1706120, 4577730, 4086760, 1603360, 4553150, 4154800, 1596890, 4551480, 4159090, 1621480, 4546730, 4154800, 1603360, 4553150, 4154800, 1603360, 4553150, 4154800, 1706120, 4577730, 4086760, 1624670, 4577310, 4120060, 1603360, 4553150, 4154800, 1624670, 4577310, 4120060, 1599950, 4554350, 4154800, 1596890, 4551480, 4159090, 1603360, 4553150, 4154800, 1599950, 4554350, 4154800, 1622820, 4620590, 4072520, 1624670, 4577310, 4120060, 1706120, 4577730, 4086760, 1622820, 4620590, 4072520, 1619860, 4600210, 4096540, 1624670, 4577310, 4120060, 1586070, 461e4, 4098740, 1619860, 4600210, 4096540, 1622820, 4620590, 4072520, 1847700, 4613980, 3983820, 1867770, 4554400, 4042200, 1900250, 4574550, 4004390, 1802410, 4584230, 4038170, 1867770, 4554400, 4042200, 1847700, 4613980, 3983820, 1706120, 4577730, 4086760, 1708620, 4528770, 4139560, 1728060, 4613290, 4037590, 1594570, 4862650, 3794150, 1595360, 4779640, 3897200, 1621190, 4830840, 3823200, 2927680, 4012050, 3988180, 2921100, 3927220, 4075880, 2967780, 3952860, 4017340, 2927680, 4012050, 3988180, 2858920, 3914540, 4131410, 2921100, 3927220, 4075880, 2794820, 3935850, 4154800, 2858920, 3914540, 4131410, 2927680, 4012050, 3988180, 2794820, 3935850, 4154800, 2927680, 4012050, 3988180, 2788140, 3940590, 4154800, 2785150, 3938970, 4158320, 2794820, 3935850, 4154800, 2788140, 3940590, 4154800, 2788140, 3940590, 4154800, 2927680, 4012050, 3988180, 2995500, 4111110, 3835e3, 2788140, 3940590, 4154800, 2995500, 4111110, 3835e3, 2787530, 3941010, 4154800, 2785150, 3938970, 4158320, 2788140, 3940590, 4154800, 2787530, 3941010, 4154800, 2995500, 4111110, 3835e3, 2927680, 4012050, 3988180, 2980540, 4062790, 3897230, 2626630, 4050030, 4154800, 2764260, 4195310, 3916050, 2715400, 4234600, 3908e3, 2626630, 4050030, 4154800, 2715400, 4234600, 3908e3, 2620190, 4054200, 4154800, 2620190, 4054200, 4154800, 2605880, 4027520, 4189370, 2626630, 4050030, 4154800, 2630170, 4047730, 4154800, 2803420, 4184590, 3899760, 2764260, 4195310, 3916050, 2630170, 4047730, 4154800, 2764260, 4195310, 3916050, 2626630, 4050030, 4154800, 2605880, 4027520, 4189370, 2630170, 4047730, 4154800, 2626630, 4050030, 4154800, 2630170, 4047730, 4154800, 2699810, 4001620, 4154800, 2803420, 4184590, 3899760, 2605880, 4027520, 4189370, 2685240, 3976260, 4188230, 2699810, 4001620, 4154800, 2605880, 4027520, 4189370, 2699810, 4001620, 4154800, 2630170, 4047730, 4154800, 2705370, 3997860, 4154800, 2850950, 4149960, 3902300, 2803420, 4184590, 3899760, 2705370, 3997860, 4154800, 2803420, 4184590, 3899760, 2699810, 4001620, 4154800, 2699810, 4001620, 4154800, 2685240, 3976260, 4188230, 2705370, 3997860, 4154800, 2705370, 3997860, 4154800, 2736850, 3976380, 4154800, 2850950, 4149960, 3902300, 2685240, 3976260, 4188230, 2722750, 3955e3, 4184160, 2736850, 3976380, 4154800, 2685240, 3976260, 4188230, 2736850, 3976380, 4154800, 2705370, 3997860, 4154800, 2741390, 3973250, 4154800, 2924600, 4145940, 3852080, 2850950, 4149960, 3902300, 2741390, 3973250, 4154800, 2850950, 4149960, 3902300, 2736850, 3976380, 4154800, 2736850, 3976380, 4154800, 2722750, 3955e3, 4184160, 2741390, 3973250, 4154800, 2741390, 3973250, 4154800, 2784880, 3942890, 4154800, 2924600, 4145940, 3852080, 2722750, 3955e3, 4184160, 2737460, 3874180, 4249230, 2784880, 3942890, 4154800, 2722750, 3955e3, 4184160, 2784880, 3942890, 4154800, 2741390, 3973250, 4154800, 2924600, 4145940, 3852080, 2784880, 3942890, 4154800, 2786850, 3941500, 4154800, 2737460, 3874180, 4249230, 2785150, 3938970, 4158320, 2786850, 3941500, 4154800, 2737460, 3874180, 4249230, 2786850, 3941500, 4154800, 2784880, 3942890, 4154800, 2737460, 3874180, 4249230, 2770720, 3824700, 4272290, 2785150, 3938970, 4158320, 2785150, 3938970, 4158320, 2770720, 3824700, 4272290, 2809180, 3867680, 4208430, 2770720, 3824700, 4272290, 2803410, 3819410, 4255760, 2809180, 3867680, 4208430, 2003640, 4618240, 3903230, 2046010, 4642740, 3852210, 2022400, 4655340, 3849470, 2003640, 4618240, 3903230, 2076740, 4609250, 3875740, 2046010, 4642740, 3852210, 2003640, 4618240, 3903230, 2098e3, 4543820, 3940570, 2076740, 4609250, 3875740, 2076740, 4609250, 3875740, 2098e3, 4543820, 3940570, 2099270, 4625450, 3844390, 2099270, 4625450, 3844390, 2098e3, 4543820, 3940570, 2172620, 4605800, 3827300, 2098e3, 4543820, 3940570, 2165790, 4474210, 3983030, 2172620, 4605800, 3827300, 2172620, 4605800, 3827300, 2165790, 4474210, 3983030, 2211450, 4646110, 3756150, 2211450, 4646110, 3756150, 2165790, 4474210, 3983030, 2265780, 4642020, 3728910, 2165790, 4474210, 3983030, 2201870, 4419740, 4023580, 2265780, 4642020, 3728910, 2428870, 4612750, 3662430, 2274180, 4257940, 4154800, 2296830, 4245760, 4154800, 2268920, 4246230, 4169530, 2287420, 4221200, 4184710, 2296830, 4245760, 4154800, 2268920, 4246230, 4169530, 2296830, 4245760, 4154800, 2274180, 4257940, 4154800, 2268730, 4260850, 4154800, 2274180, 4257940, 4154800, 2428870, 4612750, 3662430, 2268730, 4260850, 4154800, 2428870, 4612750, 3662430, 2266930, 4331510, 4082570, 2268730, 4260850, 4154800, 2268920, 4246230, 4169530, 2274180, 4257940, 4154800, 2364070, 4636690, 3674490, 2266930, 4331510, 4082570, 2428870, 4612750, 3662430, 2201870, 4419740, 4023580, 2266930, 4331510, 4082570, 2364070, 4636690, 3674490, 2201870, 4419740, 4023580, 2364070, 4636690, 3674490, 2333950, 4619130, 3715360, 2265780, 4642020, 3728910, 2201870, 4419740, 4023580, 2333950, 4619130, 3715360, 2536350, 4460720, 3775380, 2405260, 4185290, 4154800, 2408570, 4183390, 4154800, 2388710, 4151290, 4197940, 2366880, 4095660, 4263990, 2408570, 4183390, 4154800, 2388710, 4151290, 4197940, 2408570, 4183390, 4154800, 2405260, 4185290, 4154800, 2379960, 4199730, 4154800, 2405260, 4185290, 4154800, 2536350, 4460720, 3775380, 2368330, 4180220, 4180860, 2388710, 4151290, 4197940, 2405260, 4185290, 4154800, 2368330, 4180220, 4180860, 2405260, 4185290, 4154800, 2379960, 4199730, 4154800, 2379960, 4199730, 4154800, 2536350, 4460720, 3775380, 2479240, 4495410, 3772190, 2379960, 4199730, 4154800, 2479240, 4495410, 3772190, 2376360, 4201770, 4154800, 2376360, 4201770, 4154800, 2368330, 4180220, 4180860, 2379960, 4199730, 4154800, 2302200, 4242850, 4154800, 2376360, 4201770, 4154800, 2479240, 4495410, 3772190, 2287420, 4221200, 4184710, 2368330, 4180220, 4180860, 2376360, 4201770, 4154800, 2287420, 4221200, 4184710, 2376360, 4201770, 4154800, 2302200, 4242850, 4154800, 2302200, 4242850, 4154800, 2479240, 4495410, 3772190, 2498830, 4547380, 3696710, 2302200, 4242850, 4154800, 2498830, 4547380, 3696710, 2301430, 4243270, 4154800, 2287420, 4221200, 4184710, 2302200, 4242850, 4154800, 2301430, 4243270, 4154800, 2301430, 4243270, 4154800, 2498830, 4547380, 3696710, 2428870, 4612750, 3662430, 2301430, 4243270, 4154800, 2428870, 4612750, 3662430, 2296830, 4245760, 4154800, 2296830, 4245760, 4154800, 2287420, 4221200, 4184710, 2301430, 4243270, 4154800, 2583160, 4077890, 4154800, 2715400, 4234600, 3908e3, 2651210, 4315590, 3863530, 2583160, 4077890, 4154800, 2651210, 4315590, 3863530, 2560690, 4092040, 4154800, 2560690, 4092040, 4154800, 2523740, 4005540, 4259670, 2583160, 4077890, 4154800, 2517820, 4118560, 4154800, 2560690, 4092040, 4154800, 2651210, 4315590, 3863530, 2441890, 4005010, 4307280, 2523740, 4005540, 4259670, 2560690, 4092040, 4154800, 2441890, 4005010, 4307280, 2560690, 4092040, 4154800, 2517820, 4118560, 4154800, 2517820, 4118560, 4154800, 2651210, 4315590, 3863530, 2594580, 4358460, 3853900, 2517820, 4118560, 4154800, 2594580, 4358460, 3853900, 2497880, 4130680, 4154800, 2497880, 4130680, 4154800, 2441890, 4005010, 4307280, 2517820, 4118560, 4154800, 2430090, 4170920, 4154800, 2497880, 4130680, 4154800, 2594580, 4358460, 3853900, 2366880, 4095660, 4263990, 2441890, 4005010, 4307280, 2497880, 4130680, 4154800, 2366880, 4095660, 4263990, 2497880, 4130680, 4154800, 2430090, 4170920, 4154800, 2430090, 4170920, 4154800, 2594580, 4358460, 3853900, 2536350, 4460720, 3775380, 2430090, 4170920, 4154800, 2536350, 4460720, 3775380, 2408570, 4183390, 4154800, 2408570, 4183390, 4154800, 2366880, 4095660, 4263990, 2430090, 4170920, 4154800, 2523740, 4005540, 4259670, 2597150, 3988930, 4231220, 2605880, 4027520, 4189370, 2583160, 4077890, 4154800, 2620190, 4054200, 4154800, 2715400, 4234600, 3908e3, 2523740, 4005540, 4259670, 2605880, 4027520, 4189370, 2620190, 4054200, 4154800, 2523740, 4005540, 4259670, 2620190, 4054200, 4154800, 2583160, 4077890, 4154800, 2770720, 3824700, 4272290, 2855300, 3781450, 4255170, 2803410, 3819410, 4255760, 2803410, 3819410, 4255760, 2855300, 3781450, 4255170, 2868230, 3794780, 4234700, 2855300, 3781450, 4255170, 2907570, 3832620, 4173760, 2868230, 3794780, 4234700, 2855300, 3781450, 4255170, 2899410, 3778920, 4227690, 2907570, 3832620, 4173760, 2921100, 3927220, 4075880, 2912210, 3852770, 4152060, 2963880, 3889800, 4080840, 2858920, 3914540, 4131410, 2912210, 3852770, 4152060, 2921100, 3927220, 4075880, 2787530, 3941010, 4154800, 2995500, 4111110, 3835e3, 2924600, 4145940, 3852080, 2787530, 3941010, 4154800, 2924600, 4145940, 3852080, 2786850, 3941500, 4154800, 2786850, 3941500, 4154800, 2785150, 3938970, 4158320, 2787530, 3941010, 4154800, -3695450, 5100190, -1002740, -3619010, 5155060, -1000990, -3617620, 5149460, -1034090, -3695450, 5100190, -1002740, -3611870, 5164230, -979449, -3619010, 5155060, -1000990, -3695450, 5100190, -1002740, -3624690, 5160100, -953664, -3611870, 5164230, -979449, -3703990, 5108040, -929077, -3624690, 5160100, -953664, -3695450, 5100190, -1002740, -3766270, 5062980, -925375, -3703990, 5108040, -929077, -3695450, 5100190, -1002740, -3794990, 5043990, -911706, -3766270, 5062980, -925375, -3695450, 5100190, -1002740, -3827070, 5017200, -925273, -3794990, 5043990, -911706, -3695450, 5100190, -1002740, -3827070, 5017200, -925273, -3695450, 5100190, -1002740, -3792090, 5038120, -954907, 3050710, -5488930, 1112230, 2953180, -5542460, 1110050, 2971400, -5534680, 1100250, 3050710, -5488930, 1112230, 2978630, -5522680, 1139980, 2953180, -5542460, 1110050, 3050710, -5488930, 1112230, 2972910, -5516670, 1182940, 2978630, -5522680, 1139980, 3050710, -5488930, 1112230, 3026810, -5484200, 1197060, 2972910, -5516670, 1182940, 3047250, -5473700, 1193260, 3026810, -5484200, 1197060, 3050710, -5488930, 1112230, 5334760, 1001930, 3337970, 5220340, 952434, 3526720, 5190140, 929141, 3576810, 5212560, 999706, 3525150, 5220340, 952434, 3526720, 5334760, 1001930, 3337970, 5310860, 1027020, 3368120, 5212560, 999706, 3525150, 5334760, 1001930, 3337970, 5236700, 1028210, 3481190, 5212560, 999706, 3525150, 5310860, 1027020, 3368120, 5285280, 1068800, 3395050, 5236700, 1028210, 3481190, 5310860, 1027020, 3368120, 5239070, 1064830, 3466690, 5236700, 1028210, 3481190, 5285280, 1068800, 3395050, 5390060, 955905, 3262260, 5368410, 941788, 3301570, 5415090, 951905, 3222010, 5415090, 951905, 3222010, 5368410, 941788, 3301570, 5006750, 838741, 3848340, 5037780, 904688, 3792890, 5006750, 838741, 3848340, 5368410, 941788, 3301570, 5037780, 904688, 3792890, 5368410, 941788, 3301570, 5190140, 929141, 3576810, 5334760, 1001930, 3337970, 5190140, 929141, 3576810, 5368410, 941788, 3301570, 5091330, 984076, 3701120, 5081320, 950329, 3723470, 5148030, 982766, 3622720, 5148030, 982766, 3622720, 5081320, 950329, 3723470, 5037780, 904688, 3792890, 5051430, 945349, 3764900, 5037780, 904688, 3792890, 5081320, 950329, 3723470, 4999760, 974472, 3825550, 5037780, 904688, 3792890, 5051430, 945349, 3764900, 5011130, 983145, 3808520, 4999760, 974472, 3825550, 5051430, 945349, 3764900, 5415090, 951905, 3222010, 5006750, 838741, 3848340, 5435830, 907904, 3199860, 5006750, 838741, 3848340, 5340610, 851183, 3370080, 5435830, 907904, 3199860, 5006750, 838741, 3848340, 5325800, 790160, 3407910, 5340610, 851183, 3370080, 5006750, 838741, 3848340, 5311600, 787236, 3430510, 5325800, 790160, 3407910, 5006750, 838741, 3848340, 5048550, 747392, 3812640, 5311600, 787236, 3430510, 5048550, 747392, 3812640, 5084840, 734352, 3766970, 5144240, 757467, 3681350, 5311600, 787236, 3430510, 5048550, 747392, 3812640, 5144240, 757467, 3681350, 5311600, 787236, 3430510, 5144240, 757467, 3681350, 5199350, 743772, 3606460, 5311600, 787236, 3430510, 5199350, 743772, 3606460, 5286580, 706568, 3485900, 5199350, 743772, 3606460, 5241680, 692359, 3555400, 5286580, 706568, 3485900, 5004070, 901277, 3837750, 5006750, 838741, 3848340, 5037780, 904688, 3792890, 5148030, 982766, 3622720, 5037780, 904688, 3792890, 5190140, 929141, 3576810, 4479150, 2554860, 3741140, 4257790, 2342670, 4116980, 4490890, 2462040, 3788690, 4257790, 2342670, 4116980, 4538040, 2376590, 3787090, 4490890, 2462040, 3788690, 4257790, 2342670, 4116980, 4321770, 2228720, 4113600, 4538040, 2376590, 3787090, 4538040, 2376590, 3787090, 4321770, 2228720, 4113600, 4502990, 2299220, 3875060, 4321770, 2228720, 4113600, 4430900, 2238660, 3991090, 4502990, 2299220, 3875060, 4502990, 2299220, 3875060, 4430900, 2238660, 3991090, 4498020, 2224840, 3923620, 3860550, 2897950, 4154800, 4129130, 3076120, 3751470, 4096690, 3057980, 3801200, 3860550, 2897950, 4154800, 4096690, 3057980, 3801200, 3860410, 2898130, 4154800, 3834690, 2880540, 4190460, 3860550, 2897950, 4154800, 3860410, 2898130, 4154800, 3861600, 2896550, 4154800, 4155010, 3065300, 3731840, 4129130, 3076120, 3751470, 3861600, 2896550, 4154800, 4129130, 3076120, 3751470, 3860550, 2897950, 4154800, 3834690, 2880540, 4190460, 3861600, 2896550, 4154800, 3860550, 2897950, 4154800, 3863040, 2894630, 4154800, 4136320, 3022980, 3786360, 4155010, 3065300, 3731840, 3863040, 2894630, 4154800, 4155010, 3065300, 3731840, 3861600, 2896550, 4154800, 3834690, 2880540, 4190460, 3863040, 2894630, 4154800, 3861600, 2896550, 4154800, 4155010, 3065300, 3731840, 4136320, 3022980, 3786360, 4180810, 3054270, 3712150, 4136320, 3022980, 3786360, 4176300, 3010060, 3752840, 4180810, 3054270, 3712150, 3491590, 3333270, 4154800, 3495800, 3328860, 4154800, 3526710, 3365060, 4099520, 3491590, 3333270, 4154800, 3526710, 3365060, 4099520, 3495700, 3346720, 4140610, 3491590, 3333270, 4154800, 3487070, 3318690, 4170140, 3495800, 3328860, 4154800, 3499030, 3325460, 4154800, 3724310, 3446220, 3851460, 3526710, 3365060, 4099520, 3499030, 3325460, 4154800, 3526710, 3365060, 4099520, 3495800, 3328860, 4154800, 3495800, 3328860, 4154800, 3487070, 3318690, 4170140, 3499030, 3325460, 4154800, 3499030, 3325460, 4154800, 3550710, 3270220, 4154800, 3724310, 3446220, 3851460, 3487070, 3318690, 4170140, 3515860, 3235210, 4211090, 3550710, 3270220, 4154800, 3487070, 3318690, 4170140, 3550710, 3270220, 4154800, 3499030, 3325460, 4154800, 3554560, 3266040, 4154800, 3757760, 3425250, 3837740, 3724310, 3446220, 3851460, 3554560, 3266040, 4154800, 3724310, 3446220, 3851460, 3550710, 3270220, 4154800, 3550710, 3270220, 4154800, 3515860, 3235210, 4211090, 3554560, 3266040, 4154800, 3554560, 3266040, 4154800, 3605870, 3209300, 4154800, 3757760, 3425250, 3837740, 3515860, 3235210, 4211090, 3578030, 3171600, 4207140, 3605870, 3209300, 4154800, 3515860, 3235210, 4211090, 3605870, 3209300, 4154800, 3554560, 3266040, 4154800, 3615020, 3198990, 4154800, 3832860, 3356850, 3823980, 3757760, 3425250, 3837740, 3615020, 3198990, 4154800, 3757760, 3425250, 3837740, 3605870, 3209300, 4154800, 3605870, 3209300, 4154800, 3578030, 3171600, 4207140, 3615020, 3198990, 4154800, 3619280, 3194180, 4154800, 3863400, 3319920, 3825480, 3832860, 3356850, 3823980, 3619280, 3194180, 4154800, 3832860, 3356850, 3823980, 3615020, 3198990, 4154800, 3578030, 3171600, 4207140, 3619280, 3194180, 4154800, 3615020, 3198990, 4154800, 3659840, 3527150, 3840060, 3526710, 3365060, 4099520, 3724310, 3446220, 3851460, 3542170, 3433700, 4029140, 3526710, 3365060, 4099520, 3659840, 3527150, 3840060, 3650360, 3561430, 3817530, 3542170, 3433700, 4029140, 3659840, 3527150, 3840060, 3650360, 3561430, 3817530, 3607610, 3511410, 3902960, 3542170, 3433700, 4029140, 3612420, 3583870, 3832480, 3607610, 3511410, 3902960, 3650360, 3561430, 3817530, 3495450, 3423e3, 4078410, 3526710, 3365060, 4099520, 3542170, 3433700, 4029140, 3486580, 3461590, 4053520, 3495450, 3423e3, 4078410, 3542170, 3433700, 4029140, 3619280, 3194180, 4154800, 3677120, 3127420, 4154800, 3863400, 3319920, 3825480, 3578030, 3171600, 4207140, 3671750, 3121970, 4163570, 3677120, 3127420, 4154800, 3578030, 3171600, 4207140, 3677120, 3127420, 4154800, 3619280, 3194180, 4154800, 3678680, 3125570, 4154800, 3948580, 3257570, 3792180, 3863400, 3319920, 3825480, 3678680, 3125570, 4154800, 3863400, 3319920, 3825480, 3677120, 3127420, 4154800, 3677120, 3127420, 4154800, 3671750, 3121970, 4163570, 3678680, 3125570, 4154800, 3678680, 3125570, 4154800, 3724090, 3071330, 4154800, 3948580, 3257570, 3792180, 3671750, 3121970, 4163570, 3713230, 3062320, 4171030, 3724090, 3071330, 4154800, 3671750, 3121970, 4163570, 3724090, 3071330, 4154800, 3678680, 3125570, 4154800, 3726040, 3068970, 4154800, 3995110, 3200680, 3791900, 3948580, 3257570, 3792180, 3726040, 3068970, 4154800, 3948580, 3257570, 3792180, 3724090, 3071330, 4154800, 3724090, 3071330, 4154800, 3713230, 3062320, 4171030, 3726040, 3068970, 4154800, 3726040, 3068970, 4154800, 3785620, 2995170, 4154800, 3995110, 3200680, 3791900, 3713230, 3062320, 4171030, 3783530, 2993170, 4158110, 3785620, 2995170, 4154800, 3713230, 3062320, 4171030, 3785620, 2995170, 4154800, 3726040, 3068970, 4154800, 3785880, 2994840, 4154800, 4014820, 3155690, 3808630, 3995110, 3200680, 3791900, 3785880, 2994840, 4154800, 3995110, 3200680, 3791900, 3785620, 2995170, 4154800, 3785620, 2995170, 4154800, 3783530, 2993170, 4158110, 3785880, 2994840, 4154800, 3786400, 2994180, 4154800, 4089460, 3089110, 3783900, 4014820, 3155690, 3808630, 3786400, 2994180, 4154800, 4014820, 3155690, 3808630, 3785880, 2994840, 4154800, 3783530, 2993170, 4158110, 3786400, 2994180, 4154800, 3785880, 2994840, 4154800, 3860410, 2898130, 4154800, 4096690, 3057980, 3801200, 4089460, 3089110, 3783900, 3860410, 2898130, 4154800, 4089460, 3089110, 3783900, 3858880, 2900170, 4154800, 3858880, 2900170, 4154800, 3834690, 2880540, 4190460, 3860410, 2898130, 4154800, 3786400, 2994180, 4154800, 3858880, 2900170, 4154800, 4089460, 3089110, 3783900, 3783530, 2993170, 4158110, 3834690, 2880540, 4190460, 3858880, 2900170, 4154800, 3783530, 2993170, 4158110, 3858880, 2900170, 4154800, 3786400, 2994180, 4154800, 3950830, 2773600, 4154800, 4203390, 2912150, 3799240, 4172850, 2982060, 3778770, 3950830, 2773600, 4154800, 4172850, 2982060, 3778770, 3942250, 2785790, 4154800, 3942250, 2785790, 4154800, 3878080, 2732420, 4248920, 3950830, 2773600, 4154800, 3865730, 2891030, 4154800, 3942250, 2785790, 4154800, 4172850, 2982060, 3778770, 3834690, 2880540, 4190460, 3878080, 2732420, 4248920, 3942250, 2785790, 4154800, 3834690, 2880540, 4190460, 3942250, 2785790, 4154800, 3865730, 2891030, 4154800, 3865730, 2891030, 4154800, 4172850, 2982060, 3778770, 4136320, 3022980, 3786360, 3865730, 2891030, 4154800, 4136320, 3022980, 3786360, 3863040, 2894630, 4154800, 3834690, 2880540, 4190460, 3865730, 2891030, 4154800, 3863040, 2894630, 4154800, 4132300, 2495200, 4154800, 4407240, 2608680, 3788790, 4359280, 2692300, 3785790, 4132300, 2495200, 4154800, 4359280, 2692300, 3785790, 4130410, 2498330, 4154800, 4130410, 2498330, 4154800, 4120250, 249e4, 4169760, 4132300, 2495200, 4154800, 4082830, 2575350, 4154800, 4130410, 2498330, 4154800, 4359280, 2692300, 3785790, 4026840, 2550390, 4223790, 4120250, 249e4, 4169760, 4130410, 2498330, 4154800, 4026840, 2550390, 4223790, 4130410, 2498330, 4154800, 4082830, 2575350, 4154800, 4082830, 2575350, 4154800, 4359280, 2692300, 3785790, 4350590, 2772610, 3737840, 4082830, 2575350, 4154800, 4350590, 2772610, 3737840, 4077020, 2584530, 4154800, 4077020, 2584530, 4154800, 4026840, 2550390, 4223790, 4082830, 2575350, 4154800, 4033470, 2651990, 4154800, 4077020, 2584530, 4154800, 4350590, 2772610, 3737840, 3956670, 2620180, 4247170, 4026840, 2550390, 4223790, 4077020, 2584530, 4154800, 3956670, 2620180, 4247170, 4077020, 2584530, 4154800, 4033470, 2651990, 4154800, 4033470, 2651990, 4154800, 4350590, 2772610, 3737840, 4269530, 2882750, 3747910, 4033470, 2651990, 4154800, 4269530, 2882750, 3747910, 4020140, 2672150, 4154800, 4020140, 2672150, 4154800, 3956670, 2620180, 4247170, 4033470, 2651990, 4154800, 3956820, 2765040, 4154800, 4020140, 2672150, 4154800, 4269530, 2882750, 3747910, 3878080, 2732420, 4248920, 3956670, 2620180, 4247170, 4020140, 2672150, 4154800, 3878080, 2732420, 4248920, 4020140, 2672150, 4154800, 3956820, 2765040, 4154800, 3956820, 2765040, 4154800, 4269530, 2882750, 3747910, 4203390, 2912150, 3799240, 3956820, 2765040, 4154800, 4203390, 2912150, 3799240, 3950830, 2773600, 4154800, 3878080, 2732420, 4248920, 3956820, 2765040, 4154800, 3950830, 2773600, 4154800, 4219180, 2345300, 4154800, 4257790, 2342670, 4116980, 4479150, 2554860, 3741140, 4219180, 2345300, 4154800, 4479150, 2554860, 3741140, 4210970, 2360010, 4154800, 4210970, 2360010, 4154800, 4192340, 2346860, 4180830, 4219180, 2345300, 4154800, 4133650, 2492960, 4154800, 4210970, 2360010, 4154800, 4479150, 2554860, 3741140, 4120250, 249e4, 4169760, 4192340, 2346860, 4180830, 4210970, 2360010, 4154800, 4120250, 249e4, 4169760, 4210970, 2360010, 4154800, 4133650, 2492960, 4154800, 4133650, 2492960, 4154800, 4479150, 2554860, 3741140, 4441310, 2604770, 3751760, 4133650, 2492960, 4154800, 4441310, 2604770, 3751760, 4132600, 2494710, 4154800, 4120250, 249e4, 4169760, 4133650, 2492960, 4154800, 4132600, 2494710, 4154800, 4132600, 2494710, 4154800, 4441310, 2604770, 3751760, 4407240, 2608680, 3788790, 4132600, 2494710, 4154800, 4407240, 2608680, 3788790, 4132300, 2495200, 4154800, 4120250, 249e4, 4169760, 4132600, 2494710, 4154800, 4132300, 2495200, 4154800, 4197490, 2325590, 4187500, 4211480, 2250180, 4214390, 4220540, 2320880, 4167030, 4220540, 2320880, 4167030, 4211480, 2250180, 4214390, 4271300, 2234780, 4162410, 4211480, 2250180, 4214390, 4190990, 2228080, 4246220, 4271300, 2234780, 4162410, 4282030, 2228490, 4154800, 4288540, 2215940, 4154800, 4307790, 2213180, 4136430, 4190990, 2228080, 4246220, 4288540, 2215940, 4154800, 4282030, 2228490, 4154800, 4190990, 2228080, 4246220, 4282030, 2228490, 4154800, 4271300, 2234780, 4162410, 4288540, 2215940, 4154800, 4294020, 2205290, 4154800, 4307790, 2213180, 4136430, 4190990, 2228080, 4246220, 4215120, 2160300, 4257270, 4294020, 2205290, 4154800, 4190990, 2228080, 4246220, 4294020, 2205290, 4154800, 4288540, 2215940, 4154800, 4307790, 2213180, 4136430, 4294020, 2205290, 4154800, 4299350, 2194880, 4154800, 4215120, 2160300, 4257270, 4273370, 2140340, 4209340, 4299350, 2194880, 4154800, 4215120, 2160300, 4257270, 4299350, 2194880, 4154800, 4294020, 2205290, 4154800, 4215120, 2160300, 4257270, 4273850, 2095310, 4231300, 4273370, 2140340, 4209340, 4374310, 2167430, 4090900, 4342110, 2123130, 4147660, 4356040, 2128670, 4130300, 4329880, 2134040, 4154800, 4342110, 2123130, 4147660, 4374310, 2167430, 4090900, 4329880, 2134040, 4154800, 4374310, 2167430, 4090900, 4327650, 2138560, 4154800, 4327650, 2138560, 4154800, 4325950, 2137510, 4157080, 4329880, 2134040, 4154800, 4320400, 2153150, 4154800, 4327650, 2138560, 4154800, 4374310, 2167430, 4090900, 4273370, 2140340, 4209340, 4325950, 2137510, 4157080, 4327650, 2138560, 4154800, 4273370, 2140340, 4209340, 4327650, 2138560, 4154800, 4320400, 2153150, 4154800, 4320400, 2153150, 4154800, 4374310, 2167430, 4090900, 4307790, 2213180, 4136430, 4320400, 2153150, 4154800, 4307790, 2213180, 4136430, 4299350, 2194880, 4154800, 4299350, 2194880, 4154800, 4273370, 2140340, 4209340, 4320400, 2153150, 4154800, 4321770, 2228720, 4113600, 4425290, 2174710, 4032180, 4430900, 2238660, 3991090, 3580450, 3508850, 393e4, 3542170, 3433700, 4029140, 3607610, 3511410, 3902960, -3045510, 5033480, 2455390, -2960580, 5082710, 2457840, -3025420, 5085870, 2371390, -3045510, 5033480, 2455390, -2934250, 5060620, 2533310, -2960580, 5082710, 2457840, -3045510, 5033480, 2455390, -2963490, 4992070, 2632660, -2934250, 5060620, 2533310, -2963930, 4991430, 2633360, -2963490, 4992070, 2632660, -3045510, 5033480, 2455390, -2963930, 4991430, 2633360, -3045510, 5033480, 2455390, -3024430, 4955010, 2633360, -3014440, 4920080, 2708710, -2963930, 4991430, 2633360, -3024430, 4955010, 2633360, -3058350, 4934150, 2633360, -3024430, 4955010, 2633360, -3045510, 5033480, 2455390, -3014440, 4920080, 2708710, -3024430, 4955010, 2633360, -3058350, 4934150, 2633360, -3014440, 4920080, 2708710, -3058350, 4934150, 2633360, -3060920, 4907840, 2678830, -3058350, 4934150, 2633360, -3045510, 5033480, 2455390, -3060800, 4940790, 2618120, -3058350, 4934150, 2633360, -3060800, 4940790, 2618120, -3060840, 4932600, 2633360, -3060920, 4907840, 2678830, -3058350, 4934150, 2633360, -3060840, 4932600, 2633360, 4929580, 3944780, -901688, 4900620, 3888030, -1239960, 4831900, 3986090, -1197810, 4929580, 3944780, -901688, 4831900, 3986090, -1197810, 4901200, 3979990, -901688, 4901200, 3979990, -901688, 4939230, 3971220, -714548, 4929580, 3944780, -901688, 4897730, 3984270, -901688, 4901200, 3979990, -901688, 4831900, 3986090, -1197810, 4897730, 3984270, -901688, 4831900, 3986090, -1197810, 4889890, 3986180, -934921, 4897730, 3984270, -901688, 4939230, 3971220, -714548, 4901200, 3979990, -901688, 4857330, 4009160, -1003440, 4889890, 3986180, -934921, 4831900, 3986090, -1197810, 4814290, 4032460, -1110970, 4857330, 4009160, -1003440, 4831900, 3986090, -1197810, 4785090, 4060440, -1134770, 4814290, 4032460, -1110970, 4831900, 3986090, -1197810, 4929580, 3944780, -901688, 4933680, 3939660, -901688, 4900620, 3888030, -1239960, 4948610, 3970330, -652243, 4933680, 3939660, -901688, 4929580, 3944780, -901688, 4948610, 3970330, -652243, 4929580, 3944780, -901688, 4939230, 3971220, -714548, 4951150, 3917680, -901688, 4941340, 3836710, -1238180, 4900620, 3888030, -1239960, 4951150, 3917680, -901688, 4900620, 3888030, -1239960, 4933680, 3939660, -901688, 4948610, 3970330, -652243, 4951150, 3917680, -901688, 4933680, 3939660, -901688, 4951150, 3917680, -901688, 4988560, 3869930, -901688, 4941340, 3836710, -1238180, 4994380, 3932510, -519966, 5031660, 3898300, -406321, 5024210, 3893730, -524384, 4994380, 3932510, -519966, 5024210, 3893730, -524384, 4988560, 3869930, -901688, 4994380, 3932510, -519966, 4988560, 3869930, -901688, 4951150, 3917680, -901688, 4994380, 3932510, -519966, 4951150, 3917680, -901688, 4948610, 3970330, -652243, 4931790, 4011900, -510837, 5031660, 3898300, -406321, 4994380, 3932510, -519966, 4931790, 4011900, -510837, 4994380, 3932510, -519966, 4948610, 3970330, -652243, 4931790, 4011900, -510837, 4948610, 3970330, -652243, 4926200, 4018030, -516568, 4890760, 3992820, -901688, 4893440, 3989530, -901688, 4889890, 3986180, -934921, 4898750, 3994570, -849340, 4893440, 3989530, -901688, 4890760, 3992820, -901688, 4898750, 3994570, -849340, 4890760, 3992820, -901688, 4891200, 3996560, -882635, 4893440, 3989530, -901688, 4897730, 3984270, -901688, 4889890, 3986180, -934921, 4898750, 3994570, -849340, 4939230, 3971220, -714548, 4897730, 3984270, -901688, 4898750, 3994570, -849340, 4897730, 3984270, -901688, 4893440, 3989530, -901688, 4890950, 4023190, -754569, 4939230, 3971220, -714548, 4898750, 3994570, -849340, 4886150, 4023530, -783110, 4890950, 4023190, -754569, 4898750, 3994570, -849340, 4941340, 3836710, -1238180, 4988560, 3869930, -901688, 4990180, 3867840, -901688, 5031660, 3898300, -406321, 5039300, 3894630, -342284, 5027620, 3889260, -524891, 5031660, 3898300, -406321, 5027620, 3889260, -524891, 5024210, 3893730, -524384, 5024210, 3893730, -524384, 5027620, 3889260, -524891, 4990180, 3867840, -901688, 5024210, 3893730, -524384, 4990180, 3867840, -901688, 4988560, 3869930, -901688, 5004780, 3848940, -901688, 4959890, 3801910, -1270710, 4941340, 3836710, -1238180, 5004780, 3848940, -901688, 4941340, 3836710, -1238180, 4990180, 3867840, -901688, 5027620, 3889260, -524891, 5039300, 3894630, -342284, 5032360, 3883020, -525599, 5032360, 3883020, -525599, 5004780, 3848940, -901688, 4990180, 3867840, -901688, 5032360, 3883020, -525599, 4990180, 3867840, -901688, 5027620, 3889260, -524891, 5032600, 3812490, -901688, 5005260, 3741030, -1273490, 4959890, 3801910, -1270710, 5032600, 3812490, -901688, 4959890, 3801910, -1270710, 5004780, 3848940, -901688, 5039300, 3894630, -342284, 5041570, 3870870, -526976, 5032360, 3883020, -525599, 5041570, 3870870, -526976, 5032600, 3812490, -901688, 5004780, 3848940, -901688, 5041570, 3870870, -526976, 5004780, 3848940, -901688, 5032360, 3883020, -525599, 5042290, 3799660, -901688, 5019980, 3716500, -1287190, 5005260, 3741030, -1273490, 5042290, 3799660, -901688, 5005260, 3741030, -1273490, 5032600, 3812490, -901688, 5039300, 3894630, -342284, 5044820, 3866570, -527463, 5041570, 3870870, -526976, 5044820, 3866570, -527463, 5042290, 3799660, -901688, 5032600, 3812490, -901688, 5044820, 3866570, -527463, 5032600, 3812490, -901688, 5041570, 3870870, -526976, 5091980, 3732800, -901688, 5101930, 3614020, -1256650, 5019980, 3716500, -1287190, 5091980, 3732800, -901688, 5019980, 3716500, -1287190, 5042290, 3799660, -901688, 5039300, 3894630, -342284, 5061890, 3843830, -530029, 5044820, 3866570, -527463, 5061890, 3843830, -530029, 5091980, 3732800, -901688, 5042290, 3799660, -901688, 5061890, 3843830, -530029, 5042290, 3799660, -901688, 5044820, 3866570, -527463, 5120520, 3693560, -901688, 5147480, 3545710, -1265420, 5101930, 3614020, -1256650, 5120520, 3693560, -901688, 5101930, 3614020, -1256650, 5091980, 3732800, -901688, 5039300, 3894630, -342284, 5072e3, 3830270, -531558, 5061890, 3843830, -530029, 5072e3, 3830270, -531558, 5120520, 3693560, -901688, 5091980, 3732800, -901688, 5072e3, 3830270, -531558, 5091980, 3732800, -901688, 5061890, 3843830, -530029, 5156780, 3642760, -901688, 5188120, 3536440, -1117670, 5147480, 3545710, -1265420, 5156780, 3642760, -901688, 5147480, 3545710, -1265420, 5120520, 3693560, -901688, 5039300, 3894630, -342284, 5085200, 3812450, -533561, 5072e3, 3830270, -531558, 5085200, 3812450, -533561, 5156780, 3642760, -901688, 5120520, 3693560, -901688, 5085200, 3812450, -533561, 5120520, 3693560, -901688, 5072e3, 3830270, -531558, 5156780, 3642760, -901688, 5219730, 3551980, -901688, 5188120, 3536440, -1117670, 5039300, 3894630, -342284, 5282290, 3572700, -117182, 5256920, 3567790, -560555, 5039300, 3894630, -342284, 5256920, 3567790, -560555, 5085200, 3812450, -533561, 5085200, 3812450, -533561, 5256920, 3567790, -560555, 5219730, 3551980, -901688, 5085200, 3812450, -533561, 5219730, 3551980, -901688, 5156780, 3642760, -901688, 5248770, 3508920, -901688, 5232850, 3495120, -1036710, 5216340, 3510630, -1066870, 5248770, 3508920, -901688, 5216340, 3510630, -1066870, 5238290, 3524550, -901688, 5271810, 3545360, -562986, 5292980, 3557230, -105041, 5277800, 3536280, -563968, 5277800, 3536280, -563968, 5248770, 3508920, -901688, 5238290, 3524550, -901688, 5277800, 3536280, -563968, 5238290, 3524550, -901688, 5271810, 3545360, -562986, 5236470, 3527250, -901688, 5238290, 3524550, -901688, 5216340, 3510630, -1066870, 5282290, 3572700, -117182, 5292980, 3557230, -105041, 5271810, 3545360, -562986, 5282290, 3572700, -117182, 5271810, 3545360, -562986, 5266310, 3553660, -562087, 5266310, 3553660, -562087, 5271810, 3545360, -562986, 5238290, 3524550, -901688, 5266310, 3553660, -562087, 5238290, 3524550, -901688, 5236470, 3527250, -901688, 5236470, 3527250, -901688, 5216340, 3510630, -1066870, 5188120, 3536440, -1117670, 5236470, 3527250, -901688, 5188120, 3536440, -1117670, 5219730, 3551980, -901688, 5256920, 3567790, -560555, 5282290, 3572700, -117182, 5266310, 3553660, -562087, 5266310, 3553660, -562087, 5236470, 3527250, -901688, 5219730, 3551980, -901688, 5266310, 3553660, -562087, 5219730, 3551980, -901688, 5256920, 3567790, -560555, 5300800, 3429810, -901688, 5294700, 3406890, -1016350, 5232850, 3495120, -1036710, 5300800, 3429810, -901688, 5232850, 3495120, -1036710, 5248770, 3508920, -901688, 5292980, 3557230, -105041, 5308100, 3489820, -568977, 5277800, 3536280, -563968, 5308100, 3489820, -568977, 5300800, 3429810, -901688, 5248770, 3508920, -901688, 5308100, 3489820, -568977, 5248770, 3508920, -901688, 5277800, 3536280, -563968, 5333600, 3378590, -901688, 5332620, 3357070, -983554, 5294700, 3406890, -1016350, 5333600, 3378590, -901688, 5294700, 3406890, -1016350, 5300800, 3429810, -901688, 5292980, 3557230, -105041, 5327680, 3459300, -572253, 5308100, 3489820, -568977, 5327680, 3459300, -572253, 5333600, 3378590, -901688, 5300800, 3429810, -901688, 5327680, 3459300, -572253, 5300800, 3429810, -901688, 5308100, 3489820, -568977, 5333600, 3378590, -901688, 5344850, 3360750, -901688, 5332620, 3357070, -983554, 5292980, 3557230, -105041, 5415980, 3366720, -113594, 5383850, 3369560, -581811, 5292980, 3557230, -105041, 5383850, 3369560, -581811, 5327680, 3459300, -572253, 5327680, 3459300, -572253, 5383850, 3369560, -581811, 5344850, 3360750, -901688, 5327680, 3459300, -572253, 5344850, 3360750, -901688, 5333600, 3378590, -901688, 5378680, 3306350, -901688, 5371970, 3299210, -965160, 5332620, 3357070, -983554, 5378680, 3306350, -901688, 5332620, 3357070, -983554, 5344850, 3360750, -901688, 5383850, 3369560, -581811, 5415980, 3366720, -113594, 5403830, 3336820, -585276, 5403830, 3336820, -585276, 5378680, 3306350, -901688, 5344850, 3360750, -901688, 5403830, 3336820, -585276, 5344850, 3360750, -901688, 5383850, 3369560, -581811, 5400670, 3270300, -901688, 5397170, 3263210, -946850, 5371970, 3299210, -965160, 5400670, 3270300, -901688, 5371970, 3299210, -965160, 5378680, 3306350, -901688, 5415980, 3366720, -113594, 5417050, 3314920, -587586, 5403830, 3336820, -585276, 5417050, 3314920, -587586, 5400670, 3270300, -901688, 5378680, 3306350, -901688, 5417050, 3314920, -587586, 5378680, 3306350, -901688, 5403830, 3336820, -585276, 5415980, 3366720, -113594, 5479430, 3262490, -112177, 5475250, 3265990, -187829, 5400670, 3270300, -901688, 5404040, 3264730, -901688, 5397170, 3263210, -946850, 5415980, 3366720, -113594, 5475250, 3265990, -187829, 5443480, 3270480, -592255, 5415980, 3366720, -113594, 5443480, 3270480, -592255, 5417050, 3314920, -587586, 5417050, 3314920, -587586, 5443480, 3270480, -592255, 5404040, 3264730, -901688, 5417050, 3314920, -587586, 5404040, 3264730, -901688, 5400670, 3270300, -901688, 5397170, 3263210, -946850, 5404040, 3264730, -901688, 5404370, 3264190, -901688, 5475250, 3265990, -187829, 5476600, 3259310, -252845, 5445970, 3266240, -592698, 5475250, 3265990, -187829, 5445970, 3266240, -592698, 5443480, 3270480, -592255, 5443480, 3270480, -592255, 5445970, 3266240, -592698, 5404370, 3264190, -901688, 5443480, 3270480, -592255, 5404370, 3264190, -901688, 5404040, 3264730, -901688, 5397170, 3263210, -946850, 5404370, 3264190, -901688, 5404700, 3263640, -901688, 5476600, 3259310, -252845, 5471930, 3255740, -371245, 5448520, 3261920, -593151, 5476600, 3259310, -252845, 5448520, 3261920, -593151, 5445970, 3266240, -592698, 5445970, 3266240, -592698, 5448520, 3261920, -593151, 5404700, 3263640, -901688, 5445970, 3266240, -592698, 5404700, 3263640, -901688, 5404370, 3264190, -901688, 5476600, 3259310, -252845, 5474180, 3255890, -335363, 5471930, 3255740, -371245, 5524410, 3129e3, -606973, 5525500, 3128730, -598435, 5525610, 3126840, -607197, 5525610, 3126840, -607197, 5526e3, 3116280, -655659, 5509030, 3132110, -719420, 5525610, 3126840, -607197, 5509030, 3132110, -719420, 5524410, 3129e3, -606973, 5520700, 3155790, -491834, 5525500, 3128730, -598435, 5524410, 3129e3, -606973, 5520700, 3155790, -491834, 5524410, 3129e3, -606973, 5515780, 3144490, -605373, 5515780, 3144490, -605373, 5524410, 3129e3, -606973, 5509030, 3132110, -719420, 5502870, 3167490, -602991, 5520700, 3155790, -491834, 5515780, 3144490, -605373, 5515780, 3144490, -605373, 5509030, 3132110, -719420, 5470710, 3184030, -780915, 5515780, 3144490, -605373, 5470710, 3184030, -780915, 5502870, 3167490, -602991, 5503190, 3192180, -451886, 5520700, 3155790, -491834, 5502870, 3167490, -602991, 5503190, 3192180, -451886, 5502870, 3167490, -602991, 5490350, 3189580, -600698, 5470710, 3184030, -780915, 5490350, 3189580, -600698, 5502870, 3167490, -602991, 5484690, 3231440, -394343, 5503190, 3192180, -451886, 5490350, 3189580, -600698, 5484690, 3231440, -394343, 5490350, 3189580, -600698, 5479900, 3207870, -598796, 5479900, 3207870, -598796, 5490350, 3189580, -600698, 5470710, 3184030, -780915, 5424390, 3225890, -919001, 5426990, 3226440, -901688, 5430360, 3220750, -901688, 5465970, 3232e3, -596280, 5484690, 3231440, -394343, 5479900, 3207870, -598796, 5430360, 3220750, -901688, 5426990, 3226440, -901688, 5465970, 3232e3, -596280, 5430360, 3220750, -901688, 5465970, 3232e3, -596280, 5479900, 3207870, -598796, 5430360, 3220750, -901688, 5479900, 3207870, -598796, 5470710, 3184030, -780915, 5426530, 3227210, -901688, 5426990, 3226440, -901688, 5424390, 3225890, -919001, 5471930, 3255740, -371245, 5484690, 3231440, -394343, 5465970, 3232e3, -596280, 5471930, 3255740, -371245, 5465970, 3232e3, -596280, 5457520, 3246530, -594761, 5457520, 3246530, -594761, 5465970, 3232e3, -596280, 5426990, 3226440, -901688, 5457520, 3246530, -594761, 5426990, 3226440, -901688, 5426530, 3227210, -901688, 5426530, 3227210, -901688, 5424390, 3225890, -919001, 5397170, 3263210, -946850, 5426530, 3227210, -901688, 5397170, 3263210, -946850, 5404700, 3263640, -901688, 5448520, 3261920, -593151, 5471930, 3255740, -371245, 5457520, 3246530, -594761, 5457520, 3246530, -594761, 5426530, 3227210, -901688, 5404700, 3263640, -901688, 5457520, 3246530, -594761, 5404700, 3263640, -901688, 5448520, 3261920, -593151, 5476600, 3259310, -252845, 5492460, 3231390, -266830, 5487470, 3235940, -310329, 5476600, 3259310, -252845, 5487470, 3235940, -310329, 5474180, 3255890, -335363, 5520700, 3155790, -491834, 5542970, 3115660, -497081, 5525500, 3128730, -598435, 5475250, 3265990, -187829, 5479430, 3262490, -112177, 5499080, 3228760, -125456, 5292980, 3557230, -105041, 5356410, 3436960, 419033, 5405570, 3362250, 393205, 5292980, 3557230, -105041, 5313820, 3502490, 418777, 5356410, 3436960, 419033, 5292980, 3557230, -105041, 5294320, 3556780, 12142.6, 5313820, 3502490, 418777, 5272960, 3557330, 469506, 5313820, 3502490, 418777, 5294320, 3556780, 12142.6, 5276270, 3583060, 56945, 5272960, 3557330, 469506, 5294320, 3556780, 12142.6, 5247650, 3603800, 392911, 5272960, 3557330, 469506, 5276270, 3583060, 56945, 5244420, 3627630, 130130, 5247650, 3603800, 392911, 5276270, 3583060, 56945, 5244420, 3627630, 130130, 5242920, 3616320, 337508, 5247650, 3603800, 392911, 5219500, 3659620, 210699, 5242920, 3616320, 337508, 5244420, 3627630, 130130, 5415980, 3366720, -113594, 5472720, 3269220, 204461, 5479430, 3262490, -112177, 5415980, 3366720, -113594, 5453110, 3299150, 243699, 5472720, 3269220, 204461, 5415980, 3366720, -113594, 5441200, 3301230, 417883, 5453110, 3299150, 243699, 5405570, 3362250, 393205, 5441200, 3301230, 417883, 5415980, 3366720, -113594, 5292980, 3557230, -105041, 5405570, 3362250, 393205, 5415980, 3366720, -113594, 5499080, 3228760, -125456, 5517880, 3196830, 117458, 5530230, 3176920, 66053.7, 5495280, 3232900, 175107, 5517880, 3196830, 117458, 5499080, 3228760, -125456, 5479430, 3262490, -112177, 5495280, 3232900, 175107, 5499080, 3228760, -125456, 5472720, 3269220, 204461, 5495280, 3232900, 175107, 5479430, 3262490, -112177, 5531790, 3170850, -159578, 5546140, 3149080, -64950.9, 5545380, 3147590, -148301, 5531790, 3170850, -159578, 5533610, 3171630, -22700.9, 5546140, 3149080, -64950.9, 5530230, 3176920, 66053.7, 5533610, 3171630, -22700.9, 5531790, 3170850, -159578, 5499080, 3228760, -125456, 5530230, 3176920, 66053.7, 5531790, 3170850, -159578, 5453110, 3299150, 243699, 5466430, 3263030, 387786, 5475550, 3260620, 258661, 5441200, 3301230, 417883, 5466430, 3263030, 387786, 5453110, 3299150, 243699, 3600290, 2666990, 4524130, 3651060, 2605240, 4519450, 3632060, 2671400, 4496240, 3632060, 2671400, 4496240, 3651060, 2605240, 4519450, 3693560, 2609380, 4482630, 3651060, 2605240, 4519450, 3657510, 2562990, 4538230, 3693560, 2609380, 4482630, 3693560, 2609380, 4482630, 3657510, 2562990, 4538230, 3791840, 2546330, 4436900, 3657510, 2562990, 4538230, 3288140, 2229750, 4972960, 3791840, 2546330, 4436900, 3288140, 2229750, 4972960, 3247210, 2169940, 5025670, 3791840, 2546330, 4436900, 3263800, 2234080, 4986930, 3247210, 2169940, 5025670, 3288140, 2229750, 4972960, 3657510, 2562990, 4538230, 3619390, 2530780, 4586290, 3307230, 2249680, 4951420, 3279040, 2297900, 4948050, 3307230, 2249680, 4951420, 3619390, 2530780, 4586290, 3556580, 2567320, 4614840, 3279040, 2297900, 4948050, 3619390, 2530780, 4586290, 3556580, 2567320, 4614840, 3309970, 2348460, 4903810, 3279040, 2297900, 4948050, 3281290, 2439230, 4878880, 3309970, 2348460, 4903810, 3556580, 2567320, 4614840, 3265630, 2730070, 4734130, 3240780, 2688130, 4774750, 3294330, 2738730, 4709350, 3294330, 2738730, 4709350, 3240780, 2688130, 4774750, 3344820, 2686480, 4703880, 3169550, 2666090, 4834150, 3344820, 2686480, 4703880, 3240780, 2688130, 4774750, 3188e3, 2682720, 4812920, 3169550, 2666090, 4834150, 3240780, 2688130, 4774750, 3169550, 2666090, 4834150, 3215500, 2566440, 4857530, 3344820, 2686480, 4703880, 3344820, 2686480, 4703880, 3215500, 2566440, 4857530, 3386880, 2670490, 4682980, 3215500, 2566440, 4857530, 3242230, 2534070, 4856760, 3386880, 2670490, 4682980, 3386880, 2670490, 4682980, 3242230, 2534070, 4856760, 3416880, 2691090, 4649510, 3416880, 2691090, 4649510, 3242230, 2534070, 4856760, 3459220, 2647170, 4643450, 3510740, 2622540, 4618860, 3281290, 2439230, 4878880, 3556580, 2567320, 4614840, 3237560, 2474720, 4890140, 3281290, 2439230, 4878880, 3510740, 2622540, 4618860, 3459220, 2647170, 4643450, 3237560, 2474720, 4890140, 3510740, 2622540, 4618860, 3242230, 2534070, 4856760, 3237560, 2474720, 4890140, 3459220, 2647170, 4643450, 3704250, 2433110, 4571470, 3293100, 2115420, 5019100, 3300540, 2095560, 5022520, 3247210, 2169940, 5025670, 3293100, 2115420, 5019100, 3704250, 2433110, 4571470, 3247210, 2169940, 5025670, 3704250, 2433110, 4571470, 3707150, 2461920, 4553770, 3791840, 2546330, 4436900, 3247210, 2169940, 5025670, 3707150, 2461920, 4553770, 3791840, 2546330, 4436900, 3707150, 2461920, 4553770, 3762830, 2495e3, 4490080, 3791840, 2546330, 4436900, 3762830, 2495e3, 4490080, 3803150, 2500710, 4453030, 3588030, 1639180, 4995160, 3625190, 1614420, 4976480, 3696660, 1648180, 4912850, 3588030, 1639180, 4995160, 3696660, 1648180, 4912850, 3895120, 1767080, 4715530, 3895120, 1767080, 4715530, 3696660, 1648180, 4912850, 3721770, 1651030, 4893030, 3895120, 1767080, 4715530, 3721770, 1651030, 4893030, 3914370, 1723260, 4715800, 3721770, 1651030, 4893030, 3745080, 1622700, 4884780, 3914370, 1723260, 4715800, 3914370, 1723260, 4715800, 3745080, 1622700, 4884780, 3924340, 1677290, 4724030, 3745080, 1622700, 4884780, 3863400, 1622150, 4792560, 3924340, 1677290, 4724030, 3924340, 1677290, 4724030, 3863400, 1622150, 4792560, 3953180, 1654500, 4708100, 3863400, 1622150, 4792560, 3934750, 1641170, 4728040, 3953180, 1654500, 4708100, 3934750, 1641170, 4728040, 3892960, 1595090, 4777800, 3929540, 1594470, 4748170, 3934750, 1641170, 4728040, 3865030, 1605540, 4796810, 3892960, 1595090, 4777800, 3863400, 1622150, 4792560, 3865030, 1605540, 4796810, 3934750, 1641170, 4728040, 3813290, 2203800, 4597850, 3800210, 2186010, 4617e3, 3813350, 2187310, 4605620, 3446450, 2002450, 4962550, 3800210, 2186010, 4617e3, 3813290, 2203800, 4597850, 3826750, 2243130, 4567750, 3446450, 2002450, 4962550, 3813290, 2203800, 4597850, 3439690, 2030590, 4955840, 3446450, 2002450, 4962550, 3826750, 2243130, 4567750, 3774110, 2245240, 4610030, 3439690, 2030590, 4955840, 3826750, 2243130, 4567750, 3774110, 2245240, 4610030, 3399660, 2012110, 4990640, 3439690, 2030590, 4955840, 3372290, 2020470, 5005710, 3399660, 2012110, 4990640, 3774110, 2245240, 4610030, 3704250, 2433110, 4571470, 3337220, 2068030, 5009760, 3751650, 2321060, 4590910, 3704250, 2433110, 4571470, 3326670, 2091630, 5007e3, 3337220, 2068030, 5009760, 3704250, 2433110, 4571470, 3300540, 2095560, 5022520, 3326670, 2091630, 5007e3, 3728840, 2300760, 4619430, 3372290, 2020470, 5005710, 3774110, 2245240, 4610030, 3337220, 2068030, 5009760, 3372290, 2020470, 5005710, 3728840, 2300760, 4619430, 3337220, 2068030, 5009760, 3728840, 2300760, 4619430, 3751650, 2321060, 4590910, 3826750, 2243130, 4567750, 3813290, 2203800, 4597850, 3828590, 2189110, 4592190, 3826750, 2243130, 4567750, 3828590, 2189110, 4592190, 3907800, 2220240, 4510340, 3828590, 2189110, 4592190, 3848850, 2148470, 4594430, 3907800, 2220240, 4510340, 3907800, 2220240, 4510340, 3848850, 2148470, 4594430, 3913400, 2182620, 4523730, 3848850, 2148470, 4594430, 3842790, 2136420, 4605030, 3913400, 2182620, 4523730, 3913400, 2182620, 4523730, 3842790, 2136420, 4605030, 3866180, 2137210, 4585180, 3842790, 2136420, 4605030, 3856200, 2125490, 4598930, 3866180, 2137210, 4585180, 3942340, 2156560, 4511170, 3929250, 2132100, 4534010, 3946160, 2118900, 4525560, 3942340, 2156560, 4511170, 3898750, 2130970, 4560610, 3929250, 2132100, 4534010, 3866180, 2137210, 4585180, 3898750, 2130970, 4560610, 3942340, 2156560, 4511170, 3913400, 2182620, 4523730, 3866180, 2137210, 4585180, 3942340, 2156560, 4511170, 3762830, 2495e3, 4490080, 3770030, 2413890, 4527960, 3790260, 2410400, 4513010, 3707150, 2461920, 4553770, 3770030, 2413890, 4527960, 3762830, 2495e3, 4490080, 3446450, 2002450, 4962550, 3795550, 2152640, 4636350, 3800210, 2186010, 4617e3, 3446450, 2002450, 4962550, 3771300, 2126330, 4667960, 3795550, 2152640, 4636350, 3446450, 2002450, 4962550, 3481190, 1949950, 4959220, 3771300, 2126330, 4667960, 3771300, 2126330, 4667960, 3481190, 1949950, 4959220, 3746060, 2086970, 4705630, 3481190, 1949950, 4959220, 3472270, 1924140, 4975420, 3746060, 2086970, 4705630, 3746060, 2086970, 4705630, 3472270, 1924140, 4975420, 3742900, 2046710, 4725650, 3472270, 1924140, 4975420, 3498120, 1908630, 4963350, 3742900, 2046710, 4725650, 3742900, 2046710, 4725650, 3498120, 1908630, 4963350, 3754770, 2018310, 4728440, 3498120, 1908630, 4963350, 3499490, 1879680, 4973360, 3754770, 2018310, 4728440, 3754770, 2018310, 4728440, 3499490, 1879680, 4973360, 3757480, 1957890, 4751470, 3499490, 1879680, 4973360, 3523440, 1830600, 4974750, 3757480, 1957890, 4751470, 3757480, 1957890, 4751470, 3523440, 1830600, 4974750, 3787280, 1917890, 4744170, 3523440, 1830600, 4974750, 3806170, 1907590, 4733260, 3787280, 1917890, 4744170, 3523440, 1830600, 4974750, 3539640, 1752320, 4991290, 3806170, 1907590, 4733260, 3806170, 1907590, 4733260, 3539640, 1752320, 4991290, 3820100, 1879510, 4733280, 3539640, 1752320, 4991290, 3845720, 1871190, 4715920, 3820100, 1879510, 4733280, 3539640, 1752320, 4991290, 3563790, 1686710, 4996680, 3845720, 1871190, 4715920, 3898960, 1807050, 4697300, 3588030, 1639180, 4995160, 3895120, 1767080, 4715530, 3563790, 1686710, 4996680, 3588030, 1639180, 4995160, 3898960, 1807050, 4697300, 3563790, 1686710, 4996680, 3898960, 1807050, 4697300, 3876670, 1824860, 4708770, 3845720, 1871190, 4715920, 3563790, 1686710, 4996680, 3876670, 1824860, 4708770, 3696660, 1648180, 4912850, 3625190, 1614420, 4976480, 3641640, 1585480, 4973790, 3771300, 2126330, 4667960, 3746060, 2086970, 4705630, 3773030, 2095810, 4680260, 3745080, 1622700, 4884780, 3835690, 1590240, 4825180, 3863400, 1622150, 4792560, 3295270, 2339920, 4917680, 3279040, 2297900, 4948050, 3309970, 2348460, 4903810, 3657510, 2562990, 4538230, 3307230, 2249680, 4951420, 3288140, 2229750, 4972960, 3111140, -4251830, -3582850, 3155480, -4435680, -3312770, 3006570, -4283620, -3633560, 3196850, -4366020, -3364870, 3155480, -4435680, -3312770, 3111140, -4251830, -3582850, 3166390, -4302730, -3472730, 3196850, -4366020, -3364870, 3111140, -4251830, -3582850, 3166470, -4259570, -3525120, 3166390, -4302730, -3472730, 3111140, -4251830, -3582850, 3155480, -4435680, -3312770, 3096080, -4521960, -3252e3, 3006570, -4283620, -3633560, 3006570, -4283620, -3633560, 3096080, -4521960, -3252e3, 2958280, -4332470, -3615360, 3096080, -4521960, -3252e3, 3065750, -4540580, -3254780, 2958280, -4332470, -3615360, 2958280, -4332470, -3615360, 3065750, -4540580, -3254780, 2913450, -4354580, -3625120, 3065750, -4540580, -3254780, 3009530, -4630020, -3180900, 2913450, -4354580, -3625120, 2913450, -4354580, -3625120, 3009530, -4630020, -3180900, 2857510, -4423760, -3585940, 3009530, -4630020, -3180900, 2953700, -4658800, -3191120, 2857510, -4423760, -3585940, 2857510, -4423760, -3585940, 2953700, -4658800, -3191120, 2803880, -4455570, -3588860, 2953700, -4658800, -3191120, 2909330, -4633370, -3267470, 2803880, -4455570, -3588860, 2803880, -4455570, -3588860, 2909330, -4633370, -3267470, 2825630, -4545320, -3457730, 2909330, -4633370, -3267470, 2856210, -4596280, -3364620, 2825630, -4545320, -3457730, 2803880, -4455570, -3588860, 2801310, -4544500, -3478400, 2774400, -4514500, -3538120, 2803880, -4455570, -3588860, 2825630, -4545320, -3457730, 2801310, -4544500, -3478400, 3216550, -4301160, -3428590, 3196850, -4366020, -3364870, 3166390, -4302730, -3472730, -5469510, -2524720, 2088420, -5444220, -2512700, 2166970, -5448970, -2494500, 2176e3, -5441630, -2530310, 2153030, -5444220, -2512700, 2166970, -5469510, -2524720, 2088420, -5445060, -2558660, 2110730, -5441630, -2530310, 2153030, -5469510, -2524720, 2088420, -5442140, -2560060, 2116510, -5441630, -2530310, 2153030, -5445060, -2558660, 2110730, -5471850, -2453410, 2165340, -5462240, -2447840, 2195470, -5467980, -2443770, 2185790, -5459640, -2455380, 2193550, -5462240, -2447840, 2195470, -5471850, -2453410, 2165340, -5500530, -2484970, 2054580, -5459640, -2455380, 2193550, -5471850, -2453410, 2165340, -5448970, -2494500, 2176e3, -5459640, -2455380, 2193550, -5500530, -2484970, 2054580, -5448970, -2494500, 2176e3, -5500530, -2484970, 2054580, -5488690, -2496480, 2072090, -5469510, -2524720, 2088420, -5448970, -2494500, 2176e3, -5488690, -2496480, 2072090, -5496030, -2457570, 2098780, -5484890, -2439280, 2148360, -5490780, -2436280, 2136760, -5471850, -2453410, 2165340, -5484890, -2439280, 2148360, -5496030, -2457570, 2098780, -5500530, -2484970, 2054580, -5471850, -2453410, 2165340, -5496030, -2457570, 2098780, -5500530, -2484970, 2054580, -5496030, -2457570, 2098780, -5506570, -2458940, 2069570, -5450390, -2427120, 2246980, -5455860, -2399840, 2262860, -5458190, -2421130, 2234550, -5458190, -2421130, 2234550, -5455860, -2399840, 2262860, -5474810, -2390290, 2227140, -5455860, -2399840, 2262860, -5474450, -2370480, 2248950, -5474810, -2390290, 2227140, -5455860, -2399840, 2262860, -5467210, -2364400, 2272690, -5474450, -2370480, 2248950, -5467210, -2364400, 2272690, -5474360, -2356390, 2263830, -5476260, -2358220, 2257360, -5474450, -2370480, 2248950, -5467210, -2364400, 2272690, -5476260, -2358220, 2257360, -5472390, -2346710, 2278490, -5485540, -2300280, 2294080, -5493030, -2294970, 2281500, -5467160, -2347970, 2289660, -5485540, -2300280, 2294080, -5472390, -2346710, 2278490, -5504400, -2248660, 2300030, -5497460, -2218330, 2345330, -5516640, -2214660, 2303650, -5504400, -2248660, 2300030, -5496670, -2227280, 2338710, -5497460, -2218330, 2345330, -5497770, -2260070, 2304660, -5496670, -2227280, 2338710, -5504400, -2248660, 2300030, -5497770, -2260070, 2304660, -5504400, -2248660, 2300030, -5502050, -2255770, 2298700, -5497460, -2218330, 2345330, -5513e3, -2194670, 2331140, -5513020, -2199020, 2327030, -5497460, -2218330, 2345330, -5513020, -2199020, 2327030, -5516640, -2214660, 2303650, -5545040, -2077180, 2362400, -5545360, -2045900, 2388590, -5550070, -2041920, 2381120, -5545040, -2077180, 2362400, -5536040, -2059280, 2398640, -5545360, -2045900, 2388590, -5528560, -2081800, 2396460, -5536040, -2059280, 2398640, -5545040, -2077180, 2362400, -5536880, -2087240, 2372560, -5528560, -2081800, 2396460, -5545040, -2077180, 2362400, -2953180, -1486070, 5436160, -2930170, -1427930, 5463930, -3038700, -1466870, 5394360, -1880790, -921391, 6004280, -2911320, -1407760, 5479110, -2905540, -1416120, 5480030, -2911320, -1407760, 5479110, -3038700, -1466870, 5394360, -2930170, -1427930, 5463930, -2911320, -1407760, 5479110, -2930170, -1427930, 5463930, -2905540, -1416120, 5480030, -1880790, -921391, 6004280, -2905540, -1416120, 5480030, -2882450, -1448900, 5483620, -1880790, -921391, 6004280, -2882450, -1448900, 5483620, -2832590, -1469650, 5503910, -2882450, -1448900, 5483620, -2905540, -1416120, 5480030, -2930170, -1427930, 5463930, -1880860, -988730, 5993600, -1880790, -921391, 6004280, -2832590, -1469650, 5503910, -2758030, -1472900, 5540540, -1880860, -988730, 5993600, -2832590, -1469650, 5503910, -1869390, -1047340, 5987280, -1880860, -988730, 5993600, -2758030, -1472900, 5540540, -2677250, -1507260, 5570640, -1869390, -1047340, 5987280, -2758030, -1472900, 5540540, -1841370, -1075150, 5991010, -1869390, -1047340, 5987280, -2677250, -1507260, 5570640, -1841370, -1075150, 5991010, -2677250, -1507260, 5570640, -2691280, -1532160, 5557160, -1841370, -1075150, 5991010, -2691280, -1532160, 5557160, -2764180, -1604210, 5501130, -1841370, -1075150, 5991010, -2764180, -1604210, 5501130, -2759090, -1610470, 5501860, -2759090, -1610470, 5501860, -2764180, -1604210, 5501130, -2785640, -1625970, 5484010, -2764180, -1604210, 5501130, -2691280, -1532160, 5557160, -2787e3, -1575780, 5497860, -2787e3, -1575780, 5497860, -2838520, -1598900, 5464950, -2785640, -1625970, 5484010, -2787e3, -1575780, 5497860, -2785640, -1625970, 5484010, -2764180, -1604210, 5501130, -2691280, -1532160, 5557160, -2745550, -1496300, 5540470, -2801520, -1557320, 5495750, -2691280, -1532160, 5557160, -2801520, -1557320, 5495750, -2787e3, -1575780, 5497860, -2787e3, -1575780, 5497860, -2801520, -1557320, 5495750, -2838520, -1598900, 5464950, -2801520, -1557320, 5495750, -2745550, -1496300, 5540470, -2823970, -1528190, 5492460, -2823970, -1528190, 5492460, -2886820, -1553350, 5452860, -2838520, -1598900, 5464950, -2823970, -1528190, 5492460, -2838520, -1598900, 5464950, -2801520, -1557320, 5495750, -2745550, -1496300, 5540470, -2832140, -1517430, 5491250, -2823970, -1528190, 5492460, -2832140, -1517430, 5491250, -2840840, -1519480, 5486220, -2886820, -1553350, 5452860, -2832140, -1517430, 5491250, -2886820, -1553350, 5452860, -2823970, -1528190, 5492460, -1796830, -1226180, 5975610, -2611470, -1766370, 5525850, -2608140, -1782220, 5522360, -1796830, -1226180, 5975610, -2608140, -1782220, 5522360, -2545860, -1846150, 5530360, -2585230, -1881110, 5500430, -2545860, -1846150, 5530360, -2608140, -1782220, 5522360, -1796830, -1226180, 5975610, -2612770, -1689370, 5549100, -2611470, -1766370, 5525850, -1796830, -1226180, 5975610, -1828640, -1159910, 5979160, -2612770, -1689370, 5549100, -2612770, -1689370, 5549100, -1828640, -1159910, 5979160, -2662510, -1649280, 5537590, -1828640, -1159910, 5979160, -2716610, -1661420, 5507800, -2713580, -1664970, 5508220, -1828640, -1159910, 5979160, -2713580, -1664970, 5508220, -2662510, -1649280, 5537590, -2713580, -1664970, 5508220, -2716610, -1661420, 5507800, -2735110, -1671420, 5495690, -2699210, -1681680, 5510190, -2662510, -1649280, 5537590, -2713580, -1664970, 5508220, -2713580, -1664970, 5508220, -2735110, -1671420, 5495690, -2713610, -1694460, 5499270, -2713580, -1664970, 5508220, -2713610, -1694460, 5499270, -2699210, -1681680, 5510190, -611830, -4788280, 4154800, -691177, -5366190, 3366080, -674044, -5367390, 3367630, -611830, -4788280, 4154800, -674044, -5367390, 3367630, -604575, -4789200, 4154800, -691177, -5366190, 3366080, -727025, -5620820, 2915670, -701584, -5600770, 2959860, -691177, -5366190, 3366080, -701584, -5600770, 2959860, -674044, -5367390, 3367630, -533311, -4206060, 4749030, -527528, -4159050, 4790610, -533764, -4206050, 4748990, -533764, -4206050, 4748990, -611830, -4788280, 4154800, -604575, -4789200, 4154800, -533764, -4206050, 4748990, -604575, -4789200, 4154800, -533311, -4206060, 4749030, -611997, -4788260, 4154800, -691573, -5366170, 3366040, -691177, -5366190, 3366080, -611997, -4788260, 4154800, -691177, -5366190, 3366080, -611830, -4788280, 4154800, -691573, -5366170, 3366040, -732470, -5655160, 2847570, -727025, -5620820, 2915670, -691573, -5366170, 3366040, -727025, -5620820, 2915670, -691177, -5366190, 3366080, -527528, -4159050, 4790610, -533779, -4206050, 4748990, -533764, -4206050, 4748990, -533779, -4206050, 4748990, -611997, -4788260, 4154800, -611830, -4788280, 4154800, -533779, -4206050, 4748990, -611830, -4788280, 4154800, -533764, -4206050, 4748990, -616209, -4787720, 4154800, -701536, -5365440, 3365140, -691573, -5366170, 3366040, -616209, -4787720, 4154800, -691573, -5366170, 3366040, -611997, -4788260, 4154800, -701536, -5365440, 3365140, -752734, -5694540, 2763120, -732470, -5655160, 2847570, -701536, -5365440, 3365140, -732470, -5655160, 2847570, -691573, -5366170, 3366040, -527528, -4159050, 4790610, -534039, -4206040, 4748960, -533779, -4206050, 4748990, -534039, -4206040, 4748960, -616209, -4787720, 4154800, -611997, -4788260, 4154800, -534039, -4206040, 4748960, -611997, -4788260, 4154800, -533779, -4206050, 4748990, -730557, -5679290, 2799950, -732470, -5655160, 2847570, -752734, -5694540, 2763120, -713775, -5698090, 2766110, -730557, -5679290, 2799950, -752734, -5694540, 2763120, 922638, -5534590, 3022600, 873752, -5504220, 3091340, 936104, -5703960, 2687100, 926909, -5556860, 2980420, 922638, -5534590, 3022600, 936104, -5703960, 2687100, 964865, -5693140, 2699760, 926909, -5556860, 2980420, 936104, -5703960, 2687100, 983034, -5607390, 2866360, 926909, -5556860, 2980420, 964865, -5693140, 2699760, 983034, -5607390, 2866360, 964865, -5693140, 2699760, 984644, -5660180, 2760810, 983034, -5607390, 2866360, 984644, -5660180, 2760810, 985697, -5640820, 2799540, 586399, -4791460, 4154800, 577885, -4792490, 4154800, 649838, -5292660, 3487710, 586399, -4791460, 4154800, 649838, -5292660, 3487710, 653212, -5292040, 3488020, 686484, -5535050, 3083590, 653212, -5292040, 3488020, 649838, -5292660, 3487710, 577568, -4724230, 4231780, 567050, -4714830, 4243600, 577885, -4792490, 4154800, 577568, -4724230, 4231780, 577885, -4792490, 4154800, 586399, -4791460, 4154800, 612975, -4788130, 4154800, 586399, -4791460, 4154800, 653212, -5292040, 3488020, 612975, -4788130, 4154800, 653212, -5292040, 3488020, 663754, -5290080, 3488990, 663754, -5290080, 3488990, 653212, -5292040, 3488020, 686484, -5535050, 3083590, 607051, -4732290, 4218720, 577568, -4724230, 4231780, 586399, -4791460, 4154800, 607051, -4732290, 4218720, 586399, -4791460, 4154800, 612975, -4788130, 4154800, 612975, -4788130, 4154800, 663754, -5290080, 3488990, 680571, -5286920, 3490530, 612975, -4788130, 4154800, 680571, -5286920, 3490530, 614387, -4787950, 4154800, 663754, -5290080, 3488990, 686484, -5535050, 3083590, 717284, -5560780, 3030190, 663754, -5290080, 3488990, 717284, -5560780, 3030190, 680571, -5286920, 3490530, 614387, -4787950, 4154800, 607051, -4732290, 4218720, 612975, -4788130, 4154800, 634120, -4785380, 4154800, 614395, -4787950, 4154800, 680571, -5286920, 3490530, 634120, -4785380, 4154800, 680571, -5286920, 3490530, 689058, -5285300, 3491310, 689058, -5285300, 3491310, 680571, -5286920, 3490530, 717284, -5560780, 3030190, 627760, -4729590, 4218720, 607051, -4732290, 4218720, 614395, -4787950, 4154800, 627760, -4729590, 4218720, 614395, -4787950, 4154800, 634120, -4785380, 4154800, 634120, -4785380, 4154800, 689058, -5285300, 3491310, 711269, -5281e3, 3493360, 634120, -4785380, 4154800, 711269, -5281e3, 3493360, 635999, -4785130, 4154800, 689058, -5285300, 3491310, 717284, -5560780, 3030190, 769691, -5648200, 2851530, 689058, -5285300, 3491310, 769691, -5648200, 2851530, 711269, -5281e3, 3493360, 635999, -4785130, 4154800, 627760, -4729590, 4218720, 634120, -4785380, 4154800, 725287, -4772410, 4154800, 635999, -4785130, 4154800, 711269, -5281e3, 3493360, 725287, -4772410, 4154800, 711269, -5281e3, 3493360, 757689, -5271680, 3497630, 757689, -5271680, 3497630, 711269, -5281e3, 3493360, 769691, -5648200, 2851530, 717500, -4676710, 4262830, 627760, -4729590, 4218720, 635999, -4785130, 4154800, 717500, -4676710, 4262830, 635999, -4785130, 4154800, 725287, -4772410, 4154800, 725287, -4772410, 4154800, 757689, -5271680, 3497630, 786200, -5265740, 3500270, 725287, -4772410, 4154800, 786200, -5265740, 3500270, 729159, -4771820, 4154800, 757689, -5271680, 3497630, 769691, -5648200, 2851530, 827991, -5682620, 2766110, 757689, -5271680, 3497630, 827991, -5682620, 2766110, 786200, -5265740, 3500270, 717500, -4676710, 4262830, 725287, -4772410, 4154800, 729159, -4771820, 4154800, 729159, -4771820, 4154800, 786200, -5265740, 3500270, 792503, -5264420, 3500840, 729159, -4771820, 4154800, 792503, -5264420, 3500840, 730017, -4771690, 4154800, 786200, -5265740, 3500270, 827991, -5682620, 2766110, 811991, -5426940, 3240200, 786200, -5265740, 3500270, 811991, -5426940, 3240200, 792503, -5264420, 3500840, 717500, -4676710, 4262830, 729159, -4771820, 4154800, 730017, -4771690, 4154800, 867330, -5687950, 2743160, 811991, -5426940, 3240200, 827991, -5682620, 2766110, 834605, -5462900, 3173780, 811991, -5426940, 3240200, 867330, -5687950, 2743160, 886204, -5706150, 2699270, 834605, -5462900, 3173780, 867330, -5687950, 2743160, 873752, -5504220, 3091340, 834605, -5462900, 3173780, 886204, -5706150, 2699270, 936104, -5703960, 2687100, 873752, -5504220, 3091340, 886204, -5706150, 2699270, 1193060, -4894730, 3898260, 1129200, -4887230, 3926400, 1236020, -5094790, 3620440, 1211980, -4956200, 3814410, 1193060, -4894730, 3898260, 1236020, -5094790, 3620440, 1280780, -5034790, 3687750, 1211980, -4956200, 3814410, 1236020, -5094790, 3620440, 1280780, -5034790, 3687750, 1237900, -4954540, 3808280, 1211980, -4956200, 3814410, 1280780, -5034790, 3687750, 1252480, -4974550, 3777510, 1237900, -4954540, 3808280, 1236020, -5094790, 3620440, 1129200, -4887230, 3926400, 1147930, -5134530, 3593390, 1086520, -4703340, 4154800, 1147930, -5134530, 3593390, 1129200, -4887230, 3926400, 1086520, -4703340, 4154800, 1129200, -4887230, 3926400, 1093620, -4701700, 4154800, 1054330, -4502230, 4378330, 1086520, -4703340, 4154800, 1093620, -4701700, 4154800, 1093620, -4701700, 4154800, 1129200, -4887230, 3926400, 1159650, -4846180, 3967910, 1093620, -4701700, 4154800, 1159650, -4846180, 3967910, 1113240, -4697090, 4154800, 1113240, -4697090, 4154800, 1054330, -4502230, 4378330, 1093620, -4701700, 4154800, 1124830, -4694320, 4154800, 1113240, -4697090, 4154800, 1159650, -4846180, 3967910, 1072460, -4467110, 4409570, 1054330, -4502230, 4378330, 1113240, -4697090, 4154800, 1072460, -4467110, 4409570, 1113240, -4697090, 4154800, 1124830, -4694320, 4154800, 1124830, -4694320, 4154800, 1159650, -4846180, 3967910, 1168820, -4812940, 4005240, 1124830, -4694320, 4154800, 1168820, -4812940, 4005240, 1134740, -4691940, 4154800, 1134740, -4691940, 4154800, 1072460, -4467110, 4409570, 1124830, -4694320, 4154800, 1168820, -4812940, 4005240, 1138440, -4691040, 4154800, 1134740, -4691940, 4154800, 1080790, -4458920, 4415780, 1072460, -4467110, 4409570, 1134740, -4691940, 4154800, 1080790, -4458920, 4415780, 1134740, -4691940, 4154800, 1138440, -4691040, 4154800, 1165380, -4684420, 4154800, 1138440, -4691040, 4154800, 1168820, -4812940, 4005240, 1148640, -4384020, 4472900, 1080790, -4458920, 4415780, 1138440, -4691040, 4154800, 1148640, -4384020, 4472900, 1138440, -4691040, 4154800, 1165380, -4684420, 4154800, 1086520, -4703340, 4154800, 1033580, -4715260, 4154800, 1147930, -5134530, 3593390, 1054330, -4502230, 4378330, 982065, -4518520, 4378360, 1033580, -4715260, 4154800, 1054330, -4502230, 4378330, 1033580, -4715260, 4154800, 1086520, -4703340, 4154800, 1017900, -4718670, 4154800, 1096510, -5183160, 3539590, 1147930, -5134530, 3593390, 1017900, -4718670, 4154800, 1147930, -5134530, 3593390, 1033580, -4715260, 4154800, 1033580, -4715260, 4154800, 982065, -4518520, 4378360, 1017900, -4718670, 4154800, 1006500, -4721110, 4154800, 1052080, -5196410, 3533680, 1096510, -5183160, 3539590, 1006500, -4721110, 4154800, 1096510, -5183160, 3539590, 1017900, -4718670, 4154800, 982065, -4518520, 4378360, 1006500, -4721110, 4154800, 1017900, -4718670, 4154800, 1006500, -4721110, 4154800, 948012, -4733200, 4154800, 1052080, -5196410, 3533680, 982065, -4518520, 4378360, 904510, -4534990, 4378030, 948012, -4733200, 4154800, 982065, -4518520, 4378360, 948012, -4733200, 4154800, 1006500, -4721110, 4154800, 1040010, -5205570, 3523830, 1052080, -5196410, 3533680, 932998, -4736180, 4154800, 1040010, -5205570, 3523830, 932998, -4736180, 4154800, 923994, -4737950, 4154800, 1040010, -5205570, 3523830, 923994, -4737950, 4154800, 1008030, -5213890, 3520840, 1040010, -5205570, 3523830, 1008030, -5213890, 3520840, 1010410, -5227690, 3499770, 932998, -4736180, 4154800, 898281, -4595300, 4316410, 923994, -4737950, 4154800, 1052080, -5196410, 3533680, 934518, -4735890, 4154800, 932998, -4736180, 4154800, 898363, -4587470, 4324660, 898281, -4595300, 4316410, 932998, -4736180, 4154800, 898363, -4587470, 4324660, 932998, -4736180, 4154800, 934518, -4735890, 4154800, 1052080, -5196410, 3533680, 948012, -4733200, 4154800, 934518, -4735890, 4154800, 904510, -4534990, 4378030, 898363, -4587470, 4324660, 934518, -4735890, 4154800, 904510, -4534990, 4378030, 934518, -4735890, 4154800, 948012, -4733200, 4154800, 904510, -4534990, 4378030, 886740, -4566140, 4349390, 898363, -4587470, 4324660, 904510, -4534990, 4378030, 871037, -4553910, 4365250, 886740, -4566140, 4349390, 817036, -4757560, 4154800, 896348, -5241260, 3510460, 989348, -5218650, 3519100, 817036, -4757560, 4154800, 989348, -5218650, 3519100, 831406, -4755070, 4154800, 896348, -5241260, 3510460, 907011, -5306960, 3408200, 1001200, -5250280, 3468680, 896348, -5241260, 3510460, 1001200, -5250280, 3468680, 989348, -5218650, 3519100, 831406, -4755070, 4154800, 799487, -4651480, 4275740, 817036, -4757560, 4154800, 921686, -4738400, 4154800, 831406, -4755070, 4154800, 989348, -5218650, 3519100, 921686, -4738400, 4154800, 989348, -5218650, 3519100, 996261, -5216900, 3519740, 996261, -5216900, 3519740, 989348, -5218650, 3519100, 1001200, -5250280, 3468680, 898281, -4595300, 4316410, 799487, -4651480, 4275740, 831406, -4755070, 4154800, 898281, -4595300, 4316410, 831406, -4755070, 4154800, 921686, -4738400, 4154800, 921686, -4738400, 4154800, 996261, -5216900, 3519740, 1008030, -5213890, 3520840, 921686, -4738400, 4154800, 1008030, -5213890, 3520840, 923994, -4737950, 4154800, 996261, -5216900, 3519740, 1001200, -5250280, 3468680, 1010410, -5227690, 3499770, 996261, -5216900, 3519740, 1010410, -5227690, 3499770, 1008030, -5213890, 3520840, 898281, -4595300, 4316410, 921686, -4738400, 4154800, 923994, -4737950, 4154800, 731433, -4771470, 4154800, 802880, -5262200, 3501800, 839100, -5254300, 3505150, 731433, -4771470, 4154800, 839100, -5254300, 3505150, 736413, -4770710, 4154800, 802880, -5262200, 3501800, 820457, -5384530, 3307660, 859232, -5343460, 3363560, 802880, -5262200, 3501800, 859232, -5343460, 3363560, 839100, -5254300, 3505150, 736413, -4770710, 4154800, 717500, -4676710, 4262830, 731433, -4771470, 4154800, 810468, -4758680, 4154800, 736413, -4770710, 4154800, 839100, -5254300, 3505150, 810468, -4758680, 4154800, 839100, -5254300, 3505150, 853009, -5251190, 3506450, 853009, -5251190, 3506450, 839100, -5254300, 3505150, 859232, -5343460, 3363560, 799487, -4651480, 4275740, 717500, -4676710, 4262830, 736413, -4770710, 4154800, 799487, -4651480, 4275740, 736413, -4770710, 4154800, 810468, -4758680, 4154800, 810468, -4758680, 4154800, 853009, -5251190, 3506450, 896348, -5241260, 3510460, 810468, -4758680, 4154800, 896348, -5241260, 3510460, 817036, -4757560, 4154800, 853009, -5251190, 3506450, 859232, -5343460, 3363560, 907011, -5306960, 3408200, 853009, -5251190, 3506450, 907011, -5306960, 3408200, 896348, -5241260, 3510460, 799487, -4651480, 4275740, 810468, -4758680, 4154800, 817036, -4757560, 4154800, 717284, -5560780, 3030190, 701681, -5597820, 2965360, 718911, -5615950, 2926980, 769691, -5648200, 2851530, 717284, -5560780, 3030190, 718911, -5615950, 2926980, 1290520, -4835440, 3940690, 1282510, -4810490, 3973480, 1258520, -4804010, 3988860, 1290520, -4835440, 3940690, 1258520, -4804010, 3988860, 1270170, -4868400, 3906800, 1258520, -4804010, 3988860, 1231610, -4771940, 4035180, 1270170, -4868400, 3906800, 1270170, -4868400, 3906800, 1231610, -4771940, 4035180, 1242180, -4881150, 3899930, 1204750, -4674450, 4154800, 1242180, -4881150, 3899930, 1231610, -4771940, 4035180, 1204750, -4674450, 4154800, 1231610, -4771940, 4035180, 1210890, -4672870, 4154800, 1148640, -4384020, 4472900, 1204750, -4674450, 4154800, 1210890, -4672870, 4154800, 1178570, -4681120, 4154800, 1192390, -4866590, 3933300, 1242180, -4881150, 3899930, 1178570, -4681120, 4154800, 1242180, -4881150, 3899930, 1204750, -4674450, 4154800, 1148640, -4384020, 4472900, 1178570, -4681120, 4154800, 1204750, -4674450, 4154800, 1165380, -4684420, 4154800, 1168820, -4812940, 4005240, 1192390, -4866590, 3933300, 1165380, -4684420, 4154800, 1192390, -4866590, 3933300, 1178570, -4681120, 4154800, 1148640, -4384020, 4472900, 1165380, -4684420, 4154800, 1178570, -4681120, 4154800, 1242180, -4881150, 3899930, 1226950, -4932490, 3840100, 1235440, -4933120, 3836590, 1270170, -4868400, 3906800, 1242180, -4881150, 3899930, 1235440, -4933120, 3836590, 1645140, -4029380, 4646800, 1605140, -4020150, 4668580, 1709660, -4238480, 4434010, 1645140, -4029380, 4646800, 1709660, -4238480, 4434010, 1686560, -4131e3, 4542240, 1773570, -4171110, 4472370, 1686560, -4131e3, 4542240, 1709660, -4238480, 4434010, 1773570, -4171110, 4472370, 1750980, -4152720, 4498140, 1686560, -4131e3, 4542240, 1642930, -4293410, 4406490, 1531850, -4040510, 4675580, 1498930, -4118280, 4618430, 1562980, -4051600, 4655770, 1531850, -4040510, 4675580, 1642930, -4293410, 4406490, 1709660, -4238480, 4434010, 1562980, -4051600, 4655770, 1642930, -4293410, 4406490, 1709660, -4238480, 4434010, 1605140, -4020150, 4668580, 1562980, -4051600, 4655770, 1586510, -4515200, 4202090, 1550970, -4460040, 4273180, 1548140, -4526990, 4203710, 1550970, -4460040, 4273180, 1456660, -4250890, 4511270, 1548140, -4526990, 4203710, 1538650, -4422110, 4316550, 1456660, -4250890, 4511270, 1550970, -4460040, 4273180, 1484090, -4228420, 4523350, 1456660, -4250890, 4511270, 1538650, -4422110, 4316550, 1546070, -4401470, 4334820, 1484090, -4228420, 4523350, 1538650, -4422110, 4316550, 1498060, -4185070, 4558680, 1484090, -4228420, 4523350, 1546070, -4401470, 4334820, 1571250, -4344380, 4382780, 1498060, -4185070, 4558680, 1546070, -4401470, 4334820, 1498930, -4118280, 4618430, 1498060, -4185070, 4558680, 1571250, -4344380, 4382780, 1642930, -4293410, 4406490, 1498930, -4118280, 4618430, 1571250, -4344380, 4382780, 1343230, -4672820, 4114240, 1318310, -4676480, 4118120, 1339600, -4727250, 4053210, 1305e3, -4647460, 4154800, 1303450, -4647900, 4154800, 1339600, -4727250, 4053210, 1305e3, -4647460, 4154800, 1339600, -4727250, 4053210, 1318310, -4676480, 4118120, 1305e3, -4647460, 4154800, 1179350, -4360890, 4487390, 1303450, -4647900, 4154800, 1316830, -4644120, 4154800, 1305e3, -4647460, 4154800, 1318310, -4676480, 4118120, 1294400, -4327570, 4487930, 1179350, -4360890, 4487390, 1305e3, -4647460, 4154800, 1294400, -4327570, 4487930, 1305e3, -4647460, 4154800, 1316830, -4644120, 4154800, 1316830, -4644120, 4154800, 1318310, -4676480, 4118120, 1337600, -4650150, 4141500, 1316830, -4644120, 4154800, 1337600, -4650150, 4141500, 1336240, -4638580, 4154800, 1294400, -4327570, 4487930, 1316830, -4644120, 4154800, 1336240, -4638580, 4154800, 1258050, -4660390, 4154800, 1293570, -4796170, 3987100, 1339600, -4727250, 4053210, 1258050, -4660390, 4154800, 1339600, -4727250, 4053210, 1303450, -4647900, 4154800, 1303450, -4647900, 4154800, 1179350, -4360890, 4487390, 1258050, -4660390, 4154800, 1253690, -4661560, 4154800, 1282680, -4780490, 4009240, 1293570, -4796170, 3987100, 1253690, -4661560, 4154800, 1293570, -4796170, 3987100, 1258050, -4660390, 4154800, 1179350, -4360890, 4487390, 1253690, -4661560, 4154800, 1258050, -4660390, 4154800, 1240920, -4664980, 4154800, 1263410, -4781830, 4013720, 1282680, -4780490, 4009240, 1240920, -4664980, 4154800, 1282680, -4780490, 4009240, 1253690, -4661560, 4154800, 1179350, -4360890, 4487390, 1240920, -4664980, 4154800, 1253690, -4661560, 4154800, 1240920, -4664980, 4154800, 1230210, -4667820, 4154800, 1263410, -4781830, 4013720, 1179350, -4360890, 4487390, 1148640, -4384020, 4472900, 1230210, -4667820, 4154800, 1179350, -4360890, 4487390, 1230210, -4667820, 4154800, 1240920, -4664980, 4154800, 1389320, -4644090, 4131330, 1337600, -4650150, 4141500, 1337640, -4659380, 4131160, 1351630, -4634120, 4154800, 1337600, -4650150, 4141500, 1389320, -4644090, 4131330, 1351630, -4634120, 4154800, 1389320, -4644090, 4131330, 1356190, -4632780, 4154800, 1356190, -4632780, 4154800, 1353580, -4631880, 4156650, 1351630, -4634120, 4154800, 1434230, -4609220, 4154800, 1356190, -4632780, 4154800, 1389320, -4644090, 4131330, 1467660, -4582590, 4172430, 1353580, -4631880, 4156650, 1356190, -4632780, 4154800, 1467660, -4582590, 4172430, 1356190, -4632780, 4154800, 1434230, -4609220, 4154800, 1488280, -4592060, 4154800, 1434230, -4609220, 4154800, 1389320, -4644090, 4131330, 1467660, -4582590, 4172430, 1434230, -4609220, 4154800, 1488280, -4592060, 4154800, 1467660, -4582590, 4172430, 1488280, -4592060, 4154800, 1495620, -4588070, 4156550, 1634490, -4462840, 4239230, 1605500, -4455790, 4257560, 1622900, -4478320, 4227410, 1634490, -4462840, 4239230, 1622900, -4478320, 4227410, 1635500, -4484970, 4215570, 1635500, -4484970, 4215570, 1622900, -4478320, 4227410, 1589800, -4488220, 4229480, 1635500, -4484970, 4215570, 1589800, -4488220, 4229480, 1586510, -4515200, 4202090, 1589800, -4488220, 4229480, 1550970, -4460040, 4273180, 1586510, -4515200, 4202090, 1548140, -4526990, 4203710, 1432870, -4283650, 4487990, 1493560, -4558770, 4189180, 1548140, -4526990, 4203710, 1434150, -4262720, 4507340, 1432870, -4283650, 4487990, 1456660, -4250890, 4511270, 1434150, -4262720, 4507340, 1548140, -4526990, 4203710, 1432870, -4283650, 4487990, 1460020, -4573470, 4185010, 1493560, -4558770, 4189180, 1432870, -4283650, 4487990, 1414600, -4591510, 4180880, 1460020, -4573470, 4185010, 1432870, -4283650, 4487990, 1294400, -4327570, 4487930, 1414600, -4591510, 4180880, 1414600, -4591510, 4180880, 1294400, -4327570, 4487930, 1353580, -4631880, 4156650, 1351630, -4634120, 4154800, 1336240, -4638580, 4154800, 1337600, -4650150, 4141500, 1294400, -4327570, 4487930, 1336240, -4638580, 4154800, 1351630, -4634120, 4154800, 1294400, -4327570, 4487930, 1351630, -4634120, 4154800, 1353580, -4631880, 4156650, -71551.4, -4826680, 4154800, -81716.6, -5375010, 3421160, -26348.3, -5372360, 3426170, -71551.4, -4826680, 4154800, -26348.3, -5372360, 3426170, -48055.7, -4826970, 4154800, -81716.6, -5375010, 3421160, -85640, -5574180, 3088290, -15047.4, -5576500, 3085280, -81716.6, -5375010, 3421160, -15047.4, -5576500, 3085280, -26348.3, -5372360, 3426170, -48055.7, -4826970, 4154800, -61613.3, -4252910, 4736910, -71551.4, -4826680, 4154800, 16133.6, -4827180, 4154800, -48055.7, -4826970, 4154800, -26348.3, -5372360, 3426170, 16133.6, -4827180, 4154800, -26348.3, -5372360, 3426170, -4574.73, -5371150, 3428140, -4574.73, -5371150, 3428140, -26348.3, -5372360, 3426170, -15047.4, -5576500, 3085280, 29844.1, -4274790, 4717620, -61613.3, -4252910, 4736910, -48055.7, -4826970, 4154800, 29844.1, -4274790, 4717620, -48055.7, -4826970, 4154800, 16133.6, -4827180, 4154800, 16133.6, -4827180, 4154800, -4574.73, -5371150, 3428140, 23775.4, -5369450, 3430700, 16133.6, -4827180, 4154800, 23775.4, -5369450, 3430700, 27962.6, -4827130, 4154800, -4574.73, -5371150, 3428140, -15047.4, -5576500, 3085280, 21440.9, -5566220, 3103630, -4574.73, -5371150, 3428140, 21440.9, -5566220, 3103630, 23775.4, -5369450, 3430700, 29844.1, -4274790, 4717620, 16133.6, -4827180, 4154800, 27962.6, -4827130, 4154800, 27962.6, -4827130, 4154800, 23775.4, -5369450, 3430700, 37976.2, -5368540, 3431990, 27962.6, -4827130, 4154800, 37976.2, -5368540, 3431990, 33910.1, -4827090, 4154800, 23775.4, -5369450, 3430700, 21440.9, -5566220, 3103630, 39128.8, -5519230, 3185720, 23775.4, -5369450, 3430700, 39128.8, -5519230, 3185720, 37976.2, -5368540, 3431990, 33910.1, -4827090, 4154800, 29844.1, -4274790, 4717620, 27962.6, -4827130, 4154800, 57574, -5573940, 3089360, 39128.8, -5519230, 3185720, 21440.9, -5566220, 3103630, 57574, -5573940, 3089360, 55275.8, -5556110, 3121160, 39128.8, -5519230, 3185720, 76009.6, -5566610, 3102080, 55275.8, -5556110, 3121160, 57574, -5573940, 3089360, -347848, -4814660, 4154800, -362929, -4813540, 4154800, -372237, -5379500, 3394910, -347848, -4814660, 4154800, -372237, -5379500, 3394910, -368231, -5379540, 3395280, -372099, -5531560, 3142840, -368231, -5379540, 3395280, -372237, -5379500, 3394910, -321480, -4205830, 4768130, -340231, -4192060, 4778870, -340862, -4206300, 4766380, -362929, -4813540, 4154800, -347848, -4814660, 4154800, -318548, -4207960, 4766450, -362929, -4813540, 4154800, -318548, -4207960, 4766450, -321480, -4205830, 4768130, -362929, -4813540, 4154800, -321480, -4205830, 4768130, -340862, -4206300, 4766380, -313150, -4817040, 4154800, -347848, -4814660, 4154800, -368231, -5379540, 3395280, -313150, -4817040, 4154800, -368231, -5379540, 3395280, -358985, -5379630, 3396110, -358985, -5379630, 3396110, -368231, -5379540, 3395280, -372099, -5531560, 3142840, -267572, -4216650, 4761940, -318548, -4207960, 4766450, -347848, -4814660, 4154800, -267572, -4216650, 4761940, -347848, -4814660, 4154800, -313150, -4817040, 4154800, -313150, -4817040, 4154800, -358985, -5379630, 3396110, -308619, -5379860, 3400660, -313150, -4817040, 4154800, -308619, -5379860, 3400660, -291785, -4818380, 4154800, -358985, -5379630, 3396110, -372099, -5531560, 3142840, -311812, -5531420, 3149600, -358985, -5379630, 3396110, -311812, -5531420, 3149600, -308619, -5379860, 3400660, -291785, -4818380, 4154800, -267572, -4216650, 4761940, -313150, -4817040, 4154800, -240773, -4821200, 4154800, -291785, -4818380, 4154800, -308619, -5379860, 3400660, -240773, -4821200, 4154800, -308619, -5379860, 3400660, -294998, -5379850, 3401890, -294998, -5379850, 3401890, -308619, -5379860, 3400660, -311812, -5531420, 3149600, -193006, -4234e3, 4750210, -267572, -4216650, 4761940, -291785, -4818380, 4154800, -193006, -4234e3, 4750210, -291785, -4818380, 4154800, -240773, -4821200, 4154800, -240773, -4821200, 4154800, -294998, -5379850, 3401890, -236412, -5379370, 3407180, -240773, -4821200, 4154800, -236412, -5379370, 3407180, -216090, -4822370, 4154800, -294998, -5379850, 3401890, -311812, -5531420, 3149600, -242127, -5547620, 3127300, -294998, -5379850, 3401890, -242127, -5547620, 3127300, -236412, -5379370, 3407180, -216090, -4822370, 4154800, -193006, -4234e3, 4750210, -240773, -4821200, 4154800, -166295, -4824340, 4154800, -216090, -4822370, 4154800, -236412, -5379370, 3407180, -166295, -4824340, 4154800, -236412, -5379370, 3407180, -221908, -5379150, 3408490, -221908, -5379150, 3408490, -236412, -5379370, 3407180, -242127, -5547620, 3127300, -122038, -4262390, 4727280, -193006, -4234e3, 4750210, -216090, -4822370, 4154800, -122038, -4262390, 4727280, -216090, -4822370, 4154800, -166295, -4824340, 4154800, -166295, -4824340, 4154800, -221908, -5379150, 3408490, -152924, -5377570, 3414730, -166295, -4824340, 4154800, -152924, -5377570, 3414730, -137715, -4825240, 4154800, -221908, -5379150, 3408490, -242127, -5547620, 3127300, -157449, -5543840, 3139320, -221908, -5379150, 3408490, -157449, -5543840, 3139320, -152924, -5377570, 3414730, -137715, -4825240, 4154800, -122038, -4262390, 4727280, -166295, -4824340, 4154800, -96494.6, -4826240, 4154800, -137715, -4825240, 4154800, -152924, -5377570, 3414730, -96494.6, -4826240, 4154800, -152924, -5377570, 3414730, -140986, -5377210, 3415800, -140986, -5377210, 3415800, -152924, -5377570, 3414730, -157449, -5543840, 3139320, -61613.3, -4252910, 4736910, -122038, -4262390, 4727280, -137715, -4825240, 4154800, -61613.3, -4252910, 4736910, -137715, -4825240, 4154800, -96494.6, -4826240, 4154800, -96494.6, -4826240, 4154800, -140986, -5377210, 3415800, -81716.6, -5375010, 3421160, -96494.6, -4826240, 4154800, -81716.6, -5375010, 3421160, -71551.4, -4826680, 4154800, -140986, -5377210, 3415800, -157449, -5543840, 3139320, -85640, -5574180, 3088290, -140986, -5377210, 3415800, -85640, -5574180, 3088290, -81716.6, -5375010, 3421160, -61613.3, -4252910, 4736910, -96494.6, -4826240, 4154800, -71551.4, -4826680, 4154800, -448853, -4806290, 4154800, -519923, -5375700, 3381570, -447602, -5378070, 3388110, -448853, -4806290, 4154800, -447602, -5378070, 3388110, -417748, -4809100, 4154800, -519923, -5375700, 3381570, -546184, -5570110, 3048530, -454354, -5538240, 3120320, -519923, -5375700, 3381570, -454354, -5538240, 3120320, -447602, -5378070, 3388110, -379162, -4206960, 4762930, -376991, -4175450, 4790560, -380443, -4206970, 4762820, -380444, -4206980, 4762810, -448853, -4806290, 4154800, -417748, -4809100, 4154800, -380444, -4206980, 4762810, -417748, -4809100, 4154800, -379162, -4206960, 4762930, -417161, -4809150, 4154800, -417748, -4809100, 4154800, -447602, -5378070, 3388110, -417161, -4809150, 4154800, -447602, -5378070, 3388110, -447441, -5378080, 3388120, -454354, -5538240, 3120320, -447441, -5378080, 3388120, -447602, -5378070, 3388110, -373865, -4143250, 4818490, -376991, -4175450, 4790560, -379162, -4206960, 4762930, -373865, -4143250, 4818490, -379162, -4206960, 4762930, -378295, -4206940, 4763010, -378295, -4206940, 4763010, -379162, -4206960, 4762930, -417748, -4809100, 4154800, -378295, -4206940, 4763010, -417748, -4809100, 4154800, -417161, -4809150, 4154800, -400841, -4810540, 4154800, -417161, -4809150, 4154800, -447441, -5378080, 3388120, -400841, -4810540, 4154800, -447441, -5378080, 3388120, -442933, -5378190, 3388530, -454354, -5538240, 3120320, -442933, -5378190, 3388530, -447441, -5378080, 3388120, -349347, -4144990, 4818830, -373865, -4143250, 4818490, -378295, -4206940, 4763010, -349347, -4144990, 4818830, -378295, -4206940, 4763010, -354189, -4206560, 4765180, -354189, -4206560, 4765180, -378295, -4206940, 4763010, -417161, -4809150, 4154800, -354189, -4206560, 4765180, -417161, -4809150, 4154800, -400841, -4810540, 4154800, -392218, -4811250, 4154800, -400841, -4810540, 4154800, -442933, -5378190, 3388530, -392218, -4811250, 4154800, -442933, -5378190, 3388530, -440538, -5378250, 3388750, -440538, -5378250, 3388750, -442933, -5378190, 3388530, -454354, -5538240, 3120320, -340231, -4192060, 4778870, -349347, -4144990, 4818830, -354189, -4206560, 4765180, -340231, -4192060, 4778870, -354189, -4206560, 4765180, -341418, -4206310, 4766330, -341418, -4206310, 4766330, -354189, -4206560, 4765180, -400841, -4810540, 4154800, -341418, -4206310, 4766330, -400841, -4810540, 4154800, -392218, -4811250, 4154800, -392218, -4811250, 4154800, -440538, -5378250, 3388750, -372237, -5379500, 3394910, -392218, -4811250, 4154800, -372237, -5379500, 3394910, -362929, -4813540, 4154800, -440538, -5378250, 3388750, -454354, -5538240, 3120320, -372099, -5531560, 3142840, -440538, -5378250, 3388750, -372099, -5531560, 3142840, -372237, -5379500, 3394910, -340862, -4206300, 4766380, -340231, -4192060, 4778870, -341418, -4206310, 4766330, -341418, -4206310, 4766330, -392218, -4811250, 4154800, -362929, -4813540, 4154800, -341418, -4206310, 4766330, -362929, -4813540, 4154800, -340862, -4206300, 4766380, -481131, -4803170, 4154800, -595694, -5372180, 3374720, -519923, -5375700, 3381570, -481131, -4803170, 4154800, -519923, -5375700, 3381570, -448853, -4806290, 4154800, -595694, -5372180, 3374720, -645321, -5582470, 3006550, -546184, -5570110, 3048530, -595694, -5372180, 3374720, -546184, -5570110, 3048530, -519923, -5375700, 3381570, -376991, -4175450, 4790560, -381793, -4206990, 4762690, -380443, -4206970, 4762820, -381793, -4206990, 4762690, -481131, -4803170, 4154800, -448853, -4806290, 4154800, -381793, -4206990, 4762690, -448853, -4806290, 4154800, -380444, -4206980, 4762810, -497559, -4801500, 4154800, -634540, -5369950, 3371200, -595694, -5372180, 3374720, -497559, -4801500, 4154800, -595694, -5372180, 3374720, -481131, -4803170, 4154800, -634540, -5369950, 3371200, -701584, -5600770, 2959860, -645321, -5582470, 3006550, -634540, -5369950, 3371200, -645321, -5582470, 3006550, -595694, -5372180, 3374720, -376991, -4175450, 4790560, -382482, -4206990, 4762630, -381793, -4206990, 4762690, -382482, -4206990, 4762630, -497559, -4801500, 4154800, -481131, -4803170, 4154800, -382482, -4206990, 4762630, -481131, -4803170, 4154800, -381793, -4206990, 4762690, -497559, -4801500, 4154800, -604575, -4789200, 4154800, -674044, -5367390, 3367630, -497559, -4801500, 4154800, -674044, -5367390, 3367630, -634540, -5369950, 3371200, -634540, -5369950, 3371200, -674044, -5367390, 3367630, -701584, -5600770, 2959860, -376991, -4175450, 4790560, -527528, -4159050, 4790610, -533311, -4206060, 4749030, -376991, -4175450, 4790560, -533311, -4206060, 4749030, -382482, -4206990, 4762630, -382482, -4206990, 4762630, -533311, -4206060, 4749030, -604575, -4789200, 4154800, -382482, -4206990, 4762630, -604575, -4789200, 4154800, -497559, -4801500, 4154800, -637210, -4784970, 4154800, -751426, -5361540, 3360620, -701536, -5365440, 3365140, -637210, -4784970, 4154800, -701536, -5365440, 3365140, -616209, -4787720, 4154800, -751426, -5361540, 3360620, -821711, -5674220, 2785040, -752734, -5694540, 2763120, -751426, -5361540, 3360620, -752734, -5694540, 2763120, -701536, -5365440, 3365140, -527528, -4159050, 4790610, -535355, -4206010, 4748850, -534039, -4206040, 4748960, -535355, -4206010, 4748850, -637210, -4784970, 4154800, -616209, -4787720, 4154800, -535355, -4206010, 4748850, -616209, -4787720, 4154800, -534039, -4206040, 4748960, -660903, -4781750, 4154800, -808045, -5356540, 3355480, -751426, -5361540, 3360620, -660903, -4781750, 4154800, -751426, -5361540, 3360620, -637210, -4784970, 4154800, -808045, -5356540, 3355480, -896500, -5647520, 2815850, -821711, -5674220, 2785040, -808045, -5356540, 3355480, -821711, -5674220, 2785040, -751426, -5361540, 3360620, -527528, -4159050, 4790610, -536851, -4205980, 4748710, -535355, -4206010, 4748850, -536851, -4205980, 4748710, -660903, -4781750, 4154800, -637210, -4784970, 4154800, -536851, -4205980, 4748710, -637210, -4784970, 4154800, -535355, -4206010, 4748850, -670566, -4780410, 4154800, -831256, -5354320, 3353380, -808045, -5356540, 3355480, -670566, -4780410, 4154800, -808045, -5356540, 3355480, -660903, -4781750, 4154800, -831256, -5354320, 3353380, -920320, -5620060, 2862410, -896500, -5647520, 2815850, -831256, -5354320, 3353380, -896500, -5647520, 2815850, -808045, -5356540, 3355480, -527528, -4159050, 4790610, -537468, -4205960, 4748660, -536851, -4205980, 4748710, -537468, -4205960, 4748660, -670566, -4780410, 4154800, -660903, -4781750, 4154800, -537468, -4205960, 4748660, -660903, -4781750, 4154800, -536851, -4205980, 4748710, -679542, -4779140, 4154800, -852879, -5352150, 3351420, -831256, -5354320, 3353380, -679542, -4779140, 4154800, -831256, -5354320, 3353380, -670566, -4780410, 4154800, -852879, -5352150, 3351420, -936030, -5581530, 2931400, -920320, -5620060, 2862410, -852879, -5352150, 3351420, -920320, -5620060, 2862410, -831256, -5354320, 3353380, -527528, -4159050, 4790610, -538033, -4205940, 4748600, -537468, -4205960, 4748660, -538033, -4205940, 4748600, -679542, -4779140, 4154800, -670566, -4780410, 4154800, -538033, -4205940, 4748600, -670566, -4780410, 4154800, -537468, -4205960, 4748660, -700564, -4776100, 4154800, -903706, -5346720, 3346800, -852879, -5352150, 3351420, -700564, -4776100, 4154800, -852879, -5352150, 3351420, -679542, -4779140, 4154800, -903706, -5346720, 3346800, -988280, -5542570, 2987260, -936030, -5581530, 2931400, -903706, -5346720, 3346800, -936030, -5581530, 2931400, -852879, -5352150, 3351420, -527528, -4159050, 4790610, -539378, -4205900, 4748490, -538033, -4205940, 4748600, -539378, -4205900, 4748490, -700564, -4776100, 4154800, -679542, -4779140, 4154800, -539378, -4205900, 4748490, -679542, -4779140, 4154800, -538033, -4205940, 4748600, -714740, -4774e3, 4154800, -938131, -5342760, 3343670, -903706, -5346720, 3346800, -714740, -4774e3, 4154800, -903706, -5346720, 3346800, -700564, -4776100, 4154800, -938131, -5342760, 3343670, -1016130, -5506110, 3044400, -988280, -5542570, 2987260, -938131, -5342760, 3343670, -988280, -5542570, 2987260, -903706, -5346720, 3346800, -527528, -4159050, 4790610, -540294, -4205890, 4748400, -539378, -4205900, 4748490, -540294, -4205890, 4748400, -714740, -4774e3, 4154800, -700564, -4776100, 4154800, -540294, -4205890, 4748400, -700564, -4776100, 4154800, -539378, -4205900, 4748490, -714740, -4774e3, 4154800, -885735, -4745250, 4154800, -987648, -5336670, 3339160, -714740, -4774e3, 4154800, -987648, -5336670, 3339160, -938131, -5342760, 3343670, -938131, -5342760, 3343670, -987648, -5336670, 3339160, -1016130, -5506110, 3044400, -527528, -4159050, 4790610, -774800, -4120220, 4790560, -787718, -4192140, 4726050, -527528, -4159050, 4790610, -787718, -4192140, 4726050, -540294, -4205890, 4748400, -540294, -4205890, 4748400, -787718, -4192140, 4726050, -885735, -4745250, 4154800, -540294, -4205890, 4748400, -885735, -4745250, 4154800, -714740, -4774e3, 4154800, -902625, -4742070, 4154800, -1028670, -5331270, 3335430, -987648, -5336670, 3339160, -902625, -4742070, 4154800, -987648, -5336670, 3339160, -885735, -4745250, 4154800, -1028670, -5331270, 3335430, -1057330, -5460840, 3110740, -1016130, -5506110, 3044400, -1028670, -5331270, 3335430, -1016130, -5506110, 3044400, -987648, -5336670, 3339160, -787718, -4192140, 4726050, -774800, -4120220, 4790560, -789359, -4192e3, 4725910, -789359, -4192e3, 4725910, -902625, -4742070, 4154800, -885735, -4745250, 4154800, -789359, -4192e3, 4725910, -885735, -4745250, 4154800, -787718, -4192140, 4726050, -927359, -4737290, 4154800, -1088930, -5322760, 3329920, -1028670, -5331270, 3335430, -927359, -4737290, 4154800, -1028670, -5331270, 3335430, -902625, -4742070, 4154800, -1088930, -5322760, 3329920, -1119930, -5426080, 3149160, -1057330, -5460840, 3110740, -1088930, -5322760, 3329920, -1057330, -5460840, 3110740, -1028670, -5331270, 3335430, -774800, -4120220, 4790560, -791746, -4191800, 4725680, -789359, -4192e3, 4725910, -791746, -4191800, 4725680, -927359, -4737290, 4154800, -902625, -4742070, 4154800, -791746, -4191800, 4725680, -902625, -4742070, 4154800, -789359, -4192e3, 4725910, -955785, -4731640, 4154800, -1158600, -5312040, 3323560, -1088930, -5322760, 3329920, -955785, -4731640, 4154800, -1088930, -5322760, 3329920, -927359, -4737290, 4154800, -1158600, -5312040, 3323560, -1197510, -5410570, 3147310, -1119930, -5426080, 3149160, -1158600, -5312040, 3323560, -1119930, -5426080, 3149160, -1088930, -5322760, 3329920, -774800, -4120220, 4790560, -794578, -4191550, 4725430, -791746, -4191800, 4725680, -794578, -4191550, 4725430, -955785, -4731640, 4154800, -927359, -4737290, 4154800, -794578, -4191550, 4725430, -927359, -4737290, 4154800, -791746, -4191800, 4725680, -974276, -4727870, 4154800, -1204280, -5304510, 3319370, -1158600, -5312040, 3323560, -974276, -4727870, 4154800, -1158600, -5312040, 3323560, -955785, -4731640, 4154800, -1204280, -5304510, 3319370, -1266670, -5438900, 3070990, -1197510, -5410570, 3147310, -1204280, -5304510, 3319370, -1197510, -5410570, 3147310, -1158600, -5312040, 3323560, -774800, -4120220, 4790560, -796443, -4191390, 4725260, -794578, -4191550, 4725430, -796443, -4191390, 4725260, -974276, -4727870, 4154800, -955785, -4731640, 4154800, -796443, -4191390, 4725260, -955785, -4731640, 4154800, -794578, -4191550, 4725430, -1003550, -4721740, 4154800, -1277160, -5291660, 3312690, -1204280, -5304510, 3319370, -1003550, -4721740, 4154800, -1204280, -5304510, 3319370, -974276, -4727870, 4154800, -1277160, -5291660, 3312690, -1341430, -5404270, 3100040, -1266670, -5438900, 3070990, -1277160, -5291660, 3312690, -1266670, -5438900, 3070990, -1204280, -5304510, 3319370, -774800, -4120220, 4790560, -799425, -4191130, 4724990, -796443, -4191390, 4725260, -799425, -4191130, 4724990, -1003550, -4721740, 4154800, -974276, -4727870, 4154800, -799425, -4191130, 4724990, -974276, -4727870, 4154800, -796443, -4191390, 4725260, -1003550, -4721740, 4154800, -1168130, -4683740, 4154800, -1312990, -5284960, 3309400, -1003550, -4721740, 4154800, -1312990, -5284960, 3309400, -1277160, -5291660, 3312690, -1277160, -5291660, 3312690, -1312990, -5284960, 3309400, -1341430, -5404270, 3100040, -774800, -4120220, 4790560, -1017650, -4067060, 4790550, -1041150, -4162810, 4703040, -774800, -4120220, 4790560, -1041150, -4162810, 4703040, -799425, -4191130, 4724990, -799425, -4191130, 4724990, -1041150, -4162810, 4703040, -1168130, -4683740, 4154800, -799425, -4191130, 4724990, -1168130, -4683740, 4154800, -1003550, -4721740, 4154800, -1185620, -4679340, 4154800, -1356540, -5276480, 3305390, -1312990, -5284960, 3309400, -1185620, -4679340, 4154800, -1312990, -5284960, 3309400, -1168130, -4683740, 4154800, -1356540, -5276480, 3305390, -1386030, -5376030, 3129200, -1341430, -5404270, 3100040, -1356540, -5276480, 3305390, -1341430, -5404270, 3100040, -1312990, -5284960, 3309400, -1041150, -4162810, 4703040, -1017650, -4067060, 4790550, -1043460, -4162480, 4702830, -1043460, -4162480, 4702830, -1185620, -4679340, 4154800, -1168130, -4683740, 4154800, -1043460, -4162480, 4702830, -1168130, -4683740, 4154800, -1041150, -4162810, 4703040, -1194760, -4677020, 4154800, -1379230, -5271910, 3303300, -1356540, -5276480, 3305390, -1194760, -4677020, 4154800, -1356540, -5276480, 3305390, -1185620, -4679340, 4154800, -1379230, -5271910, 3303300, -1401680, -5340620, 3182050, -1386030, -5376030, 3129200, -1379230, -5271910, 3303300, -1386030, -5376030, 3129200, -1356540, -5276480, 3305390, -1017650, -4067060, 4790550, -1044720, -4162280, 4702710, -1043460, -4162480, 4702830, -1044720, -4162280, 4702710, -1194760, -4677020, 4154800, -1185620, -4679340, 4154800, -1044720, -4162280, 4702710, -1185620, -4679340, 4154800, -1043460, -4162480, 4702830, -1207330, -4673790, 4154800, -1410760, -5265390, 3300400, -1379230, -5271910, 3303300, -1207330, -4673790, 4154800, -1379230, -5271910, 3303300, -1194760, -4677020, 4154800, -1410760, -5265390, 3300400, -1424920, -5304150, 3232e3, -1401680, -5340620, 3182050, -1410760, -5265390, 3300400, -1401680, -5340620, 3182050, -1379230, -5271910, 3303300, -1017650, -4067060, 4790550, -1046360, -4162040, 4702560, -1044720, -4162280, 4702710, -1046360, -4162040, 4702560, -1207330, -4673790, 4154800, -1194760, -4677020, 4154800, -1046360, -4162040, 4702560, -1194760, -4677020, 4154800, -1044720, -4162280, 4702710, -1230080, -4667850, 4154800, -1467880, -5253090, 3295120, -1410760, -5265390, 3300400, -1230080, -4667850, 4154800, -1410760, -5265390, 3300400, -1207330, -4673790, 4154800, -1467880, -5253090, 3295120, -1473180, -5264980, 3273850, -1424920, -5304150, 3232e3, -1467880, -5253090, 3295120, -1424920, -5304150, 3232e3, -1410760, -5265390, 3300400, -1017650, -4067060, 4790550, -1049490, -4161580, 4702280, -1046360, -4162040, 4702560, -1049490, -4161580, 4702280, -1230080, -4667850, 4154800, -1207330, -4673790, 4154800, -1049490, -4161580, 4702280, -1207330, -4673790, 4154800, -1046360, -4162040, 4702560, -1250270, -4662480, 4154800, -1515020, -5234170, 3303830, -1498860, -5246150, 3292250, -1250270, -4662480, 4154800, -1498860, -5246150, 3292250, -1467880, -5253090, 3295120, -1250270, -4662480, 4154800, -1467880, -5253090, 3295120, -1230080, -4667850, 4154800, -1467880, -5253090, 3295120, -1498860, -5246150, 3292250, -1473180, -5264980, 3273850, -1017650, -4067060, 4790550, -1052240, -4161170, 4702030, -1049490, -4161580, 4702280, -1052240, -4161170, 4702030, -1250270, -4662480, 4154800, -1230080, -4667850, 4154800, -1052240, -4161170, 4702030, -1230080, -4667850, 4154800, -1049490, -4161580, 4702280, -1265800, -4658290, 4154800, -1542490, -5204670, 3337320, -1515020, -5234170, 3303830, -1265800, -4658290, 4154800, -1515020, -5234170, 3303830, -1250270, -4662480, 4154800, -1017650, -4067060, 4790550, -1054400, -4160850, 4701830, -1052240, -4161170, 4702030, -1054400, -4160850, 4701830, -1265800, -4658290, 4154800, -1250270, -4662480, 4154800, -1054400, -4160850, 4701830, -1250270, -4662480, 4154800, -1052240, -4161170, 4702030, -1265800, -4658290, 4154800, -1394890, -4621280, 4154800, -1542490, -5204670, 3337320, -1017650, -4067060, 4790550, -1229250, -4008170, 4790560, -1261340, -4124620, 4682880, -1017650, -4067060, 4790550, -1261340, -4124620, 4682880, -1054400, -4160850, 4701830, -1054400, -4160850, 4701830, -1261340, -4124620, 4682880, -1394890, -4621280, 4154800, -1054400, -4160850, 4701830, -1394890, -4621280, 4154800, -1265800, -4658290, 4154800, -2141030, -4970220, 3364110, -2246270, -4879020, 3427950, -2259180, -4885940, 3409690, -1952310, -4414790, 4154800, -2246270, -4879020, 3427950, -2141030, -4970220, 3364110, -1952310, -4414790, 4154800, -2141030, -4970220, 3364110, -1897380, -4438680, 4154800, -1638120, -3859160, 4790560, -1718280, -4006330, 4640290, -1705310, -4010450, 4641510, -1718280, -4006330, 4640290, -1952310, -4414790, 4154800, -1897380, -4438680, 4154800, -1718280, -4006330, 4640290, -1897380, -4438680, 4154800, -1705310, -4010450, 4641510, -1897380, -4438680, 4154800, -2141030, -4970220, 3364110, -1956240, -5089800, 3297650, -1897380, -4438680, 4154800, -1956240, -5089800, 3297650, -1815720, -4472700, 4154800, -1686500, -4016330, 4643290, -1638120, -3859160, 4790560, -1705310, -4010450, 4641510, -1705310, -4010450, 4641510, -1897380, -4438680, 4154800, -1815720, -4472700, 4154800, -1705310, -4010450, 4641510, -1815720, -4472700, 4154800, -1686500, -4016330, 4643290, -1690210, -4521630, 4154800, -1815720, -4472700, 4154800, -1956240, -5089800, 3297650, -1437340, -3938350, 4790560, -1638120, -3859160, 4790560, -1686500, -4016330, 4643290, -1437340, -3938350, 4790560, -1686500, -4016330, 4643290, -1493560, -4071230, 4661390, -1493560, -4071230, 4661390, -1686500, -4016330, 4643290, -1815720, -4472700, 4154800, -1493560, -4071230, 4661390, -1815720, -4472700, 4154800, -1690210, -4521630, 4154800, -1690210, -4521630, 4154800, -1956240, -5089800, 3297650, -1778270, -5154230, 3298330, -1690210, -4521630, 4154800, -1778270, -5154230, 3298330, -1618100, -4547930, 4154800, -1479210, -4074930, 4662730, -1437340, -3938350, 4790560, -1493560, -4071230, 4661390, -1493560, -4071230, 4661390, -1690210, -4521630, 4154800, -1618100, -4547930, 4154800, -1493560, -4071230, 4661390, -1618100, -4547930, 4154800, -1479210, -4074930, 4662730, -1488480, -4591990, 4154800, -1618100, -4547930, 4154800, -1778270, -5154230, 3298330, -1229250, -4008170, 4790560, -1437340, -3938350, 4790560, -1479210, -4074930, 4662730, -1229250, -4008170, 4790560, -1479210, -4074930, 4662730, -1277060, -4121430, 4681440, -1277060, -4121430, 4681440, -1479210, -4074930, 4662730, -1618100, -4547930, 4154800, -1277060, -4121430, 4681440, -1618100, -4547930, 4154800, -1488480, -4591990, 4154800, -1488480, -4591990, 4154800, -1778270, -5154230, 3298330, -1699080, -5155650, 3337350, -1488480, -4591990, 4154800, -1699080, -5155650, 3337350, -1460250, -4601050, 4154800, -1229250, -4008170, 4790560, -1277060, -4121430, 4681440, -1272240, -4122420, 4681880, -1277060, -4121430, 4681440, -1488480, -4591990, 4154800, -1460250, -4601050, 4154800, -1277060, -4121430, 4681440, -1460250, -4601050, 4154800, -1272240, -4122420, 4681880, -1460250, -4601050, 4154800, -1699080, -5155650, 3337350, -1542490, -5204670, 3337320, -1460250, -4601050, 4154800, -1542490, -5204670, 3337320, -1394890, -4621280, 4154800, -1261340, -4124620, 4682880, -1229250, -4008170, 4790560, -1272240, -4122420, 4681880, -1272240, -4122420, 4681880, -1460250, -4601050, 4154800, -1394890, -4621280, 4154800, -1272240, -4122420, 4681880, -1394890, -4621280, 4154800, -1261340, -4124620, 4682880, -2197440, -4298050, 4154800, -2454250, -4790250, 3410620, -2356700, -4833870, 3417830, -2197440, -4298050, 4154800, -2356700, -4833870, 3417830, -2155250, -4319360, 4154800, -1983280, -3912310, 4614920, -1905350, -3734460, 4790560, -1994950, -3907720, 4613790, -1994950, -3907720, 4613790, -2197440, -4298050, 4154800, -2155250, -4319360, 4154800, -1994950, -3907720, 4613790, -2155250, -4319360, 4154800, -1983280, -3912310, 4614920, -2356700, -4833870, 3417830, -2117620, -4337930, 4154800, -2155250, -4319360, 4154800, -1841e3, -3766590, 4790560, -1905350, -3734460, 4790560, -1983280, -3912310, 4614920, -1841e3, -3766590, 4790560, -1983280, -3912310, 4614920, -1922860, -3935470, 4620760, -1922860, -3935470, 4620760, -1983280, -3912310, 4614920, -2155250, -4319360, 4154800, -1922860, -3935470, 4620760, -2155250, -4319360, 4154800, -2117620, -4337930, 4154800, -2000050, -4393380, 4154800, -2117620, -4337930, 4154800, -2356700, -4833870, 3417830, -1638120, -3859160, 4790560, -1841e3, -3766590, 4790560, -1922860, -3935470, 4620760, -1638120, -3859160, 4790560, -1922860, -3935470, 4620760, -1729710, -4002680, 4639200, -1729710, -4002680, 4639200, -1922860, -3935470, 4620760, -2117620, -4337930, 4154800, -1729710, -4002680, 4639200, -2117620, -4337930, 4154800, -2000050, -4393380, 4154800, -2000050, -4393380, 4154800, -2356700, -4833870, 3417830, -2246270, -4879020, 3427950, -2000050, -4393380, 4154800, -2246270, -4879020, 3427950, -1952310, -4414790, 4154800, -1638120, -3859160, 4790560, -1729710, -4002680, 4639200, -1718280, -4006330, 4640290, -1729710, -4002680, 4639200, -2000050, -4393380, 4154800, -1952310, -4414790, 4154800, -1729710, -4002680, 4639200, -1952310, -4414790, 4154800, -1718280, -4006330, 4640290, -2203880, -4294740, 4154800, -2454210, -4755770, 3458250, -2454250, -4790250, 3410620, -2203880, -4294740, 4154800, -2454250, -4790250, 3410620, -2197440, -4298050, 4154800, -1905350, -3734460, 4790560, -1996810, -3906990, 4613610, -1994950, -3907720, 4613790, -1996810, -3906990, 4613610, -2203880, -4294740, 4154800, -2197440, -4298050, 4154800, -1996810, -3906990, 4613610, -2197440, -4298050, 4154800, -1994950, -3907720, 4613790, -2229780, -4281360, 4154800, -2491420, -4696750, 3511540, -2454210, -4755770, 3458250, -2229780, -4281360, 4154800, -2454210, -4755770, 3458250, -2203880, -4294740, 4154800, -1905350, -3734460, 4790560, -2004030, -3904120, 4612910, -1996810, -3906990, 4613610, -2004030, -3904120, 4612910, -2229780, -4281360, 4154800, -2203880, -4294740, 4154800, -2004030, -3904120, 4612910, -2203880, -4294740, 4154800, -1996810, -3906990, 4613610, -2248590, -4271510, 4154800, -2526120, -4669810, 3522580, -2491420, -4696750, 3511540, -2248590, -4271510, 4154800, -2491420, -4696750, 3511540, -2229780, -4281360, 4154800, -1905350, -3734460, 4790560, -2009400, -3901980, 4612390, -2004030, -3904120, 4612910, -2009400, -3901980, 4612390, -2248590, -4271510, 4154800, -2229780, -4281360, 4154800, -2009400, -3901980, 4612390, -2229780, -4281360, 4154800, -2004030, -3904120, 4612910, -2254030, -4268640, 4154800, -2526520, -4649410, 3549e3, -2526120, -4669810, 3522580, -2254030, -4268640, 4154800, -2526120, -4669810, 3522580, -2248590, -4271510, 4154800, -1905350, -3734460, 4790560, -2010970, -3901360, 4612230, -2009400, -3901980, 4612390, -2010970, -3901360, 4612230, -2254030, -4268640, 4154800, -2248590, -4271510, 4154800, -2010970, -3901360, 4612230, -2248590, -4271510, 4154800, -2009400, -3901980, 4612390, -2276870, -4256500, 4154800, -2570410, -4621720, 3553620, -2526520, -4649410, 3549e3, -2276870, -4256500, 4154800, -2526520, -4649410, 3549e3, -2254030, -4268640, 4154800, -1905350, -3734460, 4790560, -2017470, -3898750, 4611600, -2010970, -3901360, 4612230, -2017470, -3898750, 4611600, -2276870, -4256500, 4154800, -2254030, -4268640, 4154800, -2017470, -3898750, 4611600, -2254030, -4268640, 4154800, -2010970, -3901360, 4612230, -2293050, -4247810, 4154800, -2590950, -4590880, 3578430, -2570410, -4621720, 3553620, -2293050, -4247810, 4154800, -2570410, -4621720, 3553620, -2276870, -4256500, 4154800, -1905350, -3734460, 4790560, -2022180, -3896860, 4611140, -2017470, -3898750, 4611600, -2022180, -3896860, 4611140, -2293050, -4247810, 4154800, -2276870, -4256500, 4154800, -2022180, -3896860, 4611140, -2276870, -4256500, 4154800, -2017470, -3898750, 4611600, -2293050, -4247810, 4154800, -2390950, -4193480, 4154800, -2590950, -4590880, 3578430, -1905350, -3734460, 4790560, -2096220, -3630760, 4790560, -2197480, -3821680, 4593940, -1905350, -3734460, 4790560, -2197480, -3821680, 4593940, -2022180, -3896860, 4611140, -2022180, -3896860, 4611140, -2197480, -3821680, 4593940, -2390950, -4193480, 4154800, -2022180, -3896860, 4611140, -2390950, -4193480, 4154800, -2293050, -4247810, 4154800, -2428470, -4171860, 4154800, -2661920, -4542940, 3587450, -2590950, -4590880, 3578430, -2428470, -4171860, 4154800, -2590950, -4590880, 3578430, -2390950, -4193480, 4154800, -2197480, -3821680, 4593940, -2096220, -3630760, 4790560, -2209280, -3816280, 4592770, -2209280, -3816280, 4592770, -2428470, -4171860, 4154800, -2390950, -4193480, 4154800, -2209280, -3816280, 4592770, -2390950, -4193480, 4154800, -2197480, -3821680, 4593940, -2439100, -4165660, 4154800, -2676940, -4522310, 3602210, -2661920, -4542940, 3587450, -2439100, -4165660, 4154800, -2661920, -4542940, 3587450, -2428470, -4171860, 4154800, -2096220, -3630760, 4790560, -2212660, -3814730, 4592430, -2209280, -3816280, 4592770, -2212660, -3814730, 4592430, -2439100, -4165660, 4154800, -2428470, -4171860, 4154800, -2212660, -3814730, 4592430, -2428470, -4171860, 4154800, -2209280, -3816280, 4592770, -2445270, -4162040, 4154800, -2668700, -4486740, 3652110, -2676940, -4522310, 3602210, -2445270, -4162040, 4154800, -2676940, -4522310, 3602210, -2439100, -4165660, 4154800, -2096220, -3630760, 4790560, -2214560, -3813860, 4592240, -2212660, -3814730, 4592430, -2214560, -3813860, 4592240, -2445270, -4162040, 4154800, -2439100, -4165660, 4154800, -2214560, -3813860, 4592240, -2439100, -4165660, 4154800, -2212660, -3814730, 4592430, -2492040, -4134210, 4154800, -2710190, -4385600, 3742670, -2668700, -4486740, 3652110, -2492040, -4134210, 4154800, -2668700, -4486740, 3652110, -2445270, -4162040, 4154800, -2096220, -3630760, 4790560, -2229580, -3806920, 4590740, -2214560, -3813860, 4592240, -2229580, -3806920, 4590740, -2492040, -4134210, 4154800, -2445270, -4162040, 4154800, -2229580, -3806920, 4590740, -2445270, -4162040, 4154800, -2214560, -3813860, 4592240, -2492040, -4134210, 4154800, -2556600, -4094600, 4154800, -2710190, -4385600, 3742670, -2096220, -3630760, 4790560, -2315410, -3656960, 4668970, -2363150, -3742030, 4577350, -2096220, -3630760, 4790560, -2363150, -3742030, 4577350, -2229580, -3806920, 4590740, -2229580, -3806920, 4590740, -2363150, -3742030, 4577350, -2556600, -4094600, 4154800, -2229580, -3806920, 4590740, -2556600, -4094600, 4154800, -2492040, -4134210, 4154800, -2096220, -3630760, 4790560, -2289340, -3593540, 4730250, -2315410, -3656960, 4668970, -2096220, -3630760, 4790560, -2273540, -3522430, 4790560, -2289340, -3593540, 4730250, 582133, -4452300, 4514570, 567931, -4706910, 4252200, 582769, -4678750, 4280980, 582133, -4452300, 4514570, 567050, -4714830, 4243600, 567931, -4706910, 4252200, 582133, -4452300, 4514570, 496920, -4425120, 4551090, 567050, -4714830, 4243600, 577885, -4792490, 4154800, 554976, -4795200, 4154800, 640803, -5294310, 3486880, 577885, -4792490, 4154800, 640803, -5294310, 3486880, 649838, -5292660, 3487710, 686484, -5535050, 3083590, 649838, -5292660, 3487710, 640803, -5294310, 3486880, 567050, -4714830, 4243600, 496920, -4425120, 4551090, 554976, -4795200, 4154800, 567050, -4714830, 4243600, 554976, -4795200, 4154800, 577885, -4792490, 4154800, 554976, -4795200, 4154800, 554307, -4795280, 4154800, 640547, -5294360, 3486860, 554976, -4795200, 4154800, 640547, -5294360, 3486860, 640803, -5294310, 3486880, 686484, -5535050, 3083590, 640803, -5294310, 3486880, 640547, -5294360, 3486860, 496920, -4425120, 4551090, 492455, -4401500, 4574260, 554307, -4795280, 4154800, 496920, -4425120, 4551090, 554307, -4795280, 4154800, 554976, -4795200, 4154800, 534215, -4797560, 4154800, 586474, -5303900, 3481900, 640547, -5294360, 3486860, 534215, -4797560, 4154800, 640547, -5294360, 3486860, 554307, -4795280, 4154800, 586474, -5303900, 3481900, 606103, -5498460, 3164290, 686484, -5535050, 3083590, 586474, -5303900, 3481900, 686484, -5535050, 3083590, 640547, -5294360, 3486860, 554307, -4795280, 4154800, 492455, -4401500, 4574260, 534215, -4797560, 4154800, 534215, -4797560, 4154800, 518613, -4799270, 4154800, 581232, -5304800, 3481420, 534215, -4797560, 4154800, 581232, -5304800, 3481420, 586474, -5303900, 3481900, 586474, -5303900, 3481900, 581232, -5304800, 3481420, 606103, -5498460, 3164290, 492455, -4401500, 4574260, 471347, -4403810, 4574260, 518613, -4799270, 4154800, 492455, -4401500, 4574260, 518613, -4799270, 4154800, 534215, -4797560, 4154800, 518613, -4799270, 4154800, 507404, -4800470, 4154800, 577469, -5305430, 3481070, 518613, -4799270, 4154800, 577469, -5305430, 3481070, 581232, -5304800, 3481420, 606103, -5498460, 3164290, 581232, -5304800, 3481420, 577469, -5305430, 3481070, 471347, -4403810, 4574260, 454578, -4392790, 4586460, 507404, -4800470, 4154800, 471347, -4403810, 4574260, 507404, -4800470, 4154800, 518613, -4799270, 4154800, 424344, -4808520, 4154800, 460066, -5323960, 3470340, 535314, -5312400, 3477220, 424344, -4808520, 4154800, 535314, -5312400, 3477220, 454322, -4805780, 4154800, 460066, -5323960, 3470340, 473070, -5528100, 3135390, 567750, -5494e3, 3179010, 460066, -5323960, 3470340, 567750, -5494e3, 3179010, 535314, -5312400, 3477220, 454322, -4805780, 4154800, 389909, -4348360, 4634180, 424344, -4808520, 4154800, 458969, -4805340, 4154800, 454322, -4805780, 4154800, 535314, -5312400, 3477220, 458969, -4805340, 4154800, 535314, -5312400, 3477220, 536798, -5312160, 3477350, 567750, -5494e3, 3179010, 536798, -5312160, 3477350, 535314, -5312400, 3477220, 399201, -4368900, 4614160, 389909, -4348360, 4634180, 454322, -4805780, 4154800, 399201, -4368900, 4614160, 454322, -4805780, 4154800, 458969, -4805340, 4154800, 468194, -4804450, 4154800, 458969, -4805340, 4154800, 536798, -5312160, 3477350, 468194, -4804450, 4154800, 536798, -5312160, 3477350, 539756, -5311680, 3477620, 567750, -5494e3, 3179010, 539756, -5311680, 3477620, 536798, -5312160, 3477350, 413988, -4383530, 4599060, 399201, -4368900, 4614160, 458969, -4805340, 4154800, 413988, -4383530, 4599060, 458969, -4805340, 4154800, 468194, -4804450, 4154800, 483050, -4802980, 4154800, 468194, -4804450, 4154800, 539756, -5311680, 3477620, 483050, -4802980, 4154800, 539756, -5311680, 3477620, 544519, -5310900, 3478060, 567750, -5494e3, 3179010, 544519, -5310900, 3478060, 539756, -5311680, 3477620, 434747, -4384020, 4596700, 413988, -4383530, 4599060, 468194, -4804450, 4154800, 434747, -4384020, 4596700, 468194, -4804450, 4154800, 483050, -4802980, 4154800, 493879, -4801880, 4154800, 483050, -4802980, 4154800, 544519, -5310900, 3478060, 493879, -4801880, 4154800, 544519, -5310900, 3478060, 548011, -5310340, 3478380, 567750, -5494e3, 3179010, 548011, -5310340, 3478380, 544519, -5310900, 3478060, 448784, -4374230, 4604610, 434747, -4384020, 4596700, 483050, -4802980, 4154800, 448784, -4374230, 4604610, 483050, -4802980, 4154800, 493879, -4801880, 4154800, 496654, -4801590, 4154800, 493879, -4801880, 4154800, 548011, -5310340, 3478380, 496654, -4801590, 4154800, 548011, -5310340, 3478380, 548905, -5310190, 3478460, 548905, -5310190, 3478460, 548011, -5310340, 3478380, 567750, -5494e3, 3179010, 454578, -4392790, 4586460, 448784, -4374230, 4604610, 493879, -4801880, 4154800, 454578, -4392790, 4586460, 493879, -4801880, 4154800, 496654, -4801590, 4154800, 496654, -4801590, 4154800, 548905, -5310190, 3478460, 577469, -5305430, 3481070, 496654, -4801590, 4154800, 577469, -5305430, 3481070, 507404, -4800470, 4154800, 548905, -5310190, 3478460, 567750, -5494e3, 3179010, 606103, -5498460, 3164290, 548905, -5310190, 3478460, 606103, -5498460, 3164290, 577469, -5305430, 3481070, 507404, -4800470, 4154800, 454578, -4392790, 4586460, 496654, -4801590, 4154800, 362190, -4813600, 4154800, 396099, -5332920, 3464500, 432437, -5327930, 3467820, 362190, -4813600, 4154800, 432437, -5327930, 3467820, 376957, -4812470, 4154800, 396099, -5332920, 3464500, 406843, -5504760, 3185010, 455572, -5526830, 3140190, 396099, -5332920, 3464500, 455572, -5526830, 3140190, 432437, -5327930, 3467820, 376957, -4812470, 4154800, 328984, -4327260, 4658430, 362190, -4813600, 4154800, 419090, -4808980, 4154800, 376957, -4812470, 4154800, 432437, -5327930, 3467820, 419090, -4808980, 4154800, 432437, -5327930, 3467820, 446787, -5325890, 3469120, 446787, -5325890, 3469120, 432437, -5327930, 3467820, 455572, -5526830, 3140190, 389909, -4348360, 4634180, 328984, -4327260, 4658430, 376957, -4812470, 4154800, 389909, -4348360, 4634180, 376957, -4812470, 4154800, 419090, -4808980, 4154800, 419090, -4808980, 4154800, 446787, -5325890, 3469120, 460066, -5323960, 3470340, 419090, -4808980, 4154800, 460066, -5323960, 3470340, 424344, -4808520, 4154800, 446787, -5325890, 3469120, 455572, -5526830, 3140190, 473070, -5528100, 3135390, 446787, -5325890, 3469120, 473070, -5528100, 3135390, 460066, -5323960, 3470340, 389909, -4348360, 4634180, 419090, -4808980, 4154800, 424344, -4808520, 4154800, 212597, -4822520, 4154800, 232132, -5352280, 3449590, 321466, -5342380, 3457710, 212597, -4822520, 4154800, 321466, -5342380, 3457710, 250701, -4820690, 4154800, 232132, -5352280, 3449590, 237550, -5507870, 3196670, 345721, -5495090, 3208700, 232132, -5352280, 3449590, 345721, -5495090, 3208700, 321466, -5342380, 3457710, 250701, -4820690, 4154800, 191214, -4276400, 4712410, 212597, -4822520, 4154800, 299907, -4817880, 4154800, 250701, -4820690, 4154800, 321466, -5342380, 3457710, 299907, -4817880, 4154800, 321466, -5342380, 3457710, 335111, -5340730, 3458950, 345721, -5495090, 3208700, 335111, -5340730, 3458950, 321466, -5342380, 3457710, 266126, -4304280, 4683500, 191214, -4276400, 4712410, 250701, -4820690, 4154800, 266126, -4304280, 4683500, 250701, -4820690, 4154800, 299907, -4817880, 4154800, 342368, -4815050, 4154800, 299907, -4817880, 4154800, 335111, -5340730, 3458950, 342368, -4815050, 4154800, 335111, -5340730, 3458950, 347005, -5339260, 3460030, 347005, -5339260, 3460030, 335111, -5340730, 3458950, 345721, -5495090, 3208700, 328984, -4327260, 4658430, 266126, -4304280, 4683500, 299907, -4817880, 4154800, 328984, -4327260, 4658430, 299907, -4817880, 4154800, 342368, -4815050, 4154800, 342368, -4815050, 4154800, 347005, -5339260, 3460030, 396099, -5332920, 3464500, 342368, -4815050, 4154800, 396099, -5332920, 3464500, 362190, -4813600, 4154800, 347005, -5339260, 3460030, 345721, -5495090, 3208700, 406843, -5504760, 3185010, 347005, -5339260, 3460030, 406843, -5504760, 3185010, 396099, -5332920, 3464500, 328984, -4327260, 4658430, 342368, -4815050, 4154800, 362190, -4813600, 4154800, 212597, -4822520, 4154800, 165907, -4824360, 4154800, 219168, -5353590, 3448410, 212597, -4822520, 4154800, 219168, -5353590, 3448410, 232132, -5352280, 3449590, 232132, -5352280, 3449590, 219168, -5353590, 3448410, 237550, -5507870, 3196670, 191214, -4276400, 4712410, 120309, -4248930, 4739350, 165907, -4824360, 4154800, 191214, -4276400, 4712410, 165907, -4824360, 4154800, 212597, -4822520, 4154800, 135246, -4825310, 4154800, 148571, -5360160, 3442010, 219168, -5353590, 3448410, 135246, -4825310, 4154800, 219168, -5353590, 3448410, 165907, -4824360, 4154800, 148571, -5360160, 3442010, 152048, -5504700, 3207250, 237550, -5507870, 3196670, 148571, -5360160, 3442010, 237550, -5507870, 3196670, 219168, -5353590, 3448410, 165907, -4824360, 4154800, 120309, -4248930, 4739350, 135246, -4825310, 4154800, 108851, -4825980, 4154800, 87166.4, -5365100, 3436440, 148571, -5360160, 3442010, 108851, -4825980, 4154800, 148571, -5360160, 3442010, 135246, -4825310, 4154800, 87166.4, -5365100, 3436440, 78816.2, -5510090, 3200660, 152048, -5504700, 3207250, 87166.4, -5365100, 3436440, 152048, -5504700, 3207250, 148571, -5360160, 3442010, 120309, -4248930, 4739350, 108851, -4825980, 4154800, 135246, -4825310, 4154800, 108851, -4825980, 4154800, 64382.1, -4826780, 4154800, 75536.7, -5365960, 3435390, 108851, -4825980, 4154800, 75536.7, -5365960, 3435390, 87166.4, -5365100, 3436440, 87166.4, -5365100, 3436440, 75536.7, -5365960, 3435390, 78816.2, -5510090, 3200660, 120309, -4248930, 4739350, 54237.4, -4273740, 4718350, 64382.1, -4826780, 4154800, 120309, -4248930, 4739350, 64382.1, -4826780, 4154800, 108851, -4825980, 4154800, 50490, -4826940, 4154800, 33910.1, -4827090, 4154800, 37976.2, -5368540, 3431990, 50490, -4826940, 4154800, 37976.2, -5368540, 3431990, 42444.1, -5368250, 3432400, 42444.1, -5368250, 3432400, 37976.2, -5368540, 3431990, 39128.8, -5519230, 3185720, 54237.4, -4273740, 4718350, 29844.1, -4274790, 4717620, 33910.1, -4827090, 4154800, 54237.4, -4273740, 4718350, 33910.1, -4827090, 4154800, 50490, -4826940, 4154800, 50490, -4826940, 4154800, 42444.1, -5368250, 3432400, 75536.7, -5365960, 3435390, 50490, -4826940, 4154800, 75536.7, -5365960, 3435390, 64382.1, -4826780, 4154800, 42444.1, -5368250, 3432400, 39128.8, -5519230, 3185720, 78816.2, -5510090, 3200660, 42444.1, -5368250, 3432400, 78816.2, -5510090, 3200660, 75536.7, -5365960, 3435390, 64382.1, -4826780, 4154800, 54237.4, -4273740, 4718350, 50490, -4826940, 4154800, 615670, -4632740, 4325880, 582133, -4452300, 4514570, 582769, -4678750, 4280980, 608179, -4520650, 4443130, 582133, -4452300, 4514570, 615670, -4632740, 4325880, 633146, -4584940, 4373690, 608179, -4520650, 4443130, 615670, -4632740, 4325880, -2716080, -3990590, 4154800, -2751410, -4018630, 4104570, -2735650, -4076450, 4058130, -2716080, -3990590, 4154800, -2735650, -4076450, 4058130, -2708130, -3995990, 4154800, -2708130, -3995990, 4154800, -2702290, -3979440, 4174310, -2716080, -3990590, 4154800, -2735650, -4076450, 4058130, -2695500, -4004530, 4154800, -2708130, -3995990, 4154800, -2591790, -3822020, 4384730, -2702290, -3979440, 4174310, -2708130, -3995990, 4154800, -2591790, -3822020, 4384730, -2708130, -3995990, 4154800, -2695500, -4004530, 4154800, -2735650, -4076450, 4058130, -2692490, -4006550, 4154800, -2695500, -4004530, 4154800, -2544410, -3769260, 4457060, -2591790, -3822020, 4384730, -2695500, -4004530, 4154800, -2544410, -3769260, 4457060, -2695500, -4004530, 4154800, -2692490, -4006550, 4154800, -2735650, -4076450, 4058130, -2690390, -4007960, 4154800, -2692490, -4006550, 4154800, -2496550, -3715400, 4528290, -2544410, -3769260, 4457060, -2692490, -4006550, 4154800, -2496550, -3715400, 4528290, -2692490, -4006550, 4154800, -2690390, -4007960, 4154800, -2682690, -4013110, 4154800, -2690390, -4007960, 4154800, -2735650, -4076450, 4058130, -2334420, -3578260, 4719850, -2464380, -3689040, 4567050, -2433810, -3705400, 4570170, -2464380, -3689040, 4567050, -2496550, -3715400, 4528290, -2690390, -4007960, 4154800, -2464380, -3689040, 4567050, -2690390, -4007960, 4154800, -2682690, -4013110, 4154800, -2464380, -3689040, 4567050, -2682690, -4013110, 4154800, -2433810, -3705400, 4570170, -2682690, -4013110, 4154800, -2735650, -4076450, 4058130, -2757690, -4130770, 3988150, -2682690, -4013110, 4154800, -2757690, -4130770, 3988150, -2671060, -4020870, 4154800, -2334420, -3578260, 4719850, -2433810, -3705400, 4570170, -2430650, -3707070, 4570500, -2433810, -3705400, 4570170, -2682690, -4013110, 4154800, -2671060, -4020870, 4154800, -2433810, -3705400, 4570170, -2671060, -4020870, 4154800, -2430650, -3707070, 4570500, -2671060, -4020870, 4154800, -2757690, -4130770, 3988150, -2733160, -4216270, 3915380, -2671060, -4020870, 4154800, -2733160, -4216270, 3915380, -2629090, -4048440, 4154800, -2419310, -3713050, 4571650, -2334420, -3578260, 4719850, -2430650, -3707070, 4570500, -2430650, -3707070, 4570500, -2671060, -4020870, 4154800, -2629090, -4048440, 4154800, -2430650, -3707070, 4570500, -2629090, -4048440, 4154800, -2419310, -3713050, 4571650, -2617700, -4055810, 4154800, -2629090, -4048440, 4154800, -2733160, -4216270, 3915380, -2342750, -3665100, 4649040, -2334420, -3578260, 4719850, -2419310, -3713050, 4571650, -2342750, -3665100, 4649040, -2419310, -3713050, 4571650, -2387610, -3729530, 4574870, -2387610, -3729530, 4574870, -2419310, -3713050, 4571650, -2629090, -4048440, 4154800, -2387610, -3729530, 4574870, -2629090, -4048440, 4154800, -2617700, -4055810, 4154800, -2617700, -4055810, 4154800, -2733160, -4216270, 3915380, -2712750, -4256190, 3886470, -2617700, -4055810, 4154800, -2712750, -4256190, 3886470, -2596290, -4069550, 4154800, -2384370, -3731200, 4575200, -2342750, -3665100, 4649040, -2387610, -3729530, 4574870, -2387610, -3729530, 4574870, -2617700, -4055810, 4154800, -2596290, -4069550, 4154800, -2387610, -3729530, 4574870, -2596290, -4069550, 4154800, -2384370, -3731200, 4575200, -2590530, -4073220, 4154800, -2596290, -4069550, 4154800, -2712750, -4256190, 3886470, -2315410, -3656960, 4668970, -2342750, -3665100, 4649040, -2384370, -3731200, 4575200, -2315410, -3656960, 4668970, -2384370, -3731200, 4575200, -2369300, -3738900, 4576730, -2369300, -3738900, 4576730, -2384370, -3731200, 4575200, -2596290, -4069550, 4154800, -2369300, -3738900, 4576730, -2596290, -4069550, 4154800, -2590530, -4073220, 4154800, -2590530, -4073220, 4154800, -2712750, -4256190, 3886470, -2710190, -4385600, 3742670, -2590530, -4073220, 4154800, -2710190, -4385600, 3742670, -2556600, -4094600, 4154800, -2363150, -3742030, 4577350, -2315410, -3656960, 4668970, -2369300, -3738900, 4576730, -2369300, -3738900, 4576730, -2590530, -4073220, 4154800, -2556600, -4094600, 4154800, -2369300, -3738900, 4576730, -2556600, -4094600, 4154800, -2363150, -3742030, 4577350, -2428430, -3547160, 4696e3, -2408e3, -3495020, 4745020, -2424600, -3503260, 4730570, -2334420, -3578260, 4719850, -2408e3, -3495020, 4745020, -2428430, -3547160, 4696e3, -2334420, -3578260, 4719850, -2428430, -3547160, 4696e3, -2447990, -3618380, 4631490, -2334420, -3578260, 4719850, -2447990, -3618380, 4631490, -2479420, -3680870, 4565500, -2334420, -3578260, 4719850, -2479420, -3680870, 4565500, -2464380, -3689040, 4567040, -2464380, -3689040, 4567040, -2479420, -3680870, 4565500, -2496550, -3715400, 4528290, -2591790, -3822020, 4384730, -2658470, -3863330, 4308450, -2669190, -3925520, 4245570, -2591790, -3822020, 4384730, -2669190, -3925520, 4245570, -2702290, -3979440, 4174310, -2339130, -2789650, 5219520, -2303240, -2744120, 5259190, -2394690, -2800250, 5188760, -2303240, -2744120, 5259190, -2398920, -2751290, 5212780, -2394690, -2800250, 5188760, -2303240, -2744120, 5259190, -2344450, -2630610, 5298570, -2398920, -2751290, 5212780, -2398920, -2751290, 5212780, -2344450, -2630610, 5298570, -2421410, -2692370, 5232970, -2344450, -2630610, 5298570, -2380590, -2620830, 5287370, -2421410, -2692370, 5232970, -2380380, -2506200, 5342380, -2387040, -2511990, 5336720, -2380590, -2620830, 5287370, -2380380, -2506200, 5342380, -2380590, -2620830, 5287370, -2345770, -2538620, 5342380, -2345770, -2538620, 5342380, -2299340, -2435230, 5409820, -2380380, -2506200, 5342380, -2380590, -2620830, 5287370, -2338630, -2545200, 5342380, -2345770, -2538620, 5342380, -2318600, -251e4, 5367540, -2299340, -2435230, 5409820, -2345770, -2538620, 5342380, -2318600, -251e4, 5367540, -2345770, -2538620, 5342380, -2338630, -2545200, 5342380, -2328660, -2554330, 5342380, -2338630, -2545200, 5342380, -2380590, -2620830, 5287370, -2328660, -2554330, 5342380, -2380590, -2620830, 5287370, -2344450, -2630610, 5298570, -2328660, -2554330, 5342380, -2318600, -251e4, 5367540, -2338630, -2545200, 5342380, -2348770, -2425600, 5392990, -2308050, -2312490, 5459400, -2384750, -2381590, 5396790, -2348770, -2425600, 5392990, -2308e3, -2367500, 5435950, -2308050, -2312490, 5459400, -2299340, -2435230, 5409820, -2308e3, -2367500, 5435950, -2348770, -2425600, 5392990, -2380380, -2506200, 5342380, -2383350, -2503380, 5342380, -2387040, -2511990, 5336720, -2299340, -2435230, 5409820, -2348770, -2425600, 5392990, -2383350, -2503380, 5342380, -2299340, -2435230, 5409820, -2383350, -2503380, 5342380, -2380380, -2506200, 5342380, -2474810, -2244020, 5415040, -2420100, -2153120, 5475920, -2414310, -2095850, 5500480, -2432740, -2232940, 5438480, -2420100, -2153120, 5475920, -2474810, -2244020, 5415040, -2448230, -2312910, 5398220, -2432740, -2232940, 5438480, -2474810, -2244020, 5415040, -2355730, -2237070, 5470370, -2432740, -2232940, 5438480, -2448230, -2312910, 5398220, -2384750, -2381590, 5396790, -2355730, -2237070, 5470370, -2448230, -2312910, 5398220, -2384750, -2381590, 5396790, -2293980, -2256180, 5488620, -2355730, -2237070, 5470370, -2308050, -2312490, 5459400, -2293980, -2256180, 5488620, -2384750, -2381590, 5396790, -1738070, -1354360, 5965370, -1747930, -1289200, 5976840, -2489410, -1901030, 5537410, -1738070, -1354360, 5965370, -2489410, -1901030, 5537410, -2485830, -1904420, 5537850, -2485830, -1904420, 5537850, -2489410, -1901030, 5537410, -2532480, -1938040, 5505170, -2425270, -1960090, 5545220, -1738070, -1354360, 5965370, -2485830, -1904420, 5537850, -2485830, -1904420, 5537850, -2532480, -1938040, 5505170, -2461540, -1993450, 5517470, -2485830, -1904420, 5537850, -2461540, -1993450, 5517470, -2425270, -1960090, 5545220, -2498810, -2036170, 5485240, -2461540, -1993450, 5517470, -2532480, -1938040, 5505170, -2429100, -2037320, 5515830, -2461540, -1993450, 5517470, -2498810, -2036170, 5485240, -2478400, -2089370, 5474550, -2429100, -2037320, 5515830, -2498810, -2036170, 5485240, -2414310, -2095850, 5500480, -2429100, -2037320, 5515830, -2478400, -2089370, 5474550, -2474810, -2244020, 5415040, -2414310, -2095850, 5500480, -2478400, -2089370, 5474550, -1791350, -1258050, 5970660, -1796830, -1226180, 5975610, -2545860, -1846150, 5530360, -1791350, -1258050, 5970660, -2545860, -1846150, 5530360, -2544250, -1847760, 5530560, -2585230, -1881110, 5500430, -2544250, -1847760, 5530560, -2545860, -1846150, 5530360, -1747930, -1289200, 5976840, -1791350, -1258050, 5970660, -2544250, -1847760, 5530560, -1747930, -1289200, 5976840, -2544250, -1847760, 5530560, -2541410, -1850580, 5530920, -2541410, -1850580, 5530920, -2544250, -1847760, 5530560, -2585230, -1881110, 5500430, -2489410, -1901030, 5537410, -1747930, -1289200, 5976840, -2541410, -1850580, 5530920, -2541410, -1850580, 5530920, -2585230, -1881110, 5500430, -2532480, -1938040, 5505170, -2541410, -1850580, 5530920, -2532480, -1938040, 5505170, -2489410, -1901030, 5537410, -2718190, -1659580, 5507580, -1841370, -1075150, 5991010, -2759090, -1610470, 5501860, -2759090, -1610470, 5501860, -2785640, -1625970, 5484010, -2735110, -1671420, 5495690, -2759090, -1610470, 5501860, -2735110, -1671420, 5495690, -2718190, -1659580, 5507580, -1828640, -1159910, 5979160, -1841370, -1075150, 5991010, -2718190, -1659580, 5507580, -1828640, -1159910, 5979160, -2718190, -1659580, 5507580, -2716610, -1661420, 5507800, -2716610, -1661420, 5507800, -2718190, -1659580, 5507580, -2735110, -1671420, 5495690, -2021520, -1637460, 5803950, -1738070, -1354360, 5965370, -2425270, -1960090, 5545220, -2021520, -1637460, 5803950, -2425270, -1960090, 5545220, -2422890, -1962230, 5545500, -2422890, -1962230, 5545500, -2425270, -1960090, 5545220, -2461540, -1993450, 5517470, -1723440, -1396310, 5959980, -1738070, -1354360, 5965370, -2021520, -1637460, 5803950, -2915600, -1401550, 5478440, -1874520, -871396, 6013630, -2945940, -1356540, 5473570, -2945940, -1356540, 5473570, -3101580, -1426110, 5369610, -3038700, -1466870, 5394360, -2945940, -1356540, 5473570, -3038700, -1466870, 5394360, -2915600, -1401550, 5478440, -1906260, -915620, 5997170, -1874520, -871396, 6013630, -2915600, -1401550, 5478440, -1906260, -915620, 5997170, -2915600, -1401550, 5478440, -2913010, -1405320, 5478850, -3038700, -1466870, 5394360, -2913010, -1405320, 5478850, -2915600, -1401550, 5478440, -1880790, -921391, 6004280, -1906260, -915620, 5997170, -2913010, -1405320, 5478850, -1880790, -921391, 6004280, -2913010, -1405320, 5478850, -2911320, -1407760, 5479110, -2911320, -1407760, 5479110, -2913010, -1405320, 5478850, -3038700, -1466870, 5394360, -1874520, -871396, 6013630, -2972550, -1315640, 5469200, -2945940, -1356540, 5473570, -2972550, -1315640, 5469200, -3152280, -1383230, 5351400, -3101580, -1426110, 5369610, -2972550, -1315640, 5469200, -3101580, -1426110, 5369610, -2945940, -1356540, 5473570, -3167200, -1384240, 5342380, -3170400, -1376890, 5342380, -3196260, -1386060, 5324690, -1874520, -871396, 6013630, -2977890, -1307260, 5468310, -2972550, -1315640, 5469200, -2977890, -1307260, 5468310, -3170400, -1376890, 5342380, -3167200, -1384240, 5342380, -2977890, -1307260, 5468310, -3167200, -1384240, 5342380, -3152280, -1383230, 5351400, -2977890, -1307260, 5468310, -3152280, -1383230, 5351400, -2972550, -1315640, 5469200, -3170400, -1376890, 5342380, -3171170, -1375110, 5342380, -3196260, -1386060, 5324690, -1874520, -871396, 6013630, -1876510, -812779, 6021160, -2985900, -1294590, 5466960, -1874520, -871396, 6013630, -2985900, -1294590, 5466960, -2977890, -1307260, 5468310, -2977890, -1307260, 5468310, -2985900, -1294590, 5466960, -3171170, -1375110, 5342380, -2977890, -1307260, 5468310, -3171170, -1375110, 5342380, -3170400, -1376890, 5342380, -3196260, -1386060, 5324690, -3171170, -1375110, 5342380, -3172900, -1371130, 5342380, -2985900, -1294590, 5466960, -1876510, -812779, 6021160, -3000050, -1271900, 5464560, -3172900, -1371130, 5342380, -3171170, -1375110, 5342380, -2985900, -1294590, 5466960, -3172900, -1371130, 5342380, -2985900, -1294590, 5466960, -3000050, -1271900, 5464560, -3172900, -1371130, 5342380, -3000050, -1271900, 5464560, -3039380, -1287510, 5439280, -1876510, -812779, 6021160, -1949880, -783058, 6001890, -3001740, -1269160, 5464270, -1876510, -812779, 6021160, -3001740, -1269160, 5464270, -3000050, -1271900, 5464560, -3000050, -1271900, 5464560, -3001740, -1269160, 5464270, -3039380, -1287510, 5439280, -3001740, -1269160, 5464270, -1949880, -783058, 6001890, -3034720, -1214360, 5458540, -3034720, -1214360, 5458540, -3091470, -1236810, 5421770, -3039380, -1287510, 5439280, -3034720, -1214360, 5458540, -3039380, -1287510, 5439280, -3001740, -1269160, 5464270, -1949880, -783058, 6001890, -3043820, -1198810, 5456920, -3034720, -1214360, 5458540, -3043820, -1198810, 5456920, -3083140, -1213420, 5431720, -3091470, -1236810, 5421770, -3043820, -1198810, 5456920, -3091470, -1236810, 5421770, -3034720, -1214360, 5458540, -3200910, -1304380, 5342380, -3277440, -1316390, 5293130, -3196260, -1386060, 5324690, -3200910, -1304380, 5342380, -3196260, -1386060, 5324690, -3184880, -1343050, 5342380, -3184880, -1343050, 5342380, -3172680, -1299720, 5360210, -3200910, -1304380, 5342380, -3196260, -1386060, 5324690, -3176310, -1363200, 5342380, -3184880, -1343050, 5342380, -3102580, -1281960, 5405030, -3172680, -1299720, 5360210, -3184880, -1343050, 5342380, -3102580, -1281960, 5405030, -3184880, -1343050, 5342380, -3176310, -1363200, 5342380, -3196260, -1386060, 5324690, -3172900, -1371130, 5342380, -3176310, -1363200, 5342380, -3039380, -1287510, 5439280, -3102580, -1281960, 5405030, -3176310, -1363200, 5342380, -3039380, -1287510, 5439280, -3176310, -1363200, 5342380, -3172900, -1371130, 5342380, -3325060, -1314270, 5264080, -3242330, -1265180, 5326910, -3388090, -1259820, 5237310, -3325060, -1314270, 5264080, -3219970, -1270910, 5339020, -3242330, -1265180, 5326910, -3212510, -1275560, 5342380, -3219970, -1270910, 5339020, -3325060, -1314270, 5264080, -3212510, -1275560, 5342380, -3325060, -1314270, 5264080, -3201550, -1302820, 5342380, -3172680, -1299720, 5360210, -3212510, -1275560, 5342380, -3201550, -1302820, 5342380, -3201550, -1302820, 5342380, -3325060, -1314270, 5264080, -3277440, -1316390, 5293130, -3201550, -1302820, 5342380, -3277440, -1316390, 5293130, -3200910, -1304380, 5342380, -3172680, -1299720, 5360210, -3201550, -1302820, 5342380, -3200910, -1304380, 5342380, -3242330, -1265180, 5326910, -3324390, -1205320, 5290330, -3388090, -1259820, 5237310, -3388090, -1259820, 5237310, -3324390, -1205320, 5290330, -3396300, -1216720, 5242150, -3324390, -1205320, 5290330, -3370420, -1189290, 5264950, -3396300, -1216720, 5242150, -3396300, -1216720, 5242150, -3370420, -1189290, 5264950, -3439890, -1169490, 5224570, -3370420, -1189290, 5264950, -3405280, -1119340, 5257900, -3439890, -1169490, 5224570, -3439890, -1169490, 5224570, -3405280, -1119340, 5257900, -3489710, -1117870, 5202930, -3405280, -1119340, 5257900, -3473550, -1070590, 5223510, -3489710, -1117870, 5202930, -3489710, -1117870, 5202930, -3473550, -1070590, 5223510, -3534690, -1076010, 5181490, -3473550, -1070590, 5223510, -3518410, -1019e3, 5203900, -3534690, -1076010, 5181490, -3534690, -1076010, 5181490, -3518410, -1019e3, 5203900, -3590320, -976411, 5163060, -3518410, -1019e3, 5203900, -3578270, -962677, 5173920, -3590320, -976411, 5163060, -3103620, -1521450, 5342380, -3151960, -1536970, 5309750, -3093e3, -1575550, 5332910, -3103620, -1521450, 5342380, -3093e3, -1575550, 5332910, -3084550, -1559740, 5342380, -3084550, -1559740, 5342380, -3054520, -1505460, 5374890, -3103620, -1521450, 5342380, -3093e3, -1575550, 5332910, -3081030, -1566680, 5342380, -3084550, -1559740, 5342380, -3027520, -1527390, 5383910, -3054520, -1505460, 5374890, -3084550, -1559740, 5342380, -3027520, -1527390, 5383910, -3084550, -1559740, 5342380, -3081030, -1566680, 5342380, -3077500, -1573620, 5342380, -3081030, -1566680, 5342380, -3093e3, -1575550, 5332910, -3015280, -1565310, 5379910, -3027520, -1527390, 5383910, -3081030, -1566680, 5342380, -3015280, -1565310, 5379910, -3081030, -1566680, 5342380, -3077500, -1573620, 5342380, -3072070, -1584190, 5342380, -3077500, -1573620, 5342380, -3093e3, -1575550, 5332910, -3015280, -1565310, 5379910, -3077500, -1573620, 5342380, -3072070, -1584190, 5342380, -3015280, -1565310, 5379910, -3072070, -1584190, 5342380, -3029460, -1601240, 5361470, -3113510, -1501110, 5342380, -3122590, -1482120, 5342380, -3143830, -1498450, 5325460, -3054520, -1505460, 5374890, -3108220, -1471170, 5353700, -3122590, -1482120, 5342380, -3054520, -1505460, 5374890, -3122590, -1482120, 5342380, -3113510, -1501110, 5342380, -3113510, -1501110, 5342380, -3143830, -1498450, 5325460, -3151960, -1536970, 5309750, -3113510, -1501110, 5342380, -3151960, -1536970, 5309750, -3103620, -1521450, 5342380, -3054520, -1505460, 5374890, -3113510, -1501110, 5342380, -3103620, -1521450, 5342380, -3127710, -768644, 5486740, -3072240, -739394, 5521760, -3118750, -728739, 5497210, -3070200, -784067, 5516760, -3072240, -739394, 5521760, -3127710, -768644, 5486740, -3104780, -798384, 5495460, -3070200, -784067, 5516760, -3127710, -768644, 5486740, -2840580, -421842, 5675970, -2795990, -406296, 5699040, -2833630, -408786, 5680370, -2810230, -439367, 5689640, -2795990, -406296, 5699040, -2840580, -421842, 5675970, -2828050, -464580, 5678870, -2810230, -439367, 5689640, -2840580, -421842, 5675970, -2795160, -468201, 5694730, -2810230, -439367, 5689640, -2828050, -464580, 5678870, -2842710, -486372, 5669780, -2795160, -468201, 5694730, -2828050, -464580, 5678870, -2814190, -512288, 5681630, -2795160, -468201, 5694730, -2842710, -486372, 5669780, -2857250, -528063, 5658810, -2814190, -512288, 5681630, -2842710, -486372, 5669780, -2817940, -563642, 5674960, -2814190, -512288, 5681630, -2857250, -528063, 5658810, -2817940, -563642, 5674960, -2857250, -528063, 5658810, -2829380, -561669, 5669490, -2458380, -814080, 5809200, -2046520, -668549, 5983660, -2409290, -760108, 5836830, -2023490, -699313, 5987940, -2046520, -668549, 5983660, -2458380, -814080, 5809200, -2023490, -699313, 5987940, -2458380, -814080, 5809200, -2582980, -869669, 5747170, -2582980, -869669, 5747170, -2458380, -814080, 5809200, -2619560, -828307, 5736780, -2458380, -814080, 5809200, -2645140, -820934, 5726160, -2619560, -828307, 5736780, -2458380, -814080, 5809200, -2634900, -778193, 5736770, -2645140, -820934, 5726160, -2458380, -814080, 5809200, -2490510, -724078, 5807440, -2634900, -778193, 5736770, -2439830, -715630, 5829810, -2449850, -680554, 5829810, -2490510, -724078, 5807440, -2634900, -778193, 5736770, -2490510, -724078, 5807440, -2449850, -680554, 5829810, -2634900, -778193, 5736770, -2449850, -680554, 5829810, -2664230, -715822, 5731380, -2449850, -680554, 5829810, -2658180, -641854, 5742860, -2664230, -715822, 5731380, -2449850, -680554, 5829810, -2523020, -596184, 5807950, -2658180, -641854, 5742860, -2523020, -596184, 5807950, -2578550, -542868, 5788880, -2623280, -613111, 5761890, -2658180, -641854, 5742860, -2523020, -596184, 5807950, -2623280, -613111, 5761890, -2572420, -896920, 5747710, -2023490, -699313, 5987940, -2582980, -869669, 5747170, -1955610, -749160, 6004330, -2023490, -699313, 5987940, -2572420, -896920, 5747710, -1955610, -749160, 6004330, -2572420, -896920, 5747710, -2669310, -930962, 5698240, -2669310, -930962, 5698240, -2572420, -896920, 5747710, -2629050, -907410, 5720560, -2572420, -896920, 5747710, -2620640, -875938, 5729260, -2629050, -907410, 5720560, -1955610, -749160, 6004330, -3084700, -1126340, 5449450, -3077990, -1138520, 5450700, -3084700, -1126340, 5449450, -3132390, -1141270, 5419260, -3094940, -1144110, 544e4, -3084700, -1126340, 5449450, -3094940, -1144110, 544e4, -3077990, -1138520, 5450700, -1955610, -749160, 6004330, -3095020, -1104830, 5448010, -3095900, -1105690, 5447340, -1955610, -749160, 6004330, -3095900, -1105690, 5447340, -3084700, -1126340, 5449450, -3084700, -1126340, 5449450, -3095900, -1105690, 5447340, -3132390, -1141270, 5419260, -1955610, -749160, 6004330, -2669310, -930962, 5698240, -3095020, -1104830, 5448010, -2669310, -930962, 5698240, -3122280, -1055560, 5442260, -3097260, -1103130, 5447080, -2669310, -930962, 5698240, -3097260, -1103130, 5447080, -3095020, -1104830, 5448010, -3097260, -1103130, 5447080, -3122280, -1055560, 5442260, -3149990, -1062840, 5424960, -2669310, -930962, 5698240, -2710830, -905242, 5682860, -3123480, -1053230, 5442020, -2669310, -930962, 5698240, -3123480, -1053230, 5442020, -3122280, -1055560, 5442260, -3122280, -1055560, 5442260, -3123480, -1053230, 5442020, -3149990, -1062840, 5424960, -2710830, -905242, 5682860, -3071980, -1005620, 5479950, -3127250, -1045880, 5441280, -2710830, -905242, 5682860, -3127250, -1045880, 5441280, -3123480, -1053230, 5442020, -3149990, -1062840, 5424960, -3123480, -1053230, 5442020, -3127250, -1045880, 5441280, -2710830, -905242, 5682860, -2713910, -868156, 5687150, -3071980, -1005620, 5479950, -3071980, -1005620, 5479950, -2713910, -868156, 5687150, -3050380, -960728, 5499900, -2713910, -868156, 5687150, -2771810, -843885, 5662990, -3050380, -960728, 5499900, -3050380, -960728, 5499900, -2771810, -843885, 5662990, -2766450, -806190, 5671040, -3071980, -1005620, 5479950, -3108610, -1006750, 5459190, -3140250, -1020150, 5438700, -3071980, -1005620, 5479950, -3140250, -1020150, 5438700, -3138730, -1023170, 5439e3, -3138730, -1023170, 5439e3, -3140250, -1020150, 5438700, -3161120, -1029e3, 5425010, -3127250, -1045880, 5441280, -3071980, -1005620, 5479950, -3138730, -1023170, 5439e3, -3138730, -1023170, 5439e3, -3161120, -1029e3, 5425010, -3149990, -1062840, 5424960, -3138730, -1023170, 5439e3, -3149990, -1062840, 5424960, -3127250, -1045880, 5441280, -1949880, -783058, 6001890, -1955610, -749160, 6004330, -3044780, -1197160, 5456750, -1949880, -783058, 6001890, -3044780, -1197160, 5456750, -3043820, -1198810, 5456920, -3043820, -1198810, 5456920, -3044780, -1197160, 5456750, -3083140, -1213420, 5431720, -3044780, -1197160, 5456750, -1955610, -749160, 6004330, -3059780, -1171050, 5454040, -3059780, -1171050, 5454040, -3126770, -1196560, 5410630, -3083140, -1213420, 5431720, -3059780, -1171050, 5454040, -3083140, -1213420, 5431720, -3044780, -1197160, 5456750, -1955610, -749160, 6004330, -3077990, -1138520, 5450700, -3059780, -1171050, 5454040, -3077990, -1138520, 5450700, -3094940, -1144110, 544e4, -3126770, -1196560, 5410630, -3077990, -1138520, 5450700, -3126770, -1196560, 5410630, -3059780, -1171050, 5454040, -2387550, -697263, 5853470, -2216780, -617643, 5928590, -2346450, -653771, 5874930, -2157180, -652564, 5946680, -2216780, -617643, 5928590, -2387550, -697263, 5853470, -2409290, -760108, 5836830, -2157180, -652564, 5946680, -2387550, -697263, 5853470, -2409290, -760108, 5836830, -2105770, -646572, 5965610, -2157180, -652564, 5946680, -2046520, -668549, 5983660, -2105770, -646572, 5965610, -2409290, -760108, 5836830, -2314430, -603296, 5892880, -2238120, -549528, 5927280, -2296370, -540130, 5905970, -2216780, -617643, 5928590, -2238120, -549528, 5927280, -2314430, -603296, 5892880, -2216780, -617643, 5928590, -2314430, -603296, 5892880, -2346450, -653771, 5874930, -3058310, -838838, 5515320, -2838470, -764868, 5641300, -3045610, -796388, 5528530, -2784570, -768934, 5667370, -2838470, -764868, 5641300, -3058310, -838838, 5515320, -3089130, -896423, 5489200, -2784570, -768934, 5667370, -3058310, -838838, 5515320, -2766450, -806190, 5671040, -2784570, -768934, 5667370, -3089130, -896423, 5489200, -3050380, -960728, 5499900, -2766450, -806190, 5671040, -3089130, -896423, 5489200, -2992380, -782191, 5559330, -2902460, -737994, 5612430, -2962200, -731917, 5582140, -2838470, -764868, 5641300, -2902460, -737994, 5612430, -2992380, -782191, 5559330, -2838470, -764868, 5641300, -2992380, -782191, 5559330, -3045610, -796388, 5528530, -3072240, -739394, 5521760, -3100680, -689960, 5512310, -3118750, -728739, 5497210, -1858400, -979407, 6002080, -1880790, -921391, 6004280, -1880860, -988730, 5993600, -2710190, -4385600, 3742670, -2712750, -4256190, 3886470, -2723800, -4267780, 3866120, 417910, -4375140, 4606640, 399201, -4368900, 4614160, 413988, -4383530, 4599060, 504820, -4409940, 4564840, 492455, -4401500, 4574260, 496920, -4425120, 4551090, 56628.9, -5533820, 3160210, 39128.8, -5519230, 3185720, 55275.8, -5556110, 3121160, -1699080, -5155650, 3337350, -1778270, -5154230, 3298330, -1706760, -5178330, 3298360, 1210890, -4672870, 4154800, 1231610, -4771940, 4035180, 1263410, -4781830, 4013720, 1210890, -4672870, 4154800, 1263410, -4781830, 4013720, 1230210, -4667820, 4154800, 1230210, -4667820, 4154800, 1148640, -4384020, 4472900, 1210890, -4672870, 4154800, 730017, -4771690, 4154800, 792503, -5264420, 3500840, 802880, -5262200, 3501800, 730017, -4771690, 4154800, 802880, -5262200, 3501800, 731433, -4771470, 4154800, 792503, -5264420, 3500840, 811991, -5426940, 3240200, 820457, -5384530, 3307660, 792503, -5264420, 3500840, 820457, -5384530, 3307660, 802880, -5262200, 3501800, 717500, -4676710, 4262830, 730017, -4771690, 4154800, 731433, -4771470, 4154800, 1188020, -4884320, 3912730, 1159650, -4846180, 3967910, 1129200, -4887230, 3926400, 2441890, 4005010, 4307280, 2336010, 3812490, 4533230, 2523740, 4005540, 4259670, 2336010, 3812490, 4533230, 2597150, 3988930, 4231220, 2523740, 4005540, 4259670, 2336010, 3812490, 4533230, 2685240, 3976260, 4188230, 2597150, 3988930, 4231220, 2605880, 4027520, 4189370, 2597150, 3988930, 4231220, 2685240, 3976260, 4188230, 2003640, 4618240, 3903230, 1923280, 4427520, 4154800, 1950730, 4415500, 4154800, 1892420, 4354480, 4244580, 1929170, 4337750, 4245160, 1950730, 4415500, 4154800, 1892420, 4354480, 4244580, 1950730, 4415500, 4154800, 1923280, 4427520, 4154800, 1909350, 4433540, 4154800, 1923280, 4427520, 4154800, 2003640, 4618240, 3903230, 1900810, 4416630, 4176520, 1892420, 4354480, 4244580, 1923280, 4427520, 4154800, 1900810, 4416630, 4176520, 1923280, 4427520, 4154800, 1909350, 4433540, 4154800, 1909350, 4433540, 4154800, 2003640, 4618240, 3903230, 1977210, 4675200, 3848880, 1909350, 4433540, 4154800, 1977210, 4675200, 3848880, 1906380, 4434820, 4154800, 1906380, 4434820, 4154800, 1900810, 4416630, 4176520, 1909350, 4433540, 4154800, 1901080, 4437100, 4154800, 1906380, 4434820, 4154800, 1977210, 4675200, 3848880, 1901080, 4437100, 4154800, 1977210, 4675200, 3848880, 1900250, 4574550, 4004390, 1901080, 4437100, 4154800, 1900810, 4416630, 4176520, 1906380, 4434820, 4154800, 1920850, 4713960, 3830230, 1900250, 4574550, 4004390, 1977210, 4675200, 3848880, 1847700, 4613980, 3983820, 1900250, 4574550, 4004390, 1920850, 4713960, 3830230, 1849260, 4668780, 3919160, 1847700, 4613980, 3983820, 1920850, 4713960, 3830230, 2080070, 4356060, 4154800, 2165790, 4474210, 3983030, 2098e3, 4543820, 3940570, 2080070, 4356060, 4154800, 2098e3, 4543820, 3940570, 2034890, 4377340, 4154800, 2034890, 4377340, 4154800, 1958220, 4180500, 4386310, 2080070, 4356060, 4154800, 1986690, 4399430, 4154800, 2034890, 4377340, 4154800, 2098e3, 4543820, 3940570, 1893020, 4271440, 4327320, 1958220, 4180500, 4386310, 2034890, 4377340, 4154800, 1893020, 4271440, 4327320, 2034890, 4377340, 4154800, 1986690, 4399430, 4154800, 1980370, 4402280, 4154800, 1986690, 4399430, 4154800, 2098e3, 4543820, 3940570, 1893020, 4271440, 4327320, 1986690, 4399430, 4154800, 1980370, 4402280, 4154800, 1893020, 4271440, 4327320, 1980370, 4402280, 4154800, 1929170, 4337750, 4245160, 1980370, 4402280, 4154800, 2098e3, 4543820, 3940570, 2003640, 4618240, 3903230, 1980370, 4402280, 4154800, 2003640, 4618240, 3903230, 1950730, 4415500, 4154800, 1950730, 4415500, 4154800, 1929170, 4337750, 4245160, 1980370, 4402280, 4154800, 1621480, 4546730, 4154800, 1684290, 4523840, 4154800, 1708620, 4528770, 4139560, 1602730, 4505960, 4205840, 1684290, 4523840, 4154800, 1621480, 4546730, 4154800, 1602730, 4505960, 4205840, 1621480, 4546730, 4154800, 1596890, 4551480, 4159090, 1553480, 4552350, 4174450, 1602730, 4505960, 4205840, 1596890, 4551480, 4159090, 1561990, 4567510, 4154800, 1596140, 4555690, 4154800, 1586070, 461e4, 4098740, 1553480, 4552350, 4174450, 1596890, 4551480, 4159090, 1596140, 4555690, 4154800, 1553480, 4552350, 4174450, 1596140, 4555690, 4154800, 1561990, 4567510, 4154800, 1598470, 4554870, 4154800, 1619860, 4600210, 4096540, 1586070, 461e4, 4098740, 1598470, 4554870, 4154800, 1586070, 461e4, 4098740, 1596140, 4555690, 4154800, 1596140, 4555690, 4154800, 1596890, 4551480, 4159090, 1598470, 4554870, 4154800, 1599950, 4554350, 4154800, 1624670, 4577310, 4120060, 1619860, 4600210, 4096540, 1599950, 4554350, 4154800, 1619860, 4600210, 4096540, 1598470, 4554870, 4154800, 1596890, 4551480, 4159090, 1599950, 4554350, 4154800, 1598470, 4554870, 4154800, 1561990, 4567510, 4154800, 1586070, 461e4, 4098740, 1526940, 4637370, 4090370, 1561990, 4567510, 4154800, 1526940, 4637370, 4090370, 1547430, 4572460, 4154800, 1547430, 4572460, 4154800, 1553480, 4552350, 4174450, 1561990, 4567510, 4154800, 1505050, 4586580, 4154800, 1547430, 4572460, 4154800, 1526940, 4637370, 4090370, 1491090, 4553950, 4195260, 1553480, 4552350, 4174450, 1547430, 4572460, 4154800, 1491090, 4553950, 4195260, 1547430, 4572460, 4154800, 1505050, 4586580, 4154800, 1505050, 4586580, 4154800, 1526940, 4637370, 4090370, 1407790, 4620640, 4151180, 1505050, 4586580, 4154800, 1407790, 4620640, 4151180, 1414670, 4615260, 4154800, 1414670, 4615260, 4154800, 1491090, 4553950, 4195260, 1505050, 4586580, 4154800, 1799150, 4479400, 4154800, 1803320, 4477720, 4154800, 1802410, 4584230, 4038170, 1799150, 4479400, 4154800, 1802410, 4584230, 4038170, 1794610, 4500500, 4134050, 1799150, 4479400, 4154800, 1803210, 4459930, 4173810, 1803320, 4477720, 4154800, 1765140, 4511640, 4134590, 1794610, 4500500, 4134050, 1802410, 4584230, 4038170, 1750260, 4562340, 4085310, 1765140, 4511640, 4134590, 1802410, 4584230, 4038170, 1747250, 4499900, 4154800, 1765140, 4511640, 4134590, 1750260, 4562340, 4085310, 1747250, 4499900, 4154800, 1750260, 4562340, 4085310, 1726090, 4508060, 4154800, 1712010, 4476270, 4194530, 1747250, 4499900, 4154800, 1726090, 4508060, 4154800, 1726090, 4508060, 4154800, 1750260, 4562340, 4085310, 1708620, 4528770, 4139560, 1726090, 4508060, 4154800, 1708620, 4528770, 4139560, 1709610, 4514330, 4154800, 1709610, 4514330, 4154800, 1712010, 4476270, 4194530, 1726090, 4508060, 4154800, 1692780, 4520670, 4154800, 1709610, 4514330, 4154800, 1708620, 4528770, 4139560, 1591220, 4465940, 4252310, 1712010, 4476270, 4194530, 1709610, 4514330, 4154800, 1591220, 4465940, 4252310, 1709610, 4514330, 4154800, 1692780, 4520670, 4154800, 1684290, 4523840, 4154800, 1692780, 4520670, 4154800, 1708620, 4528770, 4139560, 1591220, 4465940, 4252310, 1692780, 4520670, 4154800, 1684290, 4523840, 4154800, 1591220, 4465940, 4252310, 1684290, 4523840, 4154800, 1602730, 4505960, 4205840, 1541950, 4468610, 4267530, 1591220, 4465940, 4252310, 1602730, 4505960, 4205840, 1521140, 4483500, 4259430, 1541950, 4468610, 4267530, 1602730, 4505960, 4205840, 1812650, 4473950, 4154800, 1867770, 4554400, 4042200, 1802410, 4584230, 4038170, 1812650, 4473950, 4154800, 1802410, 4584230, 4038170, 1803320, 4477720, 4154800, 1803320, 4477720, 4154800, 1803210, 4459930, 4173810, 1812650, 4473950, 4154800, 1814240, 4473310, 4154800, 1900250, 4574550, 4004390, 1867770, 4554400, 4042200, 1814240, 4473310, 4154800, 1867770, 4554400, 4042200, 1812650, 4473950, 4154800, 1803210, 4459930, 4173810, 1814240, 4473310, 4154800, 1812650, 4473950, 4154800, 1814240, 4473310, 4154800, 1901080, 4437100, 4154800, 1900250, 4574550, 4004390, 1803210, 4459930, 4173810, 1900810, 4416630, 4176520, 1901080, 4437100, 4154800, 1803210, 4459930, 4173810, 1901080, 4437100, 4154800, 1814240, 4473310, 4154800, 2266930, 4331510, 4082570, 2245020, 4273380, 4154800, 2268730, 4260850, 4154800, 2174370, 4091680, 4368320, 2268920, 4246230, 4169530, 2268730, 4260850, 4154800, 2174370, 4091680, 4368320, 2268730, 4260850, 4154800, 2245020, 4273380, 4154800, 2223930, 4284400, 4154800, 2245020, 4273380, 4154800, 2266930, 4331510, 4082570, 2085160, 4125370, 4380040, 2174370, 4091680, 4368320, 2245020, 4273380, 4154800, 2085160, 4125370, 4380040, 2245020, 4273380, 4154800, 2223930, 4284400, 4154800, 2223930, 4284400, 4154800, 2266930, 4331510, 4082570, 2201870, 4419740, 4023580, 2223930, 4284400, 4154800, 2201870, 4419740, 4023580, 2161560, 4316200, 4154800, 2161560, 4316200, 4154800, 2085160, 4125370, 4380040, 2223930, 4284400, 4154800, 2115530, 4338950, 4154800, 2161560, 4316200, 4154800, 2201870, 4419740, 4023580, 1958220, 4180500, 4386310, 2085160, 4125370, 4380040, 2161560, 4316200, 4154800, 1958220, 4180500, 4386310, 2161560, 4316200, 4154800, 2115530, 4338950, 4154800, 2115530, 4338950, 4154800, 2201870, 4419740, 4023580, 2165790, 4474210, 3983030, 2115530, 4338950, 4154800, 2165790, 4474210, 3983030, 2080070, 4356060, 4154800, 1958220, 4180500, 4386310, 2115530, 4338950, 4154800, 2080070, 4356060, 4154800, 2368330, 4180220, 4180860, 2250800, 3936480, 4470340, 2388710, 4151290, 4197940, 2208630, 3994050, 4440420, 2250800, 3936480, 4470340, 2368330, 4180220, 4180860, 2287420, 4221200, 4184710, 2208630, 3994050, 4440420, 2368330, 4180220, 4180860, 2174370, 4091680, 4368320, 2208630, 3994050, 4440420, 2287420, 4221200, 4184710, 2174370, 4091680, 4368320, 2287420, 4221200, 4184710, 2268920, 4246230, 4169530, 2366880, 4095660, 4263990, 2327140, 3825970, 4526470, 2441890, 4005010, 4307280, 2250800, 3936480, 4470340, 2327140, 3825970, 4526470, 2366880, 4095660, 4263990, 2250800, 3936480, 4470340, 2366880, 4095660, 4263990, 2388710, 4151290, 4197940, 2336010, 3812490, 4533230, 2531030, 3742380, 4487030, 2685240, 3976260, 4188230, 2327140, 3825970, 4526470, 2336010, 3812490, 4533230, 2441890, 4005010, 4307280, 1977210, 4675200, 3848880, 2003640, 4618240, 3903230, 2022400, 4655340, 3849470, 1913970, -6016550, 901688, 1914010, -6019460, 882069, 1934070, -6023310, 809488, 1913970, -6016550, 901688, 1934070, -6023310, 809488, 1929540, -6011570, 901688, 1929540, -6011570, 901688, 1910600, -5960690, 1220810, 1913970, -6016550, 901688, 1934560, -6009960, 901688, 1929540, -6011570, 901688, 1934070, -6023310, 809488, 1934260, -5979360, 1085610, 1910600, -5960690, 1220810, 1929540, -6011570, 901688, 1934260, -5979360, 1085610, 1929540, -6011570, 901688, 1934560, -6009960, 901688, 1934560, -6009960, 901688, 1934070, -6023310, 809488, 1960580, -6019800, 771213, 1934560, -6009960, 901688, 1960580, -6019800, 771213, 1950250, -6004880, 901688, 1950250, -6004880, 901688, 1934260, -5979360, 1085610, 1934560, -6009960, 901688, 1971040, -5998090, 901688, 1950250, -6004880, 901688, 1960580, -6019800, 771213, 1978260, -5980160, 999055, 1934260, -5979360, 1085610, 1950250, -6004880, 901688, 1978260, -5980160, 999055, 1950250, -6004880, 901688, 1971040, -5998090, 901688, 1971040, -5998090, 901688, 1960580, -6019800, 771213, 2094750, -5973050, 781769, 1971040, -5998090, 901688, 2094750, -5973050, 781769, 2030780, -5978130, 901688, 2030780, -5978130, 901688, 1978260, -5980160, 999055, 1971040, -5998090, 901688, 2094750, -5973050, 781769, 2056630, -5969290, 901688, 2030780, -5978130, 901688, 2022820, -5964030, 1006150, 1978260, -5980160, 999055, 2030780, -5978130, 901688, 2022820, -5964030, 1006150, 2030780, -5978130, 901688, 2056630, -5969290, 901688, 2094750, -5973050, 781769, 2074410, -5963130, 901688, 2056630, -5969290, 901688, 2041900, -5943580, 1084990, 2022820, -5964030, 1006150, 2056630, -5969290, 901688, 2041900, -5943580, 1084990, 2056630, -5969290, 901688, 2074410, -5963130, 901688, 2138610, -5857720, 1334960, 2105180, -5877530, 1300820, 2122940, -5882290, 1249750, 2153380, -5935070, 901688, 2147950, -5937040, 901688, 2155790, -5953130, 767785, 2138610, -5857720, 1334960, 2122940, -5882290, 1249750, 2147950, -5937040, 901688, 2138610, -5857720, 1334960, 2147950, -5937040, 901688, 2153380, -5935070, 901688, 2103200, -5953040, 901688, 2094750, -5973050, 781769, 2155790, -5953130, 767785, 2103200, -5953040, 901688, 2155790, -5953130, 767785, 2147950, -5937040, 901688, 2147950, -5937040, 901688, 2122940, -5882290, 1249750, 2103200, -5953040, 901688, 2103200, -5953040, 901688, 2074410, -5963130, 901688, 2094750, -5973050, 781769, 2122940, -5882290, 1249750, 2041900, -5943580, 1084990, 2074410, -5963130, 901688, 2122940, -5882290, 1249750, 2074410, -5963130, 901688, 2103200, -5953040, 901688, 2122940, -5882290, 1249750, 2007530, -5948120, 1123320, 2041900, -5943580, 1084990, 2122940, -5882290, 1249750, 1997380, -5935300, 1205640, 2007530, -5948120, 1123320, 2422860, -5884660, 424236, 2405660, -5878670, 576540, 2400160, -5888180, 497517, 2427210, -5866030, 613503, 2405660, -5878670, 576540, 2422860, -5884660, 424236, 2452840, -5874520, 391447, 2427210, -5866030, 613503, 2422860, -5884660, 424236, 2452840, -5874520, 391447, 2443310, -5852800, 672757, 2427210, -5866030, 613503, 2434410, -5825440, 901688, 2443310, -5852800, 672757, 2452840, -5874520, 391447, 2434410, -5825440, 901688, 2452840, -5874520, 391447, 2435440, -5825010, 901688, 2420440, -5785170, 1159660, 2434410, -5825440, 901688, 2435440, -5825010, 901688, 2414440, -5833750, 901688, 2406360, -5865870, 691651, 2443310, -5852800, 672757, 2414440, -5833750, 901688, 2443310, -5852800, 672757, 2434410, -5825440, 901688, 2420440, -5785170, 1159660, 2414440, -5833750, 901688, 2434410, -5825440, 901688, 2414440, -5833750, 901688, 2373520, -5850510, 901688, 2406360, -5865870, 691651, 2420440, -5785170, 1159660, 2329420, -5822230, 1160620, 2373520, -5850510, 901688, 2420440, -5785170, 1159660, 2373520, -5850510, 901688, 2414440, -5833750, 901688, 2406360, -5865870, 691651, 2373520, -5850510, 901688, 2373490, -5850530, 901688, 2329420, -5822230, 1160620, 2322910, -5817490, 1196590, 2373490, -5850530, 901688, 2329420, -5822230, 1160620, 2373490, -5850530, 901688, 2373520, -5850510, 901688, 2527850, -5785500, 901688, 2509150, -5859190, 232985, 2560690, -5836650, 238065, 2527850, -5785500, 901688, 2560690, -5836650, 238065, 2542580, -5779050, 901688, 2509150, -5859190, 232985, 2504210, -5864320, 138579, 2560840, -5840910, 80103.7, 2509150, -5859190, 232985, 2560840, -5840910, 80103.7, 2560690, -5836650, 238065, 2527040, -5737130, 1170830, 2527850, -5785500, 901688, 2542580, -5779050, 901688, 2516760, -5790340, 901688, 2471650, -5874460, 248800, 2477300, -5872850, 229856, 2516760, -5790340, 901688, 2477300, -5872850, 229856, 2509150, -5859190, 232985, 2516760, -5790340, 901688, 2509150, -5859190, 232985, 2527850, -5785500, 901688, 2509150, -5859190, 232985, 2477300, -5872850, 229856, 2504210, -5864320, 138579, 2527040, -5737130, 1170830, 2516760, -5790340, 901688, 2527850, -5785500, 901688, 2516760, -5790340, 901688, 2440180, -5823020, 901688, 2471650, -5874460, 248800, 2527040, -5737130, 1170830, 2420440, -5785170, 1159660, 2440180, -5823020, 901688, 2527040, -5737130, 1170830, 2440180, -5823020, 901688, 2516760, -5790340, 901688, 2436630, -5824510, 901688, 2456930, -5874410, 366734, 2471650, -5874460, 248800, 2436630, -5824510, 901688, 2471650, -5874460, 248800, 2440180, -5823020, 901688, 2440180, -5823020, 901688, 2420440, -5785170, 1159660, 2436630, -5824510, 901688, 2435440, -5825010, 901688, 2452840, -5874520, 391447, 2456930, -5874410, 366734, 2435440, -5825010, 901688, 2456930, -5874410, 366734, 2436630, -5824510, 901688, 2420440, -5785170, 1159660, 2435440, -5825010, 901688, 2436630, -5824510, 901688, 2268090, -5892190, 901688, 2273930, -5919250, 684998, 2348390, -5890790, 679112, 2268090, -5892190, 901688, 2348390, -5890790, 679112, 2313750, -5874410, 901688, 2313750, -5874410, 901688, 2252490, -5832320, 1257120, 2268090, -5892190, 901688, 2339420, -5864230, 901688, 2313750, -5874410, 901688, 2348390, -5890790, 679112, 2322910, -5817490, 1196590, 2252490, -5832320, 1257120, 2313750, -5874410, 901688, 2322910, -5817490, 1196590, 2313750, -5874410, 901688, 2339420, -5864230, 901688, 2339420, -5864230, 901688, 2348390, -5890790, 679112, 2406360, -5865870, 691651, 2339420, -5864230, 901688, 2406360, -5865870, 691651, 2373490, -5850530, 901688, 2373490, -5850530, 901688, 2322910, -5817490, 1196590, 2339420, -5864230, 901688, 2153380, -5935070, 901688, 2155790, -5953130, 767785, 2232560, -5936330, 673240, 2153380, -5935070, 901688, 2232560, -5936330, 673240, 2202860, -5916890, 901688, 2202860, -5916890, 901688, 2138610, -5857720, 1334960, 2153380, -5935070, 901688, 2232560, -5936330, 673240, 2214680, -5912470, 901688, 2202860, -5916890, 901688, 2180810, -5859120, 1258870, 2138610, -5857720, 1334960, 2202860, -5916890, 901688, 2180810, -5859120, 1258870, 2202860, -5916890, 901688, 2214680, -5912470, 901688, 2242830, -5901850, 901688, 2214680, -5912470, 901688, 2232560, -5936330, 673240, 2252490, -5832320, 1257120, 2180810, -5859120, 1258870, 2214680, -5912470, 901688, 2252490, -5832320, 1257120, 2214680, -5912470, 901688, 2242830, -5901850, 901688, 2242830, -5901850, 901688, 2232560, -5936330, 673240, 2273930, -5919250, 684998, 2242830, -5901850, 901688, 2273930, -5919250, 684998, 2268090, -5892190, 901688, 2252490, -5832320, 1257120, 2242830, -5901850, 901688, 2268090, -5892190, 901688, 2753050, -5737960, 419573, 2707300, -5757510, 448172, 2725160, -5760990, 254413, 2753050, -5737960, 419573, 2725160, -5760990, 254413, 2742230, -5752800, 256122, 2742230, -5752800, 256122, 2725160, -5760990, 254413, 2733970, -5760580, 146910, 2753050, -5737960, 419573, 2742230, -5752800, 256122, 2743660, -5752120, 256265, 2753050, -5737960, 419573, 2743660, -5752120, 256265, 2750940, -5743930, 345574, 2743660, -5752120, 256265, 2742230, -5752800, 256122, 2733970, -5760580, 146910, 2762910, -5742810, 258197, 2750940, -5743930, 345574, 2743660, -5752120, 256265, 2743660, -5752120, 256265, 2733970, -5760580, 146910, 2775100, -5740390, 165052, 2743660, -5752120, 256265, 2775100, -5740390, 165052, 2762910, -5742810, 258197, 2766330, -5740320, 276019, 2750940, -5743930, 345574, 2762910, -5742810, 258197, 2766330, -5740320, 276019, 2762910, -5742810, 258197, 2767760, -5740450, 258683, 2775100, -5740390, 165052, 2767760, -5740450, 258683, 2762910, -5742810, 258197, 2771590, -5738580, 259069, 2766330, -5740320, 276019, 2767760, -5740450, 258683, 2771590, -5738580, 259069, 2767760, -5740450, 258683, 2775100, -5740390, 165052, 2771590, -5738580, 259069, 2775100, -5740390, 165052, 2786120, -5733490, 211863, 2848480, -5700450, 266818, 2766330, -5740320, 276019, 2771590, -5738580, 259069, 2848480, -5700450, 266818, 2771590, -5738580, 259069, 2786120, -5733490, 211863, 2848480, -5700450, 266818, 2786120, -5733490, 211863, 2851080, -5699160, 266525, 2856880, -5697300, 243304, 2851080, -5699160, 266525, 2786120, -5733490, 211863, 2989740, -5560900, 901688, 2935240, -5589860, 901688, 2978130, -5621250, 459827, 2990040, -5527390, 1086420, 2911940, -5567310, 1094610, 2935240, -5589860, 901688, 2990040, -5527390, 1086420, 2935240, -5589860, 901688, 2989740, -5560900, 901688, 2989740, -5560900, 901688, 2978130, -5621250, 459827, 3035770, -5570380, 657756, 2989740, -5560900, 901688, 3035770, -5570380, 657756, 3011480, -5549150, 901688, 3011480, -5549150, 901688, 2990040, -5527390, 1086420, 2989740, -5560900, 901688, 3085770, -5559300, 501103, 3035770, -5570380, 657756, 2978130, -5621250, 459827, 3105340, -5541260, 574244, 3035770, -5570380, 657756, 3085770, -5559300, 501103, 3119480, -5536460, 543161, 3105340, -5541260, 574244, 3085770, -5559300, 501103, 2978130, -5621250, 459827, 2935240, -5589860, 901688, 2915370, -5600250, 901688, 2911940, -5567310, 1094610, 2874470, -5576370, 1146e3, 2915370, -5600250, 901688, 2911940, -5567310, 1094610, 2915370, -5600250, 901688, 2935240, -5589860, 901688, 2890260, -5613250, 901688, 2907910, -5659270, 442714, 2978130, -5621250, 459827, 2890260, -5613250, 901688, 2978130, -5621250, 459827, 2915370, -5600250, 901688, 2915370, -5600250, 901688, 2874470, -5576370, 1146e3, 2890260, -5613250, 901688, 2890260, -5613250, 901688, 2868700, -5624290, 901688, 2907910, -5659270, 442714, 2874470, -5576370, 1146e3, 2837850, -5588700, 1176600, 2868700, -5624290, 901688, 2874470, -5576370, 1146e3, 2868700, -5624290, 901688, 2890260, -5613250, 901688, 2858040, -5629720, 901688, 2880160, -5675440, 416633, 2907910, -5659270, 442714, 2858040, -5629720, 901688, 2907910, -5659270, 442714, 2868700, -5624290, 901688, 2868700, -5624290, 901688, 2837850, -5588700, 1176600, 2858040, -5629720, 901688, 2828520, -5644610, 901688, 2800300, -5713170, 444210, 2880160, -5675440, 416633, 2828520, -5644610, 901688, 2880160, -5675440, 416633, 2858040, -5629720, 901688, 2837850, -5588700, 1176600, 2828520, -5644610, 901688, 2858040, -5629720, 901688, 3060520, -5553140, 688021, 3055810, -5549160, 738764, 3035770, -5570380, 657756, 3057660, -5523840, 901688, 3035770, -5570380, 657756, 3055810, -5549160, 738764, 3057660, -5523840, 901688, 3055810, -5549160, 738764, 3063090, -5520830, 901688, 3067360, -5495280, 1032800, 3057660, -5523840, 901688, 3063090, -5520830, 901688, 3063090, -5520830, 901688, 3055810, -5549160, 738764, 3101390, -5512620, 817667, 3063090, -5520830, 901688, 3101390, -5512620, 817667, 3088530, -5506640, 901688, 3088530, -5506640, 901688, 3067360, -5495280, 1032800, 3063090, -5520830, 901688, 3101390, -5512620, 817667, 3093640, -5503770, 901688, 3088530, -5506640, 901688, 3089400, -5498790, 945274, 3067360, -5495280, 1032800, 3088530, -5506640, 901688, 3089400, -5498790, 945274, 3088530, -5506640, 901688, 3093640, -5503770, 901688, 3098320, -5501140, 901688, 3093640, -5503770, 901688, 3101390, -5512620, 817667, 3098320, -5501140, 901688, 3101390, -5512620, 817667, 3107170, -5503240, 857636, 3098320, -5501140, 901688, 3089400, -5498790, 945274, 3093640, -5503770, 901688, 3122890, -5487230, 901688, 3098320, -5501140, 901688, 3107170, -5503240, 857636, 3139110, -5470140, 947745, 3089400, -5498790, 945274, 3098320, -5501140, 901688, 3139110, -5470140, 947745, 3098320, -5501140, 901688, 3122890, -5487230, 901688, 3156050, -5468220, 901688, 3122890, -5487230, 901688, 3107170, -5503240, 857636, 3139110, -5470140, 947745, 3122890, -5487230, 901688, 3156050, -5468220, 901688, 3139110, -5470140, 947745, 3156050, -5468220, 901688, 3178380, -5451860, 921959, 3114200, -5514200, 756389, 3101390, -5512620, 817667, 3055810, -5549160, 738764, 3136820, -5498480, 776954, 3101390, -5512620, 817667, 3114200, -5514200, 756389, 2724530, -5695530, 901688, 2725810, -5747970, 458322, 2800300, -5713170, 444210, 2724530, -5695530, 901688, 2800300, -5713170, 444210, 2750220, -5683170, 901688, 2750220, -5683170, 901688, 2717970, -5654980, 1142660, 2724530, -5695530, 901688, 2800300, -5713170, 444210, 2752020, -5682300, 901688, 2750220, -5683170, 901688, 2716900, -5649850, 1170050, 2717970, -5654980, 1142660, 2750220, -5683170, 901688, 2716900, -5649850, 1170050, 2750220, -5683170, 901688, 2752020, -5682300, 901688, 2828520, -5644610, 901688, 2752020, -5682300, 901688, 2800300, -5713170, 444210, 2837850, -5588700, 1176600, 2716900, -5649850, 1170050, 2752020, -5682300, 901688, 2837850, -5588700, 1176600, 2752020, -5682300, 901688, 2828520, -5644610, 901688, 2725160, -5760990, 254413, 2707300, -5757510, 448172, 2679020, -5782790, 249805, 2679020, -5782790, 249805, 2659200, -5796080, 121103, 2733970, -5760580, 146910, 2679020, -5782790, 249805, 2733970, -5760580, 146910, 2725160, -5760990, 254413, 2669420, -5721570, 901688, 2663660, -5789940, 248275, 2679020, -5782790, 249805, 2669420, -5721570, 901688, 2679020, -5782790, 249805, 2707300, -5757510, 448172, 2669420, -5721570, 901688, 2707300, -5757510, 448172, 2681540, -5715900, 901688, 2679020, -5782790, 249805, 2663660, -5789940, 248275, 2659200, -5796080, 121103, 2681540, -5715900, 901688, 2665090, -5686870, 1108660, 2669420, -5721570, 901688, 2718180, -5698560, 901688, 2681540, -5715900, 901688, 2707300, -5757510, 448172, 2717970, -5654980, 1142660, 2665090, -5686870, 1108660, 2681540, -5715900, 901688, 2717970, -5654980, 1142660, 2681540, -5715900, 901688, 2718180, -5698560, 901688, 2718180, -5698560, 901688, 2707300, -5757510, 448172, 2725810, -5747970, 458322, 2718180, -5698560, 901688, 2725810, -5747970, 458322, 2724530, -5695530, 901688, 2717970, -5654980, 1142660, 2718180, -5698560, 901688, 2724530, -5695530, 901688, 2542580, -5779050, 901688, 2560690, -5836650, 238065, 2628170, -5806290, 244746, 2542580, -5779050, 901688, 2628170, -5806290, 244746, 2562170, -5770390, 901688, 2560690, -5836650, 238065, 2560840, -5840910, 80103.7, 2639830, -5805540, 87268.5, 2560690, -5836650, 238065, 2639830, -5805540, 87268.5, 2628170, -5806290, 244746, 2562170, -5770390, 901688, 2527040, -5737130, 1170830, 2542580, -5779050, 901688, 2604950, -5751200, 901688, 2562170, -5770390, 901688, 2628170, -5806290, 244746, 2604950, -5751200, 901688, 2628170, -5806290, 244746, 2636470, -5802500, 245569, 2639830, -5805540, 87268.5, 2636470, -5802500, 245569, 2628170, -5806290, 244746, 2587950, -5719750, 1122110, 2527040, -5737130, 1170830, 2562170, -5770390, 901688, 2587950, -5719750, 1122110, 2562170, -5770390, 901688, 2604950, -5751200, 901688, 2665790, -5723260, 901688, 2604950, -5751200, 901688, 2636460, -5802500, 245569, 2665790, -5723260, 901688, 2636460, -5802500, 245569, 2648430, -5796990, 246759, 2648430, -5796990, 246759, 2636470, -5802500, 245569, 2639830, -5805540, 87268.5, 2665090, -5686870, 1108660, 2587950, -5719750, 1122110, 2604950, -5751200, 901688, 2665090, -5686870, 1108660, 2604950, -5751200, 901688, 2665790, -5723260, 901688, 2665790, -5723260, 901688, 2648430, -5796990, 246759, 2663660, -5789940, 248275, 2665790, -5723260, 901688, 2663660, -5789940, 248275, 2669420, -5721570, 901688, 2648430, -5796990, 246759, 2639830, -5805540, 87268.5, 2659200, -5796080, 121103, 2648430, -5796990, 246759, 2659200, -5796080, 121103, 2663660, -5789940, 248275, 2665090, -5686870, 1108660, 2665790, -5723260, 901688, 2669420, -5721570, 901688, 2456930, -5874410, 366734, 2406e3, -5898640, 311769, 2443740, -5884350, 287427, 2471650, -5874460, 248800, 2456930, -5874410, 366734, 2443740, -5884350, 287427, 1974540, -5942920, 1205690, 1937650, -5944800, 1254940, 1976660, -5953540, 1148850, 1976660, -5953540, 1148850, 1937650, -5944800, 1254940, 1934260, -5979360, 1085610, 1937650, -5944800, 1254940, 1933600, -5941810, 1275030, 1934260, -5979360, 1085610, 1998890, -5916200, 1293190, 1933600, -5941810, 1275030, 1937650, -5944800, 1254940, 1998890, -5916200, 1293190, 1937650, -5944800, 1254940, 1997640, -5922200, 1267590, 1914010, -6019460, 882069, 1903200, -6028730, 841515, 1907810, -6030440, 818630, 1934070, -6023310, 809488, 1914010, -6019460, 882069, 1907810, -6030440, 818630, 1903790, -6016040, 926144, 1872090, -5979220, 1189670, 1879540, -6019880, 950209, 1910600, -5960690, 1220810, 1872090, -5979220, 1189670, 1903790, -6016040, 926144, 1913970, -6016550, 901688, 1909480, -6017970, 901688, 1914010, -6019460, 882069, 1910600, -5960690, 1220810, 1903790, -6016040, 926144, 1909480, -6017970, 901688, 1910600, -5960690, 1220810, 1909480, -6017970, 901688, 1913970, -6016550, 901688, 1863750, -6016600, 1000450, 1835200, -6013040, 1071560, 1809120, -6032020, 1007760, 1863750, -6016600, 1000450, 1843970, -5995890, 1149260, 1835200, -6013040, 1071560, 1872090, -5979220, 1189670, 1843970, -5995890, 1149260, 1863750, -6016600, 1000450, 1872090, -5979220, 1189670, 1863750, -6016600, 1000450, 1879540, -6019880, 950209, 1933600, -5941810, 1275030, 1910600, -5960690, 1220810, 1934260, -5979360, 1085610, 2953980, -5527870, 1178110, 2837850, -5588700, 1176600, 2874470, -5576370, 1146e3, 3057660, -5523840, 901688, 3011480, -5549150, 901688, 3035770, -5570380, 657756, 3067360, -5495280, 1032800, 2990040, -5527390, 1086420, 3011480, -5549150, 901688, 3067360, -5495280, 1032800, 3011480, -5549150, 901688, 3057660, -5523840, 901688, -1692990, 5634100, 2455730, -1600760, 5652830, 2474360, -1643360, 5775930, 2141890, -1692990, 5634100, 2455730, -1643360, 5775930, 2141890, -1684410, 5662160, 2396800, -1716760, 5716800, 2240020, -1684410, 5662160, 2396800, -1643360, 5775930, 2141890, -1736340, 5664090, 2355090, -1684410, 5662160, 2396800, -1716760, 5716800, 2240020, -1838900, 5642800, 2328390, -1736340, 5664090, 2355090, -1716760, 5716800, 2240020, -1715930, 5820090, 1958820, -1628060, 5806770, 2069440, -1661310, 5842900, 1938010, -1715930, 5820090, 1958820, -1661310, 5842900, 1938010, -1701610, 5830010, 1941830, -1701610, 5830010, 1941830, -1661310, 5842900, 1938010, -1669770, 5851700, 1904130, -1628060, 5806770, 2069440, -1574160, 5836120, 2028460, -1644920, 5848060, 1936460, -1628060, 5806770, 2069440, -1644920, 5848060, 1936460, -1661310, 5842900, 1938010, -1669770, 5851700, 1904130, -1661310, 5842900, 1938010, -1644920, 5848060, 1936460, -1628060, 5806770, 2069440, -1548830, 5650330, 2512570, -1574160, 5836120, 2028460, -1600760, 5652830, 2474360, -1548830, 5650330, 2512570, -1628060, 5806770, 2069440, -1643360, 5775930, 2141890, -1600760, 5652830, 2474360, -1628060, 5806770, 2069440, -1535030, 5800440, 2155900, -1470420, 5695140, 2458280, -1487360, 5778230, 2246430, -1548830, 5650330, 2512570, -1470420, 5695140, 2458280, -1535030, 5800440, 2155900, -1548830, 5650330, 2512570, -1535030, 5800440, 2155900, -1574160, 5836120, 2028460, -1574160, 5836120, 2028460, -1535030, 5800440, 2155900, -1472550, 5826720, 2128610, -1873e3, 5943670, 1353870, -1702750, 6012990, 1270580, -1752440, 6012330, 1204860, -1873e3, 5943670, 1353870, -1752440, 6012330, 1204860, -1776640, 6034580, 1049110, -1776640, 6034580, 1049110, -1752440, 6012330, 1204860, -1642360, 6044900, 1196980, -1776640, 6034580, 1049110, -1642360, 6044900, 1196980, -1649140, 6087470, 947417, -1642360, 6044900, 1196980, -1634320, 6067170, 1091370, -1649140, 6087470, 947417, -1649140, 6087470, 947417, -1634320, 6067170, 1091370, -1607730, 6087170, 1017480, -2054400, 5854980, 1471290, -1991110, 5823190, 1669650, -2054500, 5899730, 1281340, -2054500, 5899730, 1281340, -1991110, 5823190, 1669650, -1972920, 5942600, 1209910, -1991110, 5823190, 1669650, -1921680, 5821190, 1755200, -1972920, 5942600, 1209910, -1972920, 5942600, 1209910, -1921680, 5821190, 1755200, -1876880, 5911310, 1483070, -1921680, 5821190, 1755200, -1857910, 5869320, 1661700, -1876880, 5911310, 1483070, -1876880, 5911310, 1483070, -1857910, 5869320, 1661700, -1847650, 5901990, 1554700, -1972920, 5942600, 1209910, -1876880, 5911310, 1483070, -1873e3, 5943670, 1353870, -1972920, 5942600, 1209910, -1873e3, 5943670, 1353870, -1857690, 5993450, 1139930, -1873e3, 5943670, 1353870, -1776640, 6034580, 1049110, -1857690, 5993450, 1139930, -1921680, 5821190, 1755200, -1823540, 5832470, 1820790, -1857910, 5869320, 1661700, -1857910, 5869320, 1661700, -1823540, 5832470, 1820790, -1825840, 5857430, 1736990, -1823540, 5832470, 1820790, -1742160, 5860380, 1810910, -1825840, 5857430, 1736990, -1727320, 5821630, 1944270, -1715930, 5820090, 1958820, -1718650, 5824470, 1943450, -1727320, 5821630, 1944270, -1718650, 5824470, 1943450, -1742160, 5860380, 1810910, -1727320, 5821630, 1944270, -1742160, 5860380, 1810910, -1823540, 5832470, 1820790, -1470420, 5695140, 2458280, -1374760, 5724070, 2446490, -1487360, 5778230, 2246430, -1487360, 5778230, 2246430, -1374760, 5724070, 2446490, -1362810, 5808550, 2247250, -1374760, 5724070, 2446490, -1309210, 5783540, 2341020, -1362810, 5808550, 2247250, -1374760, 5724070, 2446490, -1294860, 5742460, 2447e3, -1309210, 5783540, 2341020, -1309210, 5783540, 2341020, -1294860, 5742460, 2447e3, -1243170, 5764480, 2422060, -1718650, 5824470, 1943450, -1715930, 5820090, 1958820, -1701610, 5830010, 1941830, -1701610, 5830010, 1941830, -1669770, 5851700, 1904130, -1742160, 5860380, 1810910, -1701610, 5830010, 1941830, -1742160, 5860380, 1810910, -1718650, 5824470, 1943450, -1642360, 6044900, 1196980, -1552860, 6077040, 1153200, -1634320, 6067170, 1091370, -1574160, 5836120, 2028460, -1472550, 5826720, 2128610, -1446630, 5846860, 2091080, -5969470, 1321760, -1810220, -5983830, 1357630, -1735220, -5974960, 1359670, -1763740, -5981030, 1288230, -1796270, -5983830, 1357630, -1735220, -5969470, 1321760, -1810220, -5989550, 1353100, -1719050, -6008700, 1375290, -1633030, -5986780, 1382050, -1705690, -6008700, 1375290, -1633030, -5980150, 1403400, -1711470, -5986780, 1382050, -1705690, -6008700, 1375290, -1633030, -5984590, 1420210, -1682030, -5980150, 1403400, -1711470, -6008700, 1375290, -1633030, -6005430, 1427480, -1600150, -5984590, 1420210, -1682030, 4512930, 4245550, 1508020, 4454010, 4185290, 1817550, 4519290, 4227290, 1539700, 4454010, 4185290, 1817550, 4518760, 4197950, 1618950, 4519290, 4227290, 1539700, 4454010, 4185290, 1817550, 4499930, 4170440, 1737330, 4518760, 4197950, 1618950, 4518760, 4197950, 1618950, 4499930, 4170440, 1737330, 4515460, 4182100, 1668090, 4499930, 4170440, 1737330, 4513020, 4164850, 1716810, 4515460, 4182100, 1668090, 3669250, 4888520, 1815870, 3683370, 4849530, 1889810, 3735840, 4848500, 1787370, 3683370, 4849530, 1889810, 3760580, 4846660, 1740170, 3735840, 4848500, 1787370, 3683370, 4849530, 1889810, 3714150, 4753900, 2063350, 3760580, 4846660, 1740170, 3760580, 4846660, 1740170, 3714150, 4753900, 2063350, 3768850, 4853210, 1703860, 3768850, 4853210, 1703860, 3714150, 4753900, 2063350, 3860390, 4796640, 1658830, 4001270, 4697260, 1608960, 3957540, 4571400, 2023190, 4086970, 4648700, 1533330, 3714150, 4753900, 2063350, 3957540, 4571400, 2023190, 4001270, 4697260, 1608960, 3714150, 4753900, 2063350, 4001270, 4697260, 1608960, 3860390, 4796640, 1658830, 4200700, 4560950, 1489170, 4162100, 4463310, 1847540, 4174100, 4437200, 1882790, 4121960, 4493080, 1865180, 4162100, 4463310, 1847540, 4200700, 4560950, 1489170, 4146620, 4595420, 1533750, 4121960, 4493080, 1865180, 4200700, 4560950, 1489170, 4041960, 4518030, 1975920, 4121960, 4493080, 1865180, 4146620, 4595420, 1533750, 4123550, 4618250, 1527410, 4041960, 4518030, 1975920, 4146620, 4595420, 1533750, 3957540, 4571400, 2023190, 4041960, 4518030, 1975920, 4123550, 4618250, 1527410, 3957540, 4571400, 2023190, 4123550, 4618250, 1527410, 4086970, 4648700, 1533330, 4254580, 4517550, 1468460, 4204820, 4410360, 1877510, 4321240, 4455680, 1462870, 4174100, 4437200, 1882790, 4204820, 4410360, 1877510, 4254580, 4517550, 1468460, 4200700, 4560950, 1489170, 4174100, 4437200, 1882790, 4254580, 4517550, 1468460, 4363410, 4425770, 1428300, 4276320, 4336450, 1888080, 4287850, 4320400, 1898640, 4204820, 4410360, 1877510, 4276320, 4336450, 1888080, 4363410, 4425770, 1428300, 4204820, 4410360, 1877510, 4363410, 4425770, 1428300, 4341850, 4437630, 1456740, 4204820, 4410360, 1877510, 4341850, 4437630, 1456740, 4321240, 4455680, 1462870, 4363410, 4425770, 1428300, 4287850, 4320400, 1898640, 4384890, 4407050, 1420440, 4287850, 4320400, 1898640, 4401210, 4399600, 1393e3, 4384890, 4407050, 1420440, 4287850, 4320400, 1898640, 4438660, 4361040, 1395390, 4401210, 4399600, 1393e3, 4287850, 4320400, 1898640, 4465270, 4338510, 1380740, 4438660, 4361040, 1395390, 4287850, 4320400, 1898640, 4374540, 4233690, 1896220, 4465270, 4338510, 1380740, 4465270, 4338510, 1380740, 4374540, 4233690, 1896220, 4396680, 4215010, 1886670, 4465270, 4338510, 1380740, 4396680, 4215010, 1886670, 4516460, 4283420, 1386230, 4396680, 4215010, 1886670, 4420510, 4177460, 1914120, 4516460, 4283420, 1386230, 4516460, 4283420, 1386230, 4420510, 4177460, 1914120, 4512930, 4245550, 1508020, 4420510, 4177460, 1914120, 4454010, 4185290, 1817550, 4512930, 4245550, 1508020, 4420510, 4177460, 1914120, 4451620, 4168050, 1862190, 4454010, 4185290, 1817550, 4516460, 4283420, 1386230, 4512930, 4245550, 1508020, 4525320, 4252960, 1449220, 4454010, 4185290, 1817550, 4493320, 4157840, 1783700, 4499930, 4170440, 1737330, 4518760, 4197950, 1618950, 4515460, 4182100, 1668090, 4531080, 4167260, 1662890, 5231680, 1656260, -3239790, 5338800, 1671800, -3052890, 5365340, 1662790, -3011270, 5321830, 1712360, -3059970, 5338800, 1671800, -3052890, 5231680, 1656260, -3239790, 5161360, 1699140, -3328550, 5321830, 1712360, -3059970, 5231680, 1656260, -3239790, 5293100, 1767440, -3078310, 5321830, 1712360, -3059970, 5161360, 1699140, -3328550, 5293100, 1767440, -3078310, 5161360, 1699140, -3328550, 5117700, 1687360, -3400690, 5293100, 1767440, -3078310, 5117700, 1687360, -3400690, 5068930, 1671490, -3480090, 5068930, 1671490, -3480090, 5117700, 1687360, -3400690, 5116780, 1655160, -3417730, 4982980, 1701710, -3587200, 5293100, 1767440, -3078310, 5022050, 1673010, -3546250, 5293100, 1767440, -3078310, 5015260, 1666160, -3558990, 5022050, 1673010, -3546250, 5293100, 1767440, -3078310, 5068930, 1671490, -3480090, 5015260, 1666160, -3558990, 5015260, 1666160, -3558990, 5068930, 1671490, -3480090, 5034940, 1659740, -3534280, 4735200, 2982300, -3049870, 4822050, 2997740, -2895770, 4747240, 2911510, -3098820, 4735200, 2982300, -3049870, 4830270, 3026700, -2851900, 4822050, 2997740, -2895770, 4771890, 3049440, -2924540, 4830270, 3026700, -2851900, 4735200, 2982300, -3049870, 4771890, 3049440, -2924540, 4735200, 2982300, -3049870, 4741840, 3016480, -3005920, 4994170, 2959320, -2633360, 4736940, 2803960, -3210970, 4916840, 2916690, -2818640, 4994170, 2959320, -2633360, 4916840, 2916690, -2818640, 4993120, 2961080, -2633360, 4993120, 2961080, -2633360, 5083990, 3013840, -2389970, 4994170, 2959320, -2633360, 4901630, 2908750, -2852890, 4916840, 2916690, -2818640, 4736940, 2803960, -3210970, 4747790, 2841700, -3161730, 4901630, 2908750, -2852890, 4736940, 2803960, -3210970, 4847750, 2945480, -2906410, 4901630, 2908750, -2852890, 4747790, 2841700, -3161730, 4750440, 2891220, -3112800, 4847750, 2945480, -2906410, 4747790, 2841700, -3161730, 4822050, 2997740, -2895770, 4847750, 2945480, -2906410, 4750440, 2891220, -3112800, 4822050, 2997740, -2895770, 4750440, 2891220, -3112800, 4747240, 2911510, -3098820, 4729270, 2736580, -3279220, 5032550, 2893570, -2633360, 5047450, 2867500, -2633360, 5128430, 2941720, -2384900, 5149590, 2905460, -2383780, 5047450, 2867500, -2633360, 5128430, 2941720, -2384900, 5047450, 2867500, -2633360, 5032550, 2893570, -2633360, 5014440, 2924850, -2633360, 5032550, 2893570, -2633360, 4729270, 2736580, -3279220, 5097290, 2981350, -2402270, 5128430, 2941720, -2384900, 5032550, 2893570, -2633360, 5097290, 2981350, -2402270, 5032550, 2893570, -2633360, 5014440, 2924850, -2633360, 5014440, 2924850, -2633360, 4729270, 2736580, -3279220, 4736940, 2803960, -3210970, 5014440, 2924850, -2633360, 4736940, 2803960, -3210970, 5006650, 2938150, -2633360, 5006650, 2938150, -2633360, 5097290, 2981350, -2402270, 5014440, 2924850, -2633360, 4994170, 2959320, -2633360, 5006650, 2938150, -2633360, 4736940, 2803960, -3210970, 5083990, 3013840, -2389970, 5097290, 2981350, -2402270, 5006650, 2938150, -2633360, 5083990, 3013840, -2389970, 5006650, 2938150, -2633360, 4994170, 2959320, -2633360, 4729780, 2613740, -3376590, 4838790, 2665470, -3177100, 4856830, 2614160, -3192060, 4846630, 2688570, -3145750, 4838790, 2665470, -3177100, 4729780, 2613740, -3376590, 4729270, 2736580, -3279220, 4846630, 2688570, -3145750, 4729780, 2613740, -3376590, 4729270, 2736580, -3279220, 4855310, 2727480, -3098820, 4846630, 2688570, -3145750, 5057720, 2849350, -2633360, 4855310, 2727480, -3098820, 4729270, 2736580, -3279220, 5057720, 2849350, -2633360, 4729270, 2736580, -3279220, 5047450, 2867500, -2633360, 5047450, 2867500, -2633360, 5149590, 2905460, -2383780, 5057720, 2849350, -2633360, 5063950, 2838260, -2633360, 4885970, 2705920, -3069600, 4855310, 2727480, -3098820, 5063950, 2838260, -2633360, 4855310, 2727480, -3098820, 5057720, 2849350, -2633360, 5149590, 2905460, -2383780, 5063950, 2838260, -2633360, 5057720, 2849350, -2633360, 5072400, 2823130, -2633360, 4920900, 2676470, -3039670, 4885970, 2705920, -3069600, 5072400, 2823130, -2633360, 4885970, 2705920, -3069600, 5063950, 2838260, -2633360, 5149590, 2905460, -2383780, 5072400, 2823130, -2633360, 5063950, 2838260, -2633360, 4730140, 2538380, -3432720, 4860510, 2557170, -3232100, 4738800, 2463140, -3475050, 4730140, 2538380, -3432720, 4849400, 2590120, -3222620, 4860510, 2557170, -3232100, 4856830, 2614160, -3192060, 4849400, 2590120, -3222620, 4730140, 2538380, -3432720, 4729780, 2613740, -3376590, 4856830, 2614160, -3192060, 4730140, 2538380, -3432720, 4860510, 2557170, -3232100, 4931860, 2512830, -3158460, 4738800, 2463140, -3475050, 4738800, 2463140, -3475050, 4931860, 2512830, -3158460, 4761710, 2365750, -3510960, 4931860, 2512830, -3158460, 5192910, 2587480, -2640490, 4761710, 2365750, -3510960, 5193270, 2594080, -2633360, 5192910, 2587480, -2640490, 4931860, 2512830, -3158460, 5193270, 2594080, -2633360, 4931860, 2512830, -3158460, 5181650, 2617200, -2633360, 5181650, 2617200, -2633360, 5194630, 2622450, -2602620, 5193270, 2594080, -2633360, 5167740, 2644570, -2633360, 5181650, 2617200, -2633360, 4931860, 2512830, -3158460, 5205920, 2666230, -2535140, 5194630, 2622450, -2602620, 5181650, 2617200, -2633360, 5205920, 2666230, -2535140, 5181650, 2617200, -2633360, 5167740, 2644570, -2633360, 5167740, 2644570, -2633360, 4931860, 2512830, -3158460, 4938970, 2574620, -3097400, 5167740, 2644570, -2633360, 4938970, 2574620, -3097400, 5163610, 2652620, -2633360, 5163610, 2652620, -2633360, 5205920, 2666230, -2535140, 5167740, 2644570, -2633360, 5192910, 2587480, -2640490, 5213920, 2536440, -2648560, 4761710, 2365750, -3510960, 4761710, 2365750, -3510960, 5213920, 2536440, -2648560, 4779700, 2321900, -3515770, 5213920, 2536440, -2648560, 4769490, 2303670, -3541350, 4779700, 2321900, -3515770, 5213920, 2536440, -2648560, 5201560, 2510710, -2696610, 4769490, 2303670, -3541350, 4810540, 2210350, -3545270, 5246270, 2359010, -2746180, 5278e3, 2320570, -2718180, 5210080, 2432290, -2751120, 5246270, 2359010, -2746180, 4810540, 2210350, -3545270, 4801920, 2256840, -3527750, 5210080, 2432290, -2751120, 4810540, 2210350, -3545270, 5192660, 2495120, -2727850, 5210080, 2432290, -2751120, 4801920, 2256840, -3527750, 4769490, 2303670, -3541350, 5192660, 2495120, -2727850, 4801920, 2256840, -3527750, 4769490, 2303670, -3541350, 5201560, 2510710, -2696610, 5192660, 2495120, -2727850, 4877660, 2069260, -3538760, 5309320, 2234480, -2729220, 5297540, 2202930, -2777010, 5300210, 2283960, -2706020, 5309320, 2234480, -2729220, 4877660, 2069260, -3538760, 4862420, 2123730, -3527530, 5300210, 2283960, -2706020, 4877660, 2069260, -3538760, 5278e3, 2320570, -2718180, 5300210, 2283960, -2706020, 4862420, 2123730, -3527530, 4810540, 2210350, -3545270, 5278e3, 2320570, -2718180, 4862420, 2123730, -3527530, 4895480, 2035200, -3533940, 5300050, 2099070, -2851180, 4908510, 1937750, -3570210, 4895480, 2035200, -3533940, 5301960, 2153550, -2806940, 5300050, 2099070, -2851180, 5297540, 2202930, -2777010, 5301960, 2153550, -2806940, 4895480, 2035200, -3533940, 4877660, 2069260, -3538760, 5297540, 2202930, -2777010, 4895480, 2035200, -3533940, 5300050, 2099070, -2851180, 5321120, 2030830, -2861270, 4908510, 1937750, -3570210, 4908510, 1937750, -3570210, 5321120, 2030830, -2861270, 4927560, 1860900, -3584720, 5321120, 2030830, -2861270, 5345310, 2016250, -2826510, 4927560, 1860900, -3584720, 4927560, 1860900, -3584720, 5345310, 2016250, -2826510, 5433050, 1995280, -2670840, 5369910, 2035400, -2765920, 5433050, 1995280, -2670840, 5345310, 2016250, -2826510, 4924980, 1799490, -3619220, 5276650, 1909570, -3021530, 4937670, 1759820, -3621420, 4924980, 1799490, -3619220, 5448960, 1972040, -2655740, 5276650, 1909570, -3021530, 5433050, 1995280, -2670840, 5448960, 1972040, -2655740, 4924980, 1799490, -3619220, 4927560, 1860900, -3584720, 5433050, 1995280, -2670840, 4924980, 1799490, -3619220, 4971770, 1730700, -3588870, 5280010, 1818270, -3071230, 4982980, 1701710, -3587200, 5276650, 1909570, -3021530, 5280010, 1818270, -3071230, 4971770, 1730700, -3588870, 5276650, 1909570, -3021530, 4971770, 1730700, -3588870, 4937670, 1759820, -3621420, 5291480, 1624120, -3158460, 5390400, 1629920, -2984550, 5378890, 1577480, -3032780, 5365340, 1662790, -3011270, 5390400, 1629920, -2984550, 5291480, 1624120, -3158460, 5365340, 1662790, -3011270, 5291480, 1624120, -3158460, 5291300, 1624220, -3158710, 5231680, 1656260, -3239790, 5365340, 1662790, -3011270, 5291300, 1624220, -3158710, 4971020, 2998040, -2633360, 4925830, 2964900, -2752300, 4913730, 2991500, -2745180, 4971020, 2998040, -2633360, 4913730, 2991500, -2745180, 4960920, 3014720, -2633360, 4960920, 3014720, -2633360, 5052240, 3058710, -2400210, 4971020, 2998040, -2633360, 4948560, 3034980, -2633360, 4960920, 3014720, -2633360, 4913730, 2991500, -2745180, 4974750, 3068920, -2543740, 5052240, 3058710, -2400210, 4960920, 3014720, -2633360, 4974750, 3068920, -2543740, 4960920, 3014720, -2633360, 4948560, 3034980, -2633360, 4948560, 3034980, -2633360, 4913730, 2991500, -2745180, 4898870, 3031800, -2727600, 4948560, 3034980, -2633360, 4898870, 3031800, -2727600, 4938510, 3051300, -2633360, 4938510, 3051300, -2633360, 4974750, 3068920, -2543740, 4948560, 3034980, -2633360, 4879710, 3030010, -2763450, 4898870, 3031800, -2727600, 4913730, 2991500, -2745180, 4973630, 2993710, -2633360, 4918640, 2949540, -2781310, 4925830, 2964900, -2752300, 4973630, 2993710, -2633360, 4925830, 2964900, -2752300, 4971020, 2998040, -2633360, 5052240, 3058710, -2400210, 4973630, 2993710, -2633360, 4971020, 2998040, -2633360, 4980820, 2981740, -2633360, 4916840, 2916690, -2818640, 4918640, 2949540, -2781310, 4980820, 2981740, -2633360, 4918640, 2949540, -2781310, 4973630, 2993710, -2633360, 5052240, 3058710, -2400210, 4980820, 2981740, -2633360, 4973630, 2993710, -2633360, 4980820, 2981740, -2633360, 4993120, 2961080, -2633360, 4916840, 2916690, -2818640, 5052240, 3058710, -2400210, 5083990, 3013840, -2389970, 4993120, 2961080, -2633360, 5052240, 3058710, -2400210, 4993120, 2961080, -2633360, 4980820, 2981740, -2633360, 5130950, 2715260, -2633360, 4938970, 2574620, -3097400, 4932970, 2631120, -3059500, 5130950, 2715260, -2633360, 4932970, 2631120, -3059500, 5124010, 2728330, -2633360, 5124010, 2728330, -2633360, 5192260, 2762770, -2459150, 5130950, 2715260, -2633360, 5080250, 2808980, -2633360, 5124010, 2728330, -2633360, 4932970, 2631120, -3059500, 5149590, 2905460, -2383780, 5192260, 2762770, -2459150, 5124010, 2728330, -2633360, 5149590, 2905460, -2383780, 5124010, 2728330, -2633360, 5080250, 2808980, -2633360, 5080250, 2808980, -2633360, 4932970, 2631120, -3059500, 4920900, 2676470, -3039670, 5080250, 2808980, -2633360, 4920900, 2676470, -3039670, 5072400, 2823130, -2633360, 5149590, 2905460, -2383780, 5080250, 2808980, -2633360, 5072400, 2823130, -2633360, 5130950, 2715260, -2633360, 5163610, 2652620, -2633360, 4938970, 2574620, -3097400, 5192260, 2762770, -2459150, 5205920, 2666230, -2535140, 5163610, 2652620, -2633360, 5192260, 2762770, -2459150, 5163610, 2652620, -2633360, 5130950, 2715260, -2633360, 4928240, 3067860, -2633360, 4938510, 3051300, -2633360, 4898870, 3031800, -2727600, 4933590, 3074550, -2615610, 4974750, 3068920, -2543740, 4938510, 3051300, -2633360, 4933590, 3074550, -2615610, 4938510, 3051300, -2633360, 4928240, 3067860, -2633360, 5280010, 1818270, -3071230, 5293100, 1767440, -3078310, 4982980, 1701710, -3587200, 4789440, 3090140, -2852740, 4830270, 3026700, -2851900, 4771890, 3049440, -2924540, 5692620, 2544040, -1338100, 5691100, 2525620, -1378560, 5679650, 2530650, -1415810, 5692620, 2544040, -1338100, 5679650, 2530650, -1415810, 5563430, 2480940, -1884110, 5563430, 2480940, -1884110, 5679650, 2530650, -1415810, 5591400, 2398210, -1908120, 5679650, 2530650, -1415810, 5637240, 2342230, -1842090, 5591400, 2398210, -1908120, 5679650, 2530650, -1415810, 5768130, 2322740, -1414450, 5637240, 2342230, -1842090, 5692620, 2544040, -1338100, 5714940, 2546600, -1234760, 5710220, 2530920, -1287340, 5709790, 2572940, -1203790, 5714940, 2546600, -1234760, 5692620, 2544040, -1338100, 5533270, 2542950, -1890200, 5709790, 2572940, -1203790, 5692620, 2544040, -1338100, 5533270, 2542950, -1890200, 5701180, 2575920, -1237530, 5709790, 2572940, -1203790, 5680390, 2622690, -1234910, 5701180, 2575920, -1237530, 5533270, 2542950, -1890200, 5447840, 3189340, -907866, 5420890, 3081500, -1336750, 5393580, 3076390, -1453120, 5447840, 3189340, -907866, 5393580, 3076390, -1453120, 5331950, 3100710, -1618300, 5309030, 3099160, -1694310, 5331950, 3100710, -1618300, 5393580, 3076390, -1453120, 5309030, 3099160, -1694310, 5393580, 3076390, -1453120, 5346e3, 3026690, -1708900, 5393580, 3076390, -1453120, 5365280, 2967600, -1751310, 5346e3, 3026690, -1708900, 5393580, 3076390, -1453120, 5434370, 3004180, -1452230, 5365280, 2967600, -1751310, 5398580, 2822090, -1883590, 5537500, 2869e3, -1331760, 5559310, 2852730, -1275030, 5495760, 2941260, -1346870, 5537500, 2869e3, -1331760, 5398580, 2822090, -1883590, 5378350, 2916310, -1796490, 5495760, 2941260, -1346870, 5398580, 2822090, -1883590, 5467770, 2971680, -1392900, 5495760, 2941260, -1346870, 5378350, 2916310, -1796490, 5362180, 2951040, -1788140, 5467770, 2971680, -1392900, 5378350, 2916310, -1796490, 5434370, 3004180, -1452230, 5467770, 2971680, -1392900, 5362180, 2951040, -1788140, 5365280, 2967600, -1751310, 5434370, 3004180, -1452230, 5362180, 2951040, -1788140, 5440650, 2698620, -1942170, 5624360, 2713150, -1294130, 5649180, 2684610, -1244920, 5583060, 2790070, -1309220, 5624360, 2713150, -1294130, 5440650, 2698620, -1942170, 5421760, 2727670, -1954300, 5583060, 2790070, -1309220, 5440650, 2698620, -1942170, 5559310, 2852730, -1275030, 5583060, 2790070, -1309220, 5421760, 2727670, -1954300, 5559310, 2852730, -1275030, 5421760, 2727670, -1954300, 5406300, 2759920, -1951860, 5398580, 2822090, -1883590, 5559310, 2852730, -1275030, 5406300, 2759920, -1951860, 5440650, 2698620, -1942170, 5649180, 2684610, -1244920, 5495600, 2593560, -1930630, 5649180, 2684610, -1244920, 5505990, 2577370, -1922750, 5495600, 2593560, -1930630, 5649180, 2684610, -1244920, 5508840, 2577830, -1914e3, 5505990, 2577370, -1922750, 5649180, 2684610, -1244920, 5680390, 2622690, -1234910, 5508840, 2577830, -1914e3, 5179280, 3391030, -1529970, 5215950, 3347060, -1502140, 5331950, 3100710, -1618300, 5215950, 3347060, -1502140, 5447840, 3189340, -907866, 5331950, 3100710, -1618300, 5215950, 3347060, -1502140, 5424390, 3225890, -919002, 5447840, 3189340, -907866, 5215950, 3347060, -1502140, 5397170, 3263210, -946850, 5424390, 3225890, -919002, 5215950, 3347060, -1502140, 5371970, 3299210, -965160, 5397170, 3263210, -946850, 5215950, 3347060, -1502140, 5332620, 3357070, -983554, 5371970, 3299210, -965160, 5294700, 3406890, -1016350, 5332620, 3357070, -983554, 5215950, 3347060, -1502140, 5217900, 3387480, -1402100, 5294700, 3406890, -1016350, 5215950, 3347060, -1502140, 5431870, 3053400, -1356410, 5518020, 3017730, -1057300, 5476680, 2991240, -1314330, 5431870, 3053400, -1356410, 5531280, 3032670, -939411, 5518020, 3017730, -1057300, 5431870, 3053400, -1356410, 5518740, 3059450, -926336, 5531280, 3032670, -939411, 5447840, 3189340, -907866, 5518740, 3059450, -926336, 5431870, 3053400, -1356410, 5447840, 3189340, -907866, 5431870, 3053400, -1356410, 5420890, 3081500, -1336750, 5476680, 2991240, -1314330, 5506970, 2989550, -1186190, 5494290, 2967320, -1295060, 5518020, 3017730, -1057300, 5506970, 2989550, -1186190, 5476680, 2991240, -1314330, 5230590, 3460180, -1157450, 5259670, 3445950, -1065020, 5236230, 3441560, -1186900, 5236230, 3441560, -1186900, 5259670, 3445950, -1065020, 5233680, 3413650, -1274870, 5259670, 3445950, -1065020, 5217900, 3387480, -1402100, 5233680, 3413650, -1274870, 5259670, 3445950, -1065020, 5294700, 3406890, -1016350, 5217900, 3387480, -1402100, 5709790, 2572940, -1203790, 5725670, 2538720, -1201060, 5714940, 2546600, -1234760, 5531280, 3032670, -939411, 5536760, 2999950, -1009170, 5518020, 3017730, -1057300, 5206250, 3420700, -1364520, 5233680, 3413650, -1274870, 5217900, 3387480, -1402100, 5533270, 2542950, -1890200, 5692620, 2544040, -1338100, 5563430, 2480940, -1884110, 5508840, 2577830, -1914e3, 5680390, 2622690, -1234910, 5533270, 2542950, -1890200, 5637240, 2342230, -1842090, 5768130, 2322740, -1414450, 5688270, 2285260, -1755270, 5050440, 3251380, -2138080, 5068790, 3243120, -2107190, 5038070, 3229380, -2199320, 5038070, 3229380, -2199320, 5068790, 3243120, -2107190, 5043610, 3214210, -2208770, 5089090, 3261480, -2029e3, 5043610, 3214210, -2208770, 5068790, 3243120, -2107190, 5089090, 3261480, -2029e3, 5171830, 3273060, -1788400, 5043610, 3214210, -2208770, 5133440, 3314310, -1822480, 5171830, 3273060, -1788400, 5089090, 3261480, -2029e3, 5219390, 3215580, -1754390, 5069460, 3073890, -2344230, 5043520, 3119870, -2339470, 5219390, 3215580, -1754390, 5043520, 3119870, -2339470, 5034410, 3175860, -2283430, 5043520, 3119870, -2339470, 5069460, 3073890, -2344230, 5052240, 3058710, -2400210, 5034410, 3175860, -2283430, 5200780, 3231160, -1780680, 5219390, 3215580, -1754390, 5171830, 3273060, -1788400, 5200780, 3231160, -1780680, 5034410, 3175860, -2283430, 5043610, 3214210, -2208770, 5171830, 3273060, -1788400, 5034410, 3175860, -2283430, 5365280, 2967600, -1751310, 5362180, 2951040, -1788140, 5158690, 2907830, -2361260, 5365280, 2967600, -1751310, 5158690, 2907830, -2361260, 5158420, 2908350, -2361200, 5149590, 2905460, -2383780, 5158420, 2908350, -2361200, 5158690, 2907830, -2361260, 5346e3, 3026690, -1708900, 5365280, 2967600, -1751310, 5158420, 2908350, -2361200, 5346e3, 3026690, -1708900, 5158420, 2908350, -2361200, 5157440, 2910240, -2361010, 5157440, 2910240, -2361010, 5158420, 2908350, -2361200, 5149590, 2905460, -2383780, 5138750, 2946050, -2357360, 5346e3, 3026690, -1708900, 5157440, 2910240, -2361010, 5157440, 2910240, -2361010, 5149590, 2905460, -2383780, 5128430, 2941720, -2384900, 5157440, 2910240, -2361010, 5128430, 2941720, -2384900, 5138750, 2946050, -2357360, 5309030, 3099160, -1694310, 5346e3, 3026690, -1708900, 5138750, 2946050, -2357360, 5309030, 3099160, -1694310, 5138750, 2946050, -2357360, 5137250, 2948910, -2357070, 5137250, 2948910, -2357070, 5138750, 2946050, -2357360, 5128430, 2941720, -2384900, 5114770, 2991160, -2352740, 5309030, 3099160, -1694310, 5137250, 2948910, -2357070, 5137250, 2948910, -2357070, 5128430, 2941720, -2384900, 5097290, 2981350, -2402270, 5137250, 2948910, -2357070, 5097290, 2981350, -2402270, 5114770, 2991160, -2352740, 5295890, 3099510, -1734040, 5309030, 3099160, -1694310, 5114770, 2991160, -2352740, 5295890, 3099510, -1734040, 5114770, 2991160, -2352740, 5114540, 2991580, -2352700, 5114540, 2991580, -2352700, 5114770, 2991160, -2352740, 5097290, 2981350, -2402270, 5099e3, 3020320, -2349750, 5295890, 3099510, -1734040, 5114540, 2991580, -2352700, 5114540, 2991580, -2352700, 5097290, 2981350, -2402270, 5083990, 3013840, -2389970, 5114540, 2991580, -2352700, 5083990, 3013840, -2389970, 5099e3, 3020320, -2349750, 5250730, 3176590, -1731930, 5295890, 3099510, -1734040, 5099e3, 3020320, -2349750, 5250730, 3176590, -1731930, 5099e3, 3020320, -2349750, 5096400, 3025080, -2349270, 5096400, 3025080, -2349270, 5099e3, 3020320, -2349750, 5083990, 3013840, -2389970, 5071520, 3070200, -2344610, 5250730, 3176590, -1731930, 5096400, 3025080, -2349270, 5096400, 3025080, -2349270, 5083990, 3013840, -2389970, 5052240, 3058710, -2400210, 5096400, 3025080, -2349270, 5052240, 3058710, -2400210, 5071520, 3070200, -2344610, 5219390, 3215580, -1754390, 5250730, 3176590, -1731930, 5071520, 3070200, -2344610, 5219390, 3215580, -1754390, 5071520, 3070200, -2344610, 5069460, 3073890, -2344230, 5069460, 3073890, -2344230, 5071520, 3070200, -2344610, 5052240, 3058710, -2400210, 5197920, 2856960, -2337360, 5378350, 2916310, -1796490, 5241520, 2789480, -2321550, 5362180, 2951040, -1788140, 5378350, 2916310, -1796490, 5197920, 2856960, -2337360, 5362180, 2951040, -1788140, 5197920, 2856960, -2337360, 5170680, 2884490, -2363630, 5362180, 2951040, -1788140, 5170680, 2884490, -2363630, 5158690, 2907830, -2361260, 5149590, 2905460, -2383780, 5158690, 2907830, -2361260, 5170680, 2884490, -2363630, 5314880, 2742800, -2208370, 5406300, 2759920, -1951860, 5421760, 2727670, -1954300, 5398580, 2822090, -1883590, 5406300, 2759920, -1951860, 5314880, 2742800, -2208370, 5290540, 2780510, -2219540, 5398580, 2822090, -1883590, 5314880, 2742800, -2208370, 5378350, 2916310, -1796490, 5398580, 2822090, -1883590, 5290540, 2780510, -2219540, 5378350, 2916310, -1796490, 5290540, 2780510, -2219540, 5278220, 2774320, -2256070, 5378350, 2916310, -1796490, 5278220, 2774320, -2256070, 5241520, 2789480, -2321550, 5314880, 2742800, -2208370, 5421760, 2727670, -1954300, 5440650, 2698620, -1942170, 5314880, 2742800, -2208370, 5440650, 2698620, -1942170, 5405050, 2655490, -2094e3, 5440650, 2698620, -1942170, 5438320, 2634890, -2033430, 5405050, 2655490, -2094e3, 5440650, 2698620, -1942170, 5453220, 2618510, -2014720, 5438320, 2634890, -2033430, 5440650, 2698620, -1942170, 5495600, 2593560, -1930630, 5453220, 2618510, -2014720, 5098220, 3291860, -1956180, 5133440, 3314310, -1822480, 5089090, 3261480, -2029e3],
                                itemSize: 3,
                                type: "ARRAY_BUFFER"
                            }
                        }, name: "", primitives: [{count: 64380, first: 0, mode: "TRIANGLES"}]
                    }],
                    name: "continents.osg",
                    stateset: {
                        material: {
                            ambient: [.2, .2, .2, 1],
                            diffuse: [.840188, .394383, .783099, 1],
                            emission: [0, 0, 0, 1],
                            name: "",
                            shininess: 0,
                            specular: [0, 0, 0, 1]
                        }
                    }
                }]
            }
        }

        var h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M, S, A, T, E, C, P, L, D, R, F, U, V, z, B, N, O, k, I, G, W,
            H, j, X, q, Y, K, Z, Q, J, $ = {REVISION: "67"};
        self.console = self.console || {
            info: function () {
            }, log: function () {
            }, debug: function () {
            }, warn: function () {
            }, error: function () {
            }
        }, function () {
            for (var e = 0, t = ["ms", "moz", "webkit", "o"], r = 0; r < t.length && !self.requestAnimationFrame; ++r) self.requestAnimationFrame = self[t[r] + "RequestAnimationFrame"], self.cancelAnimationFrame = self[t[r] + "CancelAnimationFrame"] || self[t[r] + "CancelRequestAnimationFrame"];
            void 0 === self.requestAnimationFrame && void 0 !== self.setTimeout && (self.requestAnimationFrame = function (t) {
                var r = Date.now(), i = Math.max(0, 16 - (r - e)), o = self.setTimeout((function () {
                    t(r + i)
                }), i);
                return e = r + i, o
            }), void 0 === self.cancelAnimationFrame && void 0 !== self.clearTimeout && (self.cancelAnimationFrame = function (e) {
                self.clearTimeout(e)
            })
        }(), $.CullFaceNone = 0, $.CullFaceBack = 1, $.CullFaceFront = 2, $.CullFaceFrontBack = 3, $.FrontFaceDirectionCW = 0, $.FrontFaceDirectionCCW = 1, $.BasicShadowMap = 0, $.PCFShadowMap = 1, $.PCFSoftShadowMap = 2, $.FrontSide = 0, $.BackSide = 1, $.DoubleSide = 2, $.NoShading = 0, $.FlatShading = 1, $.SmoothShading = 2, $.NoColors = 0, $.FaceColors = 1, $.VertexColors = 2, $.NoBlending = 0, $.NormalBlending = 1, $.AdditiveBlending = 2, $.SubtractiveBlending = 3, $.MultiplyBlending = 4, $.CustomBlending = 5, $.AddEquation = 100, $.SubtractEquation = 101, $.ReverseSubtractEquation = 102, $.ZeroFactor = 200, $.OneFactor = 201, $.SrcColorFactor = 202, $.OneMinusSrcColorFactor = 203, $.SrcAlphaFactor = 204, $.OneMinusSrcAlphaFactor = 205, $.DstAlphaFactor = 206, $.OneMinusDstAlphaFactor = 207, $.DstColorFactor = 208, $.OneMinusDstColorFactor = 209, $.SrcAlphaSaturateFactor = 210, $.MultiplyOperation = 0, $.MixOperation = 1, $.AddOperation = 2, $.UVMapping = function () {
        }, $.CubeReflectionMapping = function () {
        }, $.CubeRefractionMapping = function () {
        }, $.SphericalReflectionMapping = function () {
        }, $.SphericalRefractionMapping = function () {
        }, $.RepeatWrapping = 1e3, $.ClampToEdgeWrapping = 1001, $.MirroredRepeatWrapping = 1002, $.NearestFilter = 1003, $.NearestMipMapNearestFilter = 1004, $.NearestMipMapLinearFilter = 1005, $.LinearFilter = 1006, $.LinearMipMapNearestFilter = 1007, $.LinearMipMapLinearFilter = 1008, $.UnsignedByteType = 1009, $.ByteType = 1010, $.ShortType = 1011, $.UnsignedShortType = 1012, $.IntType = 1013, $.UnsignedIntType = 1014, $.FloatType = 1015, $.UnsignedShort4444Type = 1016, $.UnsignedShort5551Type = 1017, $.UnsignedShort565Type = 1018, $.AlphaFormat = 1019, $.RGBFormat = 1020, $.RGBAFormat = 1021, $.LuminanceFormat = 1022, $.LuminanceAlphaFormat = 1023, $.RGB_S3TC_DXT1_Format = 2001, $.RGBA_S3TC_DXT1_Format = 2002, $.RGBA_S3TC_DXT3_Format = 2003, $.RGBA_S3TC_DXT5_Format = 2004, $.Color = function (e) {
            return 3 === arguments.length ? this.setRGB(arguments[0], arguments[1], arguments[2]) : this.set(e)
        }, $.Color.prototype = {
            constructor: $.Color, r: 1, g: 1, b: 1, set: function (e) {
                return e instanceof $.Color ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this
            }, setHex: function (e) {
                return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
            }, setRGB: function (e, t, r) {
                return this.r = e, this.g = t, this.b = r, this
            }, setHSL: function (e, t, r) {
                if (0 === t) this.r = this.g = this.b = r; else {
                    var i = function (e, t, r) {
                        return r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6 ? e + 6 * (t - e) * r : r < .5 ? t : r < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - r) : e
                    }, o = r <= .5 ? r * (1 + t) : r + t - r * t, a = 2 * r - o;
                    this.r = i(a, o, e + 1 / 3), this.g = i(a, o, e), this.b = i(a, o, e - 1 / 3)
                }
                return this
            }, setStyle: function (e) {
                if (/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(e)) {
                    var t = /^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(e);
                    return this.r = Math.min(255, parseInt(t[1], 10)) / 255, this.g = Math.min(255, parseInt(t[2], 10)) / 255, this.b = Math.min(255, parseInt(t[3], 10)) / 255, this
                }
                if (/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(e)) {
                    t = /^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(e);
                    return this.r = Math.min(100, parseInt(t[1], 10)) / 100, this.g = Math.min(100, parseInt(t[2], 10)) / 100, this.b = Math.min(100, parseInt(t[3], 10)) / 100, this
                }
                if (/^\#([0-9a-f]{6})$/i.test(e)) {
                    t = /^\#([0-9a-f]{6})$/i.exec(e);
                    return this.setHex(parseInt(t[1], 16)), this
                }
                if (/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)) {
                    t = /^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);
                    return this.setHex(parseInt(t[1] + t[1] + t[2] + t[2] + t[3] + t[3], 16)), this
                }
                if (/^(\w+)$/i.test(e)) return this.setHex($.ColorKeywords[e]), this
            }, copy: function (e) {
                return this.r = e.r, this.g = e.g, this.b = e.b, this
            }, copyGammaToLinear: function (e) {
                return this.r = e.r * e.r, this.g = e.g * e.g, this.b = e.b * e.b, this
            }, copyLinearToGamma: function (e) {
                return this.r = Math.sqrt(e.r), this.g = Math.sqrt(e.g), this.b = Math.sqrt(e.b), this
            }, convertGammaToLinear: function () {
                var e = this.r, t = this.g, r = this.b;
                return this.r = e * e, this.g = t * t, this.b = r * r, this
            }, convertLinearToGamma: function () {
                return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
            }, getHex: function () {
                return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
            }, getHexString: function () {
                return ("000000" + this.getHex().toString(16)).slice(-6)
            }, getHSL: function (e) {
                var t, r, i = e || {h: 0, s: 0, l: 0}, o = this.r, a = this.g, n = this.b, s = Math.max(o, a, n),
                    h = Math.min(o, a, n), l = (h + s) / 2;
                if (h === s) t = 0, r = 0; else {
                    var c = s - h;
                    switch (r = l <= .5 ? c / (s + h) : c / (2 - s - h), s) {
                        case o:
                            t = (a - n) / c + (a < n ? 6 : 0);
                            break;
                        case a:
                            t = (n - o) / c + 2;
                            break;
                        case n:
                            t = (o - a) / c + 4
                    }
                    t /= 6
                }
                return i.h = t, i.s = r, i.l = l, i
            }, getStyle: function () {
                return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
            }, offsetHSL: function (e, t, r) {
                var i = this.getHSL();
                return i.h += e, i.s += t, i.l += r, this.setHSL(i.h, i.s, i.l), this
            }, add: function (e) {
                return this.r += e.r, this.g += e.g, this.b += e.b, this
            }, addColors: function (e, t) {
                return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
            }, addScalar: function (e) {
                return this.r += e, this.g += e, this.b += e, this
            }, multiply: function (e) {
                return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
            }, multiplyScalar: function (e) {
                return this.r *= e, this.g *= e, this.b *= e, this
            }, lerp: function (e, t) {
                return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
            }, equals: function (e) {
                return e.r === this.r && e.g === this.g && e.b === this.b
            }, fromArray: function (e) {
                return this.r = e[0], this.g = e[1], this.b = e[2], this
            }, toArray: function () {
                return [this.r, this.g, this.b]
            }, clone: function () {
                return (new $.Color).setRGB(this.r, this.g, this.b)
            }
        }, $.ColorKeywords = {
            aliceblue: 15792383,
            antiquewhite: 16444375,
            aqua: 65535,
            aquamarine: 8388564,
            azure: 15794175,
            beige: 16119260,
            bisque: 16770244,
            black: 0,
            blanchedalmond: 16772045,
            blue: 255,
            blueviolet: 9055202,
            brown: 10824234,
            burlywood: 14596231,
            cadetblue: 6266528,
            chartreuse: 8388352,
            chocolate: 13789470,
            coral: 16744272,
            cornflowerblue: 6591981,
            cornsilk: 16775388,
            crimson: 14423100,
            cyan: 65535,
            darkblue: 139,
            darkcyan: 35723,
            darkgoldenrod: 12092939,
            darkgray: 11119017,
            darkgreen: 25600,
            darkgrey: 11119017,
            darkkhaki: 12433259,
            darkmagenta: 9109643,
            darkolivegreen: 5597999,
            darkorange: 16747520,
            darkorchid: 10040012,
            darkred: 9109504,
            darksalmon: 15308410,
            darkseagreen: 9419919,
            darkslateblue: 4734347,
            darkslategray: 3100495,
            darkslategrey: 3100495,
            darkturquoise: 52945,
            darkviolet: 9699539,
            deeppink: 16716947,
            deepskyblue: 49151,
            dimgray: 6908265,
            dimgrey: 6908265,
            dodgerblue: 2003199,
            firebrick: 11674146,
            floralwhite: 16775920,
            forestgreen: 2263842,
            fuchsia: 16711935,
            gainsboro: 14474460,
            ghostwhite: 16316671,
            gold: 16766720,
            goldenrod: 14329120,
            gray: 8421504,
            green: 32768,
            greenyellow: 11403055,
            grey: 8421504,
            honeydew: 15794160,
            hotpink: 16738740,
            indianred: 13458524,
            indigo: 4915330,
            ivory: 16777200,
            khaki: 15787660,
            lavender: 15132410,
            lavenderblush: 16773365,
            lawngreen: 8190976,
            lemonchiffon: 16775885,
            lightblue: 11393254,
            lightcoral: 15761536,
            lightcyan: 14745599,
            lightgoldenrodyellow: 16448210,
            lightgray: 13882323,
            lightgreen: 9498256,
            lightgrey: 13882323,
            lightpink: 16758465,
            lightsalmon: 16752762,
            lightseagreen: 2142890,
            lightskyblue: 8900346,
            lightslategray: 7833753,
            lightslategrey: 7833753,
            lightsteelblue: 11584734,
            lightyellow: 16777184,
            lime: 65280,
            limegreen: 3329330,
            linen: 16445670,
            magenta: 16711935,
            maroon: 8388608,
            mediumaquamarine: 6737322,
            mediumblue: 205,
            mediumorchid: 12211667,
            mediumpurple: 9662683,
            mediumseagreen: 3978097,
            mediumslateblue: 8087790,
            mediumspringgreen: 64154,
            mediumturquoise: 4772300,
            mediumvioletred: 13047173,
            midnightblue: 1644912,
            mintcream: 16121850,
            mistyrose: 16770273,
            moccasin: 16770229,
            navajowhite: 16768685,
            navy: 128,
            oldlace: 16643558,
            olive: 8421376,
            olivedrab: 7048739,
            orange: 16753920,
            orangered: 16729344,
            orchid: 14315734,
            palegoldenrod: 15657130,
            palegreen: 10025880,
            paleturquoise: 11529966,
            palevioletred: 14381203,
            papayawhip: 16773077,
            peachpuff: 16767673,
            peru: 13468991,
            pink: 16761035,
            plum: 14524637,
            powderblue: 11591910,
            purple: 8388736,
            red: 16711680,
            rosybrown: 12357519,
            royalblue: 4286945,
            saddlebrown: 9127187,
            salmon: 16416882,
            sandybrown: 16032864,
            seagreen: 3050327,
            seashell: 16774638,
            sienna: 10506797,
            silver: 12632256,
            skyblue: 8900331,
            slateblue: 6970061,
            slategray: 7372944,
            slategrey: 7372944,
            snow: 16775930,
            springgreen: 65407,
            steelblue: 4620980,
            tan: 13808780,
            teal: 32896,
            thistle: 14204888,
            tomato: 16737095,
            turquoise: 4251856,
            violet: 15631086,
            wheat: 16113331,
            white: 16777215,
            whitesmoke: 16119285,
            yellow: 16776960,
            yellowgreen: 10145074
        }, $.Quaternion = function (e, t, r, i) {
            this._x = e || 0, this._y = t || 0, this._z = r || 0, this._w = void 0 !== i ? i : 1
        }, $.Quaternion.prototype = {
            constructor: $.Quaternion, _x: 0, _y: 0, _z: 0, _w: 0, get x() {
                return this._x
            }, set x(e) {
                this._x = e, this.onChangeCallback()
            }, get y() {
                return this._y
            }, set y(e) {
                this._y = e, this.onChangeCallback()
            }, get z() {
                return this._z
            }, set z(e) {
                this._z = e, this.onChangeCallback()
            }, get w() {
                return this._w
            }, set w(e) {
                this._w = e, this.onChangeCallback()
            }, set: function (e, t, r, i) {
                return this._x = e, this._y = t, this._z = r, this._w = i, this.onChangeCallback(), this
            }, copy: function (e) {
                return this._x = e._x, this._y = e._y, this._z = e._z, this._w = e._w, this.onChangeCallback(), this
            }, setFromEuler: function (e, t) {
                if (e instanceof $.Euler == !1) throw new Error("ERROR: Quaternion's .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
                var r = Math.cos(e._x / 2), i = Math.cos(e._y / 2), o = Math.cos(e._z / 2), a = Math.sin(e._x / 2),
                    n = Math.sin(e._y / 2), s = Math.sin(e._z / 2);
                return "XYZ" === e.order ? (this._x = a * i * o + r * n * s, this._y = r * n * o - a * i * s, this._z = r * i * s + a * n * o, this._w = r * i * o - a * n * s) : "YXZ" === e.order ? (this._x = a * i * o + r * n * s, this._y = r * n * o - a * i * s, this._z = r * i * s - a * n * o, this._w = r * i * o + a * n * s) : "ZXY" === e.order ? (this._x = a * i * o - r * n * s, this._y = r * n * o + a * i * s, this._z = r * i * s + a * n * o, this._w = r * i * o - a * n * s) : "ZYX" === e.order ? (this._x = a * i * o - r * n * s, this._y = r * n * o + a * i * s, this._z = r * i * s - a * n * o, this._w = r * i * o + a * n * s) : "YZX" === e.order ? (this._x = a * i * o + r * n * s, this._y = r * n * o + a * i * s, this._z = r * i * s - a * n * o, this._w = r * i * o - a * n * s) : "XZY" === e.order && (this._x = a * i * o - r * n * s, this._y = r * n * o - a * i * s, this._z = r * i * s + a * n * o, this._w = r * i * o + a * n * s), !1 !== t && this.onChangeCallback(), this
            }, setFromAxisAngle: function (e, t) {
                var r = t / 2, i = Math.sin(r);
                return this._x = e.x * i, this._y = e.y * i, this._z = e.z * i, this._w = Math.cos(r), this.onChangeCallback(), this
            }, setFromRotationMatrix: function (e) {
                var t, r = e.elements, i = r[0], o = r[4], a = r[8], n = r[1], s = r[5], h = r[9], l = r[2], c = r[6],
                    p = r[10], u = i + s + p;
                return u > 0 ? (t = .5 / Math.sqrt(u + 1), this._w = .25 / t, this._x = (c - h) * t, this._y = (a - l) * t, this._z = (n - o) * t) : i > s && i > p ? (t = 2 * Math.sqrt(1 + i - s - p), this._w = (c - h) / t, this._x = .25 * t, this._y = (o + n) / t, this._z = (a + l) / t) : s > p ? (t = 2 * Math.sqrt(1 + s - i - p), this._w = (a - l) / t, this._x = (o + n) / t, this._y = .25 * t, this._z = (h + c) / t) : (t = 2 * Math.sqrt(1 + p - i - s), this._w = (n - o) / t, this._x = (a + l) / t, this._y = (h + c) / t, this._z = .25 * t), this.onChangeCallback(), this
            }, setFromUnitVectors: function (e, t) {
                return void 0 === h && (h = new $.Vector3), (l = e.dot(t) + 1) < 1e-6 ? (l = 0, Math.abs(e.x) > Math.abs(e.z) ? h.set(-e.y, e.x, 0) : h.set(0, -e.z, e.y)) : h.crossVectors(e, t), this._x = h.x, this._y = h.y, this._z = h.z, this._w = l, this.normalize(), this
            }, inverse: function () {
                return this.conjugate().normalize(), this
            }, conjugate: function () {
                return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
            }, lengthSq: function () {
                return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
            }, length: function () {
                return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
            }, normalize: function () {
                var e = this.length();
                return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this.onChangeCallback(), this
            }, multiply: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
            }, multiplyQuaternions: function (e, t) {
                var r = e._x, i = e._y, o = e._z, a = e._w, n = t._x, s = t._y, h = t._z, l = t._w;
                return this._x = r * l + a * n + i * h - o * s, this._y = i * l + a * s + o * n - r * h, this._z = o * l + a * h + r * s - i * n, this._w = a * l - r * n - i * s - o * h, this.onChangeCallback(), this
            }, multiplyVector3: function (e) {
                return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
            }, slerp: function (e, t) {
                var r = this._x, i = this._y, o = this._z, a = this._w, n = a * e._w + r * e._x + i * e._y + o * e._z;
                if (n < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, n = -n) : this.copy(e), n >= 1) return this._w = a, this._x = r, this._y = i, this._z = o, this;
                var s = Math.acos(n), h = Math.sqrt(1 - n * n);
                if (Math.abs(h) < .001) return this._w = .5 * (a + this._w), this._x = .5 * (r + this._x), this._y = .5 * (i + this._y), this._z = .5 * (o + this._z), this;
                var l = Math.sin((1 - t) * s) / h, c = Math.sin(t * s) / h;
                return this._w = a * l + this._w * c, this._x = r * l + this._x * c, this._y = i * l + this._y * c, this._z = o * l + this._z * c, this.onChangeCallback(), this
            }, equals: function (e) {
                return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
            }, fromArray: function (e) {
                return this._x = e[0], this._y = e[1], this._z = e[2], this._w = e[3], this.onChangeCallback(), this
            }, toArray: function () {
                return [this._x, this._y, this._z, this._w]
            }, onChange: function (e) {
                return this.onChangeCallback = e, this
            }, onChangeCallback: function () {
            }, clone: function () {
                return new $.Quaternion(this._x, this._y, this._z, this._w)
            }
        }, $.Quaternion.slerp = function (e, t, r, i) {
            return r.copy(e).slerp(t, i)
        }, $.Vector2 = function (e, t) {
            this.x = e || 0, this.y = t || 0
        }, $.Vector2.prototype = {
            constructor: $.Vector2, set: function (e, t) {
                return this.x = e, this.y = t, this
            }, setX: function (e) {
                return this.x = e, this
            }, setY: function (e) {
                return this.y = e, this
            }, setComponent: function (e, t) {
                switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, getComponent: function (e) {
                switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, copy: function (e) {
                return this.x = e.x, this.y = e.y, this
            }, add: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
            }, addVectors: function (e, t) {
                return this.x = e.x + t.x, this.y = e.y + t.y, this
            }, addScalar: function (e) {
                return this.x += e, this.y += e, this
            }, sub: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
            }, subVectors: function (e, t) {
                return this.x = e.x - t.x, this.y = e.y - t.y, this
            }, multiply: function (e) {
                return this.x *= e.x, this.y *= e.y, this
            }, multiplyScalar: function (e) {
                return this.x *= e, this.y *= e, this
            }, divide: function (e) {
                return this.x /= e.x, this.y /= e.y, this
            }, divideScalar: function (e) {
                if (0 !== e) {
                    var t = 1 / e;
                    this.x *= t, this.y *= t
                } else this.x = 0, this.y = 0;
                return this
            }, min: function (e) {
                return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this
            }, max: function (e) {
                return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this
            }, clamp: function (e, t) {
                return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this
            }, clampScalar: function (e, t) {
                return void 0 === c && (c = new $.Vector2, p = new $.Vector2), c.set(e, e), p.set(t, t), this.clamp(c, p)
            }, floor: function () {
                return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
            }, ceil: function () {
                return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
            }, round: function () {
                return this.x = Math.round(this.x), this.y = Math.round(this.y), this
            }, roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
            }, negate: function () {
                return this.multiplyScalar(-1)
            }, dot: function (e) {
                return this.x * e.x + this.y * e.y
            }, lengthSq: function () {
                return this.x * this.x + this.y * this.y
            }, length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y)
            }, normalize: function () {
                return this.divideScalar(this.length())
            }, distanceTo: function (e) {
                return Math.sqrt(this.distanceToSquared(e))
            }, distanceToSquared: function (e) {
                var t = this.x - e.x, r = this.y - e.y;
                return t * t + r * r
            }, setLength: function (e) {
                var t = this.length();
                return 0 !== t && e !== t && this.multiplyScalar(e / t), this
            }, lerp: function (e, t) {
                return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
            }, equals: function (e) {
                return e.x === this.x && e.y === this.y
            }, fromArray: function (e) {
                return this.x = e[0], this.y = e[1], this
            }, toArray: function () {
                return [this.x, this.y]
            }, clone: function () {
                return new $.Vector2(this.x, this.y)
            }
        }, $.Vector3 = function (e, t, r) {
            this.x = e || 0, this.y = t || 0, this.z = r || 0
        }, $.Vector3.prototype = {
            constructor: $.Vector3, set: function (e, t, r) {
                return this.x = e, this.y = t, this.z = r, this
            }, setX: function (e) {
                return this.x = e, this
            }, setY: function (e) {
                return this.y = e, this
            }, setZ: function (e) {
                return this.z = e, this
            }, setComponent: function (e, t) {
                switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, getComponent: function (e) {
                switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, copy: function (e) {
                return this.x = e.x, this.y = e.y, this.z = e.z, this
            }, add: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
            }, addScalar: function (e) {
                return this.x += e, this.y += e, this.z += e, this
            }, addVectors: function (e, t) {
                return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
            }, sub: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
            }, subVectors: function (e, t) {
                return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
            }, multiply: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
            }, multiplyScalar: function (e) {
                return this.x *= e, this.y *= e, this.z *= e, this
            }, multiplyVectors: function (e, t) {
                return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
            }, applyEuler: function (e) {
                return e instanceof $.Euler == 0 && console.error("ERROR: Vector3's .applyEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code."), void 0 === u && (u = new $.Quaternion), this.applyQuaternion(u.setFromEuler(e)), this
            }, applyAxisAngle: function () {
                var e;
                return function (t, r) {
                    return void 0 === e && (e = new $.Quaternion), this.applyQuaternion(e.setFromAxisAngle(t, r)), this
                }
            }(), applyMatrix3: function (e) {
                var t = this.x, r = this.y, i = this.z, o = e.elements;
                return this.x = o[0] * t + o[3] * r + o[6] * i, this.y = o[1] * t + o[4] * r + o[7] * i, this.z = o[2] * t + o[5] * r + o[8] * i, this
            }, applyMatrix4: function (e) {
                var t = this.x, r = this.y, i = this.z, o = e.elements;
                return this.x = o[0] * t + o[4] * r + o[8] * i + o[12], this.y = o[1] * t + o[5] * r + o[9] * i + o[13], this.z = o[2] * t + o[6] * r + o[10] * i + o[14], this
            }, applyProjection: function (e) {
                var t = this.x, r = this.y, i = this.z, o = e.elements,
                    a = 1 / (o[3] * t + o[7] * r + o[11] * i + o[15]);
                return this.x = (o[0] * t + o[4] * r + o[8] * i + o[12]) * a, this.y = (o[1] * t + o[5] * r + o[9] * i + o[13]) * a, this.z = (o[2] * t + o[6] * r + o[10] * i + o[14]) * a, this
            }, applyQuaternion: function (e) {
                var t = this.x, r = this.y, i = this.z, o = e.x, a = e.y, n = e.z, s = e.w, h = s * t + a * i - n * r,
                    l = s * r + n * t - o * i, c = s * i + o * r - a * t, p = -o * t - a * r - n * i;
                return this.x = h * s + p * -o + l * -n - c * -a, this.y = l * s + p * -a + c * -o - h * -n, this.z = c * s + p * -n + h * -a - l * -o, this
            }, transformDirection: function (e) {
                var t = this.x, r = this.y, i = this.z, o = e.elements;
                return this.x = o[0] * t + o[4] * r + o[8] * i, this.y = o[1] * t + o[5] * r + o[9] * i, this.z = o[2] * t + o[6] * r + o[10] * i, this.normalize(), this
            }, divide: function (e) {
                return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
            }, divideScalar: function (e) {
                if (0 !== e) {
                    var t = 1 / e;
                    this.x *= t, this.y *= t, this.z *= t
                } else this.x = 0, this.y = 0, this.z = 0;
                return this
            }, min: function (e) {
                return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this.z > e.z && (this.z = e.z), this
            }, max: function (e) {
                return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this.z < e.z && (this.z = e.z), this
            }, clamp: function (e, t) {
                return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z), this
            }, clampScalar: function () {
                var e, t;
                return function (r, i) {
                    return void 0 === e && (e = new $.Vector3, t = new $.Vector3), e.set(r, r, r), t.set(i, i, i), this.clamp(e, t)
                }
            }(), floor: function () {
                return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
            }, ceil: function () {
                return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
            }, round: function () {
                return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
            }, roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
            }, negate: function () {
                return this.multiplyScalar(-1)
            }, dot: function (e) {
                return this.x * e.x + this.y * e.y + this.z * e.z
            }, lengthSq: function () {
                return this.x * this.x + this.y * this.y + this.z * this.z
            }, length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
            }, lengthManhattan: function () {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
            }, normalize: function () {
                return this.divideScalar(this.length())
            }, setLength: function (e) {
                var t = this.length();
                return 0 !== t && e !== t && this.multiplyScalar(e / t), this
            }, lerp: function (e, t) {
                return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
            }, cross: function (e, t) {
                if (void 0 !== t) return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t);
                var r = this.x, i = this.y, o = this.z;
                return this.x = i * e.z - o * e.y, this.y = o * e.x - r * e.z, this.z = r * e.y - i * e.x, this
            }, crossVectors: function (e, t) {
                var r = e.x, i = e.y, o = e.z, a = t.x, n = t.y, s = t.z;
                return this.x = i * s - o * n, this.y = o * a - r * s, this.z = r * n - i * a, this
            }, projectOnVector: function () {
                var e, t;
                return function (r) {
                    return void 0 === e && (e = new $.Vector3), e.copy(r).normalize(), t = this.dot(e), this.copy(e).multiplyScalar(t)
                }
            }(), projectOnPlane: function () {
                var e;
                return function (t) {
                    return void 0 === e && (e = new $.Vector3), e.copy(this).projectOnVector(t), this.sub(e)
                }
            }(), reflect: function () {
                var e;
                return function (t) {
                    return void 0 === e && (e = new $.Vector3), this.sub(e.copy(t).multiplyScalar(2 * this.dot(t)))
                }
            }(), angleTo: function (e) {
                var t = this.dot(e) / (this.length() * e.length());
                return Math.acos($.Math.clamp(t, -1, 1))
            }, distanceTo: function (e) {
                return Math.sqrt(this.distanceToSquared(e))
            }, distanceToSquared: function (e) {
                var t = this.x - e.x, r = this.y - e.y, i = this.z - e.z;
                return t * t + r * r + i * i
            }, setEulerFromRotationMatrix: function (e, t) {
                console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")
            }, setEulerFromQuaternion: function (e, t) {
                console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")
            }, getPositionFromMatrix: function (e) {
                return console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code."), this.setFromMatrixPosition(e)
            }, getScaleFromMatrix: function (e) {
                return console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code."), this.setFromMatrixScale(e)
            }, getColumnFromMatrix: function (e, t) {
                return console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code."), this.setFromMatrixColumn(e, t)
            }, setFromMatrixPosition: function (e) {
                return this.x = e.elements[12], this.y = e.elements[13], this.z = e.elements[14], this
            }, setFromMatrixScale: function (e) {
                var t = this.set(e.elements[0], e.elements[1], e.elements[2]).length(),
                    r = this.set(e.elements[4], e.elements[5], e.elements[6]).length(),
                    i = this.set(e.elements[8], e.elements[9], e.elements[10]).length();
                return this.x = t, this.y = r, this.z = i, this
            }, setFromMatrixColumn: function (e, t) {
                var r = 4 * e, i = t.elements;
                return this.x = i[r], this.y = i[r + 1], this.z = i[r + 2], this
            }, equals: function (e) {
                return e.x === this.x && e.y === this.y && e.z === this.z
            }, fromArray: function (e) {
                return this.x = e[0], this.y = e[1], this.z = e[2], this
            }, toArray: function () {
                return [this.x, this.y, this.z]
            }, clone: function () {
                return new $.Vector3(this.x, this.y, this.z)
            }
        }, $.Vector4 = function (e, t, r, i) {
            this.x = e || 0, this.y = t || 0, this.z = r || 0, this.w = void 0 !== i ? i : 1
        }, $.Vector4.prototype = {
            constructor: $.Vector4, set: function (e, t, r, i) {
                return this.x = e, this.y = t, this.z = r, this.w = i, this
            }, setX: function (e) {
                return this.x = e, this
            }, setY: function (e) {
                return this.y = e, this
            }, setZ: function (e) {
                return this.z = e, this
            }, setW: function (e) {
                return this.w = e, this
            }, setComponent: function (e, t) {
                switch (e) {
                    case 0:
                        this.x = t;
                        break;
                    case 1:
                        this.y = t;
                        break;
                    case 2:
                        this.z = t;
                        break;
                    case 3:
                        this.w = t;
                        break;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, getComponent: function (e) {
                switch (e) {
                    case 0:
                        return this.x;
                    case 1:
                        return this.y;
                    case 2:
                        return this.z;
                    case 3:
                        return this.w;
                    default:
                        throw new Error("index is out of range: " + e)
                }
            }, copy: function (e) {
                return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
            }, add: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
            }, addScalar: function (e) {
                return this.x += e, this.y += e, this.z += e, this.w += e, this
            }, addVectors: function (e, t) {
                return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
            }, sub: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
            }, subVectors: function (e, t) {
                return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
            }, multiplyScalar: function (e) {
                return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
            }, applyMatrix4: function (e) {
                var t = this.x, r = this.y, i = this.z, o = this.w, a = e.elements;
                return this.x = a[0] * t + a[4] * r + a[8] * i + a[12] * o, this.y = a[1] * t + a[5] * r + a[9] * i + a[13] * o, this.z = a[2] * t + a[6] * r + a[10] * i + a[14] * o, this.w = a[3] * t + a[7] * r + a[11] * i + a[15] * o, this
            }, divideScalar: function (e) {
                if (0 !== e) {
                    var t = 1 / e;
                    this.x *= t, this.y *= t, this.z *= t, this.w *= t
                } else this.x = 0, this.y = 0, this.z = 0, this.w = 1;
                return this
            }, setAxisAngleFromQuaternion: function (e) {
                this.w = 2 * Math.acos(e.w);
                var t = Math.sqrt(1 - e.w * e.w);
                return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
            }, setAxisAngleFromRotationMatrix: function (e) {
                var t, r, i, o, a = e.elements, n = a[0], s = a[4], h = a[8], l = a[1], c = a[5], p = a[9], u = a[2],
                    f = a[6], d = a[10];
                if (Math.abs(s - l) < .01 && Math.abs(h - u) < .01 && Math.abs(p - f) < .01) {
                    if (Math.abs(s + l) < .1 && Math.abs(h + u) < .1 && Math.abs(p + f) < .1 && Math.abs(n + c + d - 3) < .1) return this.set(1, 0, 0, 0), this;
                    t = Math.PI;
                    var m = (n + 1) / 2, y = (c + 1) / 2, g = (d + 1) / 2, v = (s + l) / 4, x = (h + u) / 4,
                        w = (p + f) / 4;
                    return m > y && m > g ? m < .01 ? (r = 0, i = .707106781, o = .707106781) : (i = v / (r = Math.sqrt(m)), o = x / r) : y > g ? y < .01 ? (r = .707106781, i = 0, o = .707106781) : (r = v / (i = Math.sqrt(y)), o = w / i) : g < .01 ? (r = .707106781, i = .707106781, o = 0) : (r = x / (o = Math.sqrt(g)), i = w / o), this.set(r, i, o, t), this
                }
                var _ = Math.sqrt((f - p) * (f - p) + (h - u) * (h - u) + (l - s) * (l - s));
                return Math.abs(_) < .001 && (_ = 1), this.x = (f - p) / _, this.y = (h - u) / _, this.z = (l - s) / _, this.w = Math.acos((n + c + d - 1) / 2), this
            }, min: function (e) {
                return this.x > e.x && (this.x = e.x), this.y > e.y && (this.y = e.y), this.z > e.z && (this.z = e.z), this.w > e.w && (this.w = e.w), this
            }, max: function (e) {
                return this.x < e.x && (this.x = e.x), this.y < e.y && (this.y = e.y), this.z < e.z && (this.z = e.z), this.w < e.w && (this.w = e.w), this
            }, clamp: function (e, t) {
                return this.x < e.x ? this.x = e.x : this.x > t.x && (this.x = t.x), this.y < e.y ? this.y = e.y : this.y > t.y && (this.y = t.y), this.z < e.z ? this.z = e.z : this.z > t.z && (this.z = t.z), this.w < e.w ? this.w = e.w : this.w > t.w && (this.w = t.w), this
            }, clampScalar: function () {
                var e, t;
                return function (r, i) {
                    return void 0 === e && (e = new $.Vector4, t = new $.Vector4), e.set(r, r, r, r), t.set(i, i, i, i), this.clamp(e, t)
                }
            }(), floor: function () {
                return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
            }, ceil: function () {
                return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
            }, round: function () {
                return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
            }, roundToZero: function () {
                return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
            }, negate: function () {
                return this.multiplyScalar(-1)
            }, dot: function (e) {
                return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
            }, lengthSq: function () {
                return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
            }, length: function () {
                return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
            }, lengthManhattan: function () {
                return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
            }, normalize: function () {
                return this.divideScalar(this.length())
            }, setLength: function (e) {
                var t = this.length();
                return 0 !== t && e !== t && this.multiplyScalar(e / t), this
            }, lerp: function (e, t) {
                return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
            }, equals: function (e) {
                return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
            }, fromArray: function (e) {
                return this.x = e[0], this.y = e[1], this.z = e[2], this.w = e[3], this
            }, toArray: function () {
                return [this.x, this.y, this.z, this.w]
            }, clone: function () {
                return new $.Vector4(this.x, this.y, this.z, this.w)
            }
        }, $.Euler = function (e, t, r, i) {
            this._x = e || 0, this._y = t || 0, this._z = r || 0, this._order = i || $.Euler.DefaultOrder
        }, $.Euler.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], $.Euler.DefaultOrder = "XYZ", $.Euler.prototype = {
            constructor: $.Euler, _x: 0, _y: 0, _z: 0, _order: $.Euler.DefaultOrder, get x() {
                return this._x
            }, set x(e) {
                this._x = e, this.onChangeCallback()
            }, get y() {
                return this._y
            }, set y(e) {
                this._y = e, this.onChangeCallback()
            }, get z() {
                return this._z
            }, set z(e) {
                this._z = e, this.onChangeCallback()
            }, get order() {
                return this._order
            }, set order(e) {
                this._order = e, this.onChangeCallback()
            }, set: function (e, t, r, i) {
                return this._x = e, this._y = t, this._z = r, this._order = i || this._order, this.onChangeCallback(), this
            }, copy: function (e) {
                return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this.onChangeCallback(), this
            }, setFromRotationMatrix: function (e, t) {
                var r = $.Math.clamp, i = e.elements, o = i[0], a = i[4], n = i[8], s = i[1], h = i[5], l = i[9],
                    c = i[2], p = i[6], u = i[10];
                return "XYZ" === (t = t || this._order) ? (this._y = Math.asin(r(n, -1, 1)), Math.abs(n) < .99999 ? (this._x = Math.atan2(-l, u), this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(p, h), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-r(l, -1, 1)), Math.abs(l) < .99999 ? (this._y = Math.atan2(n, u), this._z = Math.atan2(s, h)) : (this._y = Math.atan2(-c, o), this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(r(p, -1, 1)), Math.abs(p) < .99999 ? (this._y = Math.atan2(-c, u), this._z = Math.atan2(-a, h)) : (this._y = 0, this._z = Math.atan2(s, o))) : "ZYX" === t ? (this._y = Math.asin(-r(c, -1, 1)), Math.abs(c) < .99999 ? (this._x = Math.atan2(p, u), this._z = Math.atan2(s, o)) : (this._x = 0, this._z = Math.atan2(-a, h))) : "YZX" === t ? (this._z = Math.asin(r(s, -1, 1)), Math.abs(s) < .99999 ? (this._x = Math.atan2(-l, h), this._y = Math.atan2(-c, o)) : (this._x = 0, this._y = Math.atan2(n, u))) : "XZY" === t ? (this._z = Math.asin(-r(a, -1, 1)), Math.abs(a) < .99999 ? (this._x = Math.atan2(p, h), this._y = Math.atan2(n, o)) : (this._x = Math.atan2(-l, u), this._y = 0)) : console.warn("WARNING: Euler.setFromRotationMatrix() given unsupported order: " + t), this._order = t, this.onChangeCallback(), this
            }, setFromQuaternion: function (e, t, r) {
                var i = $.Math.clamp, o = e.x * e.x, a = e.y * e.y, n = e.z * e.z, s = e.w * e.w;
                return "XYZ" === (t = t || this._order) ? (this._x = Math.atan2(2 * (e.x * e.w - e.y * e.z), s - o - a + n), this._y = Math.asin(i(2 * (e.x * e.z + e.y * e.w), -1, 1)), this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s + o - a - n)) : "YXZ" === t ? (this._x = Math.asin(i(2 * (e.x * e.w - e.y * e.z), -1, 1)), this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s - o - a + n), this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s - o + a - n)) : "ZXY" === t ? (this._x = Math.asin(i(2 * (e.x * e.w + e.y * e.z), -1, 1)), this._y = Math.atan2(2 * (e.y * e.w - e.z * e.x), s - o - a + n), this._z = Math.atan2(2 * (e.z * e.w - e.x * e.y), s - o + a - n)) : "ZYX" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.z * e.y), s - o - a + n), this._y = Math.asin(i(2 * (e.y * e.w - e.x * e.z), -1, 1)), this._z = Math.atan2(2 * (e.x * e.y + e.z * e.w), s + o - a - n)) : "YZX" === t ? (this._x = Math.atan2(2 * (e.x * e.w - e.z * e.y), s - o + a - n), this._y = Math.atan2(2 * (e.y * e.w - e.x * e.z), s + o - a - n), this._z = Math.asin(i(2 * (e.x * e.y + e.z * e.w), -1, 1))) : "XZY" === t ? (this._x = Math.atan2(2 * (e.x * e.w + e.y * e.z), s - o + a - n), this._y = Math.atan2(2 * (e.x * e.z + e.y * e.w), s + o - a - n), this._z = Math.asin(i(2 * (e.z * e.w - e.x * e.y), -1, 1))) : console.warn("WARNING: Euler.setFromQuaternion() given unsupported order: " + t), this._order = t, !1 !== r && this.onChangeCallback(), this
            }, reorder: (f = new $.Quaternion, function (e) {
                f.setFromEuler(this), this.setFromQuaternion(f, e)
            }), equals: function (e) {
                return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
            }, fromArray: function (e) {
                return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this.onChangeCallback(), this
            }, toArray: function () {
                return [this._x, this._y, this._z, this._order]
            }, onChange: function (e) {
                return this.onChangeCallback = e, this
            }, onChangeCallback: function () {
            }, clone: function () {
                return new $.Euler(this._x, this._y, this._z, this._order)
            }
        }, $.Line3 = function (e, t) {
            this.start = void 0 !== e ? e : new $.Vector3, this.end = void 0 !== t ? t : new $.Vector3
        }, $.Line3.prototype = {
            constructor: $.Line3, set: function (e, t) {
                return this.start.copy(e), this.end.copy(t), this
            }, copy: function (e) {
                return this.start.copy(e.start), this.end.copy(e.end), this
            }, center: function (e) {
                return (e || new $.Vector3).addVectors(this.start, this.end).multiplyScalar(.5)
            }, delta: function (e) {
                return (e || new $.Vector3).subVectors(this.end, this.start)
            }, distanceSq: function () {
                return this.start.distanceToSquared(this.end)
            }, distance: function () {
                return this.start.distanceTo(this.end)
            }, at: function (e, t) {
                var r = t || new $.Vector3;
                return this.delta(r).multiplyScalar(e).add(this.start)
            }, closestPointToPointParameter: (d = new $.Vector3, m = new $.Vector3, function (e, t) {
                d.subVectors(e, this.start), m.subVectors(this.end, this.start);
                var r = m.dot(m), i = m.dot(d) / r;
                return t && (i = $.Math.clamp(i, 0, 1)), i
            }), closestPointToPoint: function (e, t, r) {
                var i = this.closestPointToPointParameter(e, t), o = r || new $.Vector3;
                return this.delta(o).multiplyScalar(i).add(this.start)
            }, applyMatrix4: function (e) {
                return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
            }, equals: function (e) {
                return e.start.equals(this.start) && e.end.equals(this.end)
            }, clone: function () {
                return (new $.Line3).copy(this)
            }
        }, $.Box2 = function (e, t) {
            this.min = void 0 !== e ? e : new $.Vector2(1 / 0, 1 / 0), this.max = void 0 !== t ? t : new $.Vector2(-1 / 0, -1 / 0)
        }, $.Box2.prototype = {
            constructor: $.Box2, set: function (e, t) {
                return this.min.copy(e), this.max.copy(t), this
            }, setFromPoints: function (e) {
                if (e.length > 0) {
                    var t = e[0];
                    this.min.copy(t), this.max.copy(t);
                    for (var r = 1, i = e.length; r < i; r++) (t = e[r]).x < this.min.x ? this.min.x = t.x : t.x > this.max.x && (this.max.x = t.x), t.y < this.min.y ? this.min.y = t.y : t.y > this.max.y && (this.max.y = t.y)
                } else this.makeEmpty();
                return this
            }, setFromCenterAndSize: function () {
                var e = new $.Vector2;
                return function (t, r) {
                    var i = e.copy(r).multiplyScalar(.5);
                    return this.min.copy(t).sub(i), this.max.copy(t).add(i), this
                }
            }(), copy: function (e) {
                return this.min.copy(e.min), this.max.copy(e.max), this
            }, makeEmpty: function () {
                return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
            }, empty: function () {
                return this.max.x < this.min.x || this.max.y < this.min.y
            }, center: function (e) {
                return (e || new $.Vector2).addVectors(this.min, this.max).multiplyScalar(.5)
            }, size: function (e) {
                return (e || new $.Vector2).subVectors(this.max, this.min)
            }, expandByPoint: function (e) {
                return this.min.min(e), this.max.max(e), this
            }, expandByVector: function (e) {
                return this.min.sub(e), this.max.add(e), this
            }, expandByScalar: function (e) {
                return this.min.addScalar(-e), this.max.addScalar(e), this
            }, containsPoint: function (e) {
                return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
            }, containsBox: function (e) {
                return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
            }, getParameter: function (e, t) {
                return (t || new $.Vector2).set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
            }, isIntersectionBox: function (e) {
                return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
            }, clampPoint: function (e, t) {
                return (t || new $.Vector2).copy(e).clamp(this.min, this.max)
            }, distanceToPoint: function () {
                var e = new $.Vector2;
                return function (t) {
                    return e.copy(t).clamp(this.min, this.max).sub(t).length()
                }
            }(), intersect: function (e) {
                return this.min.max(e.min), this.max.min(e.max), this
            }, union: function (e) {
                return this.min.min(e.min), this.max.max(e.max), this
            }, translate: function (e) {
                return this.min.add(e), this.max.add(e), this
            }, equals: function (e) {
                return e.min.equals(this.min) && e.max.equals(this.max)
            }, clone: function () {
                return (new $.Box2).copy(this)
            }
        }, $.Box3 = function (e, t) {
            this.min = void 0 !== e ? e : new $.Vector3(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== t ? t : new $.Vector3(-1 / 0, -1 / 0, -1 / 0)
        }, $.Box3.prototype = {
            constructor: $.Box3,
            set: function (e, t) {
                return this.min.copy(e), this.max.copy(t), this
            },
            addPoint: function (e) {
                return e.x < this.min.x ? this.min.x = e.x : e.x > this.max.x && (this.max.x = e.x), e.y < this.min.y ? this.min.y = e.y : e.y > this.max.y && (this.max.y = e.y), e.z < this.min.z ? this.min.z = e.z : e.z > this.max.z && (this.max.z = e.z), this
            },
            setFromPoints: function (e) {
                if (e.length > 0) {
                    var t = e[0];
                    this.min.copy(t), this.max.copy(t);
                    for (var r = 1, i = e.length; r < i; r++) this.addPoint(e[r])
                } else this.makeEmpty();
                return this
            },
            setFromCenterAndSize: function () {
                var e = new $.Vector3;
                return function (t, r) {
                    var i = e.copy(r).multiplyScalar(.5);
                    return this.min.copy(t).sub(i), this.max.copy(t).add(i), this
                }
            }(),
            setFromObject: function () {
                var e = new $.Vector3;
                return function (t) {
                    var r = this;
                    return t.updateMatrixWorld(!0), this.makeEmpty(), t.traverse((function (t) {
                        if (void 0 !== t.geometry && void 0 !== t.geometry.vertices) for (var i = t.geometry.vertices, o = 0, a = i.length; o < a; o++) e.copy(i[o]), e.applyMatrix4(t.matrixWorld), r.expandByPoint(e)
                    })), this
                }
            }(),
            copy: function (e) {
                return this.min.copy(e.min), this.max.copy(e.max), this
            },
            makeEmpty: function () {
                return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
            },
            empty: function () {
                return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
            },
            center: function (e) {
                return (e || new $.Vector3).addVectors(this.min, this.max).multiplyScalar(.5)
            },
            size: function (e) {
                return (e || new $.Vector3).subVectors(this.max, this.min)
            },
            expandByPoint: function (e) {
                return this.min.min(e), this.max.max(e), this
            },
            expandByVector: function (e) {
                return this.min.sub(e), this.max.add(e), this
            },
            expandByScalar: function (e) {
                return this.min.addScalar(-e), this.max.addScalar(e), this
            },
            containsPoint: function (e) {
                return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
            },
            containsBox: function (e) {
                return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
            },
            getParameter: function (e, t) {
                return (t || new $.Vector3).set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
            },
            isIntersectionBox: function (e) {
                return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
            },
            clampPoint: function (e, t) {
                return (t || new $.Vector3).copy(e).clamp(this.min, this.max)
            },
            distanceToPoint: function () {
                var e = new $.Vector3;
                return function (t) {
                    return e.copy(t).clamp(this.min, this.max).sub(t).length()
                }
            }(),
            getBoundingSphere: function () {
                var e = new $.Vector3;
                return function (t) {
                    var r = t || new $.Sphere;
                    return r.center = this.center(), r.radius = .5 * this.size(e).length(), r
                }
            }(),
            intersect: function (e) {
                return this.min.max(e.min), this.max.min(e.max), this
            },
            union: function (e) {
                return this.min.min(e.min), this.max.max(e.max), this
            },
            applyMatrix4: (y = [new $.Vector3, new $.Vector3, new $.Vector3, new $.Vector3, new $.Vector3, new $.Vector3, new $.Vector3, new $.Vector3], function (e) {
                return y[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), y[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), y[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), y[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), y[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), y[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), y[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), y[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.makeEmpty(), this.setFromPoints(y), this
            }),
            translate: function (e) {
                return this.min.add(e), this.max.add(e), this
            },
            equals: function (e) {
                return e.min.equals(this.min) && e.max.equals(this.max)
            },
            clone: function () {
                return (new $.Box3).copy(this)
            }
        }, $.Matrix3 = function (e, t, r, i, o, a, n, s, h) {
            this.elements = new Float32Array(9);
            var l = this.elements;
            l[0] = void 0 !== e ? e : 1, l[3] = t || 0, l[6] = r || 0, l[1] = i || 0, l[4] = void 0 !== o ? o : 1, l[7] = a || 0, l[2] = n || 0, l[5] = s || 0, l[8] = void 0 !== h ? h : 1
        }, $.Matrix3.prototype = {
            constructor: $.Matrix3, set: function (e, t, r, i, o, a, n, s, h) {
                var l = this.elements;
                return l[0] = e, l[3] = t, l[6] = r, l[1] = i, l[4] = o, l[7] = a, l[2] = n, l[5] = s, l[8] = h, this
            }, identity: function () {
                return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
            }, copy: function (e) {
                var t = e.elements;
                return this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]), this
            }, multiplyVector3: function (e) {
                return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
            }, multiplyVector3Array: function (e) {
                return console.warn("DEPRECATED: Matrix3's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(e)
            }, applyToVector3Array: function () {
                var e = new $.Vector3;
                return function (t, r, i) {
                    void 0 === r && (r = 0), void 0 === i && (i = t.length);
                    for (var o = 0, a = r; o < i; o += 3, a += 3) e.x = t[a], e.y = t[a + 1], e.z = t[a + 2], e.applyMatrix3(this), t[a] = e.x, t[a + 1] = e.y, t[a + 2] = e.z;
                    return t
                }
            }(), multiplyScalar: function (e) {
                var t = this.elements;
                return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
            }, determinant: function () {
                var e = this.elements, t = e[0], r = e[1], i = e[2], o = e[3], a = e[4], n = e[5], s = e[6], h = e[7],
                    l = e[8];
                return t * a * l - t * n * h - r * o * l + r * n * s + i * o * h - i * a * s
            }, getInverse: function (e, t) {
                var r = e.elements, i = this.elements;
                i[0] = r[10] * r[5] - r[6] * r[9], i[1] = -r[10] * r[1] + r[2] * r[9], i[2] = r[6] * r[1] - r[2] * r[5], i[3] = -r[10] * r[4] + r[6] * r[8], i[4] = r[10] * r[0] - r[2] * r[8], i[5] = -r[6] * r[0] + r[2] * r[4], i[6] = r[9] * r[4] - r[5] * r[8], i[7] = -r[9] * r[0] + r[1] * r[8], i[8] = r[5] * r[0] - r[1] * r[4];
                var o = r[0] * i[0] + r[1] * i[3] + r[2] * i[6];
                if (0 === o) {
                    var a = "Matrix3.getInverse(): can't invert matrix, determinant is 0";
                    if (t) throw new Error(a);
                    return console.warn(a), this.identity(), this
                }
                return this.multiplyScalar(1 / o), this
            }, transpose: function () {
                var e, t = this.elements;
                return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
            }, flattenToArrayOffset: function (e, t) {
                var r = this.elements;
                return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e
            }, getNormalMatrix: function (e) {
                return this.getInverse(e).transpose(), this
            }, transposeIntoArray: function (e) {
                var t = this.elements;
                return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
            }, fromArray: function (e) {
                return this.elements.set(e), this
            }, toArray: function () {
                var e = this.elements;
                return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8]]
            }, clone: function () {
                var e = this.elements;
                return new $.Matrix3(e[0], e[3], e[6], e[1], e[4], e[7], e[2], e[5], e[8])
            }
        }, $.Matrix4 = function (e, t, r, i, o, a, n, s, h, l, c, p, u, f, d, m) {
            this.elements = new Float32Array(16);
            var y = this.elements;
            y[0] = void 0 !== e ? e : 1, y[4] = t || 0, y[8] = r || 0, y[12] = i || 0, y[1] = o || 0, y[5] = void 0 !== a ? a : 1, y[9] = n || 0, y[13] = s || 0, y[2] = h || 0, y[6] = l || 0, y[10] = void 0 !== c ? c : 1, y[14] = p || 0, y[3] = u || 0, y[7] = f || 0, y[11] = d || 0, y[15] = void 0 !== m ? m : 1
        },$.Matrix4.prototype = {
            constructor: $.Matrix4, set: function (e, t, r, i, o, a, n, s, h, l, c, p, u, f, d, m) {
                var y = this.elements;
                return y[0] = e, y[4] = t, y[8] = r, y[12] = i, y[1] = o, y[5] = a, y[9] = n, y[13] = s, y[2] = h, y[6] = l, y[10] = c, y[14] = p, y[3] = u, y[7] = f, y[11] = d, y[15] = m, this
            }, identity: function () {
                return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
            }, copy: function (e) {
                return this.elements.set(e.elements), this
            }, extractPosition: function (e) {
                return console.warn("DEPRECATED: Matrix4's .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
            }, copyPosition: function (e) {
                var t = this.elements, r = e.elements;
                return t[12] = r[12], t[13] = r[13], t[14] = r[14], this
            }, extractRotation: function () {
                var e = new $.Vector3;
                return function (t) {
                    var r = this.elements, i = t.elements, o = 1 / e.set(i[0], i[1], i[2]).length(),
                        a = 1 / e.set(i[4], i[5], i[6]).length(), n = 1 / e.set(i[8], i[9], i[10]).length();
                    return r[0] = i[0] * o, r[1] = i[1] * o, r[2] = i[2] * o, r[4] = i[4] * a, r[5] = i[5] * a, r[6] = i[6] * a, r[8] = i[8] * n, r[9] = i[9] * n, r[10] = i[10] * n, this
                }
            }(), makeRotationFromEuler: function (e) {
                e instanceof $.Euler == !1 && console.error("ERROR: Matrix's .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.  Please update your code.");
                var t = this.elements, r = e.x, i = e.y, o = e.z, a = Math.cos(r), n = Math.sin(r), s = Math.cos(i),
                    h = Math.sin(i), l = Math.cos(o), c = Math.sin(o);
                if ("XYZ" === e.order) {
                    var p = a * l, u = a * c, f = n * l, d = n * c;
                    t[0] = s * l, t[4] = -s * c, t[8] = h, t[1] = u + f * h, t[5] = p - d * h, t[9] = -n * s, t[2] = d - p * h, t[6] = f + u * h, t[10] = a * s
                } else if ("YXZ" === e.order) {
                    var m = s * l, y = s * c, g = h * l, v = h * c;
                    t[0] = m + v * n, t[4] = g * n - y, t[8] = a * h, t[1] = a * c, t[5] = a * l, t[9] = -n, t[2] = y * n - g, t[6] = v + m * n, t[10] = a * s
                } else if ("ZXY" === e.order) {
                    m = s * l, y = s * c, g = h * l, v = h * c;
                    t[0] = m - v * n, t[4] = -a * c, t[8] = g + y * n, t[1] = y + g * n, t[5] = a * l, t[9] = v - m * n, t[2] = -a * h, t[6] = n, t[10] = a * s
                } else if ("ZYX" === e.order) {
                    p = a * l, u = a * c, f = n * l, d = n * c;
                    t[0] = s * l, t[4] = f * h - u, t[8] = p * h + d, t[1] = s * c, t[5] = d * h + p, t[9] = u * h - f, t[2] = -h, t[6] = n * s, t[10] = a * s
                } else if ("YZX" === e.order) {
                    var x = a * s, w = a * h, _ = n * s, b = n * h;
                    t[0] = s * l, t[4] = b - x * c, t[8] = _ * c + w, t[1] = c, t[5] = a * l, t[9] = -n * l, t[2] = -h * l, t[6] = w * c + _, t[10] = x - b * c
                } else if ("XZY" === e.order) {
                    x = a * s, w = a * h, _ = n * s, b = n * h;
                    t[0] = s * l, t[4] = -c, t[8] = h * l, t[1] = x * c + b, t[5] = a * l, t[9] = w * c - _, t[2] = _ * c - w, t[6] = n * l, t[10] = b * c + x
                }
                return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
            }, setRotationFromQuaternion: function (e) {
                return console.warn("DEPRECATED: Matrix4's .setRotationFromQuaternion() has been deprecated in favor of makeRotationFromQuaternion.  Please update your code."), this.makeRotationFromQuaternion(e)
            }, makeRotationFromQuaternion: function (e) {
                var t = this.elements, r = e.x, i = e.y, o = e.z, a = e.w, n = r + r, s = i + i, h = o + o, l = r * n,
                    c = r * s, p = r * h, u = i * s, f = i * h, d = o * h, m = a * n, y = a * s, g = a * h;
                return t[0] = 1 - (u + d), t[4] = c - g, t[8] = p + y, t[1] = c + g, t[5] = 1 - (l + d), t[9] = f - m, t[2] = p - y, t[6] = f + m, t[10] = 1 - (l + u), t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
            }, lookAt: (x = new $.Vector3, w = new $.Vector3, _ = new $.Vector3, function (e, t, r) {
                var i = this.elements;
                return _.subVectors(e, t).normalize(), 0 === _.length() && (_.z = 1), x.crossVectors(r, _).normalize(), 0 === x.length() && (_.x += 1e-4, x.crossVectors(r, _).normalize()), w.crossVectors(_, x), i[0] = x.x, i[4] = w.x, i[8] = _.x, i[1] = x.y, i[5] = w.y, i[9] = _.y, i[2] = x.z, i[6] = w.z, i[10] = _.z, this
            }), multiply: function (e, t) {
                return void 0 !== t ? (console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
            }, multiplyMatrices: function (e, t) {
                var r = e.elements, i = t.elements, o = this.elements, a = r[0], n = r[4], s = r[8], h = r[12],
                    l = r[1], c = r[5], p = r[9], u = r[13], f = r[2], d = r[6], m = r[10], y = r[14], g = r[3],
                    v = r[7], x = r[11], w = r[15], _ = i[0], b = i[4], M = i[8], S = i[12], A = i[1], T = i[5],
                    E = i[9], C = i[13], P = i[2], L = i[6], D = i[10], R = i[14], F = i[3], U = i[7], V = i[11],
                    z = i[15];
                return o[0] = a * _ + n * A + s * P + h * F, o[4] = a * b + n * T + s * L + h * U, o[8] = a * M + n * E + s * D + h * V, o[12] = a * S + n * C + s * R + h * z, o[1] = l * _ + c * A + p * P + u * F, o[5] = l * b + c * T + p * L + u * U, o[9] = l * M + c * E + p * D + u * V, o[13] = l * S + c * C + p * R + u * z, o[2] = f * _ + d * A + m * P + y * F, o[6] = f * b + d * T + m * L + y * U, o[10] = f * M + d * E + m * D + y * V, o[14] = f * S + d * C + m * R + y * z, o[3] = g * _ + v * A + x * P + w * F, o[7] = g * b + v * T + x * L + w * U, o[11] = g * M + v * E + x * D + w * V, o[15] = g * S + v * C + x * R + w * z, this
            }, multiplyToArray: function (e, t, r) {
                var i = this.elements;
                return this.multiplyMatrices(e, t), r[0] = i[0], r[1] = i[1], r[2] = i[2], r[3] = i[3], r[4] = i[4], r[5] = i[5], r[6] = i[6], r[7] = i[7], r[8] = i[8], r[9] = i[9], r[10] = i[10], r[11] = i[11], r[12] = i[12], r[13] = i[13], r[14] = i[14], r[15] = i[15], this
            }, multiplyScalar: function (e) {
                var t = this.elements;
                return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
            }, multiplyVector3: function (e) {
                return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), e.applyProjection(this)
            }, multiplyVector4: function (e) {
                return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, multiplyVector3Array: function (e) {
                return console.warn("DEPRECATED: Matrix4's .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(e)
            }, applyToVector3Array: function () {
                var e = new $.Vector3;
                return function (t, r, i) {
                    void 0 === r && (r = 0), void 0 === i && (i = t.length);
                    for (var o = 0, a = r; o < i; o += 3, a += 3) e.x = t[a], e.y = t[a + 1], e.z = t[a + 2], e.applyMatrix4(this), t[a] = e.x, t[a + 1] = e.y, t[a + 2] = e.z;
                    return t
                }
            }(), rotateAxis: function (e) {
                console.warn("DEPRECATED: Matrix4's .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
            }, crossVector: function (e) {
                return console.warn("DEPRECATED: Matrix4's .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
            }, determinant: function () {
                var e = this.elements, t = e[0], r = e[4], i = e[8], o = e[12], a = e[1], n = e[5], s = e[9], h = e[13],
                    l = e[2], c = e[6], p = e[10], u = e[14];
                return e[3] * (+o * s * c - i * h * c - o * n * p + r * h * p + i * n * u - r * s * u) + e[7] * (+t * s * u - t * h * p + o * a * p - i * a * u + i * h * l - o * s * l) + e[11] * (+t * h * c - t * n * u - o * a * c + r * a * u + o * n * l - r * h * l) + e[15] * (-i * n * l - t * s * c + t * n * p + i * a * c - r * a * p + r * s * l)
            }, transpose: function () {
                var e, t = this.elements;
                return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
            }, flattenToArrayOffset: function (e, t) {
                var r = this.elements;
                return e[t] = r[0], e[t + 1] = r[1], e[t + 2] = r[2], e[t + 3] = r[3], e[t + 4] = r[4], e[t + 5] = r[5], e[t + 6] = r[6], e[t + 7] = r[7], e[t + 8] = r[8], e[t + 9] = r[9], e[t + 10] = r[10], e[t + 11] = r[11], e[t + 12] = r[12], e[t + 13] = r[13], e[t + 14] = r[14], e[t + 15] = r[15], e
            }, getPosition: function () {
                var e = new $.Vector3;
                return function () {
                    console.warn("DEPRECATED: Matrix4's .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");
                    var t = this.elements;
                    return e.set(t[12], t[13], t[14])
                }
            }(), setPosition: function (e) {
                var t = this.elements;
                return t[12] = e.x, t[13] = e.y, t[14] = e.z, this
            }, getInverse: function (e, t) {
                var r = this.elements, i = e.elements, o = i[0], a = i[4], n = i[8], s = i[12], h = i[1], l = i[5],
                    c = i[9], p = i[13], u = i[2], f = i[6], d = i[10], m = i[14], y = i[3], g = i[7], v = i[11],
                    x = i[15];
                r[0] = c * m * g - p * d * g + p * f * v - l * m * v - c * f * x + l * d * x, r[4] = s * d * g - n * m * g - s * f * v + a * m * v + n * f * x - a * d * x, r[8] = n * p * g - s * c * g + s * l * v - a * p * v - n * l * x + a * c * x, r[12] = s * c * f - n * p * f - s * l * d + a * p * d + n * l * m - a * c * m, r[1] = p * d * y - c * m * y - p * u * v + h * m * v + c * u * x - h * d * x, r[5] = n * m * y - s * d * y + s * u * v - o * m * v - n * u * x + o * d * x, r[9] = s * c * y - n * p * y - s * h * v + o * p * v + n * h * x - o * c * x, r[13] = n * p * u - s * c * u + s * h * d - o * p * d - n * h * m + o * c * m, r[2] = l * m * y - p * f * y + p * u * g - h * m * g - l * u * x + h * f * x, r[6] = s * f * y - a * m * y - s * u * g + o * m * g + a * u * x - o * f * x, r[10] = a * p * y - s * l * y + s * h * g - o * p * g - a * h * x + o * l * x, r[14] = s * l * u - a * p * u - s * h * f + o * p * f + a * h * m - o * l * m, r[3] = c * f * y - l * d * y - c * u * g + h * d * g + l * u * v - h * f * v, r[7] = a * d * y - n * f * y + n * u * g - o * d * g - a * u * v + o * f * v, r[11] = n * l * y - a * c * y - n * h * g + o * c * g + a * h * v - o * l * v, r[15] = a * c * u - n * l * u + n * h * f - o * c * f - a * h * d + o * l * d;
                var w = o * r[0] + h * r[4] + u * r[8] + y * r[12];
                if (0 == w) {
                    var _ = "Matrix4.getInverse(): can't invert matrix, determinant is 0";
                    if (t) throw new Error(_);
                    return console.warn(_), this.identity(), this
                }
                return this.multiplyScalar(1 / w), this
            }, translate: function (e) {
                console.warn("DEPRECATED: Matrix4's .translate() has been removed.")
            }, rotateX: function (e) {
                console.warn("DEPRECATED: Matrix4's .rotateX() has been removed.")
            }, rotateY: function (e) {
                console.warn("DEPRECATED: Matrix4's .rotateY() has been removed.")
            }, rotateZ: function (e) {
                console.warn("DEPRECATED: Matrix4's .rotateZ() has been removed.")
            }, rotateByAxis: function (e, t) {
                console.warn("DEPRECATED: Matrix4's .rotateByAxis() has been removed.")
            }, scale: function (e) {
                var t = this.elements, r = e.x, i = e.y, o = e.z;
                return t[0] *= r, t[4] *= i, t[8] *= o, t[1] *= r, t[5] *= i, t[9] *= o, t[2] *= r, t[6] *= i, t[10] *= o, t[3] *= r, t[7] *= i, t[11] *= o, this
            }, getMaxScaleOnAxis: function () {
                var e = this.elements, t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
                    r = e[4] * e[4] + e[5] * e[5] + e[6] * e[6], i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
                return Math.sqrt(Math.max(t, Math.max(r, i)))
            }, makeTranslation: function (e, t, r) {
                return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, r, 0, 0, 0, 1), this
            }, makeRotationX: function (e) {
                var t = Math.cos(e), r = Math.sin(e);
                return this.set(1, 0, 0, 0, 0, t, -r, 0, 0, r, t, 0, 0, 0, 0, 1), this
            }, makeRotationY: function (e) {
                var t = Math.cos(e), r = Math.sin(e);
                return this.set(t, 0, r, 0, 0, 1, 0, 0, -r, 0, t, 0, 0, 0, 0, 1), this
            }, makeRotationZ: function (e) {
                var t = Math.cos(e), r = Math.sin(e);
                return this.set(t, -r, 0, 0, r, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
            }, makeRotationAxis: function (e, t) {
                var r = Math.cos(t), i = Math.sin(t), o = 1 - r, a = e.x, n = e.y, s = e.z, h = o * a, l = o * n;
                return this.set(h * a + r, h * n - i * s, h * s + i * n, 0, h * n + i * s, l * n + r, l * s - i * a, 0, h * s - i * n, l * s + i * a, o * s * s + r, 0, 0, 0, 0, 1), this
            }, makeScale: function (e, t, r) {
                return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, r, 0, 0, 0, 0, 1), this
            }, compose: function (e, t, r) {
                return this.makeRotationFromQuaternion(t), this.scale(r), this.setPosition(e), this
            }, decompose: (g = new $.Vector3, v = new $.Matrix4, function (e, t, r) {
                var i = this.elements, o = g.set(i[0], i[1], i[2]).length(), a = g.set(i[4], i[5], i[6]).length(),
                    n = g.set(i[8], i[9], i[10]).length();
                this.determinant() < 0 && (o = -o), e.x = i[12], e.y = i[13], e.z = i[14], v.elements.set(this.elements);
                var s = 1 / o, h = 1 / a, l = 1 / n;
                return v.elements[0] *= s, v.elements[1] *= s, v.elements[2] *= s, v.elements[4] *= h, v.elements[5] *= h, v.elements[6] *= h, v.elements[8] *= l, v.elements[9] *= l, v.elements[10] *= l, t.setFromRotationMatrix(v), r.x = o, r.y = a, r.z = n, this
            }), makeFrustum: function (e, t, r, i, o, a) {
                var n = this.elements, s = 2 * o / (t - e), h = 2 * o / (i - r), l = (t + e) / (t - e),
                    c = (i + r) / (i - r), p = -(a + o) / (a - o), u = -2 * a * o / (a - o);
                return n[0] = s, n[4] = 0, n[8] = l, n[12] = 0, n[1] = 0, n[5] = h, n[9] = c, n[13] = 0, n[2] = 0, n[6] = 0, n[10] = p, n[14] = u, n[3] = 0, n[7] = 0, n[11] = -1, n[15] = 0, this
            }, makePerspective: function (e, t, r, i) {
                var o = r * Math.tan($.Math.degToRad(.5 * e)), a = -o, n = a * t, s = o * t;
                return this.makeFrustum(n, s, a, o, r, i)
            }, makeOrthographic: function (e, t, r, i, o, a) {
                var n = this.elements, s = t - e, h = r - i, l = a - o, c = (t + e) / s, p = (r + i) / h,
                    u = (a + o) / l;
                return n[0] = 2 / s, n[4] = 0, n[8] = 0, n[12] = -c, n[1] = 0, n[5] = 2 / h, n[9] = 0, n[13] = -p, n[2] = 0, n[6] = 0, n[10] = -2 / l, n[14] = -u, n[3] = 0, n[7] = 0, n[11] = 0, n[15] = 1, this
            }, fromArray: function (e) {
                return this.elements.set(e), this
            }, toArray: function () {
                var e = this.elements;
                return [e[0], e[1], e[2], e[3], e[4], e[5], e[6], e[7], e[8], e[9], e[10], e[11], e[12], e[13], e[14], e[15]]
            }, clone: function () {
                var e = this.elements;
                return new $.Matrix4(e[0], e[4], e[8], e[12], e[1], e[5], e[9], e[13], e[2], e[6], e[10], e[14], e[3], e[7], e[11], e[15])
            }
        },$.Ray = function (e, t) {
            this.origin = void 0 !== e ? e : new $.Vector3, this.direction = void 0 !== t ? t : new $.Vector3
        },$.Ray.prototype = {
            constructor: $.Ray,
            set: function (e, t) {
                return this.origin.copy(e), this.direction.copy(t), this
            },
            copy: function (e) {
                return this.origin.copy(e.origin), this.direction.copy(e.direction), this
            },
            at: function (e, t) {
                return (t || new $.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)
            },
            recast: function () {
                var e = new $.Vector3;
                return function (t) {
                    return this.origin.copy(this.at(t, e)), this
                }
            }(),
            closestPointToPoint: function (e, t) {
                var r = t || new $.Vector3;
                r.subVectors(e, this.origin);
                var i = r.dot(this.direction);
                return i < 0 ? r.copy(this.origin) : r.copy(this.direction).multiplyScalar(i).add(this.origin)
            },
            distanceToPoint: function () {
                var e = new $.Vector3;
                return function (t) {
                    var r = e.subVectors(t, this.origin).dot(this.direction);
                    return r < 0 ? this.origin.distanceTo(t) : (e.copy(this.direction).multiplyScalar(r).add(this.origin), e.distanceTo(t))
                }
            }(),
            distanceSqToSegment: function (e, t, r, i) {
                var o, a, n, s, h = e.clone().add(t).multiplyScalar(.5), l = t.clone().sub(e).normalize(),
                    c = .5 * e.distanceTo(t), p = this.origin.clone().sub(h), u = -this.direction.dot(l),
                    f = p.dot(this.direction), d = -p.dot(l), m = p.lengthSq(), y = Math.abs(1 - u * u);
                if (y >= 0) if (a = u * f - d, s = c * y, (o = u * d - f) >= 0) if (a >= -s) if (a <= s) {
                    var g = 1 / y;
                    n = (o *= g) * (o + u * (a *= g) + 2 * f) + a * (u * o + a + 2 * d) + m
                } else a = c, n = -(o = Math.max(0, -(u * a + f))) * o + a * (a + 2 * d) + m; else a = -c, n = -(o = Math.max(0, -(u * a + f))) * o + a * (a + 2 * d) + m; else a <= -s ? n = -(o = Math.max(0, -(-u * c + f))) * o + (a = o > 0 ? -c : Math.min(Math.max(-c, -d), c)) * (a + 2 * d) + m : a <= s ? (o = 0, n = (a = Math.min(Math.max(-c, -d), c)) * (a + 2 * d) + m) : n = -(o = Math.max(0, -(u * c + f))) * o + (a = o > 0 ? c : Math.min(Math.max(-c, -d), c)) * (a + 2 * d) + m; else a = u > 0 ? -c : c, n = -(o = Math.max(0, -(u * a + f))) * o + a * (a + 2 * d) + m;
                return r && r.copy(this.direction.clone().multiplyScalar(o).add(this.origin)), i && i.copy(l.clone().multiplyScalar(a).add(h)), n
            },
            isIntersectionSphere: function (e) {
                return this.distanceToPoint(e.center) <= e.radius
            },
            isIntersectionPlane: function (e) {
                var t = e.distanceToPoint(this.origin);
                return 0 === t || e.normal.dot(this.direction) * t < 0
            },
            distanceToPlane: function (e) {
                var t = e.normal.dot(this.direction);
                if (0 == t) return 0 == e.distanceToPoint(this.origin) ? 0 : null;
                var r = -(this.origin.dot(e.normal) + e.constant) / t;
                return r >= 0 ? r : null
            },
            intersectPlane: function (e, t) {
                var r = this.distanceToPlane(e);
                return null === r ? null : this.at(r, t)
            },
            isIntersectionBox: (T = new $.Vector3, function (e) {
                return null !== this.intersectBox(e, T)
            }),
            intersectBox: function (e, t) {
                var r, i, o, a, n, s, h = 1 / this.direction.x, l = 1 / this.direction.y, c = 1 / this.direction.z,
                    p = this.origin;
                return h >= 0 ? (r = (e.min.x - p.x) * h, i = (e.max.x - p.x) * h) : (r = (e.max.x - p.x) * h, i = (e.min.x - p.x) * h), l >= 0 ? (o = (e.min.y - p.y) * l, a = (e.max.y - p.y) * l) : (o = (e.max.y - p.y) * l, a = (e.min.y - p.y) * l), r > a || o > i ? null : ((o > r || r != r) && (r = o), (a < i || i != i) && (i = a), c >= 0 ? (n = (e.min.z - p.z) * c, s = (e.max.z - p.z) * c) : (n = (e.max.z - p.z) * c, s = (e.min.z - p.z) * c), r > s || n > i ? null : ((n > r || r != r) && (r = n), (s < i || i != i) && (i = s), i < 0 ? null : this.at(r >= 0 ? r : i, t)))
            },
            intersectTriangle: (b = new $.Vector3, M = new $.Vector3, S = new $.Vector3, A = new $.Vector3, function (e, t, r, i, o) {
                M.subVectors(t, e), S.subVectors(r, e), A.crossVectors(M, S);
                var a, n = this.direction.dot(A);
                if (n > 0) {
                    if (i) return null;
                    a = 1
                } else {
                    if (!(n < 0)) return null;
                    a = -1, n = -n
                }
                b.subVectors(this.origin, e);
                var s = a * this.direction.dot(S.crossVectors(b, S));
                if (s < 0) return null;
                var h = a * this.direction.dot(M.cross(b));
                if (h < 0) return null;
                if (s + h > n) return null;
                var l = -a * b.dot(A);
                return l < 0 ? null : this.at(l / n, o)
            }),
            applyMatrix4: function (e) {
                return this.direction.add(this.origin).applyMatrix4(e), this.origin.applyMatrix4(e), this.direction.sub(this.origin), this.direction.normalize(), this
            },
            equals: function (e) {
                return e.origin.equals(this.origin) && e.direction.equals(this.direction)
            },
            clone: function () {
                return (new $.Ray).copy(this)
            }
        },$.Sphere = function (e, t) {
            this.center = void 0 !== e ? e : new $.Vector3, this.radius = void 0 !== t ? t : 0
        },$.Sphere.prototype = {
            constructor: $.Sphere, set: function (e, t) {
                return this.center.copy(e), this.radius = t, this
            }, setFromPoints: (E = new $.Box3, function (e, t) {
                var r = this.center;
                void 0 !== t ? r.copy(t) : E.setFromPoints(e).center(r);
                for (var i = 0, o = 0, a = e.length; o < a; o++) i = Math.max(i, r.distanceToSquared(e[o]));
                return this.radius = Math.sqrt(i), this
            }), copy: function (e) {
                return this.center.copy(e.center), this.radius = e.radius, this
            }, empty: function () {
                return this.radius <= 0
            }, containsPoint: function (e) {
                return e.distanceToSquared(this.center) <= this.radius * this.radius
            }, distanceToPoint: function (e) {
                return e.distanceTo(this.center) - this.radius
            }, intersectsSphere: function (e) {
                var t = this.radius + e.radius;
                return e.center.distanceToSquared(this.center) <= t * t
            }, clampPoint: function (e, t) {
                var r = this.center.distanceToSquared(e), i = t || new $.Vector3;
                return i.copy(e), r > this.radius * this.radius && (i.sub(this.center).normalize(), i.multiplyScalar(this.radius).add(this.center)), i
            }, getBoundingBox: function (e) {
                var t = e || new $.Box3;
                return t.set(this.center, this.center), t.expandByScalar(this.radius), t
            }, applyMatrix4: function (e) {
                return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
            }, translate: function (e) {
                return this.center.add(e), this
            }, equals: function (e) {
                return e.center.equals(this.center) && e.radius === this.radius
            }, clone: function () {
                return (new $.Sphere).copy(this)
            }
        },$.Frustum = function (e, t, r, i, o, a) {
            this.planes = [void 0 !== e ? e : new $.Plane, void 0 !== t ? t : new $.Plane, void 0 !== r ? r : new $.Plane, void 0 !== i ? i : new $.Plane, void 0 !== o ? o : new $.Plane, void 0 !== a ? a : new $.Plane]
        },$.Frustum.prototype = {
            constructor: $.Frustum, set: function (e, t, r, i, o, a) {
                var n = this.planes;
                return n[0].copy(e), n[1].copy(t), n[2].copy(r), n[3].copy(i), n[4].copy(o), n[5].copy(a), this
            }, copy: function (e) {
                for (var t = this.planes, r = 0; r < 6; r++) t[r].copy(e.planes[r]);
                return this
            }, setFromMatrix: function (e) {
                var t = this.planes, r = e.elements, i = r[0], o = r[1], a = r[2], n = r[3], s = r[4], h = r[5],
                    l = r[6], c = r[7], p = r[8], u = r[9], f = r[10], d = r[11], m = r[12], y = r[13], g = r[14],
                    v = r[15];
                return t[0].setComponents(n - i, c - s, d - p, v - m).normalize(), t[1].setComponents(n + i, c + s, d + p, v + m).normalize(), t[2].setComponents(n + o, c + h, d + u, v + y).normalize(), t[3].setComponents(n - o, c - h, d - u, v - y).normalize(), t[4].setComponents(n - a, c - l, d - f, v - g).normalize(), t[5].setComponents(n + a, c + l, d + f, v + g).normalize(), this
            }, intersectsObject: (L = new $.Sphere, function (e) {
                var t = e.geometry;
                return null === t.boundingSphere && t.computeBoundingSphere(), L.copy(t.boundingSphere), L.applyMatrix4(e.matrixWorld), this.intersectsSphere(L)
            }), intersectsSphere: function (e) {
                for (var t = this.planes, r = e.center, i = -e.radius, o = 0; o < 6; o++) {
                    if (t[o].distanceToPoint(r) < i) return !1
                }
                return !0
            }, intersectsBox: (C = new $.Vector3, P = new $.Vector3, function (e) {
                for (var t = this.planes, r = 0; r < 6; r++) {
                    var i = t[r];
                    C.x = i.normal.x > 0 ? e.min.x : e.max.x, P.x = i.normal.x > 0 ? e.max.x : e.min.x, C.y = i.normal.y > 0 ? e.min.y : e.max.y, P.y = i.normal.y > 0 ? e.max.y : e.min.y, C.z = i.normal.z > 0 ? e.min.z : e.max.z, P.z = i.normal.z > 0 ? e.max.z : e.min.z;
                    var o = i.distanceToPoint(C), a = i.distanceToPoint(P);
                    if (o < 0 && a < 0) return !1
                }
                return !0
            }), containsPoint: function (e) {
                for (var t = this.planes, r = 0; r < 6; r++) if (t[r].distanceToPoint(e) < 0) return !1;
                return !0
            }, clone: function () {
                return (new $.Frustum).copy(this)
            }
        },$.Plane = function (e, t) {
            this.normal = void 0 !== e ? e : new $.Vector3(1, 0, 0), this.constant = void 0 !== t ? t : 0
        },$.Plane.prototype = {
            constructor: $.Plane, set: function (e, t) {
                return this.normal.copy(e), this.constant = t, this
            }, setComponents: function (e, t, r, i) {
                return this.normal.set(e, t, r), this.constant = i, this
            }, setFromNormalAndCoplanarPoint: function (e, t) {
                return this.normal.copy(e), this.constant = -t.dot(this.normal), this
            }, setFromCoplanarPoints: function () {
                var e = new $.Vector3, t = new $.Vector3;
                return function (r, i, o) {
                    var a = e.subVectors(o, i).cross(t.subVectors(r, i)).normalize();
                    return this.setFromNormalAndCoplanarPoint(a, r), this
                }
            }(), copy: function (e) {
                return this.normal.copy(e.normal), this.constant = e.constant, this
            }, normalize: function () {
                var e = 1 / this.normal.length();
                return this.normal.multiplyScalar(e), this.constant *= e, this
            }, negate: function () {
                return this.constant *= -1, this.normal.negate(), this
            }, distanceToPoint: function (e) {
                return this.normal.dot(e) + this.constant
            }, distanceToSphere: function (e) {
                return this.distanceToPoint(e.center) - e.radius
            }, projectPoint: function (e, t) {
                return this.orthoPoint(e, t).sub(e).negate()
            }, orthoPoint: function (e, t) {
                var r = this.distanceToPoint(e);
                return (t || new $.Vector3).copy(this.normal).multiplyScalar(r)
            }, isIntersectionLine: function (e) {
                var t = this.distanceToPoint(e.start), r = this.distanceToPoint(e.end);
                return t < 0 && r > 0 || r < 0 && t > 0
            }, intersectLine: function () {
                var e = new $.Vector3;
                return function (t, r) {
                    var i = r || new $.Vector3, o = t.delta(e), a = this.normal.dot(o);
                    if (0 == a) return 0 == this.distanceToPoint(t.start) ? i.copy(t.start) : void 0;
                    var n = -(t.start.dot(this.normal) + this.constant) / a;
                    return n < 0 || n > 1 ? void 0 : i.copy(o).multiplyScalar(n).add(t.start)
                }
            }(), coplanarPoint: function (e) {
                return (e || new $.Vector3).copy(this.normal).multiplyScalar(-this.constant)
            }, applyMatrix4: function () {
                var e = new $.Vector3, t = new $.Vector3, r = new $.Matrix3;
                return function (i, o) {
                    var a = o || r.getNormalMatrix(i), n = e.copy(this.normal).applyMatrix3(a),
                        s = this.coplanarPoint(t);
                    return s.applyMatrix4(i), this.setFromNormalAndCoplanarPoint(n, s), this
                }
            }(), translate: function (e) {
                return this.constant = this.constant - e.dot(this.normal), this
            }, equals: function (e) {
                return e.normal.equals(this.normal) && e.constant == this.constant
            }, clone: function () {
                return (new $.Plane).copy(this)
            }
        },$.Math = {
            generateUUID: function () {
                var e, t = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),
                    r = new Array(36), i = 0;
                return function () {
                    for (var o = 0; o < 36; o++) 8 == o || 13 == o || 18 == o || 23 == o ? r[o] = "-" : 14 == o ? r[o] = "4" : (i <= 2 && (i = 33554432 + 16777216 * Math.random() | 0), e = 15 & i, i >>= 4, r[o] = t[19 == o ? 3 & e | 8 : e]);
                    return r.join("")
                }
            }(), clamp: function (e, t, r) {
                return e < t ? t : e > r ? r : e
            }, clampBottom: function (e, t) {
                return e < t ? t : e
            }, mapLinear: function (e, t, r, i, o) {
                return i + (e - t) * (o - i) / (r - t)
            }, smoothstep: function (e, t, r) {
                return e <= t ? 0 : e >= r ? 1 : (e = (e - t) / (r - t)) * e * (3 - 2 * e)
            }, smootherstep: function (e, t, r) {
                return e <= t ? 0 : e >= r ? 1 : (e = (e - t) / (r - t)) * e * e * (e * (6 * e - 15) + 10)
            }, random16: function () {
                return (65280 * Math.random() + 255 * Math.random()) / 65535
            }, randInt: function (e, t) {
                return e + Math.floor(Math.random() * (t - e + 1))
            }, randFloat: function (e, t) {
                return e + Math.random() * (t - e)
            }, randFloatSpread: function (e) {
                return e * (.5 - Math.random())
            }, sign: function (e) {
                return e < 0 ? -1 : e > 0 ? 1 : 0
            }, degToRad: (R = Math.PI / 180, function (e) {
                return e * R
            }), radToDeg: (D = 180 / Math.PI, function (e) {
                return e * D
            }), isPowerOfTwo: function (e) {
                return 0 == (e & e - 1) && 0 !== e
            }
        },$.Spline = function (e) {
            this.points = e;
            var t, r, i, o, a, n, s, h, l, c = [], p = {x: 0, y: 0, z: 0};

            function u(e, t, r, i, o, a, n) {
                var s = .5 * (r - e), h = .5 * (i - t);
                return (2 * (t - r) + s + h) * n + (-3 * (t - r) - 2 * s - h) * a + s * o + t
            }

            this.initFromArray = function (e) {
                this.points = [];
                for (var t = 0; t < e.length; t++) this.points[t] = {x: e[t][0], y: e[t][1], z: e[t][2]}
            }, this.getPoint = function (e) {
                return t = (this.points.length - 1) * e, r = Math.floor(t), i = t - r, c[0] = 0 === r ? r : r - 1, c[1] = r, c[2] = r > this.points.length - 2 ? this.points.length - 1 : r + 1, c[3] = r > this.points.length - 3 ? this.points.length - 1 : r + 2, n = this.points[c[0]], s = this.points[c[1]], h = this.points[c[2]], l = this.points[c[3]], a = i * (o = i * i), p.x = u(n.x, s.x, h.x, l.x, i, o, a), p.y = u(n.y, s.y, h.y, l.y, i, o, a), p.z = u(n.z, s.z, h.z, l.z, i, o, a), p
            }, this.getControlPointsArray = function () {
                var e, t, r = this.points.length, i = [];
                for (e = 0; e < r; e++) t = this.points[e], i[e] = [t.x, t.y, t.z];
                return i
            }, this.getLength = function (e) {
                var t, r, i, o, a = 0, n = 0, s = 0, h = new $.Vector3, l = new $.Vector3, c = [], p = 0;
                for (c[0] = 0, e || (e = 100), i = this.points.length * e, h.copy(this.points[0]), t = 1; t < i; t++) r = t / i, o = this.getPoint(r), l.copy(o), p += l.distanceTo(h), h.copy(o), a = (this.points.length - 1) * r, (n = Math.floor(a)) != s && (c[n] = p, s = n);
                return c[c.length] = p, {chunks: c, total: p}
            }, this.reparametrizeByArcLength = function (e) {
                var t, r, i, o, a, n, s, h, l = [], c = new $.Vector3, p = this.getLength();
                for (l.push(c.copy(this.points[0]).clone()), t = 1; t < this.points.length; t++) {
                    for (n = p.chunks[t] - p.chunks[t - 1], s = Math.ceil(e * n / p.total), o = (t - 1) / (this.points.length - 1), a = t / (this.points.length - 1), r = 1; r < s - 1; r++) i = o + r * (1 / s) * (a - o), h = this.getPoint(i), l.push(c.copy(h).clone());
                    l.push(c.copy(this.points[t]).clone())
                }
                this.points = l
            }
        },$.Triangle = function (e, t, r) {
            this.a = void 0 !== e ? e : new $.Vector3, this.b = void 0 !== t ? t : new $.Vector3, this.c = void 0 !== r ? r : new $.Vector3
        },$.Triangle.normal = (F = new $.Vector3, function (e, t, r, i) {
            var o = i || new $.Vector3;
            o.subVectors(r, t), F.subVectors(e, t), o.cross(F);
            var a = o.lengthSq();
            return a > 0 ? o.multiplyScalar(1 / Math.sqrt(a)) : o.set(0, 0, 0)
        }),$.Triangle.barycoordFromPoint = function () {
            var e = new $.Vector3, t = new $.Vector3, r = new $.Vector3;
            return function (i, o, a, n, s) {
                e.subVectors(n, o), t.subVectors(a, o), r.subVectors(i, o);
                var h = e.dot(e), l = e.dot(t), c = e.dot(r), p = t.dot(t), u = t.dot(r), f = h * p - l * l,
                    d = s || new $.Vector3;
                if (0 == f) return d.set(-2, -1, -1);
                var m = 1 / f, y = (p * c - l * u) * m, g = (h * u - l * c) * m;
                return d.set(1 - y - g, g, y)
            }
        }(),$.Triangle.containsPoint = function () {
            var e = new $.Vector3;
            return function (t, r, i, o) {
                var a = $.Triangle.barycoordFromPoint(t, r, i, o, e);
                return a.x >= 0 && a.y >= 0 && a.x + a.y <= 1
            }
        }(),$.Triangle.prototype = {
            constructor: $.Triangle, set: function (e, t, r) {
                return this.a.copy(e), this.b.copy(t), this.c.copy(r), this
            }, setFromPointsAndIndices: function (e, t, r, i) {
                return this.a.copy(e[t]), this.b.copy(e[r]), this.c.copy(e[i]), this
            }, copy: function (e) {
                return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
            }, area: function () {
                var e = new $.Vector3, t = new $.Vector3;
                return function () {
                    return e.subVectors(this.c, this.b), t.subVectors(this.a, this.b), .5 * e.cross(t).length()
                }
            }(), midpoint: function (e) {
                return (e || new $.Vector3).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
            }, normal: function (e) {
                return $.Triangle.normal(this.a, this.b, this.c, e)
            }, plane: function (e) {
                return (e || new $.Plane).setFromCoplanarPoints(this.a, this.b, this.c)
            }, barycoordFromPoint: function (e, t) {
                return $.Triangle.barycoordFromPoint(e, this.a, this.b, this.c, t)
            }, containsPoint: function (e) {
                return $.Triangle.containsPoint(e, this.a, this.b, this.c)
            }, equals: function (e) {
                return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
            }, clone: function () {
                return (new $.Triangle).copy(this)
            }
        },$.Vertex = function (e) {
            return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."), e
        },$.Clock = function (e) {
            this.autoStart = void 0 === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
        },$.Clock.prototype = {
            constructor: $.Clock, start: function () {
                this.startTime = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now(), this.oldTime = this.startTime, this.running = !0
            }, stop: function () {
                this.getElapsedTime(), this.running = !1
            }, getElapsedTime: function () {
                return this.getDelta(), this.elapsedTime
            }, getDelta: function () {
                var e = 0;
                if (this.autoStart && !this.running && this.start(), this.running) {
                    var t = void 0 !== self.performance && void 0 !== self.performance.now ? self.performance.now() : Date.now();
                    e = .001 * (t - this.oldTime), this.oldTime = t, this.elapsedTime += e
                }
                return e
            }
        },$.EventDispatcher = function () {
        },$.EventDispatcher.prototype = {
            constructor: $.EventDispatcher, apply: function (e) {
                e.addEventListener = $.EventDispatcher.prototype.addEventListener, e.hasEventListener = $.EventDispatcher.prototype.hasEventListener, e.removeEventListener = $.EventDispatcher.prototype.removeEventListener, e.dispatchEvent = $.EventDispatcher.prototype.dispatchEvent
            }, addEventListener: function (e, t) {
                void 0 === this._listeners && (this._listeners = {});
                var r = this._listeners;
                void 0 === r[e] && (r[e] = []), -1 === r[e].indexOf(t) && r[e].push(t)
            }, hasEventListener: function (e, t) {
                if (void 0 === this._listeners) return !1;
                var r = this._listeners;
                return void 0 !== r[e] && -1 !== r[e].indexOf(t)
            }, removeEventListener: function (e, t) {
                if (void 0 !== this._listeners) {
                    var r = this._listeners[e];
                    if (void 0 !== r) {
                        var i = r.indexOf(t);
                        -1 !== i && r.splice(i, 1)
                    }
                }
            }, dispatchEvent: function (e) {
                if (void 0 !== this._listeners) {
                    var t = this._listeners[e.type];
                    if (void 0 !== t) {
                        e.target = this;
                        for (var r = [], i = t.length, o = 0; o < i; o++) r[o] = t[o];
                        for (o = 0; o < i; o++) r[o].call(this, e)
                    }
                }
            }
        },function (e) {
            e.Raycaster = function (t, r, i, o) {
                this.ray = new e.Ray(t, r), this.near = i || 0, this.far = o || 1 / 0
            };
            var t = new e.Sphere, r = new e.Ray, i = (new e.Plane, new e.Vector3, new e.Vector3), o = new e.Matrix4,
                a = function (e, t) {
                    return e.distance - t.distance
                }, n = new e.Vector3, s = new e.Vector3, h = new e.Vector3, l = function (a, c, p) {
                    if (a instanceof e.Sprite) {
                        if (i.setFromMatrixPosition(a.matrixWorld), (u = c.ray.distanceToPoint(i)) > a.scale.x) return p;
                        p.push({distance: u, point: a.position, face: null, object: a})
                    } else if (a instanceof e.LOD) {
                        i.setFromMatrixPosition(a.matrixWorld);
                        var u = c.ray.origin.distanceTo(i);
                        l(a.getObjectForDistance(u), c, p)
                    } else if (a instanceof e.Mesh) {
                        if (null === (G = a.geometry).boundingSphere && G.computeBoundingSphere(), t.copy(G.boundingSphere), t.applyMatrix4(a.matrixWorld), !1 === c.ray.isIntersectionSphere(t)) return p;
                        if (o.getInverse(a.matrixWorld), r.copy(c.ray).applyMatrix4(o), null !== G.boundingBox && !1 === r.isIntersectionBox(G.boundingBox)) return p;
                        if (G instanceof e.BufferGeometry) {
                            if (void 0 === (U = a.material)) return p;
                            var f = G.attributes, d = c.precision;
                            if (void 0 !== f.index) {
                                var m = f.index.array, y = f.position.array;
                                0 === (A = G.offsets).length && (A = [{start: 0, count: y.length, index: 0}]);
                                for (var g = 0, v = A.length; g < v; ++g) for (var x = A[g].start, w = A[g].count, _ = A[g].index, b = x, M = x + w; b < M; b += 3) {
                                    if (T = _ + m[b], E = _ + m[b + 1], C = _ + m[b + 2], n.set(y[3 * T], y[3 * T + 1], y[3 * T + 2]), s.set(y[3 * E], y[3 * E + 1], y[3 * E + 2]), h.set(y[3 * C], y[3 * C + 1], y[3 * C + 2]), U.side === e.BackSide) var S = r.intersectTriangle(h, s, n, !0); else S = r.intersectTriangle(n, s, h, U.side !== e.DoubleSide);
                                    if (null !== S) S.applyMatrix4(a.matrixWorld), (u = c.ray.origin.distanceTo(S)) < d || u < c.near || u > c.far || p.push({
                                        distance: u,
                                        point: S,
                                        indices: [T, E, C],
                                        face: null,
                                        faceIndex: null,
                                        object: a
                                    })
                                }
                            } else {
                                var A = G.offsets;
                                for (y = f.position.array, b = 0, M = f.position.array.length; b < M; b += 3) {
                                    if (T = b, E = b + 1, C = b + 2, n.set(y[3 * T], y[3 * T + 1], y[3 * T + 2]), s.set(y[3 * E], y[3 * E + 1], y[3 * E + 2]), h.set(y[3 * C], y[3 * C + 1], y[3 * C + 2]), U.side === e.BackSide) S = r.intersectTriangle(h, s, n, !0); else S = r.intersectTriangle(n, s, h, U.side !== e.DoubleSide);
                                    if (null !== S) S.applyMatrix4(a.matrixWorld), (u = c.ray.origin.distanceTo(S)) < d || u < c.near || u > c.far || p.push({
                                        distance: u,
                                        point: S,
                                        indices: [T, E, C],
                                        face: null,
                                        faceIndex: null,
                                        object: a
                                    })
                                }
                            }
                        } else if (G instanceof e.Geometry) for (var T, E, C, P = a.material instanceof e.MeshFaceMaterial, L = !0 === P ? a.material.materials : null, D = (d = c.precision, G.vertices), R = 0, F = G.faces.length; R < F; R++) {
                            var U, V = G.faces[R];
                            if (void 0 !== (U = !0 === P ? L[V.materialIndex] : a.material)) {
                                if (T = D[V.a], E = D[V.b], C = D[V.c], !0 === U.morphTargets) {
                                    var z = G.morphTargets, B = a.morphTargetInfluences;
                                    n.set(0, 0, 0), s.set(0, 0, 0), h.set(0, 0, 0);
                                    for (var N = 0, O = z.length; N < O; N++) {
                                        var k = B[N];
                                        if (0 !== k) {
                                            var I = z[N].vertices;
                                            n.x += (I[V.a].x - T.x) * k, n.y += (I[V.a].y - T.y) * k, n.z += (I[V.a].z - T.z) * k, s.x += (I[V.b].x - E.x) * k, s.y += (I[V.b].y - E.y) * k, s.z += (I[V.b].z - E.z) * k, h.x += (I[V.c].x - C.x) * k, h.y += (I[V.c].y - C.y) * k, h.z += (I[V.c].z - C.z) * k
                                        }
                                    }
                                    n.add(T), s.add(E), h.add(C), T = n, E = s, C = h
                                }
                                if (U.side === e.BackSide) S = r.intersectTriangle(C, E, T, !0); else S = r.intersectTriangle(T, E, C, U.side !== e.DoubleSide);
                                if (null !== S) S.applyMatrix4(a.matrixWorld), (u = c.ray.origin.distanceTo(S)) < d || u < c.near || u > c.far || p.push({
                                    distance: u,
                                    point: S,
                                    face: V,
                                    faceIndex: R,
                                    object: a
                                })
                            }
                        }
                    } else if (a instanceof e.Line) {
                        var G, W = (d = c.linePrecision) * d;
                        if (null === (G = a.geometry).boundingSphere && G.computeBoundingSphere(), t.copy(G.boundingSphere), t.applyMatrix4(a.matrixWorld), !1 === c.ray.isIntersectionSphere(t)) return p;
                        if (o.getInverse(a.matrixWorld), r.copy(c.ray).applyMatrix4(o), G instanceof e.Geometry) {
                            var H = (D = G.vertices).length, j = new e.Vector3, X = new e.Vector3,
                                q = a.type === e.LineStrip ? 1 : 2;
                            for (b = 0; b < H - 1; b += q) {
                                if (!(r.distanceSqToSegment(D[b], D[b + 1], X, j) > W)) (u = r.origin.distanceTo(X)) < c.near || u > c.far || p.push({
                                    distance: u,
                                    point: j.clone().applyMatrix4(a.matrixWorld),
                                    face: null,
                                    faceIndex: null,
                                    object: a
                                })
                            }
                        }
                    }
                }, c = function (e, t, r) {
                    for (var i = e.getDescendants(), o = 0, a = i.length; o < a; o++) l(i[o], t, r)
                };
            e.Raycaster.prototype.precision = 1e-4, e.Raycaster.prototype.linePrecision = 1, e.Raycaster.prototype.set = function (e, t) {
                this.ray.set(e, t)
            }, e.Raycaster.prototype.intersectObject = function (e, t) {
                var r = [];
                return !0 === t && c(e, this, r), l(e, this, r), r.sort(a), r
            }, e.Raycaster.prototype.intersectObjects = function (e, t) {
                for (var r = [], i = 0, o = e.length; i < o; i++) l(e[i], this, r), !0 === t && c(e[i], this, r);
                return r.sort(a), r
            }
        }($),$.Object3D = function () {
            this.id = $.Object3DIdCount++, this.uuid = $.Math.generateUUID(), this.name = "", this.parent = void 0, this.children = [], this.up = new $.Vector3(0, 1, 0), this.position = new $.Vector3;
            var e = this;
            Object.defineProperties(this, {
                rotation: {
                    enumerable: !0, value: (new $.Euler).onChange((function () {
                        e.quaternion.setFromEuler(e.rotation, !1)
                    }))
                }, quaternion: {
                    enumerable: !0, value: (new $.Quaternion).onChange((function () {
                        e.rotation.setFromQuaternion(e.quaternion, void 0, !1)
                    }))
                }, scale: {enumerable: !0, value: new $.Vector3(1, 1, 1)}
            }), this.renderDepth = null, this.rotationAutoUpdate = !0, this.matrix = new $.Matrix4, this.matrixWorld = new $.Matrix4, this.matrixAutoUpdate = !0, this.matrixWorldNeedsUpdate = !1, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.userData = {}
        },$.Object3D.prototype = {
            constructor: $.Object3D, get eulerOrder() {
                return console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."), this.rotation.order
            }, set eulerOrder(e) {
                console.warn("DEPRECATED: Object3D's .eulerOrder has been moved to Object3D's .rotation.order."), this.rotation.order = e
            }, get useQuaternion() {
                console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
            }, set useQuaternion(e) {
                console.warn("DEPRECATED: Object3D's .useQuaternion has been removed. The library now uses quaternions by default.")
            }, applyMatrix: function (e) {
                this.matrix.multiplyMatrices(e, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
            }, setRotationFromAxisAngle: function (e, t) {
                this.quaternion.setFromAxisAngle(e, t)
            }, setRotationFromEuler: function (e) {
                this.quaternion.setFromEuler(e, !0)
            }, setRotationFromMatrix: function (e) {
                this.quaternion.setFromRotationMatrix(e)
            }, setRotationFromQuaternion: function (e) {
                this.quaternion.copy(e)
            }, rotateOnAxis: (V = new $.Quaternion, function (e, t) {
                return V.setFromAxisAngle(e, t), this.quaternion.multiply(V), this
            }), rotateX: function () {
                var e = new $.Vector3(1, 0, 0);
                return function (t) {
                    return this.rotateOnAxis(e, t)
                }
            }(), rotateY: function () {
                var e = new $.Vector3(0, 1, 0);
                return function (t) {
                    return this.rotateOnAxis(e, t)
                }
            }(), rotateZ: function () {
                var e = new $.Vector3(0, 0, 1);
                return function (t) {
                    return this.rotateOnAxis(e, t)
                }
            }(), translateOnAxis: function () {
                var e = new $.Vector3;
                return function (t, r) {
                    return e.copy(t), e.applyQuaternion(this.quaternion), this.position.add(e.multiplyScalar(r)), this
                }
            }(), translate: function (e, t) {
                return console.warn("DEPRECATED: Object3D's .translate() has been removed. Use .translateOnAxis( axis, distance ) instead. Note args have been changed."), this.translateOnAxis(t, e)
            }, translateX: function () {
                var e = new $.Vector3(1, 0, 0);
                return function (t) {
                    return this.translateOnAxis(e, t)
                }
            }(), translateY: function () {
                var e = new $.Vector3(0, 1, 0);
                return function (t) {
                    return this.translateOnAxis(e, t)
                }
            }(), translateZ: function () {
                var e = new $.Vector3(0, 0, 1);
                return function (t) {
                    return this.translateOnAxis(e, t)
                }
            }(), localToWorld: function (e) {
                return e.applyMatrix4(this.matrixWorld)
            }, worldToLocal: (U = new $.Matrix4, function (e) {
                return e.applyMatrix4(U.getInverse(this.matrixWorld))
            }), lookAt: function () {
                var e = new $.Matrix4;
                return function (t) {
                    e.lookAt(t, this.position, this.up), this.quaternion.setFromRotationMatrix(e)
                }
            }(), add: function (e) {
                if (e !== this) {
                    if (e instanceof $.Object3D) {
                        void 0 !== e.parent && e.parent.remove(e), e.parent = this, e.dispatchEvent({type: "added"}), this.children.push(e);
                        for (var t = this; void 0 !== t.parent;) t = t.parent;
                        void 0 !== t && t instanceof $.Scene && t.__addObject(e)
                    }
                } else console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")
            }, remove: function (e) {
                var t = this.children.indexOf(e);
                if (-1 !== t) {
                    e.parent = void 0, e.dispatchEvent({type: "removed"}), this.children.splice(t, 1);
                    for (var r = this; void 0 !== r.parent;) r = r.parent;
                    void 0 !== r && r instanceof $.Scene && r.__removeObject(e)
                }
            }, traverse: function (e) {
                e(this);
                for (var t = 0, r = this.children.length; t < r; t++) this.children[t].traverse(e)
            }, getObjectById: function (e, t) {
                for (var r = 0, i = this.children.length; r < i; r++) {
                    var o = this.children[r];
                    if (o.id === e) return o;
                    if (!0 === t && void 0 !== (o = o.getObjectById(e, t))) return o
                }
            }, getObjectByName: function (e, t) {
                for (var r = 0, i = this.children.length; r < i; r++) {
                    var o = this.children[r];
                    if (o.name === e) return o;
                    if (!0 === t && void 0 !== (o = o.getObjectByName(e, t))) return o
                }
            }, getChildByName: function (e, t) {
                return console.warn("DEPRECATED: Object3D's .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e, t)
            }, getDescendants: function (e) {
                void 0 === e && (e = []), Array.prototype.push.apply(e, this.children);
                for (var t = 0, r = this.children.length; t < r; t++) this.children[t].getDescendants(e);
                return e
            }, updateMatrix: function () {
                this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
            }, updateMatrixWorld: function (e) {
                !0 === this.matrixAutoUpdate && this.updateMatrix(), !0 !== this.matrixWorldNeedsUpdate && !0 !== e || (void 0 === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
                for (var t = 0, r = this.children.length; t < r; t++) this.children[t].updateMatrixWorld(e)
            }, clone: function (e, t) {
                if (void 0 === e && (e = new $.Object3D), void 0 === t && (t = !0), e.name = this.name, e.up.copy(this.up), e.position.copy(this.position), e.quaternion.copy(this.quaternion), e.scale.copy(this.scale), e.renderDepth = this.renderDepth, e.rotationAutoUpdate = this.rotationAutoUpdate, e.matrix.copy(this.matrix), e.matrixWorld.copy(this.matrixWorld), e.matrixAutoUpdate = this.matrixAutoUpdate, e.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate, e.visible = this.visible, e.castShadow = this.castShadow, e.receiveShadow = this.receiveShadow, e.frustumCulled = this.frustumCulled, e.userData = JSON.parse(JSON.stringify(this.userData)), !0 === t) for (var r = 0; r < this.children.length; r++) {
                    var i = this.children[r];
                    e.add(i.clone())
                }
                return e
            }
        },$.EventDispatcher.prototype.apply($.Object3D.prototype),$.Object3DIdCount = 0,$.Projector = function () {
            var e, t, r, i, o, a, n, s, h, l, c, p, u = [], f = 0, d = [], m = 0, y = [], g = 0, v = [], x = 0, w = [],
                _ = 0, b = {objects: [], lights: [], elements: []}, M = new $.Vector3, S = new $.Vector3,
                A = new $.Vector3, T = new $.Vector3, E = new $.Vector4,
                C = new $.Box3(new $.Vector3(-1, -1, -1), new $.Vector3(1, 1, 1)), P = new $.Box3, L = new Array(3),
                D = (new Array(4), new $.Matrix4), R = new $.Matrix4, F = new $.Matrix4, U = new $.Matrix3,
                V = new $.Frustum, z = new $.Vector4, B = new $.Vector4;
            this.projectVector = function (e, t) {
                return t.matrixWorldInverse.getInverse(t.matrixWorld), R.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), e.applyProjection(R)
            }, this.unprojectVector = (p = new $.Matrix4, function (e, t) {
                return p.getInverse(t.projectionMatrix), R.multiplyMatrices(t.matrixWorld, p), e.applyProjection(R)
            }), this.pickingRay = function (e, t) {
                e.z = -1;
                var r = new $.Vector3(e.x, e.y, 1);
                return this.unprojectVector(e, t), this.unprojectVector(r, t), r.sub(e).normalize(), new $.Raycaster(e, r)
            };
            var N = function (r) {
                if (!1 !== r.visible) {
                    r instanceof $.Light ? b.lights.push(r) : (r instanceof $.Mesh || r instanceof $.Line || r instanceof $.Sprite) && (!1 !== r.frustumCulled && !0 !== V.intersectsObject(r) || ((e = function () {
                        if (t === f) {
                            var e = new $.RenderableObject;
                            return u.push(e), f++, t++, e
                        }
                        return u[t++]
                    }()).id = r.id, e.object = r, null !== r.renderDepth ? e.z = r.renderDepth : (T.setFromMatrixPosition(r.matrixWorld), T.applyProjection(R), e.z = T.z), b.objects.push(e)));
                    for (var i = 0, o = r.children.length; i < o; i++) N(r.children[i])
                }
            }, O = new function () {
                var e = [], t = [], i = null, a = null, s = new $.Matrix3, h = function (e) {
                    var t = e.position, r = e.positionWorld, i = e.positionScreen;
                    r.copy(t).applyMatrix4(c), i.copy(r).applyMatrix4(R);
                    var o = 1 / i.w;
                    i.x *= o, i.y *= o, i.z *= o, e.visible = i.x >= -1 && i.x <= 1 && i.y >= -1 && i.y <= 1 && i.z >= -1 && i.z <= 1
                }, l = function (e, t, r) {
                    return !0 === e.visible || !0 === t.visible || !0 === r.visible || (L[0] = e.positionScreen, L[1] = t.positionScreen, L[2] = r.positionScreen, C.isIntersectionBox(P.setFromPoints(L)))
                }, p = function (e, t, r) {
                    return (r.positionScreen.x - e.positionScreen.x) * (t.positionScreen.y - e.positionScreen.y) - (r.positionScreen.y - e.positionScreen.y) * (t.positionScreen.x - e.positionScreen.x) < 0
                };
                return {
                    setObject: function (r) {
                        a = (i = r).material, s.getNormalMatrix(i.matrixWorld), e.length = 0, t.length = 0
                    },
                    projectVertex: h,
                    checkTriangleVisibility: l,
                    checkBackfaceCulling: p,
                    pushVertex: function (e, t, i) {
                        (r = k()).position.set(e, t, i), h(r)
                    },
                    pushNormal: function (t, r, i) {
                        e.push(t, r, i)
                    },
                    pushUv: function (e, r) {
                        t.push(e, r)
                    },
                    pushLine: function (e, t) {
                        var r = d[e], o = d[t];
                        (n = G()).id = i.id, n.v1.copy(r), n.v2.copy(o), n.z = (r.positionScreen.z + o.positionScreen.z) / 2, n.material = i.material, b.elements.push(n)
                    },
                    pushTriangle: function (r, n, h) {
                        var c = d[r], u = d[n], f = d[h];
                        if (!1 !== l(c, u, f) && (a.side === $.DoubleSide || !0 === p(c, u, f))) {
                            (o = I()).id = i.id, o.v1.copy(c), o.v2.copy(u), o.v3.copy(f), o.z = (c.positionScreen.z + u.positionScreen.z + f.positionScreen.z) / 3;
                            for (var m = 0; m < 3; m++) {
                                var y = 3 * arguments[m], g = o.vertexNormalsModel[m];
                                g.set(e[y], e[y + 1], e[y + 2]), g.applyMatrix3(s).normalize();
                                var v = 2 * arguments[m], x = o.uvs[m];
                                x.set(t[v], t[v + 1])
                            }
                            o.vertexNormalsLength = 3, o.material = i.material, b.elements.push(o)
                        }
                    }
                }
            };

            function k() {
                if (i === m) {
                    var e = new $.RenderableVertex;
                    return d.push(e), m++, i++, e
                }
                return d[i++]
            }

            function I() {
                if (a === g) {
                    var e = new $.RenderableFace;
                    return y.push(e), g++, a++, e
                }
                return y[a++]
            }

            function G() {
                if (s === x) {
                    var e = new $.RenderableLine;
                    return v.push(e), x++, s++, e
                }
                return v[s++]
            }

            function W() {
                if (l === _) {
                    var e = new $.RenderableSprite;
                    return w.push(e), _++, l++, e
                }
                return w[l++]
            }

            function H(e, t) {
                return e.z !== t.z ? t.z - e.z : e.id !== t.id ? e.id - t.id : 0
            }

            function j(e, t) {
                var r = 0, i = 1, o = e.z + e.w, a = t.z + t.w, n = -e.z + e.w, s = -t.z + t.w;
                return o >= 0 && a >= 0 && n >= 0 && s >= 0 || !(o < 0 && a < 0 || n < 0 && s < 0) && (o < 0 ? r = Math.max(r, o / (o - a)) : a < 0 && (i = Math.min(i, o / (o - a))), n < 0 ? r = Math.max(r, n / (n - s)) : s < 0 && (i = Math.min(i, n / (n - s))), !(i < r) && (e.lerp(t, r), t.lerp(e, 1 - i), !0))
            }

            this.projectScene = function (e, r, p, u) {
                var f, m, y, g, v, x, w, _, T;
                a = 0, s = 0, l = 0, b.elements.length = 0, !0 === e.autoUpdate && e.updateMatrixWorld(), void 0 === r.parent && r.updateMatrixWorld(), D.copy(r.matrixWorldInverse.getInverse(r.matrixWorld)), R.multiplyMatrices(r.projectionMatrix, D), V.setFromMatrix(R), function (e, r) {
                    t = 0, b.objects.length = 0, b.lights.length = 0, N(e), !0 === r && b.objects.sort(H)
                }(e, p);
                for (var C = 0, P = b.objects.length; C < P; C++) if (m = (f = b.objects[C].object).geometry, O.setObject(f), c = f.matrixWorld, i = 0, f instanceof $.Mesh) {
                    if (m instanceof $.BufferGeometry) {
                        var L = m.attributes, X = m.offsets;
                        if (void 0 === L.position) continue;
                        for (var q = 0, Y = (Te = L.position.array).length; q < Y; q += 3) O.pushVertex(Te[q], Te[q + 1], Te[q + 2]);
                        if (void 0 !== L.normal) {
                            var K = L.normal.array;
                            for (q = 0, Y = K.length; q < Y; q += 3) O.pushNormal(K[q], K[q + 1], K[q + 2])
                        }
                        if (void 0 !== L.uv) {
                            var Z = L.uv.array;
                            for (q = 0, Y = Z.length; q < Y; q += 2) O.pushUv(Z[q], Z[q + 1])
                        }
                        if (void 0 !== L.index) {
                            var Q = L.index.array;
                            if (X.length > 0) for (C = 0; C < X.length; C++) {
                                var J = X[C], ee = J.index;
                                for (q = J.start, Y = J.start + J.count; q < Y; q += 3) O.pushTriangle(Q[q] + ee, Q[q + 1] + ee, Q[q + 2] + ee)
                            } else for (q = 0, Y = Q.length; q < Y; q += 3) O.pushTriangle(Q[q], Q[q + 1], Q[q + 2])
                        } else for (q = 0, Y = Te.length / 3; q < Y; q += 3) O.pushTriangle(q, q + 1, q + 2)
                    } else if (m instanceof $.Geometry) {
                        y = m.vertices, g = m.faces, w = m.faceVertexUvs[0], U.getNormalMatrix(c), T = !0 === (_ = f.material instanceof $.MeshFaceMaterial) ? f.material : null;
                        for (var te = 0, re = y.length; te < re; te++) {
                            var ie = y[te];
                            O.pushVertex(ie.x, ie.y, ie.z)
                        }
                        for (var oe = 0, ae = g.length; oe < ae; oe++) {
                            v = g[oe];
                            var ne = !0 === _ ? T.materials[v.materialIndex] : f.material;
                            if (void 0 !== ne) {
                                var se = ne.side, he = d[v.a], le = d[v.b], ce = d[v.c];
                                if (!0 === ne.morphTargets) {
                                    var pe = m.morphTargets, ue = f.morphTargetInfluences, fe = he.position,
                                        de = le.position, me = ce.position;
                                    M.set(0, 0, 0), S.set(0, 0, 0), A.set(0, 0, 0);
                                    for (var ye = 0, ge = pe.length; ye < ge; ye++) {
                                        var ve = ue[ye];
                                        if (0 !== ve) {
                                            var xe = pe[ye].vertices;
                                            M.x += (xe[v.a].x - fe.x) * ve, M.y += (xe[v.a].y - fe.y) * ve, M.z += (xe[v.a].z - fe.z) * ve, S.x += (xe[v.b].x - de.x) * ve, S.y += (xe[v.b].y - de.y) * ve, S.z += (xe[v.b].z - de.z) * ve, A.x += (xe[v.c].x - me.x) * ve, A.y += (xe[v.c].y - me.y) * ve, A.z += (xe[v.c].z - me.z) * ve
                                        }
                                    }
                                    he.position.add(M), le.position.add(S), ce.position.add(A), O.projectVertex(he), O.projectVertex(le), O.projectVertex(ce)
                                }
                                if (!1 !== O.checkTriangleVisibility(he, le, ce)) {
                                    var we = O.checkBackfaceCulling(he, le, ce);
                                    if (se !== $.DoubleSide) {
                                        if (se === $.FrontSide && !1 === we) continue;
                                        if (se === $.BackSide && !0 === we) continue
                                    }
                                    (o = I()).id = f.id, o.v1.copy(he), o.v2.copy(le), o.v3.copy(ce), o.normalModel.copy(v.normal), !1 !== we || se !== $.BackSide && se !== $.DoubleSide || o.normalModel.negate(), o.normalModel.applyMatrix3(U).normalize(), x = v.vertexNormals;
                                    for (var _e = 0, be = Math.min(x.length, 3); _e < be; _e++) {
                                        var Me = o.vertexNormalsModel[_e];
                                        Me.copy(x[_e]), !1 !== we || se !== $.BackSide && se !== $.DoubleSide || Me.negate(), Me.applyMatrix3(U).normalize()
                                    }
                                    o.vertexNormalsLength = x.length;
                                    var Se = w[oe];
                                    if (void 0 !== Se) for (var Ae = 0; Ae < 3; Ae++) o.uvs[Ae].copy(Se[Ae]);
                                    o.color = v.color, o.material = ne, o.z = (he.positionScreen.z + le.positionScreen.z + ce.positionScreen.z) / 3, b.elements.push(o)
                                }
                            }
                        }
                    }
                } else if (f instanceof $.Line) {
                    if (m instanceof $.BufferGeometry) {
                        if (void 0 !== (L = m.attributes).position) {
                            var Te;
                            for (q = 0, Y = (Te = L.position.array).length; q < Y; q += 3) O.pushVertex(Te[q], Te[q + 1], Te[q + 2]);
                            if (void 0 !== L.index) for (q = 0, Y = (Q = L.index.array).length; q < Y; q += 2) O.pushLine(Q[q], Q[q + 1]); else for (q = 0, Y = Te.length / 3 - 1; q < Y; q++) O.pushLine(q, q + 1)
                        }
                    } else if (m instanceof $.Geometry) {
                        if (F.multiplyMatrices(R, c), 0 === (y = f.geometry.vertices).length) continue;
                        (he = k()).positionScreen.copy(y[0]).applyMatrix4(F);
                        var Ee = f.type === $.LinePieces ? 2 : 1;
                        for (te = 1, re = y.length; te < re; te++) (he = k()).positionScreen.copy(y[te]).applyMatrix4(F), (te + 1) % Ee > 0 || (le = d[i - 2], z.copy(he.positionScreen), B.copy(le.positionScreen), !0 === j(z, B) && (z.multiplyScalar(1 / z.w), B.multiplyScalar(1 / B.w), (n = G()).id = f.id, n.v1.positionScreen.copy(z), n.v2.positionScreen.copy(B), n.z = Math.max(z.z, B.z), n.material = f.material, f.material.vertexColors === $.VertexColors && (n.vertexColors[0].copy(f.geometry.colors[te]), n.vertexColors[1].copy(f.geometry.colors[te - 1])), b.elements.push(n)))
                    }
                } else if (f instanceof $.Sprite) {
                    E.set(c.elements[12], c.elements[13], c.elements[14], 1), E.applyMatrix4(R);
                    var Ce = 1 / E.w;
                    E.z *= Ce, E.z >= -1 && E.z <= 1 && ((h = W()).id = f.id, h.x = E.x * Ce, h.y = E.y * Ce, h.z = E.z, h.object = f, h.rotation = f.rotation, h.scale.x = f.scale.x * Math.abs(h.x - (E.x + r.projectionMatrix.elements[0]) / (E.w + r.projectionMatrix.elements[12])), h.scale.y = f.scale.y * Math.abs(h.y - (E.y + r.projectionMatrix.elements[5]) / (E.w + r.projectionMatrix.elements[13])), h.material = f.material, b.elements.push(h))
                }
                return !0 === u && b.elements.sort(H), b
            }
        },$.Face3 = function (e, t, r, i, o, a) {
            this.a = e, this.b = t, this.c = r, this.normal = i instanceof $.Vector3 ? i : new $.Vector3, this.vertexNormals = i instanceof Array ? i : [], this.color = o instanceof $.Color ? o : new $.Color, this.vertexColors = o instanceof Array ? o : [], this.vertexTangents = [], this.materialIndex = void 0 !== a ? a : 0
        },$.Face3.prototype = {
            constructor: $.Face3, clone: function () {
                var e, t, r = new $.Face3(this.a, this.b, this.c);
                for (r.normal.copy(this.normal), r.color.copy(this.color), r.materialIndex = this.materialIndex, e = 0, t = this.vertexNormals.length; e < t; e++) r.vertexNormals[e] = this.vertexNormals[e].clone();
                for (e = 0, t = this.vertexColors.length; e < t; e++) r.vertexColors[e] = this.vertexColors[e].clone();
                for (e = 0, t = this.vertexTangents.length; e < t; e++) r.vertexTangents[e] = this.vertexTangents[e].clone();
                return r
            }
        },$.Face4 = function (e, t, r, i, o, a, n) {
            return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new $.Face3(e, t, r, o, a, n)
        },$.BufferAttribute = function () {
        },$.BufferAttribute.prototype = {
            constructor: $.BufferAttribute, get length() {
                return this.array.length
            }, set: function (e) {
                this.array.set(e)
            }, setX: function (e, t) {
                this.array[e * this.itemSize] = t
            }, setY: function (e, t) {
                this.array[e * this.itemSize + 1] = t
            }, setZ: function (e, t) {
                this.array[e * this.itemSize + 2] = t
            }, setXY: function (e, t, r) {
                e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r
            }, setXYZ: function (e, t, r, i) {
                e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r, this.array[e + 2] = i
            }, setXYZW: function (e, t, r, i, o) {
                e *= this.itemSize, this.array[e] = t, this.array[e + 1] = r, this.array[e + 2] = i, this.array[e + 3] = o
            }
        },$.Int8Attribute = function (e, t) {
            this.array = new Int8Array(e * t), this.itemSize = t
        },$.Int8Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Uint8Attribute = function (e, t) {
            this.array = new Uint8Array(e * t), this.itemSize = t
        },$.Uint8Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Uint8ClampedAttribute = function (e, t) {
            this.array = new Uint8ClampedArray(e * t), this.itemSize = t
        },$.Uint8ClampedAttribute.prototype = Object.create($.BufferAttribute.prototype),$.Int16Attribute = function (e, t) {
            this.array = new Int16Array(e * t), this.itemSize = t
        },$.Int16Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Uint16Attribute = function (e, t) {
            this.array = new Uint16Array(e * t), this.itemSize = t
        },$.Uint16Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Int32Attribute = function (e, t) {
            this.array = new Int32Array(e * t), this.itemSize = t
        },$.Int32Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Uint32Attribute = function (e, t) {
            this.array = new Uint32Array(e * t), this.itemSize = t
        },$.Uint32Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Float32Attribute = function (e, t) {
            this.array = new Float32Array(e * t), this.itemSize = t
        },$.Float32Attribute.prototype = Object.create($.BufferAttribute.prototype),$.Float64Attribute = function (e, t) {
            this.array = new Float64Array(e * t), this.itemSize = t
        },$.Float64Attribute.prototype = Object.create($.BufferAttribute.prototype),$.BufferGeometry = function () {
            this.id = $.GeometryIdCount++, this.uuid = $.Math.generateUUID(), this.name = "", this.attributes = {}, this.drawcalls = [], this.offsets = this.drawcalls, this.boundingBox = null, this.boundingSphere = null
        },$.BufferGeometry.prototype = {
            constructor: $.BufferGeometry, addAttribute: function (e, t) {
                if (t instanceof $.BufferAttribute == !1) return console.warn("DEPRECATED: BufferGeometry's addAttribute() now expects ( name, attribute )."), void (this.attributes[e] = {
                    array: arguments[1],
                    itemSize: arguments[2]
                });
                this.attributes[e] = t
            }, getAttribute: function (e) {
                return this.attributes[e]
            }, addDrawCall: function (e, t, r) {
                this.drawcalls.push({start: e, count: t, index: void 0 !== r ? r : 0})
            }, applyMatrix: function (e) {
                var t = this.attributes.position;
                void 0 !== t && (e.applyToVector3Array(t.array), t.needsUpdate = !0);
                var r = this.attributes.normal;
                void 0 !== r && ((new $.Matrix3).getNormalMatrix(e).applyToVector3Array(r.array), r.needsUpdate = !0)
            }, computeBoundingBox: function () {
                null === this.boundingBox && (this.boundingBox = new $.Box3);
                var e = this.attributes.position.array;
                if (e) {
                    var t = this.boundingBox;
                    e.length >= 3 && (t.min.x = t.max.x = e[0], t.min.y = t.max.y = e[1], t.min.z = t.max.z = e[2]);
                    for (var r = 3, i = e.length; r < i; r += 3) {
                        var o = e[r], a = e[r + 1], n = e[r + 2];
                        o < t.min.x ? t.min.x = o : o > t.max.x && (t.max.x = o), a < t.min.y ? t.min.y = a : a > t.max.y && (t.max.y = a), n < t.min.z ? t.min.z = n : n > t.max.z && (t.max.z = n)
                    }
                }
                void 0 !== e && 0 !== e.length || (this.boundingBox.min.set(0, 0, 0), this.boundingBox.max.set(0, 0, 0))
            }, computeBoundingSphere: function () {
                var e = new $.Box3, t = new $.Vector3;
                return function () {
                    null === this.boundingSphere && (this.boundingSphere = new $.Sphere);
                    var r = this.attributes.position.array;
                    if (r) {
                        e.makeEmpty();
                        for (var i = this.boundingSphere.center, o = 0, a = r.length; o < a; o += 3) t.set(r[o], r[o + 1], r[o + 2]), e.addPoint(t);
                        e.center(i);
                        var n = 0;
                        for (o = 0, a = r.length; o < a; o += 3) t.set(r[o], r[o + 1], r[o + 2]), n = Math.max(n, i.distanceToSquared(t));
                        this.boundingSphere.radius = Math.sqrt(n)
                    }
                }
            }(), computeFaceNormals: function () {
            }, computeVertexNormals: function () {
                if (this.attributes.position) {
                    var e, t, r, i, o = this.attributes.position.array.length;
                    if (void 0 === this.attributes.normal) this.attributes.normal = {
                        itemSize: 3,
                        array: new Float32Array(o)
                    }; else for (e = 0, t = this.attributes.normal.array.length; e < t; e++) this.attributes.normal.array[e] = 0;
                    var a, n, s, h, l, c, p = this.attributes.position.array, u = this.attributes.normal.array,
                        f = new $.Vector3, d = new $.Vector3, m = new $.Vector3, y = new $.Vector3, g = new $.Vector3;
                    if (this.attributes.index) {
                        var v = this.attributes.index.array,
                            x = this.offsets.length > 0 ? this.offsets : [{start: 0, count: v.length, index: 0}];
                        for (r = 0, i = x.length; r < i; ++r) {
                            var w = x[r].start, _ = x[r].count, b = x[r].index;
                            for (e = w, t = w + _; e < t; e += 3) a = b + v[e], n = b + v[e + 1], s = b + v[e + 2], h = p[3 * a], l = p[3 * a + 1], c = p[3 * a + 2], f.set(h, l, c), h = p[3 * n], l = p[3 * n + 1], c = p[3 * n + 2], d.set(h, l, c), h = p[3 * s], l = p[3 * s + 1], c = p[3 * s + 2], m.set(h, l, c), y.subVectors(m, d), g.subVectors(f, d), y.cross(g), u[3 * a] += y.x, u[3 * a + 1] += y.y, u[3 * a + 2] += y.z, u[3 * n] += y.x, u[3 * n + 1] += y.y, u[3 * n + 2] += y.z, u[3 * s] += y.x, u[3 * s + 1] += y.y, u[3 * s + 2] += y.z
                        }
                    } else for (e = 0, t = p.length; e < t; e += 9) h = p[e], l = p[e + 1], c = p[e + 2], f.set(h, l, c), h = p[e + 3], l = p[e + 4], c = p[e + 5], d.set(h, l, c), h = p[e + 6], l = p[e + 7], c = p[e + 8], m.set(h, l, c), y.subVectors(m, d), g.subVectors(f, d), y.cross(g), u[e] = y.x, u[e + 1] = y.y, u[e + 2] = y.z, u[e + 3] = y.x, u[e + 4] = y.y, u[e + 5] = y.z, u[e + 6] = y.x, u[e + 7] = y.y, u[e + 8] = y.z;
                    this.normalizeNormals(), this.normalsNeedUpdate = !0
                }
            }, computeTangents: function () {
                if (void 0 !== this.attributes.index && void 0 !== this.attributes.position && void 0 !== this.attributes.normal && void 0 !== this.attributes.uv) {
                    var e = this.attributes.index.array, t = this.attributes.position.array,
                        r = this.attributes.normal.array, i = this.attributes.uv.array, o = t.length / 3;
                    if (void 0 === this.attributes.tangent) {
                        var a = 4 * o;
                        this.attributes.tangent = {itemSize: 4, array: new Float32Array(a)}
                    }
                    for (var n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M, S, A, T, E, C, P, L, D, R = this.attributes.tangent.array, F = [], U = [], V = 0; V < o; V++) F[V] = new $.Vector3, U[V] = new $.Vector3;
                    var z, B, N, O, k, I, G, W, H, j, X = new $.Vector3, q = new $.Vector3, Y = this.offsets;
                    for (N = 0, O = Y.length; N < O; ++N) {
                        var K = Y[N].start, Z = Y[N].count, Q = Y[N].index;
                        for (z = K, B = K + Z; z < B; z += 3) k = Q + e[z], I = Q + e[z + 1], G = Q + e[z + 2], H = I, j = G, n = t[3 * (W = k)], s = t[3 * W + 1], h = t[3 * W + 2], l = t[3 * H], c = t[3 * H + 1], p = t[3 * H + 2], u = t[3 * j], f = t[3 * j + 1], d = t[3 * j + 2], m = i[2 * W], y = i[2 * W + 1], g = i[2 * H], v = i[2 * H + 1], x = i[2 * j], w = i[2 * j + 1], _ = l - n, b = u - n, M = c - s, S = f - s, A = p - h, T = d - h, D = 1 / ((E = g - m) * (L = w - y) - (C = x - m) * (P = v - y)), X.set((L * _ - P * b) * D, (L * M - P * S) * D, (L * A - P * T) * D), q.set((E * b - C * _) * D, (E * S - C * M) * D, (E * T - C * A) * D), F[W].add(X), F[H].add(X), F[j].add(X), U[W].add(q), U[H].add(q), U[j].add(q)
                    }
                    var J, ee, te, re = new $.Vector3, ie = new $.Vector3, oe = new $.Vector3, ae = new $.Vector3;
                    for (N = 0, O = Y.length; N < O; ++N) {
                        K = Y[N].start, Z = Y[N].count, Q = Y[N].index;
                        for (z = K, B = K + Z; z < B; z += 3) k = Q + e[z], I = Q + e[z + 1], G = Q + e[z + 2], ne(k), ne(I), ne(G)
                    }
                } else console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");

                function ne(e) {
                    oe.x = r[3 * e], oe.y = r[3 * e + 1], oe.z = r[3 * e + 2], ae.copy(oe), ee = F[e], re.copy(ee), re.sub(oe.multiplyScalar(oe.dot(ee))).normalize(), ie.crossVectors(ae, ee), te = ie.dot(U[e]), J = te < 0 ? -1 : 1, R[4 * e] = re.x, R[4 * e + 1] = re.y, R[4 * e + 2] = re.z, R[4 * e + 3] = J
                }
            }, computeOffsets: function (e) {
                var t = e;
                void 0 === e && (t = 65535);
                Date.now();
                for (var r = this.attributes.index.array, i = this.attributes.position.array, o = (i.length, r.length / 3), a = new Uint16Array(r.length), n = 0, s = 0, h = [{
                    start: 0,
                    count: 0,
                    index: 0
                }], l = h[0], c = 0, p = new Int32Array(6), u = new Int32Array(i.length), f = new Int32Array(i.length), d = 0; d < i.length; d++) u[d] = -1, f[d] = -1;
                for (var m = 0; m < o; m++) {
                    c = 0;
                    for (var y = 0; y < 3; y++) {
                        -1 == u[w = r[3 * m + y]] ? (p[2 * y] = w, p[2 * y + 1] = -1, c++) : u[w] < l.index ? (p[2 * y] = w, p[2 * y + 1] = -1) : (p[2 * y] = w, p[2 * y + 1] = u[w])
                    }
                    if (s + c > l.index + t) {
                        var g = {start: n, count: 0, index: s};
                        h.push(g), l = g;
                        for (var v = 0; v < 6; v += 2) {
                            (x = p[v + 1]) > -1 && x < l.index && (p[v + 1] = -1)
                        }
                    }
                    for (v = 0; v < 6; v += 2) {
                        var x, w = p[v];
                        -1 === (x = p[v + 1]) && (x = s++), u[w] = x, f[x] = w, a[n++] = x - l.index, l.count++
                    }
                }
                return this.reorderBuffers(a, f, s), this.offsets = h, h
            }, merge: function () {
            }, normalizeNormals: function () {
                for (var e, t, r, i, o = this.attributes.normal.array, a = 0, n = o.length; a < n; a += 3) e = o[a], t = o[a + 1], r = o[a + 2], i = 1 / Math.sqrt(e * e + t * t + r * r), o[a] *= i, o[a + 1] *= i, o[a + 2] *= i
            }, reorderBuffers: function (e, t, r) {
                var i = {},
                    o = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
                for (var a in this.attributes) if ("index" != a) for (var n = this.attributes[a].array, s = 0, h = o.length; s < h; s++) {
                    var l = o[s];
                    if (n instanceof l) {
                        i[a] = new l(this.attributes[a].itemSize * r);
                        break
                    }
                }
                for (var c = 0; c < r; c++) {
                    var p = t[c];
                    for (var a in this.attributes) if ("index" != a) for (var u = this.attributes[a].array, f = this.attributes[a].itemSize, d = i[a], m = 0; m < f; m++) d[c * f + m] = u[p * f + m]
                }
                for (var a in this.attributes.index.array = e, this.attributes) "index" != a && (this.attributes[a].array = i[a], this.attributes[a].numItems = this.attributes[a].itemSize * r)
            }, clone: function () {
                var e = new $.BufferGeometry,
                    t = [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];
                for (var r in this.attributes) {
                    for (var i = this.attributes[r], o = i.array, a = {
                        itemSize: i.itemSize,
                        array: null
                    }, n = 0, s = t.length; n < s; n++) {
                        var h = t[n];
                        if (o instanceof h) {
                            a.array = new h(o);
                            break
                        }
                    }
                    e.attributes[r] = a
                }
                for (n = 0, s = this.offsets.length; n < s; n++) {
                    var l = this.offsets[n];
                    e.offsets.push({start: l.start, index: l.index, count: l.count})
                }
                return e
            }, dispose: function () {
                this.dispatchEvent({type: "dispose"})
            }
        },$.EventDispatcher.prototype.apply($.BufferGeometry.prototype),$.Geometry = function () {
            this.id = $.GeometryIdCount++, this.uuid = $.Math.generateUUID(), this.name = "", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphColors = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.hasTangents = !1, this.dynamic = !0, this.verticesNeedUpdate = !1, this.elementsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.tangentsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.buffersNeedUpdate = !1
        },$.Geometry.prototype = {
            constructor: $.Geometry, applyMatrix: function (e) {
                for (var t = (new $.Matrix3).getNormalMatrix(e), r = 0, i = this.vertices.length; r < i; r++) {
                    this.vertices[r].applyMatrix4(e)
                }
                for (r = 0, i = this.faces.length; r < i; r++) {
                    var o = this.faces[r];
                    o.normal.applyMatrix3(t).normalize();
                    for (var a = 0, n = o.vertexNormals.length; a < n; a++) o.vertexNormals[a].applyMatrix3(t).normalize()
                }
                this.boundingBox instanceof $.Box3 && this.computeBoundingBox(), this.boundingSphere instanceof $.Sphere && this.computeBoundingSphere()
            }, computeFaceNormals: function () {
                for (var e = new $.Vector3, t = new $.Vector3, r = 0, i = this.faces.length; r < i; r++) {
                    var o = this.faces[r], a = this.vertices[o.a], n = this.vertices[o.b], s = this.vertices[o.c];
                    e.subVectors(s, n), t.subVectors(a, n), e.cross(t), e.normalize(), o.normal.copy(e)
                }
            }, computeVertexNormals: function (e) {
                var t, r, i, o, a, n;
                for (n = new Array(this.vertices.length), t = 0, r = this.vertices.length; t < r; t++) n[t] = new $.Vector3;
                if (e) {
                    var s, h, l, c = new $.Vector3, p = new $.Vector3;
                    new $.Vector3, new $.Vector3, new $.Vector3;
                    for (i = 0, o = this.faces.length; i < o; i++) a = this.faces[i], s = this.vertices[a.a], h = this.vertices[a.b], l = this.vertices[a.c], c.subVectors(l, h), p.subVectors(s, h), c.cross(p), n[a.a].add(c), n[a.b].add(c), n[a.c].add(c)
                } else for (i = 0, o = this.faces.length; i < o; i++) n[(a = this.faces[i]).a].add(a.normal), n[a.b].add(a.normal), n[a.c].add(a.normal);
                for (t = 0, r = this.vertices.length; t < r; t++) n[t].normalize();
                for (i = 0, o = this.faces.length; i < o; i++) (a = this.faces[i]).vertexNormals[0] = n[a.a].clone(), a.vertexNormals[1] = n[a.b].clone(), a.vertexNormals[2] = n[a.c].clone()
            }, computeMorphNormals: function () {
                var e, t, r, i, o;
                for (r = 0, i = this.faces.length; r < i; r++) for ((o = this.faces[r]).__originalFaceNormal ? o.__originalFaceNormal.copy(o.normal) : o.__originalFaceNormal = o.normal.clone(), o.__originalVertexNormals || (o.__originalVertexNormals = []), e = 0, t = o.vertexNormals.length; e < t; e++) o.__originalVertexNormals[e] ? o.__originalVertexNormals[e].copy(o.vertexNormals[e]) : o.__originalVertexNormals[e] = o.vertexNormals[e].clone();
                var a = new $.Geometry;
                for (a.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++) {
                    if (!this.morphNormals[e]) {
                        this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
                        var n = this.morphNormals[e].faceNormals, s = this.morphNormals[e].vertexNormals;
                        for (r = 0, i = this.faces.length; r < i; r++) h = new $.Vector3, l = {
                            a: new $.Vector3,
                            b: new $.Vector3,
                            c: new $.Vector3
                        }, n.push(h), s.push(l)
                    }
                    var h, l, c = this.morphNormals[e];
                    for (a.vertices = this.morphTargets[e].vertices, a.computeFaceNormals(), a.computeVertexNormals(), r = 0, i = this.faces.length; r < i; r++) o = this.faces[r], h = c.faceNormals[r], l = c.vertexNormals[r], h.copy(o.normal), l.a.copy(o.vertexNormals[0]), l.b.copy(o.vertexNormals[1]), l.c.copy(o.vertexNormals[2])
                }
                for (r = 0, i = this.faces.length; r < i; r++) (o = this.faces[r]).normal = o.__originalFaceNormal, o.vertexNormals = o.__originalVertexNormals
            }, computeTangents: function () {
                var e, t, r, i, o, a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M, S, A, T, E, C, P, L, D, R,
                    F, U = [], V = [], z = new $.Vector3, B = new $.Vector3, N = new $.Vector3, O = new $.Vector3,
                    k = new $.Vector3;
                for (r = 0, i = this.vertices.length; r < i; r++) U[r] = new $.Vector3, V[r] = new $.Vector3;
                for (e = 0, t = this.faces.length; e < t; e++) n = this.faces[e], s = this.faceVertexUvs[0][e], E = this, C = n.a, P = n.b, L = n.c, D = 0, R = 1, F = 2, h = E.vertices[C], l = E.vertices[P], c = E.vertices[L], p = s[D], u = s[R], f = s[F], d = l.x - h.x, m = c.x - h.x, y = l.y - h.y, g = c.y - h.y, v = l.z - h.z, x = c.z - h.z, w = u.x - p.x, _ = f.x - p.x, b = u.y - p.y, M = f.y - p.y, S = 1 / (w * M - _ * b), z.set((M * d - b * m) * S, (M * y - b * g) * S, (M * v - b * x) * S), B.set((w * m - _ * d) * S, (w * g - _ * y) * S, (w * x - _ * v) * S), U[C].add(z), U[P].add(z), U[L].add(z), V[C].add(B), V[P].add(B), V[L].add(B);
                var I = ["a", "b", "c", "d"];
                for (e = 0, t = this.faces.length; e < t; e++) for (n = this.faces[e], o = 0; o < Math.min(n.vertexNormals.length, 3); o++) k.copy(n.vertexNormals[o]), a = n[I[o]], A = U[a], N.copy(A), N.sub(k.multiplyScalar(k.dot(A))).normalize(), O.crossVectors(n.vertexNormals[o], A), T = O.dot(V[a]) < 0 ? -1 : 1, n.vertexTangents[o] = new $.Vector4(N.x, N.y, N.z, T);
                this.hasTangents = !0
            }, computeLineDistances: function () {
                for (var e = 0, t = this.vertices, r = 0, i = t.length; r < i; r++) r > 0 && (e += t[r].distanceTo(t[r - 1])), this.lineDistances[r] = e
            }, computeBoundingBox: function () {
                null === this.boundingBox && (this.boundingBox = new $.Box3), this.boundingBox.setFromPoints(this.vertices)
            }, computeBoundingSphere: function () {
                null === this.boundingSphere && (this.boundingSphere = new $.Sphere), this.boundingSphere.setFromPoints(this.vertices)
            }, merge: function (e, t, r) {
                if (e instanceof $.Geometry != !1) {
                    var i, o = this.vertices.length, a = (this.faceVertexUvs[0].length, this.vertices), n = e.vertices,
                        s = this.faces, h = e.faces, l = this.faceVertexUvs[0], c = e.faceVertexUvs[0];
                    void 0 === r && (r = 0), void 0 !== t && (i = (new $.Matrix3).getNormalMatrix(t));
                    for (var p = 0, u = n.length; p < u; p++) {
                        var f = n[p].clone();
                        void 0 !== t && f.applyMatrix4(t), a.push(f)
                    }
                    for (p = 0, u = h.length; p < u; p++) {
                        var d, m, y, g = h[p], v = g.vertexNormals, x = g.vertexColors;
                        (d = new $.Face3(g.a + o, g.b + o, g.c + o)).normal.copy(g.normal), void 0 !== i && d.normal.applyMatrix3(i).normalize();
                        for (var w = 0, _ = v.length; w < _; w++) m = v[w].clone(), void 0 !== i && m.applyMatrix3(i).normalize(), d.vertexNormals.push(m);
                        d.color.copy(g.color);
                        for (w = 0, _ = x.length; w < _; w++) y = x[w], d.vertexColors.push(y.clone());
                        d.materialIndex = g.materialIndex + r, s.push(d)
                    }
                    for (p = 0, u = c.length; p < u; p++) {
                        var b = c[p], M = [];
                        if (void 0 !== b) {
                            for (w = 0, _ = b.length; w < _; w++) M.push(new $.Vector2(b[w].x, b[w].y));
                            l.push(M)
                        }
                    }
                } else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e)
            }, mergeVertices: function () {
                var e, t, r, i, o, a, n, s, h = {}, l = [], c = [], p = Math.pow(10, 4);
                for (r = 0, i = this.vertices.length; r < i; r++) e = this.vertices[r], void 0 === h[t = Math.round(e.x * p) + "_" + Math.round(e.y * p) + "_" + Math.round(e.z * p)] ? (h[t] = r, l.push(this.vertices[r]), c[r] = l.length - 1) : c[r] = c[h[t]];
                var u = [];
                for (r = 0, i = this.faces.length; r < i; r++) {
                    (o = this.faces[r]).a = c[o.a], o.b = c[o.b], o.c = c[o.c], a = [o.a, o.b, o.c];
                    for (var f = 0; f < 3; f++) if (a[f] == a[(f + 1) % 3]) {
                        f, u.push(r);
                        break
                    }
                }
                for (r = u.length - 1; r >= 0; r--) {
                    var d = u[r];
                    for (this.faces.splice(d, 1), n = 0, s = this.faceVertexUvs.length; n < s; n++) this.faceVertexUvs[n].splice(d, 1)
                }
                var m = this.vertices.length - l.length;
                return this.vertices = l, m
            }, makeGroups: (z = 0, function (e, t) {
                var r, i, o, a, n, s = {}, h = this.morphTargets.length, l = this.morphNormals.length;
                for (this.geometryGroups = {}, r = 0, i = this.faces.length; r < i; r++) o = this.faces[r], (a = e ? o.materialIndex : 0) in s || (s[a] = {
                    hash: a,
                    counter: 0
                }), (n = s[a].hash + "_" + s[a].counter) in this.geometryGroups || (this.geometryGroups[n] = {
                    faces3: [],
                    materialIndex: a,
                    vertices: 0,
                    numMorphTargets: h,
                    numMorphNormals: l
                }), this.geometryGroups[n].vertices + 3 > t && (s[a].counter += 1, (n = s[a].hash + "_" + s[a].counter) in this.geometryGroups || (this.geometryGroups[n] = {
                    faces3: [],
                    materialIndex: a,
                    vertices: 0,
                    numMorphTargets: h,
                    numMorphNormals: l
                })), this.geometryGroups[n].faces3.push(r), this.geometryGroups[n].vertices += 3;
                for (var c in this.geometryGroupsList = [], this.geometryGroups) this.geometryGroups[c].id = z++, this.geometryGroupsList.push(this.geometryGroups[c])
            }), clone: function () {
                for (var e = new $.Geometry, t = this.vertices, r = 0, i = t.length; r < i; r++) e.vertices.push(t[r].clone());
                var o = this.faces;
                for (r = 0, i = o.length; r < i; r++) e.faces.push(o[r].clone());
                var a = this.faceVertexUvs[0];
                for (r = 0, i = a.length; r < i; r++) {
                    for (var n = a[r], s = [], h = 0, l = n.length; h < l; h++) s.push(new $.Vector2(n[h].x, n[h].y));
                    e.faceVertexUvs[0].push(s)
                }
                return e
            }, dispose: function () {
                this.dispatchEvent({type: "dispose"})
            }
        },$.EventDispatcher.prototype.apply($.Geometry.prototype),$.GeometryIdCount = 0,$.Camera = function () {
            $.Object3D.call(this), this.matrixWorldInverse = new $.Matrix4, this.projectionMatrix = new $.Matrix4
        },$.Camera.prototype = Object.create($.Object3D.prototype),$.Camera.prototype.lookAt = function () {
            var e = new $.Matrix4;
            return function (t) {
                e.lookAt(this.position, t, this.up), this.quaternion.setFromRotationMatrix(e)
            }
        }(),$.Camera.prototype.clone = function (e) {
            return void 0 === e && (e = new $.Camera), $.Object3D.prototype.clone.call(this, e), e.matrixWorldInverse.copy(this.matrixWorldInverse), e.projectionMatrix.copy(this.projectionMatrix), e
        },$.OrthographicCamera = function (e, t, r, i, o, a) {
            $.Camera.call(this), this.left = e, this.right = t, this.top = r, this.bottom = i, this.near = void 0 !== o ? o : .1, this.far = void 0 !== a ? a : 2e3, this.updateProjectionMatrix()
        },$.OrthographicCamera.prototype = Object.create($.Camera.prototype),$.OrthographicCamera.prototype.updateProjectionMatrix = function () {
            this.projectionMatrix.makeOrthographic(this.left, this.right, this.top, this.bottom, this.near, this.far)
        },$.OrthographicCamera.prototype.clone = function () {
            var e = new $.OrthographicCamera;
            return $.Camera.prototype.clone.call(this, e), e.left = this.left, e.right = this.right, e.top = this.top, e.bottom = this.bottom, e.near = this.near, e.far = this.far, e
        },$.PerspectiveCamera = function (e, t, r, i) {
            $.Camera.call(this), this.fov = void 0 !== e ? e : 50, this.aspect = void 0 !== t ? t : 1, this.near = void 0 !== r ? r : .1, this.far = void 0 !== i ? i : 2e3, this.updateProjectionMatrix()
        },$.PerspectiveCamera.prototype = Object.create($.Camera.prototype),$.PerspectiveCamera.prototype.setLens = function (e, t) {
            void 0 === t && (t = 24), this.fov = 2 * $.Math.radToDeg(Math.atan(t / (2 * e))), this.updateProjectionMatrix()
        },$.PerspectiveCamera.prototype.setViewOffset = function (e, t, r, i, o, a) {
            this.fullWidth = e, this.fullHeight = t, this.x = r, this.y = i, this.width = o, this.height = a, this.updateProjectionMatrix()
        },$.PerspectiveCamera.prototype.updateProjectionMatrix = function () {
            if (this.fullWidth) {
                var e = this.fullWidth / this.fullHeight, t = Math.tan($.Math.degToRad(.5 * this.fov)) * this.near,
                    r = -t, i = e * r, o = e * t, a = Math.abs(o - i), n = Math.abs(t - r);
                this.projectionMatrix.makeFrustum(i + this.x * a / this.fullWidth, i + (this.x + this.width) * a / this.fullWidth, t - (this.y + this.height) * n / this.fullHeight, t - this.y * n / this.fullHeight, this.near, this.far)
            } else this.projectionMatrix.makePerspective(this.fov, this.aspect, this.near, this.far)
        },$.PerspectiveCamera.prototype.clone = function () {
            var e = new $.PerspectiveCamera;
            return $.Camera.prototype.clone.call(this, e), e.fov = this.fov, e.aspect = this.aspect, e.near = this.near, e.far = this.far, e
        },$.Light = function (e) {
            $.Object3D.call(this), this.color = new $.Color(e)
        },$.Light.prototype = Object.create($.Object3D.prototype),$.Light.prototype.clone = function (e) {
            return void 0 === e && (e = new $.Light), $.Object3D.prototype.clone.call(this, e), e.color.copy(this.color), e
        },$.AmbientLight = function (e) {
            $.Light.call(this, e)
        },$.AmbientLight.prototype = Object.create($.Light.prototype),$.AmbientLight.prototype.clone = function () {
            var e = new $.AmbientLight;
            return $.Light.prototype.clone.call(this, e), e
        },$.AreaLight = function (e, t) {
            $.Light.call(this, e), this.normal = new $.Vector3(0, -1, 0), this.right = new $.Vector3(1, 0, 0), this.intensity = void 0 !== t ? t : 1, this.width = 1, this.height = 1, this.constantAttenuation = 1.5, this.linearAttenuation = .5, this.quadraticAttenuation = .1
        },$.AreaLight.prototype = Object.create($.Light.prototype),$.DirectionalLight = function (e, t) {
            $.Light.call(this, e), this.position.set(0, 1, 0), this.target = new $.Object3D, this.intensity = void 0 !== t ? t : 1, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraLeft = -500, this.shadowCameraRight = 500, this.shadowCameraTop = 500, this.shadowCameraBottom = -500, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowCascade = !1, this.shadowCascadeOffset = new $.Vector3(0, 0, -1e3), this.shadowCascadeCount = 2, this.shadowCascadeBias = [0, 0, 0], this.shadowCascadeWidth = [512, 512, 512], this.shadowCascadeHeight = [512, 512, 512], this.shadowCascadeNearZ = [-1, .99, .998], this.shadowCascadeFarZ = [.99, .998, 1], this.shadowCascadeArray = [], this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
        },$.DirectionalLight.prototype = Object.create($.Light.prototype),$.DirectionalLight.prototype.clone = function () {
            var e = new $.DirectionalLight;
            return $.Light.prototype.clone.call(this, e), e.target = this.target.clone(), e.intensity = this.intensity, e.castShadow = this.castShadow, e.onlyShadow = this.onlyShadow, e.shadowCameraNear = this.shadowCameraNear, e.shadowCameraFar = this.shadowCameraFar, e.shadowCameraLeft = this.shadowCameraLeft, e.shadowCameraRight = this.shadowCameraRight, e.shadowCameraTop = this.shadowCameraTop, e.shadowCameraBottom = this.shadowCameraBottom, e.shadowCameraVisible = this.shadowCameraVisible, e.shadowBias = this.shadowBias, e.shadowDarkness = this.shadowDarkness, e.shadowMapWidth = this.shadowMapWidth, e.shadowMapHeight = this.shadowMapHeight, e.shadowCascade = this.shadowCascade, e.shadowCascadeOffset.copy(this.shadowCascadeOffset), e.shadowCascadeCount = this.shadowCascadeCount, e.shadowCascadeBias = this.shadowCascadeBias.slice(0), e.shadowCascadeWidth = this.shadowCascadeWidth.slice(0), e.shadowCascadeHeight = this.shadowCascadeHeight.slice(0), e.shadowCascadeNearZ = this.shadowCascadeNearZ.slice(0), e.shadowCascadeFarZ = this.shadowCascadeFarZ.slice(0), e
        },$.HemisphereLight = function (e, t, r) {
            $.Light.call(this, e), this.position.set(0, 100, 0), this.groundColor = new $.Color(t), this.intensity = void 0 !== r ? r : 1
        },$.HemisphereLight.prototype = Object.create($.Light.prototype),$.HemisphereLight.prototype.clone = function () {
            var e = new $.HemisphereLight;
            return $.Light.prototype.clone.call(this, e), e.groundColor.copy(this.groundColor), e.intensity = this.intensity, e
        },$.PointLight = function (e, t, r) {
            $.Light.call(this, e), this.intensity = void 0 !== t ? t : 1, this.distance = void 0 !== r ? r : 0
        },$.PointLight.prototype = Object.create($.Light.prototype),$.PointLight.prototype.clone = function () {
            var e = new $.PointLight;
            return $.Light.prototype.clone.call(this, e), e.intensity = this.intensity, e.distance = this.distance, e
        },$.SpotLight = function (e, t, r, i, o) {
            $.Light.call(this, e), this.position.set(0, 1, 0), this.target = new $.Object3D, this.intensity = void 0 !== t ? t : 1, this.distance = void 0 !== r ? r : 0, this.angle = void 0 !== i ? i : Math.PI / 3, this.exponent = void 0 !== o ? o : 10, this.castShadow = !1, this.onlyShadow = !1, this.shadowCameraNear = 50, this.shadowCameraFar = 5e3, this.shadowCameraFov = 50, this.shadowCameraVisible = !1, this.shadowBias = 0, this.shadowDarkness = .5, this.shadowMapWidth = 512, this.shadowMapHeight = 512, this.shadowMap = null, this.shadowMapSize = null, this.shadowCamera = null, this.shadowMatrix = null
        },$.SpotLight.prototype = Object.create($.Light.prototype),$.SpotLight.prototype.clone = function () {
            var e = new $.SpotLight;
            return $.Light.prototype.clone.call(this, e), e.target = this.target.clone(), e.intensity = this.intensity, e.distance = this.distance, e.angle = this.angle, e.exponent = this.exponent, e.castShadow = this.castShadow, e.onlyShadow = this.onlyShadow, e.shadowCameraNear = this.shadowCameraNear, e.shadowCameraFar = this.shadowCameraFar, e.shadowCameraFov = this.shadowCameraFov, e.shadowCameraVisible = this.shadowCameraVisible, e.shadowBias = this.shadowBias, e.shadowDarkness = this.shadowDarkness, e.shadowMapWidth = this.shadowMapWidth, e.shadowMapHeight = this.shadowMapHeight, e
        },$.Cache = function () {
            this.files = {}
        },$.Cache.prototype = {
            constructor: $.Cache, add: function (e, t) {
                this.files[e] = t
            }, get: function (e) {
                return this.files[e]
            }, remove: function (e) {
                delete this.files[e]
            }, clear: function () {
                this.files = {}
            }
        },$.Loader = function (e) {
            this.showStatus = e, this.statusDomElement = e ? $.Loader.prototype.addStatusElement() : null, this.imageLoader = new $.ImageLoader, this.onLoadStart = function () {
            }, this.onLoadProgress = function () {
            }, this.onLoadComplete = function () {
            }
        },$.Loader.prototype = {
            constructor: $.Loader, crossOrigin: void 0, addStatusElement: function () {
                var e = document.createElement("div");
                return e.style.position = "absolute", e.style.right = "0px", e.style.top = "0px", e.style.fontSize = "0.8em", e.style.textAlign = "left", e.style.background = "rgba(0,0,0,0.25)", e.style.color = "#fff", e.style.width = "120px", e.style.padding = "0.5em 0.5em 0.5em 0.5em", e.style.zIndex = 1e3, e.innerHTML = "Loading ...", e
            }, updateProgress: function (e) {
                var t = "Loaded ";
                e.total ? t += (100 * e.loaded / e.total).toFixed(0) + "%" : t += (e.loaded / 1024).toFixed(2) + " KB", this.statusDomElement.innerHTML = t
            }, extractUrlBase: function (e) {
                var t = e.split("/");
                return 1 === t.length ? "./" : (t.pop(), t.join("/") + "/")
            }, initMaterials: function (e, t) {
                for (var r = [], i = 0; i < e.length; ++i) r[i] = this.createMaterial(e[i], t);
                return r
            }, needsTangents: function (e) {
                for (var t = 0, r = e.length; t < r; t++) {
                    if (e[t] instanceof $.ShaderMaterial) return !0
                }
                return !1
            }, createMaterial: function (e, t) {
                var r = this;

                function i(e) {
                    var t = Math.log(e) / Math.LN2;
                    return Math.pow(2, Math.round(t))
                }

                function o(e, o, a, n, s, h, l) {
                    var c = /\.dds$/i.test(a), p = t + a;
                    if (c) {
                        var u = $.ImageUtils.loadCompressedTexture(p);
                        e[o] = u
                    } else {
                        u = document.createElement("canvas");
                        e[o] = new $.Texture(u)
                    }
                    if (e[o].sourceFile = a, n && (e[o].repeat.set(n[0], n[1]), 1 !== n[0] && (e[o].wrapS = $.RepeatWrapping), 1 !== n[1] && (e[o].wrapT = $.RepeatWrapping)), s && e[o].offset.set(s[0], s[1]), h) {
                        var f = {repeat: $.RepeatWrapping, mirror: $.MirroredRepeatWrapping};
                        void 0 !== f[h[0]] && (e[o].wrapS = f[h[0]]), void 0 !== f[h[1]] && (e[o].wrapT = f[h[1]])
                    }
                    if (l && (e[o].anisotropy = l), !c) {
                        u = e[o];
                        r.imageLoader.crossOrigin = r.crossOrigin, r.imageLoader.load(p, (function (e) {
                            if (!1 === $.Math.isPowerOfTwo(e.width) || !1 === $.Math.isPowerOfTwo(e.height)) {
                                var t = i(e.width), r = i(e.height);
                                u.image.width = t, u.image.height = r, u.image.getContext("2d").drawImage(e, 0, 0, t, r)
                            } else u.image = e;
                            u.needsUpdate = !0
                        }))
                    }
                }

                function a(e) {
                    return (255 * e[0] << 16) + (255 * e[1] << 8) + 255 * e[2]
                }

                var n = "MeshLambertMaterial", s = {
                    color: 15658734,
                    opacity: 1,
                    map: null,
                    lightMap: null,
                    normalMap: null,
                    bumpMap: null,
                    wireframe: !1
                };
                if (e.shading) {
                    var h = e.shading.toLowerCase();
                    "phong" === h ? n = "MeshPhongMaterial" : "basic" === h && (n = "MeshBasicMaterial")
                }
                if (void 0 !== e.blending && void 0 !== $[e.blending] && (s.blending = $[e.blending]), (void 0 !== e.transparent || e.opacity < 1) && (s.transparent = e.transparent), void 0 !== e.depthTest && (s.depthTest = e.depthTest), void 0 !== e.depthWrite && (s.depthWrite = e.depthWrite), void 0 !== e.visible && (s.visible = e.visible), void 0 !== e.flipSided && (s.side = $.BackSide), void 0 !== e.doubleSided && (s.side = $.DoubleSide), void 0 !== e.wireframe && (s.wireframe = e.wireframe), void 0 !== e.vertexColors && ("face" === e.vertexColors ? s.vertexColors = $.FaceColors : e.vertexColors && (s.vertexColors = $.VertexColors)), e.colorDiffuse ? s.color = a(e.colorDiffuse) : e.DbgColor && (s.color = e.DbgColor), e.colorSpecular && (s.specular = a(e.colorSpecular)), e.colorAmbient && (s.ambient = a(e.colorAmbient)), e.colorEmissive && (s.emissive = a(e.colorEmissive)), e.transparency && (s.opacity = e.transparency), e.specularCoef && (s.shininess = e.specularCoef), e.mapDiffuse && t && o(s, "map", e.mapDiffuse, e.mapDiffuseRepeat, e.mapDiffuseOffset, e.mapDiffuseWrap, e.mapDiffuseAnisotropy), e.mapLight && t && o(s, "lightMap", e.mapLight, e.mapLightRepeat, e.mapLightOffset, e.mapLightWrap, e.mapLightAnisotropy), e.mapBump && t && o(s, "bumpMap", e.mapBump, e.mapBumpRepeat, e.mapBumpOffset, e.mapBumpWrap, e.mapBumpAnisotropy), e.mapNormal && t && o(s, "normalMap", e.mapNormal, e.mapNormalRepeat, e.mapNormalOffset, e.mapNormalWrap, e.mapNormalAnisotropy), e.mapSpecular && t && o(s, "specularMap", e.mapSpecular, e.mapSpecularRepeat, e.mapSpecularOffset, e.mapSpecularWrap, e.mapSpecularAnisotropy), e.mapBumpScale && (s.bumpScale = e.mapBumpScale), e.mapNormal) {
                    var l = $.ShaderLib.normalmap, c = $.UniformsUtils.clone(l.uniforms);
                    c.tNormal.value = s.normalMap, e.mapNormalFactor && c.uNormalScale.value.set(e.mapNormalFactor, e.mapNormalFactor), s.map && (c.tDiffuse.value = s.map, c.enableDiffuse.value = !0), s.specularMap && (c.tSpecular.value = s.specularMap, c.enableSpecular.value = !0), s.lightMap && (c.tAO.value = s.lightMap, c.enableAO.value = !0), c.diffuse.value.setHex(s.color), c.specular.value.setHex(s.specular), c.ambient.value.setHex(s.ambient), c.shininess.value = s.shininess, void 0 !== s.opacity && (c.opacity.value = s.opacity);
                    var p = {
                        fragmentShader: l.fragmentShader,
                        vertexShader: l.vertexShader,
                        uniforms: c,
                        lights: !0,
                        fog: !0
                    }, u = new $.ShaderMaterial(p);
                    s.transparent && (u.transparent = !0)
                } else u = new $[n](s);
                return void 0 !== e.DbgName && (u.name = e.DbgName), u
            }
        },$.XHRLoader = function (e) {
            this.cache = new $.Cache, this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.XHRLoader.prototype = {
            constructor: $.XHRLoader, load: function (e, t, r, i) {
                var o = this, a = o.cache.get(e);
                if (void 0 === a) {
                    var n = new XMLHttpRequest;
                    void 0 !== t && n.addEventListener("load", (function (r) {
                        o.cache.add(e, r.target.responseText), t(r.target.responseText), o.manager.itemEnd(e)
                    }), !1), void 0 !== r && n.addEventListener("progress", (function (e) {
                        r(e)
                    }), !1), void 0 !== i && n.addEventListener("error", (function (e) {
                        i(e)
                    }), !1), void 0 !== this.crossOrigin && (n.crossOrigin = this.crossOrigin), n.open("GET", e, !0), n.send(null), o.manager.itemStart(e)
                } else t(a)
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }
        },$.ImageLoader = function (e) {
            this.cache = new $.Cache, this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.ImageLoader.prototype = {
            constructor: $.ImageLoader, load: function (e, t, r, i) {
                var o = this, a = o.cache.get(e);
                if (void 0 === a) {
                    var n = document.createElement("img");
                    return void 0 !== t && n.addEventListener("load", (function (r) {
                        o.cache.add(e, this), t(this), o.manager.itemEnd(e)
                    }), !1), void 0 !== r && n.addEventListener("progress", (function (e) {
                        r(e)
                    }), !1), void 0 !== i && n.addEventListener("error", (function (e) {
                        i(e)
                    }), !1), void 0 !== this.crossOrigin && (n.crossOrigin = this.crossOrigin), n.src = e, o.manager.itemStart(e), n
                }
                t(a)
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }
        },$.JSONLoader = function (e) {
            $.Loader.call(this, e), this.withCredentials = !1
        },$.JSONLoader.prototype = Object.create($.Loader.prototype),$.JSONLoader.prototype.load = function (e, t, r) {
            r = r && "string" == typeof r ? r : this.extractUrlBase(e), this.onLoadStart(), this.loadAjaxJSON(this, e, t, r)
        },$.JSONLoader.prototype.loadAjaxJSON = function (e, t, r, i, o) {
            var a = new XMLHttpRequest, n = 0;
            a.onreadystatechange = function () {
                if (a.readyState === a.DONE) if (200 === a.status || 0 === a.status) {
                    if (a.responseText) {
                        var s = JSON.parse(a.responseText);
                        if (void 0 !== s.metadata && "scene" === s.metadata.type) return void console.error('THREE.JSONLoader: "' + t + '" seems to be a Scene. Use THREE.SceneLoader instead.');
                        var h = e.parse(s, i);
                        r(h.geometry, h.materials)
                    } else console.error('THREE.JSONLoader: "' + t + '" seems to be unreachable or the file is empty.');
                    e.onLoadComplete()
                } else console.error("THREE.JSONLoader: Couldn't load \"" + t + '" (' + a.status + ")"); else a.readyState === a.LOADING ? o && (0 === n && (n = a.getResponseHeader("Content-Length")), o({
                    total: n,
                    loaded: a.responseText.length
                })) : a.readyState === a.HEADERS_RECEIVED && void 0 !== o && (n = a.getResponseHeader("Content-Length"))
            }, a.open("GET", t, !0), a.withCredentials = this.withCredentials, a.send(null)
        },$.JSONLoader.prototype.parse = function (e, t) {
            var r = new $.Geometry, i = void 0 !== e.scale ? 1 / e.scale : 1;
            if (function (t) {
                function i(e, t) {
                    return e & 1 << t
                }

                var o, a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M, S, A, T, E, C, P, L, D = e.faces,
                    R = e.vertices, F = e.normals, U = e.colors, V = 0;
                if (void 0 !== e.uvs) {
                    for (o = 0; o < e.uvs.length; o++) e.uvs[o].length && V++;
                    for (o = 0; o < V; o++) r.faceVertexUvs[o] = []
                }
                s = 0, h = R.length;
                for (; s < h;) (_ = new $.Vector3).x = R[s++] * t, _.y = R[s++] * t, _.z = R[s++] * t, r.vertices.push(_);
                s = 0, h = D.length;
                for (; s < h;) if (f = D[s++], d = i(f, 0), m = i(f, 1), y = i(f, 3), g = i(f, 4), v = i(f, 5), x = i(f, 6), w = i(f, 7), d) {
                    if ((M = new $.Face3).a = D[s], M.b = D[s + 1], M.c = D[s + 3], (S = new $.Face3).a = D[s + 1], S.b = D[s + 2], S.c = D[s + 3], s += 4, m && (u = D[s++], M.materialIndex = u, S.materialIndex = u), n = r.faces.length, y) for (o = 0; o < V; o++) for (E = e.uvs[o], r.faceVertexUvs[o][n] = [], r.faceVertexUvs[o][n + 1] = [], a = 0; a < 4; a++) p = D[s++], P = E[2 * p], L = E[2 * p + 1], C = new $.Vector2(P, L), 2 !== a && r.faceVertexUvs[o][n].push(C), 0 !== a && r.faceVertexUvs[o][n + 1].push(C);
                    if (g && (c = 3 * D[s++], M.normal.set(F[c++], F[c++], F[c]), S.normal.copy(M.normal)), v) for (o = 0; o < 4; o++) c = 3 * D[s++], T = new $.Vector3(F[c++], F[c++], F[c]), 2 !== o && M.vertexNormals.push(T), 0 !== o && S.vertexNormals.push(T);
                    if (x && (l = D[s++], A = U[l], M.color.setHex(A), S.color.setHex(A)), w) for (o = 0; o < 4; o++) l = D[s++], A = U[l], 2 !== o && M.vertexColors.push(new $.Color(A)), 0 !== o && S.vertexColors.push(new $.Color(A));
                    r.faces.push(M), r.faces.push(S)
                } else {
                    if ((b = new $.Face3).a = D[s++], b.b = D[s++], b.c = D[s++], m && (u = D[s++], b.materialIndex = u), n = r.faces.length, y) for (o = 0; o < V; o++) for (E = e.uvs[o], r.faceVertexUvs[o][n] = [], a = 0; a < 3; a++) p = D[s++], P = E[2 * p], L = E[2 * p + 1], C = new $.Vector2(P, L), r.faceVertexUvs[o][n].push(C);
                    if (g && (c = 3 * D[s++], b.normal.set(F[c++], F[c++], F[c])), v) for (o = 0; o < 3; o++) c = 3 * D[s++], T = new $.Vector3(F[c++], F[c++], F[c]), b.vertexNormals.push(T);
                    if (x && (l = D[s++], b.color.setHex(U[l])), w) for (o = 0; o < 3; o++) l = D[s++], b.vertexColors.push(new $.Color(U[l]));
                    r.faces.push(b)
                }
            }(i), function () {
                var t = void 0 !== e.influencesPerVertex ? e.influencesPerVertex : 2;
                if (e.skinWeights) for (var i = 0, o = e.skinWeights.length; i < o; i += t) {
                    var a = e.skinWeights[i], n = t > 1 ? e.skinWeights[i + 1] : 0,
                        s = t > 2 ? e.skinWeights[i + 2] : 0, h = t > 3 ? e.skinWeights[i + 3] : 0;
                    r.skinWeights.push(new $.Vector4(a, n, s, h))
                }
                if (e.skinIndices) for (i = 0, o = e.skinIndices.length; i < o; i += t) {
                    var l = e.skinIndices[i], c = t > 1 ? e.skinIndices[i + 1] : 0,
                        p = t > 2 ? e.skinIndices[i + 2] : 0, u = t > 3 ? e.skinIndices[i + 3] : 0;
                    r.skinIndices.push(new $.Vector4(l, c, p, u))
                }
                r.bones = e.bones, r.bones && r.bones.length > 0 && (r.skinWeights.length !== r.skinIndices.length || r.skinIndices.length !== r.vertices.length) && console.warn("When skinning, number of vertices (" + r.vertices.length + "), skinIndices (" + r.skinIndices.length + "), and skinWeights (" + r.skinWeights.length + ") should match.");
                r.animation = e.animation, r.animations = e.animations
            }(), function (t) {
                var i, o, a, n, s, h, l, c, p, u, f;
                if (void 0 !== e.morphTargets) for (s = 0, h = e.morphTargets.length; s < h; s++) for (r.morphTargets[s] = {}, r.morphTargets[s].name = e.morphTargets[s].name, r.morphTargets[s].vertices = [], a = r.morphTargets[s].vertices, n = e.morphTargets[s].vertices, i = 0, o = n.length; i < o; i += 3) {
                    var d = new $.Vector3;
                    d.x = n[i] * t, d.y = n[i + 1] * t, d.z = n[i + 2] * t, a.push(d)
                }
                if (void 0 !== e.morphColors) for (s = 0, h = e.morphColors.length; s < h; s++) for (r.morphColors[s] = {}, r.morphColors[s].name = e.morphColors[s].name, r.morphColors[s].colors = [], p = r.morphColors[s].colors, u = e.morphColors[s].colors, l = 0, c = u.length; l < c; l += 3) (f = new $.Color(16755200)).setRGB(u[l], u[l + 1], u[l + 2]), p.push(f)
            }(i), r.computeFaceNormals(), r.computeBoundingSphere(), void 0 === e.materials || 0 === e.materials.length) return {geometry: r};
            var o = this.initMaterials(e.materials, t);
            return this.needsTangents(o) && r.computeTangents(), {geometry: r, materials: o}
        },$.LoadingManager = function (e, t, r) {
            var i = this, o = 0, a = 0;
            this.onLoad = e, this.onProgress = t, this.onError = r, this.itemStart = function (e) {
                a++
            }, this.itemEnd = function (e) {
                o++, void 0 !== i.onProgress && i.onProgress(e, o, a), o === a && void 0 !== i.onLoad && i.onLoad()
            }
        },$.DefaultLoadingManager = new $.LoadingManager,$.BufferGeometryLoader = function (e) {
            this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.BufferGeometryLoader.prototype = {
            constructor: $.BufferGeometryLoader, load: function (e, t, r, i) {
                var o = this, a = new $.XHRLoader;
                a.setCrossOrigin(this.crossOrigin), a.load(e, (function (e) {
                    t(o.parse(JSON.parse(e)))
                }))
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }, parse: function (e) {
                var t = new $.BufferGeometry, r = e.attributes, i = e.offsets, o = e.boundingSphere;
                for (var a in r) {
                    var n = r[a];
                    t.attributes[a] = {itemSize: n.itemSize, array: new self[n.type](n.array)}
                }
                return void 0 !== i && (t.offsets = JSON.parse(JSON.stringify(i))), void 0 !== o && (t.boundingSphere = new $.Sphere((new $.Vector3).fromArray(void 0 !== o.center ? o.center : [0, 0, 0]), o.radius)), t
            }
        },$.MaterialLoader = function (e) {
            this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.MaterialLoader.prototype = {
            constructor: $.MaterialLoader, load: function (e, t, r, i) {
                var o = this, a = new $.XHRLoader;
                a.setCrossOrigin(this.crossOrigin), a.load(e, (function (e) {
                    t(o.parse(JSON.parse(e)))
                }))
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }, parse: function (e) {
                var t = new $[e.type];
                if (void 0 !== e.color && t.color.setHex(e.color), void 0 !== e.ambient && t.ambient.setHex(e.ambient), void 0 !== e.emissive && t.emissive.setHex(e.emissive), void 0 !== e.specular && t.specular.setHex(e.specular), void 0 !== e.shininess && (t.shininess = e.shininess), void 0 !== e.vertexColors && (t.vertexColors = e.vertexColors), void 0 !== e.blending && (t.blending = e.blending), void 0 !== e.side && (t.side = e.side), void 0 !== e.opacity && (t.opacity = e.opacity), void 0 !== e.transparent && (t.transparent = e.transparent), void 0 !== e.wireframe && (t.wireframe = e.wireframe), void 0 !== e.materials) for (var r = 0, i = e.materials.length; r < i; r++) t.materials.push(this.parse(e.materials[r]));
                return t
            }
        },$.ObjectLoader = function (e) {
            this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.ObjectLoader.prototype = {
            constructor: $.ObjectLoader, load: function (e, t, r, i) {
                var o = this, a = new $.XHRLoader(o.manager);
                a.setCrossOrigin(this.crossOrigin), a.load(e, (function (e) {
                    t(o.parse(JSON.parse(e)))
                }))
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }, parse: function (e) {
                var t = this.parseGeometries(e.geometries), r = this.parseMaterials(e.materials);
                return this.parseObject(e.object, t, r)
            }, parseGeometries: function (e) {
                var t = {};
                if (void 0 !== e) for (var r = new $.JSONLoader, i = new $.BufferGeometryLoader, o = 0, a = e.length; o < a; o++) {
                    var n, s = e[o];
                    switch (s.type) {
                        case"PlaneGeometry":
                            n = new $.PlaneGeometry(s.width, s.height, s.widthSegments, s.heightSegments);
                            break;
                        case"BoxGeometry":
                        case"CubeGeometry":
                            n = new $.BoxGeometry(s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                            break;
                        case"CircleGeometry":
                            n = new $.CircleGeometry(s.radius, s.segments);
                            break;
                        case"CylinderGeometry":
                            n = new $.CylinderGeometry(s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded);
                            break;
                        case"SphereGeometry":
                            n = new $.SphereGeometry(s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                            break;
                        case"IcosahedronGeometry":
                            n = new $.IcosahedronGeometry(s.radius, s.detail);
                            break;
                        case"TorusGeometry":
                            n = new $.TorusGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                            break;
                        case"TorusKnotGeometry":
                            n = new $.TorusKnotGeometry(s.radius, s.tube, s.radialSegments, s.tubularSegments, s.p, s.q, s.heightScale);
                            break;
                        case"BufferGeometry":
                            n = i.parse(s.data);
                            break;
                        case"Geometry":
                            n = r.parse(s.data).geometry
                    }
                    n.uuid = s.uuid, void 0 !== s.name && (n.name = s.name), t[s.uuid] = n
                }
                return t
            }, parseMaterials: function (e) {
                var t = {};
                if (void 0 !== e) for (var r = new $.MaterialLoader, i = 0, o = e.length; i < o; i++) {
                    var a = e[i], n = r.parse(a);
                    n.uuid = a.uuid, void 0 !== a.name && (n.name = a.name), t[a.uuid] = n
                }
                return t
            }, parseObject: function () {
                var e = new $.Matrix4;
                return function (t, r, i) {
                    var o;
                    switch (t.type) {
                        case"Scene":
                            o = new $.Scene;
                            break;
                        case"PerspectiveCamera":
                            o = new $.PerspectiveCamera(t.fov, t.aspect, t.near, t.far);
                            break;
                        case"OrthographicCamera":
                            o = new $.OrthographicCamera(t.left, t.right, t.top, t.bottom, t.near, t.far);
                            break;
                        case"AmbientLight":
                            o = new $.AmbientLight(t.color);
                            break;
                        case"DirectionalLight":
                            o = new $.DirectionalLight(t.color, t.intensity);
                            break;
                        case"PointLight":
                            o = new $.PointLight(t.color, t.intensity, t.distance);
                            break;
                        case"SpotLight":
                            o = new $.SpotLight(t.color, t.intensity, t.distance, t.angle, t.exponent);
                            break;
                        case"HemisphereLight":
                            o = new $.HemisphereLight(t.color, t.groundColor, t.intensity);
                            break;
                        case"Mesh":
                            var a = r[t.geometry], n = i[t.material];
                            void 0 === a && console.error("THREE.ObjectLoader: Undefined geometry " + t.geometry), void 0 === n && console.error("THREE.ObjectLoader: Undefined material " + t.material), o = new $.Mesh(a, n);
                            break;
                        case"Sprite":
                            void 0 === (n = i[t.material]) && console.error("THREE.ObjectLoader: Undefined material " + t.material), o = new $.Sprite(n);
                            break;
                        default:
                            o = new $.Object3D
                    }
                    if (o.uuid = t.uuid, void 0 !== t.name && (o.name = t.name), void 0 !== t.matrix ? (e.fromArray(t.matrix), e.decompose(o.position, o.quaternion, o.scale)) : (void 0 !== t.position && o.position.fromArray(t.position), void 0 !== t.rotation && o.rotation.fromArray(t.rotation), void 0 !== t.scale && o.scale.fromArray(t.scale)), void 0 !== t.visible && (o.visible = t.visible), void 0 !== t.userData && (o.userData = t.userData), void 0 !== t.children) for (var s in t.children) o.add(this.parseObject(t.children[s], r, i));
                    return o
                }
            }()
        },$.SceneLoader = function () {
            this.onLoadStart = function () {
            }, this.onLoadProgress = function () {
            }, this.onLoadComplete = function () {
            }, this.callbackSync = function () {
            }, this.callbackProgress = function () {
            }, this.geometryHandlers = {}, this.hierarchyHandlers = {}, this.addGeometryHandler("ascii", $.JSONLoader)
        },$.SceneLoader.prototype = {
            constructor: $.SceneLoader, load: function (e, t, r, i) {
                var o = this, a = new $.XHRLoader(o.manager);
                a.setCrossOrigin(this.crossOrigin), a.load(e, (function (r) {
                    o.parse(JSON.parse(r), t, e)
                }))
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }, addGeometryHandler: function (e, t) {
                this.geometryHandlers[e] = {loaderClass: t}
            }, addHierarchyHandler: function (e, t) {
                this.hierarchyHandlers[e] = {loaderClass: t}
            }, parse: function (e, t, r) {
                var i, o, a, n, s, h, l, c, p, u, f, d, m = this, y = $.Loader.prototype.extractUrlBase(r), g = [],
                    v = e;
                for (var x in this.geometryHandlers) {
                    var w = this.geometryHandlers[x].loaderClass;
                    this.geometryHandlers[x].loaderObject = new w
                }
                for (var x in this.hierarchyHandlers) {
                    w = this.hierarchyHandlers[x].loaderClass;
                    this.hierarchyHandlers[x].loaderObject = new w
                }
                if (c = 0, p = 0, d = {
                    scene: new $.Scene,
                    geometries: {},
                    face_materials: {},
                    materials: {},
                    textures: {},
                    objects: {},
                    cameras: {},
                    lights: {},
                    fogs: {},
                    empties: {},
                    groups: {}
                }, v.transform) {
                    var _ = v.transform.position, b = v.transform.rotation, M = v.transform.scale;
                    _ && d.scene.position.fromArray(_), b && d.scene.rotation.fromArray(b), M && d.scene.scale.fromArray(M), (_ || b || M) && (d.scene.updateMatrix(), d.scene.updateMatrixWorld())
                }

                function S(e, t) {
                    return "relativeToHTML" == t ? e : y + e
                }

                function A() {
                    !function e(t, r) {
                        var n, s, h, c, p;
                        for (var u in r) {
                            var f = d.objects[u], y = r[u];
                            if (void 0 === f) {
                                if (y.type && y.type in m.hierarchyHandlers) {
                                    if (void 0 === y.loading) {
                                        var g = {
                                            type: 1,
                                            url: 1,
                                            material: 1,
                                            position: 1,
                                            rotation: 1,
                                            scale: 1,
                                            visible: 1,
                                            children: 1,
                                            userData: 1,
                                            skin: 1,
                                            morph: 1,
                                            mirroredLoop: 1,
                                            duration: 1
                                        }, x = {};
                                        for (var w in y) w in g || (x[w] = y[w]);
                                        o = d.materials[y.material], y.loading = !0;
                                        var _ = m.hierarchyHandlers[y.type].loaderObject;
                                        _.options ? _.load(S(y.url, v.urlBaseType), C(u, t, o, y)) : _.load(S(y.url, v.urlBaseType), C(u, t, o, y), x)
                                    }
                                } else if (void 0 !== y.geometry) {
                                    if (i = d.geometries[y.geometry]) {
                                        var b = !1;
                                        if (o = d.materials[y.material], b = o instanceof $.ShaderMaterial, s = y.position, h = y.rotation, c = y.scale, n = y.matrix, p = y.quaternion, y.material || (o = new $.MeshFaceMaterial(d.face_materials[y.geometry])), o instanceof $.MeshFaceMaterial && 0 === o.materials.length && (o = new $.MeshFaceMaterial(d.face_materials[y.geometry])), o instanceof $.MeshFaceMaterial) for (var M = 0; M < o.materials.length; M++) b = b || o.materials[M] instanceof $.ShaderMaterial;
                                        b && i.computeTangents(), y.skin ? f = new $.SkinnedMesh(i, o) : y.morph ? (f = new $.MorphAnimMesh(i, o), void 0 !== y.duration && (f.duration = y.duration), void 0 !== y.time && (f.time = y.time), void 0 !== y.mirroredLoop && (f.mirroredLoop = y.mirroredLoop), o.morphNormals && i.computeMorphNormals()) : f = new $.Mesh(i, o), f.name = u, n ? (f.matrixAutoUpdate = !1, f.matrix.set(n[0], n[1], n[2], n[3], n[4], n[5], n[6], n[7], n[8], n[9], n[10], n[11], n[12], n[13], n[14], n[15])) : (f.position.fromArray(s), p ? f.quaternion.fromArray(p) : f.rotation.fromArray(h), f.scale.fromArray(c)), f.visible = y.visible, f.castShadow = y.castShadow, f.receiveShadow = y.receiveShadow, t.add(f), d.objects[u] = f
                                    }
                                } else if ("AmbientLight" === y.type || "PointLight" === y.type || "DirectionalLight" === y.type || "SpotLight" === y.type || "HemisphereLight" === y.type || "AreaLight" === y.type) {
                                    var A = y.color, T = y.intensity, E = y.distance, P = y.position, L = y.rotation;
                                    switch (y.type) {
                                        case"AmbientLight":
                                            l = new $.AmbientLight(A);
                                            break;
                                        case"PointLight":
                                            (l = new $.PointLight(A, T, E)).position.fromArray(P);
                                            break;
                                        case"DirectionalLight":
                                            (l = new $.DirectionalLight(A, T)).position.fromArray(y.direction);
                                            break;
                                        case"SpotLight":
                                            (l = new $.SpotLight(A, T, E, 1)).angle = y.angle, l.position.fromArray(P), l.target.set(P[0], P[1] - E, P[2]), l.target.applyEuler(new $.Euler(L[0], L[1], L[2], "XYZ"));
                                            break;
                                        case"HemisphereLight":
                                            (l = new $.DirectionalLight(A, T, E)).target.set(P[0], P[1] - E, P[2]), l.target.applyEuler(new $.Euler(L[0], L[1], L[2], "XYZ"));
                                            break;
                                        case"AreaLight":
                                            (l = new $.AreaLight(A, T)).position.fromArray(P), l.width = y.size, l.height = y.size_y
                                    }
                                    t.add(l), l.name = u, d.lights[u] = l, d.objects[u] = l
                                } else "PerspectiveCamera" === y.type || "OrthographicCamera" === y.type ? (s = y.position, h = y.rotation, p = y.quaternion, "PerspectiveCamera" === y.type ? a = new $.PerspectiveCamera(y.fov, y.aspect, y.near, y.far) : "OrthographicCamera" === y.type && (a = new $.OrthographicCamera(y.left, y.right, y.top, y.bottom, y.near, y.far)), a.name = u, a.position.fromArray(s), void 0 !== p ? a.quaternion.fromArray(p) : void 0 !== h && a.rotation.fromArray(h), t.add(a), d.cameras[u] = a, d.objects[u] = a) : (s = y.position, h = y.rotation, c = y.scale, p = y.quaternion, (f = new $.Object3D).name = u, f.position.fromArray(s), p ? f.quaternion.fromArray(p) : f.rotation.fromArray(h), f.scale.fromArray(c), f.visible = void 0 !== y.visible && y.visible, t.add(f), d.objects[u] = f, d.empties[u] = f);
                                if (f) {
                                    if (void 0 !== y.userData) for (var D in y.userData) {
                                        var R = y.userData[D];
                                        f.userData[D] = R
                                    }
                                    if (void 0 !== y.groups) for (M = 0; M < y.groups.length; M++) {
                                        var F = y.groups[M];
                                        void 0 === d.groups[F] && (d.groups[F] = []), d.groups[F].push(u)
                                    }
                                }
                            }
                            void 0 !== f && void 0 !== y.children && e(f, y.children)
                        }
                    }(d.scene, v.objects)
                }

                function T(e, t, r, i, o) {
                    var a = o.position, n = o.rotation, s = o.quaternion, h = o.scale;
                    e.position.fromArray(a), s ? e.quaternion.fromArray(s) : e.rotation.fromArray(n), e.scale.fromArray(h), i && e.traverse((function (e) {
                        e.material = i
                    }));
                    var l = void 0 === o.visible || o.visible;
                    e.traverse((function (e) {
                        e.visible = l
                    })), r.add(e), e.name = t, d.objects[t] = e, A()
                }

                function E(e) {
                    return function (t, r) {
                        t.name = e, function (e, t, r) {
                            d.geometries[r] = e, d.face_materials[r] = t, A()
                        }(t, r, e), c -= 1, m.onLoadComplete(), L()
                    }
                }

                function C(e, t, r, i) {
                    return function (o) {
                        T(o.content ? o.content : o.dae ? o.scene : o, e, t, r, i), c -= 1, m.onLoadComplete(), L()
                    }
                }

                function P(e) {
                    return function (t, r) {
                        t.name = e, d.geometries[e] = t, d.face_materials[e] = r
                    }
                }

                function L() {
                    var e = {totalModels: u, totalTextures: f, loadedModels: u - c, loadedTextures: f - p};
                    m.callbackProgress(e, d), m.onLoadProgress(), 0 === c && 0 === p && (!function () {
                        for (var e = 0; e < g.length; e++) {
                            var t = g[e], r = d.objects[t.targetName];
                            r ? t.object.target = r : (t.object.target = new $.Object3D, d.scene.add(t.object.target)), t.object.target.userData.targetInverse = t.object
                        }
                    }(), t(d))
                }

                var D, R, F, U, V, z, B, N, O, k = function (e) {
                    return function () {
                        !function (e) {
                            p -= e, L(), m.onLoadComplete()
                        }(e)
                    }
                };

                function I(e, t) {
                    if (t(e), void 0 !== e.children) for (var r in e.children) I(e.children[r], t)
                }

                for (D in v.fogs) "linear" === (R = v.fogs[D]).type ? n = new $.Fog(0, R.near, R.far) : "exp2" === R.type && (n = new $.FogExp2(0, R.density)), h = R.color, n.color.setRGB(h[0], h[1], h[2]), d.fogs[D] = n;
                for (F in v.geometries) (U = v.geometries[F]).type in this.geometryHandlers && (c += 1, m.onLoadStart());
                for (var G in v.objects) I(v.objects[G], (function (e) {
                    e.type && e.type in m.hierarchyHandlers && (c += 1, m.onLoadStart())
                }));
                for (F in u = c, v.geometries) if ("cube" === (U = v.geometries[F]).type) (i = new $.BoxGeometry(U.width, U.height, U.depth, U.widthSegments, U.heightSegments, U.depthSegments)).name = F, d.geometries[F] = i; else if ("plane" === U.type) (i = new $.PlaneGeometry(U.width, U.height, U.widthSegments, U.heightSegments)).name = F, d.geometries[F] = i; else if ("sphere" === U.type) (i = new $.SphereGeometry(U.radius, U.widthSegments, U.heightSegments)).name = F, d.geometries[F] = i; else if ("cylinder" === U.type) (i = new $.CylinderGeometry(U.topRad, U.botRad, U.height, U.radSegs, U.heightSegs)).name = F, d.geometries[F] = i; else if ("torus" === U.type) (i = new $.TorusGeometry(U.radius, U.tube, U.segmentsR, U.segmentsT)).name = F, d.geometries[F] = i; else if ("icosahedron" === U.type) (i = new $.IcosahedronGeometry(U.radius, U.subdivisions)).name = F, d.geometries[F] = i; else if (U.type in this.geometryHandlers) {
                    var W = {};
                    for (var H in U) "type" !== H && "url" !== H && (W[H] = U[H]);
                    this.geometryHandlers[U.type].loaderObject.load(S(U.url, v.urlBaseType), E(F), W)
                } else if ("embedded" === U.type) {
                    var j = v.embeds[U.id];
                    if (j.metadata = v.metadata, j) {
                        var X = this.geometryHandlers.ascii.loaderObject.parse(j, "");
                        P(F)(X.geometry, X.materials)
                    }
                }
                for (V in v.textures) if ((z = v.textures[V]).url instanceof Array) {
                    p += z.url.length;
                    for (var q = 0; q < z.url.length; q++) m.onLoadStart()
                } else p += 1, m.onLoadStart();
                for (V in f = p, v.textures) {
                    if (void 0 !== (z = v.textures[V]).mapping && void 0 !== $[z.mapping] && (z.mapping = new $[z.mapping]), z.url instanceof Array) {
                        for (var Y = z.url.length, K = [], Z = 0; Z < Y; Z++) K[Z] = S(z.url[Z], v.urlBaseType);
                        s = (Q = /\.dds$/i.test(K[0])) ? $.ImageUtils.loadCompressedTextureCube(K, z.mapping, k(Y)) : $.ImageUtils.loadTextureCube(K, z.mapping, k(Y))
                    } else {
                        var Q = /\.dds$/i.test(z.url), J = S(z.url, v.urlBaseType), ee = k(1);
                        if (s = Q ? $.ImageUtils.loadCompressedTexture(J, z.mapping, ee) : $.ImageUtils.loadTexture(J, z.mapping, ee), void 0 !== $[z.minFilter] && (s.minFilter = $[z.minFilter]), void 0 !== $[z.magFilter] && (s.magFilter = $[z.magFilter]), z.anisotropy && (s.anisotropy = z.anisotropy), z.repeat && (s.repeat.set(z.repeat[0], z.repeat[1]), 1 !== z.repeat[0] && (s.wrapS = $.RepeatWrapping), 1 !== z.repeat[1] && (s.wrapT = $.RepeatWrapping)), z.offset && s.offset.set(z.offset[0], z.offset[1]), z.wrap) {
                            var te = {repeat: $.RepeatWrapping, mirror: $.MirroredRepeatWrapping};
                            void 0 !== te[z.wrap[0]] && (s.wrapS = te[z.wrap[0]]), void 0 !== te[z.wrap[1]] && (s.wrapT = te[z.wrap[1]])
                        }
                    }
                    d.textures[V] = s
                }
                for (B in v.materials) {
                    for (O in (N = v.materials[B]).parameters) if ("envMap" === O || "map" === O || "lightMap" === O || "bumpMap" === O) N.parameters[O] = d.textures[N.parameters[O]]; else if ("shading" === O) N.parameters[O] = "flat" === N.parameters[O] ? $.FlatShading : $.SmoothShading; else if ("side" === O) "double" == N.parameters[O] ? N.parameters[O] = $.DoubleSide : "back" == N.parameters[O] ? N.parameters[O] = $.BackSide : N.parameters[O] = $.FrontSide; else if ("blending" === O) N.parameters[O] = N.parameters[O] in $ ? $[N.parameters[O]] : $.NormalBlending; else if ("combine" === O) N.parameters[O] = N.parameters[O] in $ ? $[N.parameters[O]] : $.MultiplyOperation; else if ("vertexColors" === O) "face" == N.parameters[O] ? N.parameters[O] = $.FaceColors : N.parameters[O] && (N.parameters[O] = $.VertexColors); else if ("wrapRGB" === O) {
                        var re = N.parameters[O];
                        N.parameters[O] = new $.Vector3(re[0], re[1], re[2])
                    }
                    if (void 0 !== N.parameters.opacity && N.parameters.opacity < 1 && (N.parameters.transparent = !0), N.parameters.normalMap) {
                        var ie = $.ShaderLib.normalmap, oe = $.UniformsUtils.clone(ie.uniforms),
                            ae = N.parameters.color, ne = N.parameters.specular, se = N.parameters.ambient,
                            he = N.parameters.shininess;
                        oe.tNormal.value = d.textures[N.parameters.normalMap], N.parameters.normalScale && oe.uNormalScale.value.set(N.parameters.normalScale[0], N.parameters.normalScale[1]), N.parameters.map && (oe.tDiffuse.value = N.parameters.map, oe.enableDiffuse.value = !0), N.parameters.envMap && (oe.tCube.value = N.parameters.envMap, oe.enableReflection.value = !0, oe.reflectivity.value = N.parameters.reflectivity), N.parameters.lightMap && (oe.tAO.value = N.parameters.lightMap, oe.enableAO.value = !0), N.parameters.specularMap && (oe.tSpecular.value = d.textures[N.parameters.specularMap], oe.enableSpecular.value = !0), N.parameters.displacementMap && (oe.tDisplacement.value = d.textures[N.parameters.displacementMap], oe.enableDisplacement.value = !0, oe.uDisplacementBias.value = N.parameters.displacementBias, oe.uDisplacementScale.value = N.parameters.displacementScale), oe.diffuse.value.setHex(ae), oe.specular.value.setHex(ne), oe.ambient.value.setHex(se), oe.shininess.value = he, N.parameters.opacity && (oe.opacity.value = N.parameters.opacity);
                        var le = {
                            fragmentShader: ie.fragmentShader,
                            vertexShader: ie.vertexShader,
                            uniforms: oe,
                            lights: !0,
                            fog: !0
                        };
                        o = new $.ShaderMaterial(le)
                    } else o = new $[N.type](N.parameters);
                    o.name = B, d.materials[B] = o
                }
                for (B in v.materials) if ((N = v.materials[B]).parameters.materials) {
                    var ce = [];
                    for (Z = 0; Z < N.parameters.materials.length; Z++) {
                        var pe = N.parameters.materials[Z];
                        ce.push(d.materials[pe])
                    }
                    d.materials[B].materials = ce
                }
                A(), d.cameras && v.defaults.camera && (d.currentCamera = d.cameras[v.defaults.camera]), d.fogs && v.defaults.fog && (d.scene.fog = d.fogs[v.defaults.fog]), m.callbackSync(d), L()
            }
        },$.TextureLoader = function (e) {
            this.manager = void 0 !== e ? e : $.DefaultLoadingManager
        },$.TextureLoader.prototype = {
            constructor: $.TextureLoader, load: function (e, t, r, i) {
                var o = new $.ImageLoader(this.manager);
                o.setCrossOrigin(this.crossOrigin), o.load(e, (function (e) {
                    var r = new $.Texture(e);
                    r.needsUpdate = !0, void 0 !== t && t(r)
                }))
            }, setCrossOrigin: function (e) {
                this.crossOrigin = e
            }
        },$.Material = function () {
            this.id = $.MaterialIdCount++, this.uuid = $.Math.generateUUID(), this.name = "", this.side = $.FrontSide, this.opacity = 1, this.transparent = !1, this.blending = $.NormalBlending, this.blendSrc = $.SrcAlphaFactor, this.blendDst = $.OneMinusSrcAlphaFactor, this.blendEquation = $.AddEquation, this.depthTest = !0, this.depthWrite = !0, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.alphaTest = 0, this.overdraw = 0, this.visible = !0, this.needsUpdate = !0
        },$.Material.prototype = {
            constructor: $.Material, setValues: function (e) {
                if (void 0 !== e) for (var t in e) {
                    var r = e[t];
                    if (void 0 !== r) {
                        if (t in this) {
                            var i = this[t];
                            i instanceof $.Color ? i.set(r) : i instanceof $.Vector3 && r instanceof $.Vector3 ? i.copy(r) : this[t] = "overdraw" == t ? Number(r) : r
                        }
                    } else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
                }
            }, clone: function (e) {
                return void 0 === e && (e = new $.Material), e.name = this.name, e.side = this.side, e.opacity = this.opacity, e.transparent = this.transparent, e.blending = this.blending, e.blendSrc = this.blendSrc, e.blendDst = this.blendDst, e.blendEquation = this.blendEquation, e.depthTest = this.depthTest, e.depthWrite = this.depthWrite, e.polygonOffset = this.polygonOffset, e.polygonOffsetFactor = this.polygonOffsetFactor, e.polygonOffsetUnits = this.polygonOffsetUnits, e.alphaTest = this.alphaTest, e.overdraw = this.overdraw, e.visible = this.visible, e
            }, dispose: function () {
                this.dispatchEvent({type: "dispose"})
            }
        },$.EventDispatcher.prototype.apply($.Material.prototype),$.MaterialIdCount = 0,$.LineBasicMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.vertexColors = !1, this.fog = !0, this.setValues(e)
        },$.LineBasicMaterial.prototype = Object.create($.Material.prototype),$.LineBasicMaterial.prototype.clone = function () {
            var e = new $.LineBasicMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.linewidth = this.linewidth, e.linecap = this.linecap, e.linejoin = this.linejoin, e.vertexColors = this.vertexColors, e.fog = this.fog, e
        },$.LineDashedMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.linewidth = 1, this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.vertexColors = !1, this.fog = !0, this.setValues(e)
        },$.LineDashedMaterial.prototype = Object.create($.Material.prototype),$.LineDashedMaterial.prototype.clone = function () {
            var e = new $.LineDashedMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.linewidth = this.linewidth, e.scale = this.scale, e.dashSize = this.dashSize, e.gapSize = this.gapSize, e.vertexColors = this.vertexColors, e.fog = this.fog, e
        },$.MeshBasicMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.map = null, this.lightMap = null, this.specularMap = null, this.envMap = null, this.combine = $.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = $.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = $.NoColors, this.skinning = !1, this.morphTargets = !1, this.setValues(e)
        },$.MeshBasicMaterial.prototype = Object.create($.Material.prototype),$.MeshBasicMaterial.prototype.clone = function () {
            var e = new $.MeshBasicMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.map = this.map, e.lightMap = this.lightMap, e.specularMap = this.specularMap, e.envMap = this.envMap, e.combine = this.combine, e.reflectivity = this.reflectivity, e.refractionRatio = this.refractionRatio, e.fog = this.fog, e.shading = this.shading, e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e.wireframeLinecap = this.wireframeLinecap, e.wireframeLinejoin = this.wireframeLinejoin, e.vertexColors = this.vertexColors, e.skinning = this.skinning, e.morphTargets = this.morphTargets, e
        },$.MeshLambertMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.ambient = new $.Color(16777215), this.emissive = new $.Color(0), this.wrapAround = !1, this.wrapRGB = new $.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.specularMap = null, this.envMap = null, this.combine = $.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = $.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = $.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
        },$.MeshLambertMaterial.prototype = Object.create($.Material.prototype),$.MeshLambertMaterial.prototype.clone = function () {
            var e = new $.MeshLambertMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.ambient.copy(this.ambient), e.emissive.copy(this.emissive), e.wrapAround = this.wrapAround, e.wrapRGB.copy(this.wrapRGB), e.map = this.map, e.lightMap = this.lightMap, e.specularMap = this.specularMap, e.envMap = this.envMap, e.combine = this.combine, e.reflectivity = this.reflectivity, e.refractionRatio = this.refractionRatio, e.fog = this.fog, e.shading = this.shading, e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e.wireframeLinecap = this.wireframeLinecap, e.wireframeLinejoin = this.wireframeLinejoin, e.vertexColors = this.vertexColors, e.skinning = this.skinning, e.morphTargets = this.morphTargets, e.morphNormals = this.morphNormals, e
        },$.MeshPhongMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.ambient = new $.Color(16777215), this.emissive = new $.Color(0), this.specular = new $.Color(1118481), this.shininess = 30, this.metal = !1, this.wrapAround = !1, this.wrapRGB = new $.Vector3(1, 1, 1), this.map = null, this.lightMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new $.Vector2(1, 1), this.specularMap = null, this.envMap = null, this.combine = $.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.fog = !0, this.shading = $.SmoothShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.vertexColors = $.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
        },$.MeshPhongMaterial.prototype = Object.create($.Material.prototype),$.MeshPhongMaterial.prototype.clone = function () {
            var e = new $.MeshPhongMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.ambient.copy(this.ambient), e.emissive.copy(this.emissive), e.specular.copy(this.specular), e.shininess = this.shininess, e.metal = this.metal, e.wrapAround = this.wrapAround, e.wrapRGB.copy(this.wrapRGB), e.map = this.map, e.lightMap = this.lightMap, e.bumpMap = this.bumpMap, e.bumpScale = this.bumpScale, e.normalMap = this.normalMap, e.normalScale.copy(this.normalScale), e.specularMap = this.specularMap, e.envMap = this.envMap, e.combine = this.combine, e.reflectivity = this.reflectivity, e.refractionRatio = this.refractionRatio, e.fog = this.fog, e.shading = this.shading, e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e.wireframeLinecap = this.wireframeLinecap, e.wireframeLinejoin = this.wireframeLinejoin, e.vertexColors = this.vertexColors, e.skinning = this.skinning, e.morphTargets = this.morphTargets, e.morphNormals = this.morphNormals, e
        },$.MeshDepthMaterial = function (e) {
            $.Material.call(this), this.morphTargets = !1, this.wireframe = !1, this.wireframeLinewidth = 1, this.setValues(e)
        },$.MeshDepthMaterial.prototype = Object.create($.Material.prototype),$.MeshDepthMaterial.prototype.clone = function () {
            var e = new $.MeshDepthMaterial;
            return $.Material.prototype.clone.call(this, e), e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e
        },$.MeshNormalMaterial = function (e) {
            $.Material.call(this, e), this.shading = $.FlatShading, this.wireframe = !1, this.wireframeLinewidth = 1, this.morphTargets = !1, this.setValues(e)
        },$.MeshNormalMaterial.prototype = Object.create($.Material.prototype),$.MeshNormalMaterial.prototype.clone = function () {
            var e = new $.MeshNormalMaterial;
            return $.Material.prototype.clone.call(this, e), e.shading = this.shading, e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e
        },$.MeshFaceMaterial = function (e) {
            this.materials = e instanceof Array ? e : []
        },$.MeshFaceMaterial.prototype.clone = function () {
            for (var e = new $.MeshFaceMaterial, t = 0; t < this.materials.length; t++) e.materials.push(this.materials[t].clone());
            return e
        },$.ParticleSystemMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.vertexColors = !1, this.fog = !0, this.setValues(e)
        },$.ParticleSystemMaterial.prototype = Object.create($.Material.prototype),$.ParticleSystemMaterial.prototype.clone = function () {
            var e = new $.ParticleSystemMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.map = this.map, e.size = this.size, e.sizeAttenuation = this.sizeAttenuation, e.vertexColors = this.vertexColors, e.fog = this.fog, e
        },$.ParticleBasicMaterial = $.ParticleSystemMaterial,$.ShaderMaterial = function (e) {
            $.Material.call(this), this.fragmentShader = "void main() {}", this.vertexShader = "void main() {}", this.uniforms = {}, this.defines = {}, this.attributes = null, this.shading = $.SmoothShading, this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.vertexColors = $.NoColors, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv2: [0, 0]
            }, this.index0AttributeName = void 0, this.setValues(e)
        },$.ShaderMaterial.prototype = Object.create($.Material.prototype),$.ShaderMaterial.prototype.clone = function () {
            var e = new $.ShaderMaterial;
            return $.Material.prototype.clone.call(this, e), e.fragmentShader = this.fragmentShader, e.vertexShader = this.vertexShader, e.uniforms = $.UniformsUtils.clone(this.uniforms), e.attributes = this.attributes, e.defines = this.defines, e.shading = this.shading, e.wireframe = this.wireframe, e.wireframeLinewidth = this.wireframeLinewidth, e.fog = this.fog, e.lights = this.lights, e.vertexColors = this.vertexColors, e.skinning = this.skinning, e.morphTargets = this.morphTargets, e.morphNormals = this.morphNormals, e
        },$.RawShaderMaterial = function (e) {
            $.ShaderMaterial.call(this, e)
        },$.RawShaderMaterial.prototype = Object.create($.ShaderMaterial.prototype),$.RawShaderMaterial.prototype.clone = function () {
            var e = new $.RawShaderMaterial;
            return $.ShaderMaterial.prototype.clone.call(this, e), e
        },$.SpriteMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.map = null, this.rotation = 0, this.fog = !1, this.setValues(e)
        },$.SpriteMaterial.prototype = Object.create($.Material.prototype),$.SpriteMaterial.prototype.clone = function () {
            var e = new $.SpriteMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.map = this.map, e.rotation = this.rotation, e.fog = this.fog, e
        },$.SpriteCanvasMaterial = function (e) {
            $.Material.call(this), this.color = new $.Color(16777215), this.program = function (e, t) {
            }, this.setValues(e)
        },$.SpriteCanvasMaterial.prototype = Object.create($.Material.prototype),$.SpriteCanvasMaterial.prototype.clone = function () {
            var e = new $.SpriteCanvasMaterial;
            return $.Material.prototype.clone.call(this, e), e.color.copy(this.color), e.program = this.program, e
        },$.ParticleCanvasMaterial = $.SpriteCanvasMaterial,$.Texture = function (e, t, r, i, o, a, n, s, h) {
            this.id = $.TextureIdCount++, this.uuid = $.Math.generateUUID(), this.name = "", this.image = e, this.mipmaps = [], this.mapping = void 0 !== t ? t : new $.UVMapping, this.wrapS = void 0 !== r ? r : $.ClampToEdgeWrapping, this.wrapT = void 0 !== i ? i : $.ClampToEdgeWrapping, this.magFilter = void 0 !== o ? o : $.LinearFilter, this.minFilter = void 0 !== a ? a : $.LinearMipMapLinearFilter, this.anisotropy = void 0 !== h ? h : 1, this.format = void 0 !== n ? n : $.RGBAFormat, this.type = void 0 !== s ? s : $.UnsignedByteType, this.offset = new $.Vector2(0, 0), this.repeat = new $.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this._needsUpdate = !1, this.onUpdate = null
        },$.Texture.prototype = {
            constructor: $.Texture, get needsUpdate() {
                return this._needsUpdate
            }, set needsUpdate(e) {
                !0 === e && this.update(), this._needsUpdate = e
            }, clone: function (e) {
                return void 0 === e && (e = new $.Texture), e.image = this.image, e.mipmaps = this.mipmaps.slice(0), e.mapping = this.mapping, e.wrapS = this.wrapS, e.wrapT = this.wrapT, e.magFilter = this.magFilter, e.minFilter = this.minFilter, e.anisotropy = this.anisotropy, e.format = this.format, e.type = this.type, e.offset.copy(this.offset), e.repeat.copy(this.repeat), e.generateMipmaps = this.generateMipmaps, e.premultiplyAlpha = this.premultiplyAlpha, e.flipY = this.flipY, e.unpackAlignment = this.unpackAlignment, e
            }, update: function () {
                this.dispatchEvent({type: "update"})
            }, dispose: function () {
                this.dispatchEvent({type: "dispose"})
            }
        },$.EventDispatcher.prototype.apply($.Texture.prototype),$.TextureIdCount = 0,$.CompressedTexture = function (e, t, r, i, o, a, n, s, h, l, c) {
            $.Texture.call(this, null, a, n, s, h, l, i, o, c), this.image = {
                width: t,
                height: r
            }, this.mipmaps = e, this.generateMipmaps = !1
        },$.CompressedTexture.prototype = Object.create($.Texture.prototype),$.CompressedTexture.prototype.clone = function () {
            var e = new $.CompressedTexture;
            return $.Texture.prototype.clone.call(this, e), e
        },$.DataTexture = function (e, t, r, i, o, a, n, s, h, l, c) {
            $.Texture.call(this, null, a, n, s, h, l, i, o, c), this.image = {data: e, width: t, height: r}
        },$.DataTexture.prototype = Object.create($.Texture.prototype),$.DataTexture.prototype.clone = function () {
            var e = new $.DataTexture;
            return $.Texture.prototype.clone.call(this, e), e
        },$.ParticleSystem = function (e, t) {
            $.Object3D.call(this), this.geometry = void 0 !== e ? e : new $.Geometry, this.material = void 0 !== t ? t : new $.ParticleSystemMaterial({color: 16777215 * Math.random()}), this.sortParticles = !1, this.frustumCulled = !1
        },$.ParticleSystem.prototype = Object.create($.Object3D.prototype),$.ParticleSystem.prototype.clone = function (e) {
            return void 0 === e && (e = new $.ParticleSystem(this.geometry, this.material)), e.sortParticles = this.sortParticles, $.Object3D.prototype.clone.call(this, e), e
        },$.Line = function (e, t, r) {
            $.Object3D.call(this), this.geometry = void 0 !== e ? e : new $.Geometry, this.material = void 0 !== t ? t : new $.LineBasicMaterial({color: 16777215 * Math.random()}), this.type = void 0 !== r ? r : $.LineStrip
        },$.LineStrip = 0,$.LinePieces = 1,$.Line.prototype = Object.create($.Object3D.prototype),$.Line.prototype.clone = function (e) {
            return void 0 === e && (e = new $.Line(this.geometry, this.material, this.type)), $.Object3D.prototype.clone.call(this, e), e
        },$.Mesh = function (e, t) {
            $.Object3D.call(this), this.geometry = void 0 !== e ? e : new $.Geometry, this.material = void 0 !== t ? t : new $.MeshBasicMaterial({color: 16777215 * Math.random()}), this.updateMorphTargets()
        },$.Mesh.prototype = Object.create($.Object3D.prototype),$.Mesh.prototype.updateMorphTargets = function () {
            if (void 0 !== this.geometry.morphTargets && this.geometry.morphTargets.length > 0) {
                this.morphTargetBase = -1, this.morphTargetForcedOrder = [], this.morphTargetInfluences = [], this.morphTargetDictionary = {};
                for (var e = 0, t = this.geometry.morphTargets.length; e < t; e++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[e].name] = e
            }
        },$.Mesh.prototype.getMorphTargetIndexByName = function (e) {
            return void 0 !== this.morphTargetDictionary[e] ? this.morphTargetDictionary[e] : 0
        },$.Mesh.prototype.clone = function (e, t) {
            return void 0 === e && (e = new $.Mesh(this.geometry, this.material)), $.Object3D.prototype.clone.call(this, e, t), e
        },$.Bone = function (e) {
            $.Object3D.call(this), this.skin = e, this.skinMatrix = new $.Matrix4, this.accumulatedRotWeight = 0, this.accumulatedPosWeight = 0, this.accumulatedSclWeight = 0
        },$.Bone.prototype = Object.create($.Object3D.prototype),$.Bone.prototype.update = function (e, t) {
            this.matrixAutoUpdate && (t |= this.updateMatrix()), (t || this.matrixWorldNeedsUpdate) && (e ? this.skinMatrix.multiplyMatrices(e, this.matrix) : this.skinMatrix.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0, this.accumulatedRotWeight = 0, this.accumulatedPosWeight = 0, this.accumulatedSclWeight = 0);
            for (var r = 0, i = this.children.length; r < i; r++) this.children[r].update(this.skinMatrix, t)
        },$.Skeleton = function (e, t) {
            var r, i, o, a, n;
            if (this.useVertexTexture = void 0 === t || t, this.bones = [], this.boneMatrices = [], void 0 !== e) {
                for (var s = 0; s < e.length; ++s) o = (i = e[s]).pos, a = i.rotq, n = i.scl, (r = this.addBone()).name = i.name, r.position.set(o[0], o[1], o[2]), r.quaternion.set(a[0], a[1], a[2], a[3]), void 0 !== n ? r.scale.set(n[0], n[1], n[2]) : r.scale.set(1, 1, 1);
                for (s = 0; s < e.length; ++s) -1 !== (i = e[s]).parent && this.bones[i.parent].add(this.bones[s]);
                var h, l = this.bones.length;
                if (this.useVertexTexture) h = l > 256 ? 64 : l > 64 ? 32 : l > 16 ? 16 : 8, this.boneTextureWidth = h, this.boneTextureHeight = h, this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new $.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, $.RGBAFormat, $.FloatType), this.boneTexture.minFilter = $.NearestFilter, this.boneTexture.magFilter = $.NearestFilter, this.boneTexture.generateMipmaps = !1, this.boneTexture.flipY = !1; else this.boneMatrices = new Float32Array(16 * l)
            }
        },$.Skeleton.prototype = Object.create($.Mesh.prototype),$.Skeleton.prototype.addBone = function (e) {
            return void 0 === e && (e = new $.Bone(this)), this.bones.push(e), e
        },$.Skeleton.prototype.calculateInverses = function (e) {
            this.boneInverses = [];
            for (var t = 0, r = this.bones.length; t < r; ++t) {
                var i = new $.Matrix4;
                i.getInverse(this.bones[t].skinMatrix), this.boneInverses.push(i)
            }
        },$.SkinnedMesh = function (e, t, r) {
            $.Mesh.call(this, e, t), this.skeleton = new $.Skeleton(this.geometry && this.geometry.bones, r);
            for (var i = 0; i < this.skeleton.bones.length; ++i) {
                var o = this.skeleton.bones[i];
                void 0 === o.parent && this.add(o)
            }
            this.identityMatrix = new $.Matrix4, this.pose()
        },$.SkinnedMesh.prototype = Object.create($.Mesh.prototype),$.SkinnedMesh.prototype.updateMatrixWorld = (B = new $.Matrix4, function (e) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent ? this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix) : this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
            for (var t = 0, r = this.children.length; t < r; t++) {
                var i = this.children[t];
                i instanceof $.Bone ? i.update(this.identityMatrix, !1) : i.updateMatrixWorld(!0)
            }
            void 0 === this.skeleton.boneInverses && this.skeleton.calculateInverses();
            for (var o = 0, a = this.skeleton.bones.length; o < a; o++) B.multiplyMatrices(this.skeleton.bones[o].skinMatrix, this.skeleton.boneInverses[o]), B.flattenToArrayOffset(this.skeleton.boneMatrices, 16 * o);
            this.skeleton.useVertexTexture && (this.skeleton.boneTexture.needsUpdate = !0)
        }),$.SkinnedMesh.prototype.pose = function () {
            this.updateMatrixWorld(!0), this.normalizeSkinWeights()
        },$.SkinnedMesh.prototype.normalizeSkinWeights = function () {
            if (this.geometry instanceof $.Geometry) for (var e = 0; e < this.geometry.skinIndices.length; e++) {
                var t = this.geometry.skinWeights[e], r = 1 / t.lengthManhattan();
                r !== 1 / 0 ? t.multiplyScalar(r) : t.set(1)
            }
        },$.SkinnedMesh.prototype.clone = function (e) {
            return void 0 === e && (e = new $.SkinnedMesh(this.geometry, this.material, this.useVertexTexture)), $.Mesh.prototype.clone.call(this, e), e
        },$.MorphAnimMesh = function (e, t) {
            $.Mesh.call(this, e, t), this.duration = 1e3, this.mirroredLoop = !1, this.time = 0, this.lastKeyframe = 0, this.currentKeyframe = 0, this.direction = 1, this.directionBackwards = !1, this.setFrameRange(0, this.geometry.morphTargets.length - 1)
        },$.MorphAnimMesh.prototype = Object.create($.Mesh.prototype),$.MorphAnimMesh.prototype.setFrameRange = function (e, t) {
            this.startKeyframe = e, this.endKeyframe = t, this.length = this.endKeyframe - this.startKeyframe + 1
        },$.MorphAnimMesh.prototype.setDirectionForward = function () {
            this.direction = 1, this.directionBackwards = !1
        },$.MorphAnimMesh.prototype.setDirectionBackward = function () {
            this.direction = -1, this.directionBackwards = !0
        },$.MorphAnimMesh.prototype.parseAnimations = function () {
            var e = this.geometry;
            e.animations || (e.animations = {});
            for (var t, r = e.animations, i = /([a-z]+)(\d+)/, o = 0, a = e.morphTargets.length; o < a; o++) {
                var n = e.morphTargets[o].name.match(i);
                if (n && n.length > 1) {
                    var s = n[1];
                    n[2];
                    r[s] || (r[s] = {start: 1 / 0, end: -1 / 0});
                    var h = r[s];
                    o < h.start && (h.start = o), o > h.end && (h.end = o), t || (t = s)
                }
            }
            e.firstAnimation = t
        },$.MorphAnimMesh.prototype.setAnimationLabel = function (e, t, r) {
            this.geometry.animations || (this.geometry.animations = {}), this.geometry.animations[e] = {
                start: t,
                end: r
            }
        },$.MorphAnimMesh.prototype.playAnimation = function (e, t) {
            var r = this.geometry.animations[e];
            r ? (this.setFrameRange(r.start, r.end), this.duration = (r.end - r.start) / t * 1e3, this.time = 0) : console.warn("animation[" + e + "] undefined")
        },$.MorphAnimMesh.prototype.updateAnimation = function (e) {
            var t = this.duration / this.length;
            this.time += this.direction * e, this.mirroredLoop ? (this.time > this.duration || this.time < 0) && (this.direction *= -1, this.time > this.duration && (this.time = this.duration, this.directionBackwards = !0), this.time < 0 && (this.time = 0, this.directionBackwards = !1)) : (this.time = this.time % this.duration, this.time < 0 && (this.time += this.duration));
            var r = this.startKeyframe + $.Math.clamp(Math.floor(this.time / t), 0, this.length - 1);
            r !== this.currentKeyframe && (this.morphTargetInfluences[this.lastKeyframe] = 0, this.morphTargetInfluences[this.currentKeyframe] = 1, this.morphTargetInfluences[r] = 0, this.lastKeyframe = this.currentKeyframe, this.currentKeyframe = r);
            var i = this.time % t / t;
            this.directionBackwards && (i = 1 - i), this.morphTargetInfluences[this.currentKeyframe] = i, this.morphTargetInfluences[this.lastKeyframe] = 1 - i
        },$.MorphAnimMesh.prototype.clone = function (e) {
            return void 0 === e && (e = new $.MorphAnimMesh(this.geometry, this.material)), e.duration = this.duration, e.mirroredLoop = this.mirroredLoop, e.time = this.time, e.lastKeyframe = this.lastKeyframe, e.currentKeyframe = this.currentKeyframe, e.direction = this.direction, e.directionBackwards = this.directionBackwards, $.Mesh.prototype.clone.call(this, e), e
        },$.LOD = function () {
            $.Object3D.call(this), this.objects = []
        },$.LOD.prototype = Object.create($.Object3D.prototype),$.LOD.prototype.addLevel = function (e, t) {
            void 0 === t && (t = 0), t = Math.abs(t);
            for (var r = 0; r < this.objects.length && !(t < this.objects[r].distance); r++) ;
            this.objects.splice(r, 0, {distance: t, object: e}), this.add(e)
        },$.LOD.prototype.getObjectForDistance = function (e) {
            for (var t = 1, r = this.objects.length; t < r && !(e < this.objects[t].distance); t++) ;
            return this.objects[t - 1].object
        },$.LOD.prototype.update = function () {
            var e = new $.Vector3, t = new $.Vector3;
            return function (r) {
                if (this.objects.length > 1) {
                    e.setFromMatrixPosition(r.matrixWorld), t.setFromMatrixPosition(this.matrixWorld);
                    var i = e.distanceTo(t);
                    this.objects[0].object.visible = !0;
                    for (var o = 1, a = this.objects.length; o < a && i >= this.objects[o].distance; o++) this.objects[o - 1].object.visible = !1, this.objects[o].object.visible = !0;
                    for (; o < a; o++) this.objects[o].object.visible = !1
                }
            }
        }(),$.LOD.prototype.clone = function (e) {
            void 0 === e && (e = new $.LOD), $.Object3D.prototype.clone.call(this, e);
            for (var t = 0, r = this.objects.length; t < r; t++) {
                var i = this.objects[t].object.clone();
                i.visible = 0 === t, e.addLevel(i, this.objects[t].distance)
            }
            return e
        },$.Sprite = function () {
            var e = new $.Float32Attribute(3, 3);
            e.set([-.5, -.5, 0, .5, -.5, 0, .5, .5, 0]);
            var t = new $.BufferGeometry;
            return t.addAttribute("position", e), function (e) {
                $.Object3D.call(this), this.geometry = t, this.material = void 0 !== e ? e : new $.SpriteMaterial
            }
        }(),$.Sprite.prototype = Object.create($.Object3D.prototype),$.Sprite.prototype.updateMatrix = function () {
            this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
        },$.Sprite.prototype.clone = function (e) {
            return void 0 === e && (e = new $.Sprite(this.material)), $.Object3D.prototype.clone.call(this, e), e
        },$.Particle = $.Sprite,$.Scene = function () {
            $.Object3D.call(this), this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, this.matrixAutoUpdate = !1, this.__lights = [], this.__objectsAdded = [], this.__objectsRemoved = []
        },$.Scene.prototype = Object.create($.Object3D.prototype),$.Scene.prototype.__addObject = function (e) {
            if (e instanceof $.Light) -1 === this.__lights.indexOf(e) && this.__lights.push(e), e.target && void 0 === e.target.parent && this.add(e.target); else if (!(e instanceof $.Camera || e instanceof $.Bone)) {
                this.__objectsAdded.push(e);
                var t = this.__objectsRemoved.indexOf(e);
                -1 !== t && this.__objectsRemoved.splice(t, 1)
            }
            this.dispatchEvent({type: "objectAdded", object: e}), e.dispatchEvent({type: "addedToScene", scene: this});
            for (var r = 0; r < e.children.length; r++) this.__addObject(e.children[r])
        },$.Scene.prototype.__removeObject = function (e) {
            if (e instanceof $.Light) {
                if (-1 !== (r = this.__lights.indexOf(e)) && this.__lights.splice(r, 1), e.shadowCascadeArray) for (var t = 0; t < e.shadowCascadeArray.length; t++) this.__removeObject(e.shadowCascadeArray[t])
            } else if (!(e instanceof $.Camera)) {
                var r;
                this.__objectsRemoved.push(e), -1 !== (r = this.__objectsAdded.indexOf(e)) && this.__objectsAdded.splice(r, 1)
            }
            this.dispatchEvent({type: "objectRemoved", object: e}), e.dispatchEvent({
                type: "removedFromScene",
                scene: this
            });
            for (var i = 0; i < e.children.length; i++) this.__removeObject(e.children[i])
        },$.Scene.prototype.clone = function (e) {
            return void 0 === e && (e = new $.Scene), $.Object3D.prototype.clone.call(this, e), null !== this.fog && (e.fog = this.fog.clone()), null !== this.overrideMaterial && (e.overrideMaterial = this.overrideMaterial.clone()), e.autoUpdate = this.autoUpdate, e.matrixAutoUpdate = this.matrixAutoUpdate, e
        },$.Fog = function (e, t, r) {
            this.name = "", this.color = new $.Color(e), this.near = void 0 !== t ? t : 1, this.far = void 0 !== r ? r : 1e3
        },$.Fog.prototype.clone = function () {
            return new $.Fog(this.color.getHex(), this.near, this.far)
        },$.FogExp2 = function (e, t) {
            this.name = "", this.color = new $.Color(e), this.density = void 0 !== t ? t : 25e-5
        },$.FogExp2.prototype.clone = function () {
            return new $.FogExp2(this.color.getHex(), this.density)
        },$.CanvasRenderer = function (e) {
            var t = $.Math.smoothstep;
            e = e || {};
            var r, i, o, a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b = this, M = new $.Projector,
                S = void 0 !== e.canvas ? e.canvas : document.createElement("canvas"), A = S.width, T = S.height,
                E = Math.floor(A / 2), C = Math.floor(T / 2), P = S.getContext("2d", {alpha: !0 === e.alpha}),
                L = new $.Color(0), D = 0, R = 1, F = 0, U = null, V = null, z = null, B = null, N = null, O = null,
                k = 0, I = (new $.RenderableVertex, new $.RenderableVertex, new $.Color),
                G = (new $.Color, new $.Color, new $.Color, new $.Color, new $.Color), W = new $.Color, H = new $.Color,
                j = {}, X = new $.Box2, q = new $.Box2, Y = new $.Box2, K = new $.Color, Z = new $.Color,
                Q = new $.Color, J = new $.Vector3, ee = new $.Vector3, te = new $.Vector3, re = new $.Matrix3;

            function ie(e, t, r) {
                ue(r.opacity), fe(r.blending);
                var i = t.scale.x * E, o = t.scale.y * C, a = .5 * Math.sqrt(i * i + o * o);
                if (Y.min.set(e.x - a, e.y - a), Y.max.set(e.x + a, e.y + a), r instanceof $.SpriteMaterial || r instanceof $.ParticleSystemMaterial) {
                    var n = r.map;
                    if (null !== n) {
                        !1 === n.hasEventListener("update", he) && (void 0 !== n.image && n.image.width > 0 && le(n), n.addEventListener("update", he));
                        var s = j[n.id];
                        ve(void 0 !== s ? s : "rgba( 0, 0, 0, 1 )");
                        var h = n.image, l = h.width * n.offset.x, c = h.height * n.offset.y, p = h.width * n.repeat.x,
                            u = h.height * n.repeat.y, f = i / p, d = o / u;
                        P.save(), P.translate(e.x, e.y), 0 !== r.rotation && P.rotate(r.rotation), P.translate(-i / 2, -o / 2), P.scale(f, d), P.translate(-l, -c), P.fillRect(l, c, p, u), P.restore()
                    } else ve(r.color.getStyle()), P.save(), P.translate(e.x, e.y), 0 !== r.rotation && P.rotate(r.rotation), P.scale(i, -o), P.fillRect(-.5, -.5, 1, 1), P.restore()
                } else r instanceof $.SpriteCanvasMaterial && (ge(r.color.getStyle()), ve(r.color.getStyle()), P.save(), P.translate(e.x, e.y), 0 !== r.rotation && P.rotate(r.rotation), P.scale(i, o), r.program(P), P.restore())
            }

            function oe(e, t, r, i) {
                if (ue(i.opacity), fe(i.blending), P.beginPath(), P.moveTo(e.positionScreen.x, e.positionScreen.y), P.lineTo(t.positionScreen.x, t.positionScreen.y), i instanceof $.LineBasicMaterial) {
                    if (de(i.linewidth), me(i.linecap), ye(i.linejoin), i.vertexColors !== $.VertexColors) ge(i.color.getStyle()); else {
                        var o = r.vertexColors[0].getStyle(), a = r.vertexColors[1].getStyle();
                        if (o === a) ge(o); else {
                            try {
                                var n = P.createLinearGradient(e.positionScreen.x, e.positionScreen.y, t.positionScreen.x, t.positionScreen.y);
                                n.addColorStop(0, o), n.addColorStop(1, a)
                            } catch (e) {
                                n = o
                            }
                            ge(n)
                        }
                    }
                    P.stroke(), Y.expandByScalar(2 * i.linewidth)
                } else i instanceof $.LineDashedMaterial && (de(i.linewidth), me(i.linecap), ye(i.linejoin), ge(i.color.getStyle()), xe(i.dashSize, i.gapSize), P.stroke(), Y.expandByScalar(2 * i.linewidth), xe(null, null))
            }

            function ae(e, r, i, n, s, h, M, S) {
                var A, T, E, C, L, D;
                b.info.render.vertices += 3, b.info.render.faces++, ue(S.opacity), fe(S.blending), l = e.positionScreen.x, c = e.positionScreen.y, p = r.positionScreen.x, u = r.positionScreen.y, f = i.positionScreen.x, d = i.positionScreen.y, A = l, T = c, E = p, C = u, L = f, D = d, P.beginPath(), P.moveTo(A, T), P.lineTo(E, C), P.lineTo(L, D), P.closePath(), (S instanceof $.MeshLambertMaterial || S instanceof $.MeshPhongMaterial) && null === S.map ? (G.copy(S.color), W.copy(S.emissive), S.vertexColors === $.FaceColors && G.multiply(M.color), I.copy(K), ee.copy(e.positionWorld).add(r.positionWorld).add(i.positionWorld).divideScalar(3), function (e, t, r) {
                    for (var i = 0, a = o.length; i < a; i++) {
                        var n = o[i];
                        if (H.copy(n.color), n instanceof $.DirectionalLight) {
                            var s = J.setFromMatrixPosition(n.matrixWorld).normalize();
                            if ((h = t.dot(s)) <= 0) continue;
                            h *= n.intensity, r.add(H.multiplyScalar(h))
                        } else if (n instanceof $.PointLight) {
                            var h;
                            s = J.setFromMatrixPosition(n.matrixWorld);
                            if ((h = t.dot(J.subVectors(s, e).normalize())) <= 0) continue;
                            if (0 == (h *= 0 == n.distance ? 1 : 1 - Math.min(e.distanceTo(s) / n.distance, 1))) continue;
                            h *= n.intensity, r.add(H.multiplyScalar(h))
                        }
                    }
                }(ee, M.normalModel, I), I.multiply(G).add(W), !0 === S.wireframe ? ne(I, S.wireframeLinewidth, S.wireframeLinecap, S.wireframeLinejoin) : se(I)) : S instanceof $.MeshBasicMaterial || S instanceof $.MeshLambertMaterial || S instanceof $.MeshPhongMaterial ? null !== S.map ? S.map.mapping instanceof $.UVMapping && (m = M.uvs, ce(l, c, p, u, f, d, m[n].x, m[n].y, m[s].x, m[s].y, m[h].x, m[h].y, S.map)) : null !== S.envMap ? S.envMap.mapping instanceof $.SphericalReflectionMapping ? (te.copy(M.vertexNormalsModel[n]).applyMatrix3(re), y = .5 * te.x + .5, g = .5 * te.y + .5, te.copy(M.vertexNormalsModel[s]).applyMatrix3(re), v = .5 * te.x + .5, x = .5 * te.y + .5, te.copy(M.vertexNormalsModel[h]).applyMatrix3(re), w = .5 * te.x + .5, _ = .5 * te.y + .5, ce(l, c, p, u, f, d, y, g, v, x, w, _, S.envMap)) : S.envMap.mapping instanceof $.SphericalRefractionMapping && (te.copy(M.vertexNormalsModel[n]).applyMatrix3(re), y = -.5 * te.x + .5, g = -.5 * te.y + .5, te.copy(M.vertexNormalsModel[s]).applyMatrix3(re), v = -.5 * te.x + .5, x = -.5 * te.y + .5, te.copy(M.vertexNormalsModel[h]).applyMatrix3(re), w = -.5 * te.x + .5, _ = -.5 * te.y + .5, ce(l, c, p, u, f, d, y, g, v, x, w, _, S.envMap)) : (I.copy(S.color), S.vertexColors === $.FaceColors && I.multiply(M.color), !0 === S.wireframe ? ne(I, S.wireframeLinewidth, S.wireframeLinecap, S.wireframeLinejoin) : se(I)) : S instanceof $.MeshDepthMaterial ? (I.r = I.g = I.b = 1 - t(e.positionScreen.z * e.positionScreen.w, a.near, a.far), !0 === S.wireframe ? ne(I, S.wireframeLinewidth, S.wireframeLinecap, S.wireframeLinejoin) : se(I)) : S instanceof $.MeshNormalMaterial ? (te.copy(M.normalModel).applyMatrix3(re), I.setRGB(te.x, te.y, te.z).multiplyScalar(.5).addScalar(.5), !0 === S.wireframe ? ne(I, S.wireframeLinewidth, S.wireframeLinecap, S.wireframeLinejoin) : se(I)) : (I.setRGB(1, 1, 1), !0 === S.wireframe ? ne(I, S.wireframeLinewidth, S.wireframeLinecap, S.wireframeLinejoin) : se(I))
            }

            function ne(e, t, r, i) {
                de(t), me(r), ye(i), ge(e.getStyle()), P.stroke(), Y.expandByScalar(2 * t)
            }

            function se(e) {
                ve(e.getStyle()), P.fill()
            }

            function he(e) {
                le(e.target)
            }

            function le(e) {
                var t = e.wrapS === $.RepeatWrapping, r = e.wrapT === $.RepeatWrapping, i = e.image,
                    o = document.createElement("canvas");
                o.width = i.width, o.height = i.height;
                var a = o.getContext("2d");
                a.setTransform(1, 0, 0, -1, 0, i.height), a.drawImage(i, 0, 0), j[e.id] = P.createPattern(o, !0 === t && !0 === r ? "repeat" : !0 === t && !1 === r ? "repeat-x" : !1 === t && !0 === r ? "repeat-y" : "no-repeat")
            }

            function ce(e, t, r, i, o, a, n, s, h, l, c, p, u) {
                if (!(u instanceof $.DataTexture)) {
                    !1 === u.hasEventListener("update", he) && (void 0 !== u.image && u.image.width > 0 && le(u), u.addEventListener("update", he));
                    var f = j[u.id];
                    if (void 0 === f) return ve("rgba(0,0,0,1)"), void P.fill();
                    ve(f);
                    var d, m, y, g, v, x, w, _, b = u.offset.x / u.repeat.x, M = u.offset.y / u.repeat.y,
                        S = u.image.width * u.repeat.x, A = u.image.height * u.repeat.y;
                    h = (h + b) * S, l = (l + M) * A, c = (c + b) * S, p = (p + M) * A, r -= e, i -= t, o -= e, a -= t, 0 !== (w = (h -= n = (n + b) * S) * (p -= s = (s + M) * A) - (c -= n) * (l -= s)) && (v = e - (d = (p * r - l * o) * (_ = 1 / w)) * n - (y = (h * o - c * r) * _) * s, x = t - (m = (p * i - l * a) * _) * n - (g = (h * a - c * i) * _) * s, P.save(), P.transform(d, m, y, g, v, x), P.fill(), P.restore())
                }
            }

            function pe(e, t, r) {
                var i, o = t.x - e.x, a = t.y - e.y, n = o * o + a * a;
                0 !== n && (o *= i = r / Math.sqrt(n), a *= i, t.x += o, t.y += a, e.x -= o, e.y -= a)
            }

            function ue(e) {
                R !== e && (P.globalAlpha = e, R = e)
            }

            function fe(e) {
                F !== e && (e === $.NormalBlending ? P.globalCompositeOperation = "source-over" : e === $.AdditiveBlending ? P.globalCompositeOperation = "lighter" : e === $.SubtractiveBlending && (P.globalCompositeOperation = "darker"), F = e)
            }

            function de(e) {
                z !== e && (P.lineWidth = e, z = e)
            }

            function me(e) {
                B !== e && (P.lineCap = e, B = e)
            }

            function ye(e) {
                N !== e && (P.lineJoin = e, N = e)
            }

            function ge(e) {
                U !== e && (P.strokeStyle = e, U = e)
            }

            function ve(e) {
                V !== e && (P.fillStyle = e, V = e)
            }

            function xe(e, t) {
                O === e && k === t || (P.setLineDash([e, t]), O = e, k = t)
            }

            void 0 === P.setLineDash && (P.setLineDash = function () {
            }), this.domElement = S, this.devicePixelRatio = void 0 !== e.devicePixelRatio ? e.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1, this.autoClear = !0, this.sortObjects = !0, this.sortElements = !0, this.info = {
                render: {
                    vertices: 0,
                    faces: 0
                }
            }, this.supportsVertexTextures = function () {
            }, this.setFaceCulling = function () {
            }, this.setSize = function (e, t, r) {
                A = e * this.devicePixelRatio, T = t * this.devicePixelRatio, S.width = A, S.height = T, E = Math.floor(A / 2), C = Math.floor(T / 2), !1 !== r && (S.style.width = e + "px", S.style.height = t + "px"), X.min.set(-E, -C), X.max.set(E, C), q.min.set(-E, -C), q.max.set(E, C), R = 1, F = 0, U = null, V = null, z = null, B = null, N = null, this.setViewport(0, 0, e, t)
            }, this.setViewport = function (e, t, r, i) {
                var o = e * this.devicePixelRatio, a = t * this.devicePixelRatio, n = r * this.devicePixelRatio,
                    s = i * this.devicePixelRatio;
                P.setTransform(n / A, 0, 0, -s / T, o, T - a), P.translate(E, C)
            }, this.setScissor = function () {
            }, this.enableScissorTest = function () {
            }, this.setClearColor = function (e, t) {
                L.set(e), D = void 0 !== t ? t : 1, q.min.set(-E, -C), q.max.set(E, C)
            }, this.setClearColorHex = function (e, t) {
                console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(e, t)
            }, this.getMaxAnisotropy = function () {
                return 0
            }, this.clear = function () {
                !1 === q.empty() && (q.intersect(X), q.expandByScalar(2), D < 1 && P.clearRect(0 | q.min.x, 0 | q.min.y, q.max.x - q.min.x | 0, q.max.y - q.min.y | 0), D > 0 && (fe($.NormalBlending), ue(1), ve("rgba(" + Math.floor(255 * L.r) + "," + Math.floor(255 * L.g) + "," + Math.floor(255 * L.b) + "," + D + ")"), P.fillRect(0 | q.min.x, 0 | q.min.y, q.max.x - q.min.x | 0, q.max.y - q.min.y | 0)), q.makeEmpty())
            }, this.clearColor = function () {
            }, this.clearDepth = function () {
            }, this.clearStencil = function () {
            }, this.render = function (e, t) {
                if (t instanceof $.Camera != !1) {
                    !0 === this.autoClear && this.clear(), b.info.render.vertices = 0, b.info.render.faces = 0, r = M.projectScene(e, t, this.sortObjects, this.sortElements), i = r.elements, o = r.lights, a = t, re.getNormalMatrix(t.matrixWorldInverse), function () {
                        K.setRGB(0, 0, 0), Z.setRGB(0, 0, 0), Q.setRGB(0, 0, 0);
                        for (var e = 0, t = o.length; e < t; e++) {
                            var r = o[e], i = r.color;
                            r instanceof $.AmbientLight ? K.add(i) : r instanceof $.DirectionalLight ? Z.add(i) : r instanceof $.PointLight && Q.add(i)
                        }
                    }();
                    for (var l = 0, c = i.length; l < c; l++) {
                        var p = i[l], u = p.material;
                        if (void 0 !== u && 0 !== u.opacity) {
                            if (Y.makeEmpty(), p instanceof $.RenderableSprite) (n = p).x *= E, n.y *= C, ie(n, p, u); else if (p instanceof $.RenderableLine) n = p.v1, s = p.v2, n.positionScreen.x *= E, n.positionScreen.y *= C, s.positionScreen.x *= E, s.positionScreen.y *= C, Y.setFromPoints([n.positionScreen, s.positionScreen]), !0 === X.isIntersectionBox(Y) && oe(n, s, p, u); else if (p instanceof $.RenderableFace) {
                                if (n = p.v1, s = p.v2, h = p.v3, n.positionScreen.z < -1 || n.positionScreen.z > 1) continue;
                                if (s.positionScreen.z < -1 || s.positionScreen.z > 1) continue;
                                if (h.positionScreen.z < -1 || h.positionScreen.z > 1) continue;
                                n.positionScreen.x *= E, n.positionScreen.y *= C, s.positionScreen.x *= E, s.positionScreen.y *= C, h.positionScreen.x *= E, h.positionScreen.y *= C, u.overdraw > 0 && (pe(n.positionScreen, s.positionScreen, u.overdraw), pe(s.positionScreen, h.positionScreen, u.overdraw), pe(h.positionScreen, n.positionScreen, u.overdraw)), Y.setFromPoints([n.positionScreen, s.positionScreen, h.positionScreen]), !0 === X.isIntersectionBox(Y) && ae(n, s, h, 0, 1, 2, p, u)
                            }
                            q.union(Y)
                        }
                    }
                } else console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")
            }
        },$.ShaderChunk = {
            fog_pars_fragment: ["#ifdef USE_FOG", " uniform vec3 fogColor;", " #ifdef FOG_EXP2", "   uniform float fogDensity;", " #else", "   uniform float fogNear;", "   uniform float fogFar;", " #endif", "#endif"].join("\n"),
            fog_fragment: ["#ifdef USE_FOG", " #ifdef USE_LOGDEPTHBUF_EXT", "   float depth = gl_FragDepthEXT / gl_FragCoord.w;", " #else", "   float depth = gl_FragCoord.z / gl_FragCoord.w;", " #endif", " #ifdef FOG_EXP2", "   const float LOG2 = 1.442695;", "   float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "   fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", " #else", "   float fogFactor = smoothstep( fogNear, fogFar, depth );", " #endif", " gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "#endif"].join("\n"),
            envmap_pars_fragment: ["#ifdef USE_ENVMAP", " uniform float reflectivity;", " uniform samplerCube envMap;", " uniform float flipEnvMap;", " uniform int combine;", " #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )", "   uniform bool useRefract;", "   uniform float refractionRatio;", " #else", "   varying vec3 vReflect;", " #endif", "#endif"].join("\n"),
            envmap_fragment: ["#ifdef USE_ENVMAP", " vec3 reflectVec;", " #if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )", "   vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );", "   vec3 worldNormal = normalize( vec3( vec4( normal, 0.0 ) * viewMatrix ) );", "   if ( useRefract ) {", "     reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );", "   } else { ", "     reflectVec = reflect( cameraToVertex, worldNormal );", "   }", " #else", "   reflectVec = vReflect;", " #endif", " #ifdef DOUBLE_SIDED", "   float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );", "   vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );", " #else", "   vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );", " #endif", " #ifdef GAMMA_INPUT", "   cubeColor.xyz *= cubeColor.xyz;", " #endif", " if ( combine == 1 ) {", "   gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );", " } else if ( combine == 2 ) {", "   gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;", " } else {", "   gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );", " }", "#endif"].join("\n"),
            envmap_pars_vertex: ["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )", " varying vec3 vReflect;", " uniform float refractionRatio;", " uniform bool useRefract;", "#endif"].join("\n"),
            worldpos_vertex: ["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )", " #ifdef USE_SKINNING", "   vec4 worldPosition = modelMatrix * skinned;", " #endif", " #if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )", "   vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );", " #endif", " #if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )", "   vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", " #endif", "#endif"].join("\n"),
            envmap_vertex: ["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )", " vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;", " worldNormal = normalize( worldNormal );", " vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );", " if ( useRefract ) {", "   vReflect = refract( cameraToVertex, worldNormal, refractionRatio );", " } else {", "   vReflect = reflect( cameraToVertex, worldNormal );", " }", "#endif"].join("\n"),
            map_particle_pars_fragment: ["#ifdef USE_MAP", " uniform sampler2D map;", "#endif"].join("\n"),
            map_particle_fragment: ["#ifdef USE_MAP", " gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );", "#endif"].join("\n"),
            map_pars_vertex: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", " varying vec2 vUv;", " uniform vec4 offsetRepeat;", "#endif"].join("\n"),
            map_pars_fragment: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", " varying vec2 vUv;", "#endif", "#ifdef USE_MAP", " uniform sampler2D map;", "#endif"].join("\n"),
            map_vertex: ["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )", " vUv = uv * offsetRepeat.zw + offsetRepeat.xy;", "#endif"].join("\n"),
            map_fragment: ["#ifdef USE_MAP", " vec4 texelColor = texture2D( map, vUv );", " #ifdef GAMMA_INPUT", "   texelColor.xyz *= texelColor.xyz;", " #endif", " gl_FragColor = gl_FragColor * texelColor;", "#endif"].join("\n"),
            lightmap_pars_fragment: ["#ifdef USE_LIGHTMAP", " varying vec2 vUv2;", " uniform sampler2D lightMap;", "#endif"].join("\n"),
            lightmap_pars_vertex: ["#ifdef USE_LIGHTMAP", " varying vec2 vUv2;", "#endif"].join("\n"),
            lightmap_fragment: ["#ifdef USE_LIGHTMAP", " gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );", "#endif"].join("\n"),
            lightmap_vertex: ["#ifdef USE_LIGHTMAP", " vUv2 = uv2;", "#endif"].join("\n"),
            bumpmap_pars_fragment: ["#ifdef USE_BUMPMAP", " uniform sampler2D bumpMap;", " uniform float bumpScale;", " vec2 dHdxy_fwd() {", "   vec2 dSTdx = dFdx( vUv );", "   vec2 dSTdy = dFdy( vUv );", "   float Hll = bumpScale * texture2D( bumpMap, vUv ).x;", "   float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;", "   float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;", "   return vec2( dBx, dBy );", " }", " vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {", "   vec3 vSigmaX = dFdx( surf_pos );", "   vec3 vSigmaY = dFdy( surf_pos );", "   vec3 vN = surf_norm;", "   vec3 R1 = cross( vSigmaY, vN );", "   vec3 R2 = cross( vN, vSigmaX );", "   float fDet = dot( vSigmaX, R1 );", "   vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );", "   return normalize( abs( fDet ) * surf_norm - vGrad );", " }", "#endif"].join("\n"),
            normalmap_pars_fragment: ["#ifdef USE_NORMALMAP", " uniform sampler2D normalMap;", " uniform vec2 normalScale;", " vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {", "   vec3 q0 = dFdx( eye_pos.xyz );", "   vec3 q1 = dFdy( eye_pos.xyz );", "   vec2 st0 = dFdx( vUv.st );", "   vec2 st1 = dFdy( vUv.st );", "   vec3 S = normalize(  q0 * st1.t - q1 * st0.t );", "   vec3 T = normalize( -q0 * st1.s + q1 * st0.s );", "   vec3 N = normalize( surf_norm );", "   vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;", "   mapN.xy = normalScale * mapN.xy;", "   mat3 tsn = mat3( S, T, N );", "   return normalize( tsn * mapN );", " }", "#endif"].join("\n"),
            specularmap_pars_fragment: ["#ifdef USE_SPECULARMAP", " uniform sampler2D specularMap;", "#endif"].join("\n"),
            specularmap_fragment: ["float specularStrength;", "#ifdef USE_SPECULARMAP", " vec4 texelSpecular = texture2D( specularMap, vUv );", " specularStrength = texelSpecular.r;", "#else", " specularStrength = 1.0;", "#endif"].join("\n"),
            lights_lambert_pars_vertex: ["uniform vec3 ambient;", "uniform vec3 diffuse;", "uniform vec3 emissive;", "uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", " uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", " uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", " uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", " uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", " uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", " uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", " uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", " uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", " uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", " uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", "#endif", "#ifdef WRAP_AROUND", " uniform vec3 wrapRGB;", "#endif"].join("\n"),
            lights_lambert_vertex: ["vLightFront = vec3( 0.0 );", "#ifdef DOUBLE_SIDED", " vLightBack = vec3( 0.0 );", "#endif", "transformedNormal = normalize( transformedNormal );", "#if MAX_DIR_LIGHTS > 0", "for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {", " vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", " vec3 dirVector = normalize( lDirection.xyz );", " float dotProduct = dot( transformedNormal, dirVector );", " vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );", " #ifdef DOUBLE_SIDED", "   vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "   #ifdef WRAP_AROUND", "     vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "   #endif", " #endif", " #ifdef WRAP_AROUND", "   vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "   directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );", "   #ifdef DOUBLE_SIDED", "     directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );", "   #endif", " #endif", " vLightFront += directionalLightColor[ i ] * directionalLightWeighting;", " #ifdef DOUBLE_SIDED", "   vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;", " #endif", "}", "#endif", "#if MAX_POINT_LIGHTS > 0", " for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "   vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "   vec3 lVector = lPosition.xyz - mvPosition.xyz;", "   float lDistance = 1.0;", "   if ( pointLightDistance[ i ] > 0.0 )", "     lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );", "   lVector = normalize( lVector );", "   float dotProduct = dot( transformedNormal, lVector );", "   vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );", "   #ifdef DOUBLE_SIDED", "     vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "     #ifdef WRAP_AROUND", "       vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "     #endif", "   #endif", "   #ifdef WRAP_AROUND", "     vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "     pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );", "     #ifdef DOUBLE_SIDED", "       pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );", "     #endif", "   #endif", "   vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;", "   #ifdef DOUBLE_SIDED", "     vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;", "   #endif", " }", "#endif", "#if MAX_SPOT_LIGHTS > 0", " for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "   vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "   vec3 lVector = lPosition.xyz - mvPosition.xyz;", "   float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );", "   if ( spotEffect > spotLightAngleCos[ i ] ) {", "     spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "     float lDistance = 1.0;", "     if ( spotLightDistance[ i ] > 0.0 )", "       lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );", "     lVector = normalize( lVector );", "     float dotProduct = dot( transformedNormal, lVector );", "     vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );", "     #ifdef DOUBLE_SIDED", "       vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );", "       #ifdef WRAP_AROUND", "         vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );", "       #endif", "     #endif", "     #ifdef WRAP_AROUND", "       vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );", "       spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );", "       #ifdef DOUBLE_SIDED", "         spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );", "       #endif", "     #endif", "     vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;", "     #ifdef DOUBLE_SIDED", "       vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;", "     #endif", "   }", " }", "#endif", "#if MAX_HEMI_LIGHTS > 0", " for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "   vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "   vec3 lVector = normalize( lDirection.xyz );", "   float dotProduct = dot( transformedNormal, lVector );", "   float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "   float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;", "   vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "   #ifdef DOUBLE_SIDED", "     vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );", "   #endif", " }", "#endif", "vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;", "#ifdef DOUBLE_SIDED", " vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;", "#endif"].join("\n"),
            lights_phong_pars_vertex: ["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )", " varying vec3 vWorldPosition;", "#endif"].join("\n"),
            lights_phong_vertex: ["#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )", " vWorldPosition = worldPosition.xyz;", "#endif"].join("\n"),
            lights_phong_pars_fragment: ["uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", " uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", " uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", " uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", " uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", " uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", " uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", " uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", " uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", " uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", " uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )", " varying vec3 vWorldPosition;", "#endif", "#ifdef WRAP_AROUND", " uniform vec3 wrapRGB;", "#endif", "varying vec3 vViewPosition;", "varying vec3 vNormal;"].join("\n"),
            lights_phong_fragment: ["vec3 normal = normalize( vNormal );", "vec3 viewPosition = normalize( vViewPosition );", "#ifdef DOUBLE_SIDED", " normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );", "#endif", "#ifdef USE_NORMALMAP", " normal = perturbNormal2Arb( -vViewPosition, normal );", "#elif defined( USE_BUMPMAP )", " normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );", "#endif", "#if MAX_POINT_LIGHTS > 0", " vec3 pointDiffuse  = vec3( 0.0 );", " vec3 pointSpecular = vec3( 0.0 );", " for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "   vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "   vec3 lVector = lPosition.xyz + vViewPosition.xyz;", "   float lDistance = 1.0;", "   if ( pointLightDistance[ i ] > 0.0 )", "     lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );", "   lVector = normalize( lVector );", "   float dotProduct = dot( normal, lVector );", "   #ifdef WRAP_AROUND", "     float pointDiffuseWeightFull = max( dotProduct, 0.0 );", "     float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "     vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );", "   #else", "     float pointDiffuseWeight = max( dotProduct, 0.0 );", "   #endif", "   pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;", "   vec3 pointHalfVector = normalize( lVector + viewPosition );", "   float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );", "   float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );", "   float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "   vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );", "   pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;", " }", "#endif", "#if MAX_SPOT_LIGHTS > 0", " vec3 spotDiffuse  = vec3( 0.0 );", " vec3 spotSpecular = vec3( 0.0 );", " for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "   vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "   vec3 lVector = lPosition.xyz + vViewPosition.xyz;", "   float lDistance = 1.0;", "   if ( spotLightDistance[ i ] > 0.0 )", "     lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );", "   lVector = normalize( lVector );", "   float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );", "   if ( spotEffect > spotLightAngleCos[ i ] ) {", "     spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "     float dotProduct = dot( normal, lVector );", "     #ifdef WRAP_AROUND", "       float spotDiffuseWeightFull = max( dotProduct, 0.0 );", "       float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "       vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );", "     #else", "       float spotDiffuseWeight = max( dotProduct, 0.0 );", "     #endif", "     spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;", "     vec3 spotHalfVector = normalize( lVector + viewPosition );", "     float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );", "     float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );", "     float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "     vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );", "     spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;", "   }", " }", "#endif", "#if MAX_DIR_LIGHTS > 0", " vec3 dirDiffuse  = vec3( 0.0 );", " vec3 dirSpecular = vec3( 0.0 );", " for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {", "   vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "   vec3 dirVector = normalize( lDirection.xyz );", "   float dotProduct = dot( normal, dirVector );", "   #ifdef WRAP_AROUND", "     float dirDiffuseWeightFull = max( dotProduct, 0.0 );", "     float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );", "     vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );", "   #else", "     float dirDiffuseWeight = max( dotProduct, 0.0 );", "   #endif", "   dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;", "   vec3 dirHalfVector = normalize( dirVector + viewPosition );", "   float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );", "   float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );", "   float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "   vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );", "   dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;", " }", "#endif", "#if MAX_HEMI_LIGHTS > 0", " vec3 hemiDiffuse  = vec3( 0.0 );", " vec3 hemiSpecular = vec3( 0.0 );", " for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "   vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "   vec3 lVector = normalize( lDirection.xyz );", "   float dotProduct = dot( normal, lVector );", "   float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "   vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "   hemiDiffuse += diffuse * hemiColor;", "   vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );", "   float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;", "   float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );", "   vec3 lVectorGround = -lVector;", "   vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );", "   float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;", "   float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );", "   float dotProductGround = dot( normal, lVectorGround );", "   float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "   vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );", "   vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );", "   hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );", " }", "#endif", "vec3 totalDiffuse = vec3( 0.0 );", "vec3 totalSpecular = vec3( 0.0 );", "#if MAX_DIR_LIGHTS > 0", " totalDiffuse += dirDiffuse;", " totalSpecular += dirSpecular;", "#endif", "#if MAX_HEMI_LIGHTS > 0", " totalDiffuse += hemiDiffuse;", " totalSpecular += hemiSpecular;", "#endif", "#if MAX_POINT_LIGHTS > 0", " totalDiffuse += pointDiffuse;", " totalSpecular += pointSpecular;", "#endif", "#if MAX_SPOT_LIGHTS > 0", " totalDiffuse += spotDiffuse;", " totalSpecular += spotSpecular;", "#endif", "#ifdef METAL", " gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );", "#else", " gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;", "#endif"].join("\n"),
            color_pars_fragment: ["#ifdef USE_COLOR", " varying vec3 vColor;", "#endif"].join("\n"),
            color_fragment: ["#ifdef USE_COLOR", " gl_FragColor = gl_FragColor * vec4( vColor, 1.0 );", "#endif"].join("\n"),
            color_pars_vertex: ["#ifdef USE_COLOR", " varying vec3 vColor;", "#endif"].join("\n"),
            color_vertex: ["#ifdef USE_COLOR", " #ifdef GAMMA_INPUT", "   vColor = color * color;", " #else", "   vColor = color;", " #endif", "#endif"].join("\n"),
            skinning_pars_vertex: ["#ifdef USE_SKINNING", " #ifdef BONE_TEXTURE", "   uniform sampler2D boneTexture;", "   uniform int boneTextureWidth;", "   uniform int boneTextureHeight;", "   mat4 getBoneMatrix( const in float i ) {", "     float j = i * 4.0;", "     float x = mod( j, float( boneTextureWidth ) );", "     float y = floor( j / float( boneTextureWidth ) );", "     float dx = 1.0 / float( boneTextureWidth );", "     float dy = 1.0 / float( boneTextureHeight );", "     y = dy * ( y + 0.5 );", "     vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );", "     vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );", "     vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );", "     vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );", "     mat4 bone = mat4( v1, v2, v3, v4 );", "     return bone;", "   }", " #else", "   uniform mat4 boneGlobalMatrices[ MAX_BONES ];", "   mat4 getBoneMatrix( const in float i ) {", "     mat4 bone = boneGlobalMatrices[ int(i) ];", "     return bone;", "   }", " #endif", "#endif"].join("\n"),
            skinbase_vertex: ["#ifdef USE_SKINNING", " mat4 boneMatX = getBoneMatrix( skinIndex.x );", " mat4 boneMatY = getBoneMatrix( skinIndex.y );", " mat4 boneMatZ = getBoneMatrix( skinIndex.z );", " mat4 boneMatW = getBoneMatrix( skinIndex.w );", "#endif"].join("\n"),
            skinning_vertex: ["#ifdef USE_SKINNING", " #ifdef USE_MORPHTARGETS", " vec4 skinVertex = vec4( morphed, 1.0 );", " #else", " vec4 skinVertex = vec4( position, 1.0 );", " #endif", " vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", " skinned      += boneMatY * skinVertex * skinWeight.y;", " skinned      += boneMatZ * skinVertex * skinWeight.z;", " skinned      += boneMatW * skinVertex * skinWeight.w;", "#endif"].join("\n"),
            morphtarget_pars_vertex: ["#ifdef USE_MORPHTARGETS", " #ifndef USE_MORPHNORMALS", " uniform float morphTargetInfluences[ 8 ];", " #else", " uniform float morphTargetInfluences[ 4 ];", " #endif", "#endif"].join("\n"),
            morphtarget_vertex: ["#ifdef USE_MORPHTARGETS", " vec3 morphed = vec3( 0.0 );", " morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];", " morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];", " morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];", " morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];", " #ifndef USE_MORPHNORMALS", " morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];", " morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];", " morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];", " morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];", " #endif", " morphed += position;", "#endif"].join("\n"),
            default_vertex: ["vec4 mvPosition;", "#ifdef USE_SKINNING", " mvPosition = modelViewMatrix * skinned;", "#endif", "#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )", " mvPosition = modelViewMatrix * vec4( morphed, 1.0 );", "#endif", "#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )", " mvPosition = modelViewMatrix * vec4( position, 1.0 );", "#endif", "gl_Position = projectionMatrix * mvPosition;"].join("\n"),
            morphnormal_vertex: ["#ifdef USE_MORPHNORMALS", " vec3 morphedNormal = vec3( 0.0 );", " morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];", " morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];", " morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];", " morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];", " morphedNormal += normal;", "#endif"].join("\n"),
            skinnormal_vertex: ["#ifdef USE_SKINNING", " mat4 skinMatrix = skinWeight.x * boneMatX;", " skinMatrix  += skinWeight.y * boneMatY;", " skinMatrix  += skinWeight.z * boneMatZ;", " skinMatrix  += skinWeight.w * boneMatW;", " #ifdef USE_MORPHNORMALS", " vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );", " #else", " vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );", " #endif", "#endif"].join("\n"),
            defaultnormal_vertex: ["vec3 objectNormal;", "#ifdef USE_SKINNING", " objectNormal = skinnedNormal.xyz;", "#endif", "#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )", " objectNormal = morphedNormal;", "#endif", "#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )", " objectNormal = normal;", "#endif", "#ifdef FLIP_SIDED", " objectNormal = -objectNormal;", "#endif", "vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),
            shadowmap_pars_fragment: ["#ifdef USE_SHADOWMAP", " uniform sampler2D shadowMap[ MAX_SHADOWS ];", " uniform vec2 shadowMapSize[ MAX_SHADOWS ];", " uniform float shadowDarkness[ MAX_SHADOWS ];", " uniform float shadowBias[ MAX_SHADOWS ];", " varying vec4 vShadowCoord[ MAX_SHADOWS ];", " float unpackDepth( const in vec4 rgba_depth ) {", "   const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );", "   float depth = dot( rgba_depth, bit_shift );", "   return depth;", " }", "#endif"].join("\n"),
            shadowmap_fragment: ["#ifdef USE_SHADOWMAP", " #ifdef SHADOWMAP_DEBUG", "   vec3 frustumColors[3];", "   frustumColors[0] = vec3( 1.0, 0.5, 0.0 );", "   frustumColors[1] = vec3( 0.0, 1.0, 0.8 );", "   frustumColors[2] = vec3( 0.0, 0.5, 1.0 );", " #endif", " #ifdef SHADOWMAP_CASCADE", "   int inFrustumCount = 0;", " #endif", " float fDepth;", " vec3 shadowColor = vec3( 1.0 );", " for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "   vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;", "   bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );", "   bool inFrustum = all( inFrustumVec );", "   #ifdef SHADOWMAP_CASCADE", "     inFrustumCount += int( inFrustum );", "     bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );", "   #else", "     bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );", "   #endif", "   bool frustumTest = all( frustumTestVec );", "   if ( frustumTest ) {", "     shadowCoord.z += shadowBias[ i ];", "     #if defined( SHADOWMAP_TYPE_PCF )", "       float shadow = 0.0;", "       const float shadowDelta = 1.0 / 9.0;", "       float xPixelOffset = 1.0 / shadowMapSize[ i ].x;", "       float yPixelOffset = 1.0 / shadowMapSize[ i ].y;", "       float dx0 = -1.25 * xPixelOffset;", "       float dy0 = -1.25 * yPixelOffset;", "       float dx1 = 1.25 * xPixelOffset;", "       float dy1 = 1.25 * yPixelOffset;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );", "       if ( fDepth < shadowCoord.z ) shadow += shadowDelta;", "       shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );", "     #elif defined( SHADOWMAP_TYPE_PCF_SOFT )", "       float shadow = 0.0;", "       float xPixelOffset = 1.0 / shadowMapSize[ i ].x;", "       float yPixelOffset = 1.0 / shadowMapSize[ i ].y;", "       float dx0 = -1.0 * xPixelOffset;", "       float dy0 = -1.0 * yPixelOffset;", "       float dx1 = 1.0 * xPixelOffset;", "       float dy1 = 1.0 * yPixelOffset;", "       mat3 shadowKernel;", "       mat3 depthKernel;", "       depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );", "       depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );", "       depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );", "       depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );", "       depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );", "       depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );", "       depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );", "       depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );", "       depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );", "       vec3 shadowZ = vec3( shadowCoord.z );", "       shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));", "       shadowKernel[0] *= vec3(0.25);", "       shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));", "       shadowKernel[1] *= vec3(0.25);", "       shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));", "       shadowKernel[2] *= vec3(0.25);", "       vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );", "       shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );", "       shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );", "       vec4 shadowValues;", "       shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );", "       shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );", "       shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );", "       shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );", "       shadow = dot( shadowValues, vec4( 1.0 ) );", "       shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );", "     #else", "       vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );", "       float fDepth = unpackDepth( rgbaDepth );", "       if ( fDepth < shadowCoord.z )", "         shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );", "     #endif", "   }", "   #ifdef SHADOWMAP_DEBUG", "     #ifdef SHADOWMAP_CASCADE", "       if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];", "     #else", "       if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];", "     #endif", "   #endif", " }", " #ifdef GAMMA_OUTPUT", "   shadowColor *= shadowColor;", " #endif", " gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;", "#endif"].join("\n"),
            shadowmap_pars_vertex: ["#ifdef USE_SHADOWMAP", " varying vec4 vShadowCoord[ MAX_SHADOWS ];", " uniform mat4 shadowMatrix[ MAX_SHADOWS ];", "#endif"].join("\n"),
            shadowmap_vertex: ["#ifdef USE_SHADOWMAP", " for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "   vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;", " }", "#endif"].join("\n"),
            alphatest_fragment: ["#ifdef ALPHATEST", " if ( gl_FragColor.a < ALPHATEST ) discard;", "#endif"].join("\n"),
            linear_to_gamma_fragment: ["#ifdef GAMMA_OUTPUT", " gl_FragColor.xyz = sqrt( gl_FragColor.xyz );", "#endif"].join("\n"),
            logdepthbuf_pars_vertex: ["#ifdef USE_LOGDEPTHBUF", " #ifdef USE_LOGDEPTHBUF_EXT", "   varying float vFragDepth;", " #endif", " uniform float logDepthBufFC;", "#endif"].join("\n"),
            logdepthbuf_vertex: ["#ifdef USE_LOGDEPTHBUF", " gl_Position.z = log2(max(1e-6, gl_Position.w + 1.0)) * logDepthBufFC;", " #ifdef USE_LOGDEPTHBUF_EXT", "   vFragDepth = 1.0 + gl_Position.w;", "#else", "   gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;", " #endif", "#endif"].join("\n"),
            logdepthbuf_pars_fragment: ["#ifdef USE_LOGDEPTHBUF", " uniform float logDepthBufFC;", " #ifdef USE_LOGDEPTHBUF_EXT", "   #extension GL_EXT_frag_depth : enable", "   varying float vFragDepth;", " #endif", "#endif"].join("\n"),
            logdepthbuf_fragment: ["#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)", " gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;", "#endif"].join("\n")
        },$.UniformsUtils = {
            merge: function (e) {
                var t, r, i, o = {};
                for (t = 0; t < e.length; t++) for (r in i = this.clone(e[t])) o[r] = i[r];
                return o
            }, clone: function (e) {
                var t, r, i, o = {};
                for (t in e) for (r in o[t] = {}, e[t]) (i = e[t][r]) instanceof $.Color || i instanceof $.Vector2 || i instanceof $.Vector3 || i instanceof $.Vector4 || i instanceof $.Matrix4 || i instanceof $.Texture ? o[t][r] = i.clone() : o[t][r] = i instanceof Array ? i.slice() : i;
                return o
            }
        },$.UniformsLib = {
            common: {
                diffuse: {type: "c", value: new $.Color(15658734)},
                opacity: {type: "f", value: 1},
                map: {type: "t", value: null},
                offsetRepeat: {type: "v4", value: new $.Vector4(0, 0, 1, 1)},
                lightMap: {type: "t", value: null},
                specularMap: {type: "t", value: null},
                envMap: {type: "t", value: null},
                flipEnvMap: {type: "f", value: -1},
                useRefract: {type: "i", value: 0},
                reflectivity: {type: "f", value: 1},
                refractionRatio: {type: "f", value: .98},
                combine: {type: "i", value: 0},
                morphTargetInfluences: {type: "f", value: 0}
            },
            bump: {bumpMap: {type: "t", value: null}, bumpScale: {type: "f", value: 1}},
            normalmap: {normalMap: {type: "t", value: null}, normalScale: {type: "v2", value: new $.Vector2(1, 1)}},
            fog: {
                fogDensity: {type: "f", value: 25e-5},
                fogNear: {type: "f", value: 1},
                fogFar: {type: "f", value: 2e3},
                fogColor: {type: "c", value: new $.Color(16777215)}
            },
            lights: {
                ambientLightColor: {type: "fv", value: []},
                directionalLightDirection: {type: "fv", value: []},
                directionalLightColor: {type: "fv", value: []},
                hemisphereLightDirection: {type: "fv", value: []},
                hemisphereLightSkyColor: {type: "fv", value: []},
                hemisphereLightGroundColor: {type: "fv", value: []},
                pointLightColor: {type: "fv", value: []},
                pointLightPosition: {type: "fv", value: []},
                pointLightDistance: {type: "fv1", value: []},
                spotLightColor: {type: "fv", value: []},
                spotLightPosition: {type: "fv", value: []},
                spotLightDirection: {type: "fv", value: []},
                spotLightDistance: {type: "fv1", value: []},
                spotLightAngleCos: {type: "fv1", value: []},
                spotLightExponent: {type: "fv1", value: []}
            },
            particle: {
                psColor: {type: "c", value: new $.Color(15658734)},
                opacity: {type: "f", value: 1},
                size: {type: "f", value: 1},
                scale: {type: "f", value: 1},
                map: {type: "t", value: null},
                fogDensity: {type: "f", value: 25e-5},
                fogNear: {type: "f", value: 1},
                fogFar: {type: "f", value: 2e3},
                fogColor: {type: "c", value: new $.Color(16777215)}
            },
            shadowmap: {
                shadowMap: {type: "tv", value: []},
                shadowMapSize: {type: "v2v", value: []},
                shadowBias: {type: "fv1", value: []},
                shadowDarkness: {type: "fv1", value: []},
                shadowMatrix: {type: "m4v", value: []}
            }
        },$.ShaderLib = {
            basic: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.common, $.UniformsLib.fog, $.UniformsLib.shadowmap]),
                vertexShader: [$.ShaderChunk.map_pars_vertex, $.ShaderChunk.lightmap_pars_vertex, $.ShaderChunk.envmap_pars_vertex, $.ShaderChunk.color_pars_vertex, $.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.skinning_pars_vertex, $.ShaderChunk.shadowmap_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.map_vertex, $.ShaderChunk.lightmap_vertex, $.ShaderChunk.color_vertex, $.ShaderChunk.skinbase_vertex, " #ifdef USE_ENVMAP", $.ShaderChunk.morphnormal_vertex, $.ShaderChunk.skinnormal_vertex, $.ShaderChunk.defaultnormal_vertex, " #endif", $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.skinning_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, $.ShaderChunk.worldpos_vertex, $.ShaderChunk.envmap_vertex, $.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", $.ShaderChunk.color_pars_fragment, $.ShaderChunk.map_pars_fragment, $.ShaderChunk.lightmap_pars_fragment, $.ShaderChunk.envmap_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.shadowmap_pars_fragment, $.ShaderChunk.specularmap_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = vec4( diffuse, opacity );", $.ShaderChunk.logdepthbuf_fragment, $.ShaderChunk.map_fragment, $.ShaderChunk.alphatest_fragment, $.ShaderChunk.specularmap_fragment, $.ShaderChunk.lightmap_fragment, $.ShaderChunk.color_fragment, $.ShaderChunk.envmap_fragment, $.ShaderChunk.shadowmap_fragment, $.ShaderChunk.linear_to_gamma_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n")
            },
            lambert: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.common, $.UniformsLib.fog, $.UniformsLib.lights, $.UniformsLib.shadowmap, {
                    ambient: {
                        type: "c",
                        value: new $.Color(16777215)
                    },
                    emissive: {type: "c", value: new $.Color(0)},
                    wrapRGB: {type: "v3", value: new $.Vector3(1, 1, 1)}
                }]),
                vertexShader: ["#define LAMBERT", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", " varying vec3 vLightBack;", "#endif", $.ShaderChunk.map_pars_vertex, $.ShaderChunk.lightmap_pars_vertex, $.ShaderChunk.envmap_pars_vertex, $.ShaderChunk.lights_lambert_pars_vertex, $.ShaderChunk.color_pars_vertex, $.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.skinning_pars_vertex, $.ShaderChunk.shadowmap_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.map_vertex, $.ShaderChunk.lightmap_vertex, $.ShaderChunk.color_vertex, $.ShaderChunk.morphnormal_vertex, $.ShaderChunk.skinbase_vertex, $.ShaderChunk.skinnormal_vertex, $.ShaderChunk.defaultnormal_vertex, $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.skinning_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, $.ShaderChunk.worldpos_vertex, $.ShaderChunk.envmap_vertex, $.ShaderChunk.lights_lambert_vertex, $.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform float opacity;", "varying vec3 vLightFront;", "#ifdef DOUBLE_SIDED", " varying vec3 vLightBack;", "#endif", $.ShaderChunk.color_pars_fragment, $.ShaderChunk.map_pars_fragment, $.ShaderChunk.lightmap_pars_fragment, $.ShaderChunk.envmap_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.shadowmap_pars_fragment, $.ShaderChunk.specularmap_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = vec4( vec3( 1.0 ), opacity );", $.ShaderChunk.logdepthbuf_fragment, $.ShaderChunk.map_fragment, $.ShaderChunk.alphatest_fragment, $.ShaderChunk.specularmap_fragment, " #ifdef DOUBLE_SIDED", "   if ( gl_FrontFacing )", "     gl_FragColor.xyz *= vLightFront;", "   else", "     gl_FragColor.xyz *= vLightBack;", " #else", "   gl_FragColor.xyz *= vLightFront;", " #endif", $.ShaderChunk.lightmap_fragment, $.ShaderChunk.color_fragment, $.ShaderChunk.envmap_fragment, $.ShaderChunk.shadowmap_fragment, $.ShaderChunk.linear_to_gamma_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n")
            },
            phong: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.common, $.UniformsLib.bump, $.UniformsLib.normalmap, $.UniformsLib.fog, $.UniformsLib.lights, $.UniformsLib.shadowmap, {
                    ambient: {
                        type: "c",
                        value: new $.Color(16777215)
                    },
                    emissive: {type: "c", value: new $.Color(0)},
                    specular: {type: "c", value: new $.Color(1118481)},
                    shininess: {type: "f", value: 30},
                    wrapRGB: {type: "v3", value: new $.Vector3(1, 1, 1)}
                }]),
                vertexShader: ["#define PHONG", "varying vec3 vViewPosition;", "varying vec3 vNormal;", $.ShaderChunk.map_pars_vertex, $.ShaderChunk.lightmap_pars_vertex, $.ShaderChunk.envmap_pars_vertex, $.ShaderChunk.lights_phong_pars_vertex, $.ShaderChunk.color_pars_vertex, $.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.skinning_pars_vertex, $.ShaderChunk.shadowmap_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.map_vertex, $.ShaderChunk.lightmap_vertex, $.ShaderChunk.color_vertex, $.ShaderChunk.morphnormal_vertex, $.ShaderChunk.skinbase_vertex, $.ShaderChunk.skinnormal_vertex, $.ShaderChunk.defaultnormal_vertex, " vNormal = normalize( transformedNormal );", $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.skinning_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, " vViewPosition = -mvPosition.xyz;", $.ShaderChunk.worldpos_vertex, $.ShaderChunk.envmap_vertex, $.ShaderChunk.lights_phong_vertex, $.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform vec3 ambient;", "uniform vec3 emissive;", "uniform vec3 specular;", "uniform float shininess;", $.ShaderChunk.color_pars_fragment, $.ShaderChunk.map_pars_fragment, $.ShaderChunk.lightmap_pars_fragment, $.ShaderChunk.envmap_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.lights_phong_pars_fragment, $.ShaderChunk.shadowmap_pars_fragment, $.ShaderChunk.bumpmap_pars_fragment, $.ShaderChunk.normalmap_pars_fragment, $.ShaderChunk.specularmap_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = vec4( vec3( 1.0 ), opacity );", $.ShaderChunk.logdepthbuf_fragment, $.ShaderChunk.map_fragment, $.ShaderChunk.alphatest_fragment, $.ShaderChunk.specularmap_fragment, $.ShaderChunk.lights_phong_fragment, $.ShaderChunk.lightmap_fragment, $.ShaderChunk.color_fragment, $.ShaderChunk.envmap_fragment, $.ShaderChunk.shadowmap_fragment, $.ShaderChunk.linear_to_gamma_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n")
            },
            particle_basic: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.particle, $.UniformsLib.shadowmap]),
                vertexShader: ["uniform float size;", "uniform float scale;", $.ShaderChunk.color_pars_vertex, $.ShaderChunk.shadowmap_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.color_vertex, " vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", " #ifdef USE_SIZEATTENUATION", "   gl_PointSize = size * ( scale / length( mvPosition.xyz ) );", " #else", "   gl_PointSize = size;", " #endif", " gl_Position = projectionMatrix * mvPosition;", $.ShaderChunk.logdepthbuf_vertex, $.ShaderChunk.worldpos_vertex, $.ShaderChunk.shadowmap_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 psColor;", "uniform float opacity;", $.ShaderChunk.color_pars_fragment, $.ShaderChunk.map_particle_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.shadowmap_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = vec4( psColor, opacity );", $.ShaderChunk.logdepthbuf_fragment, $.ShaderChunk.map_particle_fragment, $.ShaderChunk.alphatest_fragment, $.ShaderChunk.color_fragment, $.ShaderChunk.shadowmap_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n")
            },
            dashed: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.common, $.UniformsLib.fog, {
                    scale: {type: "f", value: 1},
                    dashSize: {type: "f", value: 1},
                    totalSize: {type: "f", value: 2}
                }]),
                vertexShader: ["uniform float scale;", "attribute float lineDistance;", "varying float vLineDistance;", $.ShaderChunk.color_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.color_vertex, " vLineDistance = scale * lineDistance;", " vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );", " gl_Position = projectionMatrix * mvPosition;", $.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform vec3 diffuse;", "uniform float opacity;", "uniform float dashSize;", "uniform float totalSize;", "varying float vLineDistance;", $.ShaderChunk.color_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " if ( mod( vLineDistance, totalSize ) > dashSize ) {", "   discard;", " }", " gl_FragColor = vec4( diffuse, opacity );", $.ShaderChunk.logdepthbuf_fragment, $.ShaderChunk.color_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n")
            },
            depth: {
                uniforms: {
                    mNear: {type: "f", value: 1},
                    mFar: {type: "f", value: 2e3},
                    opacity: {type: "f", value: 1}
                },
                vertexShader: [$.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform float mNear;", "uniform float mFar;", "uniform float opacity;", $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", $.ShaderChunk.logdepthbuf_fragment, " #ifdef USE_LOGDEPTHBUF_EXT", "   float depth = gl_FragDepthEXT / gl_FragCoord.w;", " #else", "   float depth = gl_FragCoord.z / gl_FragCoord.w;", " #endif", " float color = 1.0 - smoothstep( mNear, mFar, depth );", " gl_FragColor = vec4( vec3( color ), opacity );", "}"].join("\n")
            },
            normal: {
                uniforms: {opacity: {type: "f", value: 1}},
                vertexShader: ["varying vec3 vNormal;", $.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", " vNormal = normalize( normalMatrix * normal );", $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform float opacity;", "varying vec3 vNormal;", $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );", $.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
            },
            normalmap: {
                uniforms: $.UniformsUtils.merge([$.UniformsLib.fog, $.UniformsLib.lights, $.UniformsLib.shadowmap, {
                    enableAO: {
                        type: "i",
                        value: 0
                    },
                    enableDiffuse: {type: "i", value: 0},
                    enableSpecular: {type: "i", value: 0},
                    enableReflection: {type: "i", value: 0},
                    enableDisplacement: {type: "i", value: 0},
                    tDisplacement: {type: "t", value: null},
                    tDiffuse: {type: "t", value: null},
                    tCube: {type: "t", value: null},
                    tNormal: {type: "t", value: null},
                    tSpecular: {type: "t", value: null},
                    tAO: {type: "t", value: null},
                    uNormalScale: {type: "v2", value: new $.Vector2(1, 1)},
                    uDisplacementBias: {type: "f", value: 0},
                    uDisplacementScale: {type: "f", value: 1},
                    diffuse: {type: "c", value: new $.Color(16777215)},
                    specular: {type: "c", value: new $.Color(1118481)},
                    ambient: {type: "c", value: new $.Color(16777215)},
                    shininess: {type: "f", value: 30},
                    opacity: {type: "f", value: 1},
                    useRefract: {type: "i", value: 0},
                    refractionRatio: {type: "f", value: .98},
                    reflectivity: {type: "f", value: .5},
                    uOffset: {type: "v2", value: new $.Vector2(0, 0)},
                    uRepeat: {type: "v2", value: new $.Vector2(1, 1)},
                    wrapRGB: {type: "v3", value: new $.Vector3(1, 1, 1)}
                }]),
                fragmentShader: ["uniform vec3 ambient;", "uniform vec3 diffuse;", "uniform vec3 specular;", "uniform float shininess;", "uniform float opacity;", "uniform bool enableDiffuse;", "uniform bool enableSpecular;", "uniform bool enableAO;", "uniform bool enableReflection;", "uniform sampler2D tDiffuse;", "uniform sampler2D tNormal;", "uniform sampler2D tSpecular;", "uniform sampler2D tAO;", "uniform samplerCube tCube;", "uniform vec2 uNormalScale;", "uniform bool useRefract;", "uniform float refractionRatio;", "uniform float reflectivity;", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "uniform vec3 ambientLightColor;", "#if MAX_DIR_LIGHTS > 0", " uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];", " uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];", "#endif", "#if MAX_HEMI_LIGHTS > 0", " uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];", " uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];", "#endif", "#if MAX_POINT_LIGHTS > 0", " uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];", " uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];", " uniform float pointLightDistance[ MAX_POINT_LIGHTS ];", "#endif", "#if MAX_SPOT_LIGHTS > 0", " uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];", " uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];", " uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];", " uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];", " uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];", "#endif", "#ifdef WRAP_AROUND", " uniform vec3 wrapRGB;", "#endif", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", $.ShaderChunk.shadowmap_pars_fragment, $.ShaderChunk.fog_pars_fragment, $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", $.ShaderChunk.logdepthbuf_fragment, " gl_FragColor = vec4( vec3( 1.0 ), opacity );", " vec3 specularTex = vec3( 1.0 );", " vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;", " normalTex.xy *= uNormalScale;", " normalTex = normalize( normalTex );", " if( enableDiffuse ) {", "   #ifdef GAMMA_INPUT", "     vec4 texelColor = texture2D( tDiffuse, vUv );", "     texelColor.xyz *= texelColor.xyz;", "     gl_FragColor = gl_FragColor * texelColor;", "   #else", "     gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );", "   #endif", " }", " if( enableAO ) {", "   #ifdef GAMMA_INPUT", "     vec4 aoColor = texture2D( tAO, vUv );", "     aoColor.xyz *= aoColor.xyz;", "     gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;", "   #else", "     gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;", "   #endif", " }", " if( enableSpecular )", "   specularTex = texture2D( tSpecular, vUv ).xyz;", " mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );", " vec3 finalNormal = tsb * normalTex;", " #ifdef FLIP_SIDED", "   finalNormal = -finalNormal;", " #endif", " vec3 normal = normalize( finalNormal );", " vec3 viewPosition = normalize( vViewPosition );", " #if MAX_POINT_LIGHTS > 0", "   vec3 pointDiffuse = vec3( 0.0 );", "   vec3 pointSpecular = vec3( 0.0 );", "   for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {", "     vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );", "     vec3 pointVector = lPosition.xyz + vViewPosition.xyz;", "     float pointDistance = 1.0;", "     if ( pointLightDistance[ i ] > 0.0 )", "       pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );", "     pointVector = normalize( pointVector );", "     #ifdef WRAP_AROUND", "       float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );", "       float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );", "       vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );", "     #else", "       float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );", "     #endif", "     pointDiffuse += pointDistance * pointLightColor[ i ] * diffuse * pointDiffuseWeight;", "     vec3 pointHalfVector = normalize( pointVector + viewPosition );", "     float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );", "     float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, shininess ), 0.0 );", "     float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "     vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );", "     pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;", "   }", " #endif", " #if MAX_SPOT_LIGHTS > 0", "   vec3 spotDiffuse = vec3( 0.0 );", "   vec3 spotSpecular = vec3( 0.0 );", "   for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {", "     vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );", "     vec3 spotVector = lPosition.xyz + vViewPosition.xyz;", "     float spotDistance = 1.0;", "     if ( spotLightDistance[ i ] > 0.0 )", "       spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );", "     spotVector = normalize( spotVector );", "     float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );", "     if ( spotEffect > spotLightAngleCos[ i ] ) {", "       spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );", "       #ifdef WRAP_AROUND", "         float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );", "         float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );", "         vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );", "       #else", "         float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );", "       #endif", "       spotDiffuse += spotDistance * spotLightColor[ i ] * diffuse * spotDiffuseWeight * spotEffect;", "       vec3 spotHalfVector = normalize( spotVector + viewPosition );", "       float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );", "       float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, shininess ), 0.0 );", "       float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "       vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );", "       spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;", "     }", "   }", " #endif", " #if MAX_DIR_LIGHTS > 0", "   vec3 dirDiffuse = vec3( 0.0 );", "   vec3 dirSpecular = vec3( 0.0 );", "   for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {", "     vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );", "     vec3 dirVector = normalize( lDirection.xyz );", "     #ifdef WRAP_AROUND", "       float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );", "       float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );", "       vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );", "     #else", "       float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );", "     #endif", "     dirDiffuse += directionalLightColor[ i ] * diffuse * dirDiffuseWeight;", "     vec3 dirHalfVector = normalize( dirVector + viewPosition );", "     float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );", "     float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, shininess ), 0.0 );", "     float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "     vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );", "     dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;", "   }", " #endif", " #if MAX_HEMI_LIGHTS > 0", "   vec3 hemiDiffuse  = vec3( 0.0 );", "   vec3 hemiSpecular = vec3( 0.0 );", "   for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {", "     vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );", "     vec3 lVector = normalize( lDirection.xyz );", "     float dotProduct = dot( normal, lVector );", "     float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;", "     vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );", "     hemiDiffuse += diffuse * hemiColor;", "     vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );", "     float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;", "     float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );", "     vec3 lVectorGround = -lVector;", "     vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );", "     float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;", "     float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );", "     float dotProductGround = dot( normal, lVectorGround );", "     float specularNormalization = ( shininess + 2.0001 ) / 8.0;", "     vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );", "     vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );", "     hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );", "   }", " #endif", " vec3 totalDiffuse = vec3( 0.0 );", " vec3 totalSpecular = vec3( 0.0 );", " #if MAX_DIR_LIGHTS > 0", "   totalDiffuse += dirDiffuse;", "   totalSpecular += dirSpecular;", " #endif", " #if MAX_HEMI_LIGHTS > 0", "   totalDiffuse += hemiDiffuse;", "   totalSpecular += hemiSpecular;", " #endif", " #if MAX_POINT_LIGHTS > 0", "   totalDiffuse += pointDiffuse;", "   totalSpecular += pointSpecular;", " #endif", " #if MAX_SPOT_LIGHTS > 0", "   totalDiffuse += spotDiffuse;", "   totalSpecular += spotSpecular;", " #endif", " #ifdef METAL", "   gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );", " #else", "   gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;", " #endif", " if ( enableReflection ) {", "   vec3 vReflect;", "   vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );", "   if ( useRefract ) {", "     vReflect = refract( cameraToVertex, normal, refractionRatio );", "   } else {", "     vReflect = reflect( cameraToVertex, normal );", "   }", "   vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );", "   #ifdef GAMMA_INPUT", "     cubeColor.xyz *= cubeColor.xyz;", "   #endif", "   gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * reflectivity );", " }", $.ShaderChunk.shadowmap_fragment, $.ShaderChunk.linear_to_gamma_fragment, $.ShaderChunk.fog_fragment, "}"].join("\n"),
                vertexShader: ["attribute vec4 tangent;", "uniform vec2 uOffset;", "uniform vec2 uRepeat;", "uniform bool enableDisplacement;", "#ifdef VERTEX_TEXTURES", " uniform sampler2D tDisplacement;", " uniform float uDisplacementScale;", " uniform float uDisplacementBias;", "#endif", "varying vec3 vTangent;", "varying vec3 vBinormal;", "varying vec3 vNormal;", "varying vec2 vUv;", "varying vec3 vWorldPosition;", "varying vec3 vViewPosition;", $.ShaderChunk.skinning_pars_vertex, $.ShaderChunk.shadowmap_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.skinbase_vertex, $.ShaderChunk.skinnormal_vertex, " #ifdef USE_SKINNING", "   vNormal = normalize( normalMatrix * skinnedNormal.xyz );", "   vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );", "   vTangent = normalize( normalMatrix * skinnedTangent.xyz );", " #else", "   vNormal = normalize( normalMatrix * normal );", "   vTangent = normalize( normalMatrix * tangent.xyz );", " #endif", " vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );", " vUv = uv * uRepeat + uOffset;", " vec3 displacedPosition;", " #ifdef VERTEX_TEXTURES", "   if ( enableDisplacement ) {", "     vec3 dv = texture2D( tDisplacement, uv ).xyz;", "     float df = uDisplacementScale * dv.x + uDisplacementBias;", "     displacedPosition = position + normalize( normal ) * df;", "   } else {", "     #ifdef USE_SKINNING", "       vec4 skinVertex = vec4( position, 1.0 );", "       vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", "       skinned     += boneMatY * skinVertex * skinWeight.y;", "       skinned     += boneMatZ * skinVertex * skinWeight.z;", "       skinned     += boneMatW * skinVertex * skinWeight.w;", "       displacedPosition  = skinned.xyz;", "     #else", "       displacedPosition = position;", "     #endif", "   }", " #else", "   #ifdef USE_SKINNING", "     vec4 skinVertex = vec4( position, 1.0 );", "     vec4 skinned  = boneMatX * skinVertex * skinWeight.x;", "     skinned     += boneMatY * skinVertex * skinWeight.y;", "     skinned     += boneMatZ * skinVertex * skinWeight.z;", "     skinned     += boneMatW * skinVertex * skinWeight.w;", "     displacedPosition  = skinned.xyz;", "   #else", "     displacedPosition = position;", "   #endif", " #endif", " vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );", " vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );", " gl_Position = projectionMatrix * mvPosition;", $.ShaderChunk.logdepthbuf_vertex, " vWorldPosition = worldPosition.xyz;", " vViewPosition = -mvPosition.xyz;", " #ifdef USE_SHADOWMAP", "   for( int i = 0; i < MAX_SHADOWS; i ++ ) {", "     vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;", "   }", " #endif", "}"].join("\n")
            },
            cube: {
                uniforms: {tCube: {type: "t", value: null}, tFlip: {type: "f", value: -1}},
                vertexShader: ["varying vec3 vWorldPosition;", $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", " vec4 worldPosition = modelMatrix * vec4( position, 1.0 );", " vWorldPosition = worldPosition.xyz;", " gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", $.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: ["uniform samplerCube tCube;", "uniform float tFlip;", "varying vec3 vWorldPosition;", $.ShaderChunk.logdepthbuf_pars_fragment, "void main() {", " gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );", $.ShaderChunk.logdepthbuf_fragment, "}"].join("\n")
            },
            depthRGBA: {
                uniforms: {},
                vertexShader: [$.ShaderChunk.morphtarget_pars_vertex, $.ShaderChunk.skinning_pars_vertex, $.ShaderChunk.logdepthbuf_pars_vertex, "void main() {", $.ShaderChunk.skinbase_vertex, $.ShaderChunk.morphtarget_vertex, $.ShaderChunk.skinning_vertex, $.ShaderChunk.default_vertex, $.ShaderChunk.logdepthbuf_vertex, "}"].join("\n"),
                fragmentShader: [$.ShaderChunk.logdepthbuf_pars_fragment, "vec4 pack_depth( const in float depth ) {", " const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );", " const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );", " vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );", " res -= res.xxyz * bit_mask;", " return res;", "}", "void main() {", $.ShaderChunk.logdepthbuf_fragment, " #ifdef USE_LOGDEPTHBUF_EXT", "   gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );", " #else", "   gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );", " #endif", "}"].join("\n")
            }
        },$.WebGLRenderer = function (e) {
            var t = void 0 !== (e = e || {}).canvas ? e.canvas : document.createElement("canvas"),
                r = void 0 !== e.context ? e.context : null, i = void 0 !== e.precision ? e.precision : "highp",
                o = void 0 !== e.alpha && e.alpha, a = void 0 === e.depth || e.depth,
                n = void 0 === e.stencil || e.stencil, s = void 0 !== e.antialias && e.antialias,
                h = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
                l = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
                c = void 0 !== e.logarithmicDepthBuffer && e.logarithmicDepthBuffer, p = new $.Color(0), u = 0;
            this.domElement = t, this.context = null, this.devicePixelRatio = void 0 !== e.devicePixelRatio ? e.devicePixelRatio : void 0 !== self.devicePixelRatio ? self.devicePixelRatio : 1, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.autoUpdateObjects = !0, this.gammaInput = !1, this.gammaOutput = !1, this.shadowMapEnabled = !1, this.shadowMapAutoUpdate = !0, this.shadowMapType = $.PCFShadowMap, this.shadowMapCullFace = $.CullFaceFront, this.shadowMapDebug = !1, this.shadowMapCascade = !1, this.maxMorphTargets = 8, this.maxMorphNormals = 4, this.autoScaleCubemaps = !0, this.renderPluginsPre = [], this.renderPluginsPost = [], this.info = {
                memory: {
                    programs: 0,
                    geometries: 0,
                    textures: 0
                }, render: {calls: 0, vertices: 0, faces: 0, points: 0}
            };
            var f, d, m, y, g, v, x = this, w = [], _ = null, b = null, M = -1, S = null, A = null, T = 0, E = -1,
                C = -1, P = -1, L = -1, D = -1, R = -1, F = -1, U = -1, V = null, z = null, B = null, N = null, O = 0,
                k = 0, I = t.width, G = t.height, W = 0, H = 0, j = new Uint8Array(16), X = new Uint8Array(16),
                q = new $.Frustum, Y = new $.Matrix4, K = new $.Matrix4, Z = new $.Vector3, Q = new $.Vector3, J = !0,
                ee = {
                    ambient: [0, 0, 0],
                    directional: {length: 0, colors: new Array, positions: new Array},
                    point: {length: 0, colors: new Array, positions: new Array, distances: new Array},
                    spot: {
                        length: 0,
                        colors: new Array,
                        positions: new Array,
                        distances: new Array,
                        directions: new Array,
                        anglesCos: new Array,
                        exponents: new Array
                    },
                    hemi: {length: 0, skyColors: new Array, groundColors: new Array, positions: new Array}
                };
            !function () {
                try {
                    var e = {
                        alpha: o,
                        depth: a,
                        stencil: n,
                        antialias: s,
                        premultipliedAlpha: h,
                        preserveDrawingBuffer: l
                    };
                    if (null === (f = r || t.getContext("webgl", e) || t.getContext("experimental-webgl", e))) throw"Error creating WebGL context."
                } catch (e) {
                    console.error(e)
                }
                d = f.getExtension("OES_texture_float"), f.getExtension("OES_texture_float_linear"), m = f.getExtension("OES_standard_derivatives"), y = f.getExtension("EXT_texture_filter_anisotropic") || f.getExtension("MOZ_EXT_texture_filter_anisotropic") || f.getExtension("WEBKIT_EXT_texture_filter_anisotropic"), g = f.getExtension("WEBGL_compressed_texture_s3tc") || f.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || f.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"), v = f.getExtension("OES_element_index_uint");
                void 0 === f.getShaderPrecisionFormat && (f.getShaderPrecisionFormat = function () {
                    return {rangeMin: 1, rangeMax: 1, precision: 1}
                });
                c && f.getExtension("EXT_frag_depth")
            }(), f.clearColor(0, 0, 0, 1), f.clearDepth(1), f.clearStencil(0), f.enable(f.DEPTH_TEST), f.depthFunc(f.LEQUAL), f.frontFace(f.CCW), f.cullFace(f.BACK), f.enable(f.CULL_FACE), f.enable(f.BLEND), f.blendEquation(f.FUNC_ADD), f.blendFunc(f.SRC_ALPHA, f.ONE_MINUS_SRC_ALPHA), f.viewport(O, k, I, G), f.clearColor(p.r, p.g, p.b, u), this.context = f;
            var te = f.getParameter(f.MAX_TEXTURE_IMAGE_UNITS), re = f.getParameter(f.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
                ie = (f.getParameter(f.MAX_TEXTURE_SIZE), f.getParameter(f.MAX_CUBE_MAP_TEXTURE_SIZE)),
                oe = y ? f.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0, ae = re > 0, ne = ae && d,
                se = (g && f.getParameter(f.COMPRESSED_TEXTURE_FORMATS), f.getShaderPrecisionFormat(f.VERTEX_SHADER, f.HIGH_FLOAT)),
                he = f.getShaderPrecisionFormat(f.VERTEX_SHADER, f.MEDIUM_FLOAT),
                le = (f.getShaderPrecisionFormat(f.VERTEX_SHADER, f.LOW_FLOAT), f.getShaderPrecisionFormat(f.FRAGMENT_SHADER, f.HIGH_FLOAT)),
                ce = f.getShaderPrecisionFormat(f.FRAGMENT_SHADER, f.MEDIUM_FLOAT),
                pe = (f.getShaderPrecisionFormat(f.FRAGMENT_SHADER, f.LOW_FLOAT), se.precision > 0 && le.precision > 0),
                ue = he.precision > 0 && ce.precision > 0;

            function fe(e) {
                var t, r;
                if (e.__webglVertexBuffer = f.createBuffer(), e.__webglNormalBuffer = f.createBuffer(), e.__webglTangentBuffer = f.createBuffer(), e.__webglColorBuffer = f.createBuffer(), e.__webglUVBuffer = f.createBuffer(), e.__webglUV2Buffer = f.createBuffer(), e.__webglSkinIndicesBuffer = f.createBuffer(), e.__webglSkinWeightsBuffer = f.createBuffer(), e.__webglFaceBuffer = f.createBuffer(), e.__webglLineBuffer = f.createBuffer(), e.numMorphTargets) for (e.__webglMorphTargetsBuffers = [], t = 0, r = e.numMorphTargets; t < r; t++) e.__webglMorphTargetsBuffers.push(f.createBuffer());
                if (e.numMorphNormals) for (e.__webglMorphNormalsBuffers = [], t = 0, r = e.numMorphNormals; t < r; t++) e.__webglMorphNormalsBuffers.push(f.createBuffer());
                x.info.memory.geometries++
            }

            "highp" !== i || pe || (ue ? (i = "mediump", console.warn("WebGLRenderer: highp not supported, using mediump")) : (i = "lowp", console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))), "mediump" !== i || ue || (i = "lowp", console.warn("WebGLRenderer: mediump not supported, using lowp")), this.getContext = function () {
                return f
            }, this.supportsVertexTextures = function () {
                return ae
            }, this.supportsFloatTextures = function () {
                return d
            }, this.supportsStandardDerivatives = function () {
                return m
            }, this.supportsCompressedTextureS3TC = function () {
                return g
            }, this.getMaxAnisotropy = function () {
                return oe
            }, this.getPrecision = function () {
                return i
            }, this.setSize = function (e, r, i) {
                t.width = e * this.devicePixelRatio, t.height = r * this.devicePixelRatio, !1 !== i && (t.style.width = e + "px", t.style.height = r + "px"), this.setViewport(0, 0, e, r)
            }, this.setViewport = function (e, t, r, i) {
                O = e * this.devicePixelRatio, k = t * this.devicePixelRatio, I = r * this.devicePixelRatio, G = i * this.devicePixelRatio, f.viewport(O, k, I, G)
            }, this.setScissor = function (e, t, r, i) {
                f.scissor(e * this.devicePixelRatio, t * this.devicePixelRatio, r * this.devicePixelRatio, i * this.devicePixelRatio)
            }, this.enableScissorTest = function (e) {
                e ? f.enable(f.SCISSOR_TEST) : f.disable(f.SCISSOR_TEST)
            }, this.setClearColor = function (e, t) {
                p.set(e), u = void 0 !== t ? t : 1, f.clearColor(p.r, p.g, p.b, u)
            }, this.setClearColorHex = function (e, t) {
                console.warn("DEPRECATED: .setClearColorHex() is being removed. Use .setClearColor() instead."), this.setClearColor(e, t)
            }, this.getClearColor = function () {
                return p
            }, this.getClearAlpha = function () {
                return u
            }, this.clear = function (e, t, r) {
                var i = 0;
                (void 0 === e || e) && (i |= f.COLOR_BUFFER_BIT), (void 0 === t || t) && (i |= f.DEPTH_BUFFER_BIT), (void 0 === r || r) && (i |= f.STENCIL_BUFFER_BIT), f.clear(i)
            }, this.clearColor = function () {
                f.clear(f.COLOR_BUFFER_BIT)
            }, this.clearDepth = function () {
                f.clear(f.DEPTH_BUFFER_BIT)
            }, this.clearStencil = function () {
                f.clear(f.STENCIL_BUFFER_BIT)
            }, this.clearTarget = function (e, t, r, i) {
                this.setRenderTarget(e), this.clear(t, r, i)
            }, this.addPostPlugin = function (e) {
                e.init(this), this.renderPluginsPost.push(e)
            }, this.addPrePlugin = function (e) {
                e.init(this), this.renderPluginsPre.push(e)
            }, this.updateShadowMap = function (e, t) {
                _ = null, P = -1, F = -1, U = -1, S = -1, M = -1, J = !0, E = -1, C = -1, this.shadowMapPlugin.update(e, t)
            };
            var de = function (e) {
                var t = e.target;
                t.removeEventListener("dispose", de), xe(t)
            }, me = function (e) {
                var t = e.target;
                t.removeEventListener("dispose", me), we(t), x.info.memory.textures--
            }, ye = function (e) {
                var t = e.target;
                t.removeEventListener("dispose", ye), _e(t), x.info.memory.textures--
            }, ge = function (e) {
                var t = e.target;
                t.removeEventListener("dispose", ge), be(t)
            }, ve = function (e) {
                if (void 0 !== e.__webglVertexBuffer && f.deleteBuffer(e.__webglVertexBuffer), void 0 !== e.__webglNormalBuffer && f.deleteBuffer(e.__webglNormalBuffer), void 0 !== e.__webglTangentBuffer && f.deleteBuffer(e.__webglTangentBuffer), void 0 !== e.__webglColorBuffer && f.deleteBuffer(e.__webglColorBuffer), void 0 !== e.__webglUVBuffer && f.deleteBuffer(e.__webglUVBuffer), void 0 !== e.__webglUV2Buffer && f.deleteBuffer(e.__webglUV2Buffer), void 0 !== e.__webglSkinIndicesBuffer && f.deleteBuffer(e.__webglSkinIndicesBuffer), void 0 !== e.__webglSkinWeightsBuffer && f.deleteBuffer(e.__webglSkinWeightsBuffer), void 0 !== e.__webglFaceBuffer && f.deleteBuffer(e.__webglFaceBuffer), void 0 !== e.__webglLineBuffer && f.deleteBuffer(e.__webglLineBuffer), void 0 !== e.__webglLineDistanceBuffer && f.deleteBuffer(e.__webglLineDistanceBuffer), void 0 !== e.__webglCustomAttributesList) for (var t in e.__webglCustomAttributesList) f.deleteBuffer(e.__webglCustomAttributesList[t].buffer);
                x.info.memory.geometries--
            }, xe = function (e) {
                if (e.__webglInit = void 0, e instanceof $.BufferGeometry) {
                    var t = e.attributes;
                    for (var r in t) void 0 !== t[r].buffer && f.deleteBuffer(t[r].buffer);
                    x.info.memory.geometries--
                } else if (void 0 !== e.geometryGroups) for (var i in e.geometryGroups) {
                    var o = e.geometryGroups[i];
                    if (void 0 !== o.numMorphTargets) for (var a = 0, n = o.numMorphTargets; a < n; a++) f.deleteBuffer(o.__webglMorphTargetsBuffers[a]);
                    if (void 0 !== o.numMorphNormals) for (a = 0, n = o.numMorphNormals; a < n; a++) f.deleteBuffer(o.__webglMorphNormalsBuffers[a]);
                    ve(o)
                } else ve(e)
            }, we = function (e) {
                if (e.image && e.image.__webglTextureCube) f.deleteTexture(e.image.__webglTextureCube); else {
                    if (!e.__webglInit) return;
                    e.__webglInit = !1, f.deleteTexture(e.__webglTexture)
                }
            }, _e = function (e) {
                if (e && e.__webglTexture) if (f.deleteTexture(e.__webglTexture), e instanceof $.WebGLRenderTargetCube) for (var t = 0; t < 6; t++) f.deleteFramebuffer(e.__webglFramebuffer[t]), f.deleteRenderbuffer(e.__webglRenderbuffer[t]); else f.deleteFramebuffer(e.__webglFramebuffer), f.deleteRenderbuffer(e.__webglRenderbuffer)
            }, be = function (e) {
                var t = e.program;
                if (void 0 !== t) {
                    var r, i, o;
                    e.program = void 0;
                    var a = !1;
                    for (r = 0, i = w.length; r < i; r++) if ((o = w[r]).program === t) {
                        o.usedTimes--, 0 === o.usedTimes && (a = !0);
                        break
                    }
                    if (!0 === a) {
                        var n = [];
                        for (r = 0, i = w.length; r < i; r++) (o = w[r]).program !== t && n.push(o);
                        w = n, f.deleteProgram(t), x.info.memory.programs--
                    }
                }
            };

            function Me(e, t) {
                var r = e.vertices.length, i = t.material;
                if (i.attributes) for (var o in void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []), i.attributes) {
                    var a = i.attributes[o];
                    if (!a.__webglInitialized || a.createUniqueBuffers) {
                        a.__webglInitialized = !0;
                        var n = 1;
                        "v2" === a.type ? n = 2 : "v3" === a.type ? n = 3 : "v4" === a.type ? n = 4 : "c" === a.type && (n = 3), a.size = n, a.array = new Float32Array(r * n), a.buffer = f.createBuffer(), a.buffer.belongsToAttribute = o, a.needsUpdate = !0
                    }
                    e.__webglCustomAttributesList.push(a)
                }
            }

            function Se(e, t) {
                var r = t.geometry, i = e.faces3, o = 3 * i.length, a = 1 * i.length, n = 3 * i.length, s = Ae(t, e),
                    h = Ce(s), l = Te(s), c = Ee(s);
                e.__vertexArray = new Float32Array(3 * o), l && (e.__normalArray = new Float32Array(3 * o)), r.hasTangents && (e.__tangentArray = new Float32Array(4 * o)), c && (e.__colorArray = new Float32Array(3 * o)), h && (r.faceVertexUvs.length > 0 && (e.__uvArray = new Float32Array(2 * o)), r.faceVertexUvs.length > 1 && (e.__uv2Array = new Float32Array(2 * o))), t.geometry.skinWeights.length && t.geometry.skinIndices.length && (e.__skinIndexArray = new Float32Array(4 * o), e.__skinWeightArray = new Float32Array(4 * o));
                var p, u, d = null !== v && a > 21845 ? Uint32Array : Uint16Array;
                if (e.__typeArray = d, e.__faceArray = new d(3 * a), e.__lineArray = new d(2 * n), e.numMorphTargets) for (e.__morphTargetsArrays = [], p = 0, u = e.numMorphTargets; p < u; p++) e.__morphTargetsArrays.push(new Float32Array(3 * o));
                if (e.numMorphNormals) for (e.__morphNormalsArrays = [], p = 0, u = e.numMorphNormals; p < u; p++) e.__morphNormalsArrays.push(new Float32Array(3 * o));
                if (e.__webglFaceCount = 3 * a, e.__webglLineCount = 2 * n, s.attributes) for (var m in void 0 === e.__webglCustomAttributesList && (e.__webglCustomAttributesList = []), s.attributes) {
                    var y = s.attributes[m], g = {};
                    for (var x in y) g[x] = y[x];
                    if (!g.__webglInitialized || g.createUniqueBuffers) {
                        g.__webglInitialized = !0;
                        var w = 1;
                        "v2" === g.type ? w = 2 : "v3" === g.type ? w = 3 : "v4" === g.type ? w = 4 : "c" === g.type && (w = 3), g.size = w, g.array = new Float32Array(o * w), g.buffer = f.createBuffer(), g.buffer.belongsToAttribute = m, y.needsUpdate = !0, g.__original = y
                    }
                    e.__webglCustomAttributesList.push(g)
                }
                e.__inittedArrays = !0
            }

            function Ae(e, t) {
                return e.material instanceof $.MeshFaceMaterial ? e.material.materials[t.materialIndex] : e.material
            }

            function Te(e) {
                return !(e instanceof $.MeshBasicMaterial && !e.envMap || e instanceof $.MeshDepthMaterial) && (function (e) {
                    return e && void 0 !== e.shading && e.shading === $.SmoothShading
                }(e) ? $.SmoothShading : $.FlatShading)
            }

            function Ee(e) {
                return !!e.vertexColors && e.vertexColors
            }

            function Ce(e) {
                return !!(e.map || e.lightMap || e.bumpMap || e.normalMap || e.specularMap || e instanceof $.ShaderMaterial)
            }

            function Pe(e, t, r, i, o) {
                if (e.__inittedArrays) {
                    var a, n, s, h, l, c, p, u, d, m, y, g, v, x, w, _, b, M, S, A, T, E, C, P, L, D, R, F, U, V, z, B,
                        N, O, k, I, G, W, H, j, X, q = Te(o), Y = Ee(o), K = Ce(o), Z = q === $.SmoothShading, Q = 0,
                        J = 0, ee = 0, te = 0, re = 0, ie = 0, oe = 0, ae = 0, ne = 0, se = 0, he = 0, le = 0,
                        ce = e.__vertexArray, pe = e.__uvArray, ue = e.__uv2Array, fe = e.__normalArray,
                        de = e.__tangentArray, me = e.__colorArray, ye = e.__skinIndexArray, ge = e.__skinWeightArray,
                        ve = e.__morphTargetsArrays, xe = e.__morphNormalsArrays, we = e.__webglCustomAttributesList,
                        _e = e.__faceArray, be = e.__lineArray, Me = t.geometry, Se = Me.verticesNeedUpdate,
                        Ae = Me.elementsNeedUpdate, Pe = Me.uvsNeedUpdate, Le = Me.normalsNeedUpdate,
                        De = Me.tangentsNeedUpdate, Re = Me.colorsNeedUpdate, Fe = Me.morphTargetsNeedUpdate,
                        Ue = Me.vertices, Ve = e.faces3, ze = Me.faces, Be = Me.faceVertexUvs[0],
                        Ne = Me.faceVertexUvs[1], Oe = (Me.colors, Me.skinIndices), ke = Me.skinWeights,
                        Ie = Me.morphTargets, Ge = Me.morphNormals;
                    if (Se) {
                        for (a = 0, n = Ve.length; a < n; a++) y = Ue[(s = ze[Ve[a]]).a], g = Ue[s.b], v = Ue[s.c], ce[J] = y.x, ce[J + 1] = y.y, ce[J + 2] = y.z, ce[J + 3] = g.x, ce[J + 4] = g.y, ce[J + 5] = g.z, ce[J + 6] = v.x, ce[J + 7] = v.y, ce[J + 8] = v.z, J += 9;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglVertexBuffer), f.bufferData(f.ARRAY_BUFFER, ce, r)
                    }
                    if (Fe) for (O = 0, k = Ie.length; O < k; O++) {
                        for (he = 0, a = 0, n = Ve.length; a < n; a++) s = ze[W = Ve[a]], y = Ie[O].vertices[s.a], g = Ie[O].vertices[s.b], v = Ie[O].vertices[s.c], (I = ve[O])[he] = y.x, I[he + 1] = y.y, I[he + 2] = y.z, I[he + 3] = g.x, I[he + 4] = g.y, I[he + 5] = g.z, I[he + 6] = v.x, I[he + 7] = v.y, I[he + 8] = v.z, o.morphNormals && (Z ? (b = (H = Ge[O].vertexNormals[W]).a, M = H.b, S = H.c) : (M = b = Ge[O].faceNormals[W], S = b), (G = xe[O])[he] = b.x, G[he + 1] = b.y, G[he + 2] = b.z, G[he + 3] = M.x, G[he + 4] = M.y, G[he + 5] = M.z, G[he + 6] = S.x, G[he + 7] = S.y, G[he + 8] = S.z), he += 9;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglMorphTargetsBuffers[O]), f.bufferData(f.ARRAY_BUFFER, ve[O], r), o.morphNormals && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglMorphNormalsBuffers[O]), f.bufferData(f.ARRAY_BUFFER, xe[O], r))
                    }
                    if (ke.length) {
                        for (a = 0, n = Ve.length; a < n; a++) C = ke[(s = ze[Ve[a]]).a], P = ke[s.b], L = ke[s.c], ge[se] = C.x, ge[se + 1] = C.y, ge[se + 2] = C.z, ge[se + 3] = C.w, ge[se + 4] = P.x, ge[se + 5] = P.y, ge[se + 6] = P.z, ge[se + 7] = P.w, ge[se + 8] = L.x, ge[se + 9] = L.y, ge[se + 10] = L.z, ge[se + 11] = L.w, D = Oe[s.a], R = Oe[s.b], F = Oe[s.c], ye[se] = D.x, ye[se + 1] = D.y, ye[se + 2] = D.z, ye[se + 3] = D.w, ye[se + 4] = R.x, ye[se + 5] = R.y, ye[se + 6] = R.z, ye[se + 7] = R.w, ye[se + 8] = F.x, ye[se + 9] = F.y, ye[se + 10] = F.z, ye[se + 11] = F.w, se += 12;
                        se > 0 && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglSkinIndicesBuffer), f.bufferData(f.ARRAY_BUFFER, ye, r), f.bindBuffer(f.ARRAY_BUFFER, e.__webglSkinWeightsBuffer), f.bufferData(f.ARRAY_BUFFER, ge, r))
                    }
                    if (Re && Y) {
                        for (a = 0, n = Ve.length; a < n; a++) c = (s = ze[Ve[a]]).vertexColors, p = s.color, 3 === c.length && Y === $.VertexColors ? (A = c[0], T = c[1], E = c[2]) : (A = p, T = p, E = p), me[ne] = A.r, me[ne + 1] = A.g, me[ne + 2] = A.b, me[ne + 3] = T.r, me[ne + 4] = T.g, me[ne + 5] = T.b, me[ne + 6] = E.r, me[ne + 7] = E.g, me[ne + 8] = E.b, ne += 9;
                        ne > 0 && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglColorBuffer), f.bufferData(f.ARRAY_BUFFER, me, r))
                    }
                    if (De && Me.hasTangents) {
                        for (a = 0, n = Ve.length; a < n; a++) x = (u = (s = ze[Ve[a]]).vertexTangents)[0], w = u[1], _ = u[2], de[oe] = x.x, de[oe + 1] = x.y, de[oe + 2] = x.z, de[oe + 3] = x.w, de[oe + 4] = w.x, de[oe + 5] = w.y, de[oe + 6] = w.z, de[oe + 7] = w.w, de[oe + 8] = _.x, de[oe + 9] = _.y, de[oe + 10] = _.z, de[oe + 11] = _.w, oe += 12;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglTangentBuffer), f.bufferData(f.ARRAY_BUFFER, de, r)
                    }
                    if (Le && q) {
                        for (a = 0, n = Ve.length; a < n; a++) if (h = (s = ze[Ve[a]]).vertexNormals, l = s.normal, 3 === h.length && Z) for (U = 0; U < 3; U++) z = h[U], fe[ie] = z.x, fe[ie + 1] = z.y, fe[ie + 2] = z.z, ie += 3; else for (U = 0; U < 3; U++) fe[ie] = l.x, fe[ie + 1] = l.y, fe[ie + 2] = l.z, ie += 3;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglNormalBuffer), f.bufferData(f.ARRAY_BUFFER, fe, r)
                    }
                    if (Pe && Be && K) {
                        for (a = 0, n = Ve.length; a < n; a++) if (void 0 !== (d = Be[Ve[a]])) for (U = 0; U < 3; U++) B = d[U], pe[ee] = B.x, pe[ee + 1] = B.y, ee += 2;
                        ee > 0 && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglUVBuffer), f.bufferData(f.ARRAY_BUFFER, pe, r))
                    }
                    if (Pe && Ne && K) {
                        for (a = 0, n = Ve.length; a < n; a++) if (void 0 !== (m = Ne[Ve[a]])) for (U = 0; U < 3; U++) N = m[U], ue[te] = N.x, ue[te + 1] = N.y, te += 2;
                        te > 0 && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglUV2Buffer), f.bufferData(f.ARRAY_BUFFER, ue, r))
                    }
                    if (Ae) {
                        for (a = 0, n = Ve.length; a < n; a++) _e[re] = Q, _e[re + 1] = Q + 1, _e[re + 2] = Q + 2, re += 3, be[ae] = Q, be[ae + 1] = Q + 1, be[ae + 2] = Q, be[ae + 3] = Q + 2, be[ae + 4] = Q + 1, be[ae + 5] = Q + 2, ae += 6, Q += 3;
                        f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, e.__webglFaceBuffer), f.bufferData(f.ELEMENT_ARRAY_BUFFER, _e, r), f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, e.__webglLineBuffer), f.bufferData(f.ELEMENT_ARRAY_BUFFER, be, r)
                    }
                    if (we) for (U = 0, V = we.length; U < V; U++) if ((X = we[U]).__original.needsUpdate) {
                        if (le = 0, 0, 1 === X.size) {
                            if (void 0 === X.boundTo || "vertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) s = ze[Ve[a]], X.array[le] = X.value[s.a], X.array[le + 1] = X.value[s.b], X.array[le + 2] = X.value[s.c], le += 3; else if ("faces" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) j = X.value[Ve[a]], X.array[le] = j, X.array[le + 1] = j, X.array[le + 2] = j, le += 3
                        } else if (2 === X.size) {
                            if (void 0 === X.boundTo || "vertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) s = ze[Ve[a]], y = X.value[s.a], g = X.value[s.b], v = X.value[s.c], X.array[le] = y.x, X.array[le + 1] = y.y, X.array[le + 2] = g.x, X.array[le + 3] = g.y, X.array[le + 4] = v.x, X.array[le + 5] = v.y, le += 6; else if ("faces" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) y = j = X.value[Ve[a]], g = j, v = j, X.array[le] = y.x, X.array[le + 1] = y.y, X.array[le + 2] = g.x, X.array[le + 3] = g.y, X.array[le + 4] = v.x, X.array[le + 5] = v.y, le += 6
                        } else if (3 === X.size) {
                            var We;
                            if (We = "c" === X.type ? ["r", "g", "b"] : ["x", "y", "z"], void 0 === X.boundTo || "vertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) s = ze[Ve[a]], y = X.value[s.a], g = X.value[s.b], v = X.value[s.c], X.array[le] = y[We[0]], X.array[le + 1] = y[We[1]], X.array[le + 2] = y[We[2]], X.array[le + 3] = g[We[0]], X.array[le + 4] = g[We[1]], X.array[le + 5] = g[We[2]], X.array[le + 6] = v[We[0]], X.array[le + 7] = v[We[1]], X.array[le + 8] = v[We[2]], le += 9; else if ("faces" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) y = j = X.value[Ve[a]], g = j, v = j, X.array[le] = y[We[0]], X.array[le + 1] = y[We[1]], X.array[le + 2] = y[We[2]], X.array[le + 3] = g[We[0]], X.array[le + 4] = g[We[1]], X.array[le + 5] = g[We[2]], X.array[le + 6] = v[We[0]], X.array[le + 7] = v[We[1]], X.array[le + 8] = v[We[2]], le += 9; else if ("faceVertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) y = (j = X.value[Ve[a]])[0], g = j[1], v = j[2], X.array[le] = y[We[0]], X.array[le + 1] = y[We[1]], X.array[le + 2] = y[We[2]], X.array[le + 3] = g[We[0]], X.array[le + 4] = g[We[1]], X.array[le + 5] = g[We[2]], X.array[le + 6] = v[We[0]], X.array[le + 7] = v[We[1]], X.array[le + 8] = v[We[2]], le += 9
                        } else if (4 === X.size) if (void 0 === X.boundTo || "vertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) s = ze[Ve[a]], y = X.value[s.a], g = X.value[s.b], v = X.value[s.c], X.array[le] = y.x, X.array[le + 1] = y.y, X.array[le + 2] = y.z, X.array[le + 3] = y.w, X.array[le + 4] = g.x, X.array[le + 5] = g.y, X.array[le + 6] = g.z, X.array[le + 7] = g.w, X.array[le + 8] = v.x, X.array[le + 9] = v.y, X.array[le + 10] = v.z, X.array[le + 11] = v.w, le += 12; else if ("faces" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) y = j = X.value[Ve[a]], g = j, v = j, X.array[le] = y.x, X.array[le + 1] = y.y, X.array[le + 2] = y.z, X.array[le + 3] = y.w, X.array[le + 4] = g.x, X.array[le + 5] = g.y, X.array[le + 6] = g.z, X.array[le + 7] = g.w, X.array[le + 8] = v.x, X.array[le + 9] = v.y, X.array[le + 10] = v.z, X.array[le + 11] = v.w, le += 12; else if ("faceVertices" === X.boundTo) for (a = 0, n = Ve.length; a < n; a++) y = (j = X.value[Ve[a]])[0], g = j[1], v = j[2], X.array[le] = y.x, X.array[le + 1] = y.y, X.array[le + 2] = y.z, X.array[le + 3] = y.w, X.array[le + 4] = g.x, X.array[le + 5] = g.y, X.array[le + 6] = g.z, X.array[le + 7] = g.w, X.array[le + 8] = v.x, X.array[le + 9] = v.y, X.array[le + 10] = v.z, X.array[le + 11] = v.w, le += 12;
                        f.bindBuffer(f.ARRAY_BUFFER, X.buffer), f.bufferData(f.ARRAY_BUFFER, X.array, r)
                    }
                    i && (delete e.__inittedArrays, delete e.__colorArray, delete e.__normalArray, delete e.__tangentArray, delete e.__uvArray, delete e.__uv2Array, delete e.__faceArray, delete e.__vertexArray, delete e.__lineArray, delete e.__skinIndexArray, delete e.__skinWeightArray)
                }
            }

            function Le(e, t, r, i) {
                for (var o in t) {
                    var a = t[o], n = r[o];
                    if (a >= 0) if (n) {
                        var s = n.itemSize;
                        f.bindBuffer(f.ARRAY_BUFFER, n.buffer), Re(a), f.vertexAttribPointer(a, s, f.FLOAT, !1, 0, i * s * 4)
                    } else e.defaultAttributeValues && (2 === e.defaultAttributeValues[o].length ? f.vertexAttrib2fv(a, e.defaultAttributeValues[o]) : 3 === e.defaultAttributeValues[o].length && f.vertexAttrib3fv(a, e.defaultAttributeValues[o]))
                }
                Fe()
            }

            function De() {
                for (var e = 0, t = j.length; e < t; e++) j[e] = 0
            }

            function Re(e) {
                j[e] = 1, 0 === X[e] && (f.enableVertexAttribArray(e), X[e] = 1)
            }

            function Fe() {
                for (var e = 0, t = X.length; e < t; e++) X[e] !== j[e] && (f.disableVertexAttribArray(e), X[e] = 0)
            }

            function Ue(e, t) {
                return e.z !== t.z ? t.z - e.z : e.id - t.id
            }

            function Ve(e, t) {
                return t[0] - e[0]
            }

            function ze(e, t, r) {
                if (e.length) for (var i = 0, o = e.length; i < o; i++) _ = null, A = null, P = -1, F = -1, U = -1, E = -1, C = -1, S = -1, M = -1, J = !0, e[i].render(t, r, W, H), _ = null, A = null, P = -1, F = -1, U = -1, E = -1, C = -1, S = -1, M = -1, J = !0
            }

            function Be(e, t, r, i, o, a, n, s) {
                var h, l, c, p, u, f, d;
                t ? (u = e.length - 1, f = -1, d = -1) : (u = 0, f = e.length, d = 1);
                for (var m = u; m !== f; m += d) if ((h = e[m]).render) {
                    if (l = h.object, c = h.buffer, s) p = s; else {
                        if (!(p = h[r])) continue;
                        n && x.setBlending(p.blending, p.blendEquation, p.blendSrc, p.blendDst), x.setDepthTest(p.depthTest), x.setDepthWrite(p.depthWrite), rt(p.polygonOffset, p.polygonOffsetFactor, p.polygonOffsetUnits)
                    }
                    x.setMaterialFaces(p), c instanceof $.BufferGeometry ? x.renderBufferDirect(i, o, a, p, c, l) : x.renderBuffer(i, o, a, p, c, l)
                }
            }

            function Ne(e, t, r, i, o, a, n) {
                for (var s, h, l, c = 0, p = e.length; c < p; c++) if ((h = (s = e[c]).object).visible) {
                    if (n) l = n; else {
                        if (!(l = s[t])) continue;
                        a && x.setBlending(l.blending, l.blendEquation, l.blendSrc, l.blendDst), x.setDepthTest(l.depthTest), x.setDepthWrite(l.depthWrite), rt(l.polygonOffset, l.polygonOffsetFactor, l.polygonOffsetUnits)
                    }
                    x.renderImmediateObject(r, i, o, l, h)
                }
            }

            function Oe(e) {
                var t = e.object.material;
                t.transparent ? (e.transparent = t, e.opaque = null) : (e.opaque = t, e.transparent = null)
            }

            function ke(e) {
                var t = e.object, r = e.buffer, i = t.geometry, o = t.material;
                if (o instanceof $.MeshFaceMaterial) {
                    var a = i instanceof $.BufferGeometry ? 0 : r.materialIndex;
                    (o = o.materials[a]).transparent ? (e.transparent = o, e.opaque = null) : (e.opaque = o, e.transparent = null)
                } else o && (o.transparent ? (e.transparent = o, e.opaque = null) : (e.opaque = o, e.transparent = null))
            }

            function Ie(e, t) {
                var r, i, o, a;
                if (void 0 === e.__webglInit) if (e.__webglInit = !0, e._modelViewMatrix = new $.Matrix4, e._normalMatrix = new $.Matrix3, void 0 === (i = e.geometry)) ; else if (void 0 === i.__webglInit) if (i.__webglInit = !0, i.addEventListener("dispose", de), i instanceof $.BufferGeometry) !function (e) {
                    for (var t in e.attributes) {
                        var r = "index" === t ? f.ELEMENT_ARRAY_BUFFER : f.ARRAY_BUFFER, i = e.attributes[t];
                        i.buffer = f.createBuffer(), f.bindBuffer(r, i.buffer), f.bufferData(r, i.array, f.STATIC_DRAW)
                    }
                }(i); else if (e instanceof $.Mesh) for (r in o = e.material, void 0 === i.geometryGroups && i.makeGroups(o instanceof $.MeshFaceMaterial, v ? 4294967296 : 65535), i.geometryGroups) (a = i.geometryGroups[r]).__webglVertexBuffer || (fe(a), Se(a, e), i.verticesNeedUpdate = !0, i.morphTargetsNeedUpdate = !0, i.elementsNeedUpdate = !0, i.uvsNeedUpdate = !0, i.normalsNeedUpdate = !0, i.tangentsNeedUpdate = !0, i.colorsNeedUpdate = !0); else e instanceof $.Line ? i.__webglVertexBuffer || (!function (e) {
                    e.__webglVertexBuffer = f.createBuffer(), e.__webglColorBuffer = f.createBuffer(), e.__webglLineDistanceBuffer = f.createBuffer(), x.info.memory.geometries++
                }(i), function (e, t) {
                    var r = e.vertices.length;
                    e.__vertexArray = new Float32Array(3 * r), e.__colorArray = new Float32Array(3 * r), e.__lineDistanceArray = new Float32Array(1 * r), e.__webglLineCount = r, Me(e, t)
                }(i, e), i.verticesNeedUpdate = !0, i.colorsNeedUpdate = !0, i.lineDistancesNeedUpdate = !0) : e instanceof $.ParticleSystem && (i.__webglVertexBuffer || (!function (e) {
                    e.__webglVertexBuffer = f.createBuffer(), e.__webglColorBuffer = f.createBuffer(), x.info.memory.geometries++
                }(i), function (e, t) {
                    var r = e.vertices.length;
                    e.__vertexArray = new Float32Array(3 * r), e.__colorArray = new Float32Array(3 * r), e.__sortArray = [], e.__webglParticleCount = r, Me(e, t)
                }(i, e), i.verticesNeedUpdate = !0, i.colorsNeedUpdate = !0));
                if (void 0 === e.__webglActive) {
                    if (e instanceof $.Mesh) {
                        if ((i = e.geometry) instanceof $.BufferGeometry) Ge(t.__webglObjects, i, e); else if (i instanceof $.Geometry) for (r in i.geometryGroups) a = i.geometryGroups[r], Ge(t.__webglObjects, a, e)
                    } else e instanceof $.Line || e instanceof $.ParticleSystem ? (i = e.geometry, Ge(t.__webglObjects, i, e)) : e instanceof $.ImmediateRenderObject || e.immediateRenderCallback ? function (e, t) {
                        e.push({id: null, object: t, opaque: null, transparent: null, z: 0})
                    }(t.__webglObjectsImmediate, e) : e instanceof $.Sprite ? t.__webglSprites.push(e) : e instanceof $.LensFlare && t.__webglFlares.push(e);
                    e.__webglActive = !0
                }
            }

            function Ge(e, t, r) {
                e.push({id: null, buffer: t, object: r, opaque: null, transparent: null, z: 0})
            }

            function We(e) {
                var t, r, i, o = e.geometry;
                if (o instanceof $.BufferGeometry) !function (e, t) {
                    var r, i, o = e.attributes;
                    for (r in o) (i = o[r]).needsUpdate && ("index" === r ? (f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, i.buffer), f.bufferData(f.ELEMENT_ARRAY_BUFFER, i.array, t)) : (f.bindBuffer(f.ARRAY_BUFFER, i.buffer), f.bufferData(f.ARRAY_BUFFER, i.array, t)), i.needsUpdate = !1)
                }(o, f.DYNAMIC_DRAW); else if (e instanceof $.Mesh) {
                    for (var a = 0, n = o.geometryGroupsList.length; a < n; a++) i = Ae(e, t = o.geometryGroupsList[a]), o.buffersNeedUpdate && Se(t, e), r = i.attributes && He(i), (o.verticesNeedUpdate || o.morphTargetsNeedUpdate || o.elementsNeedUpdate || o.uvsNeedUpdate || o.normalsNeedUpdate || o.colorsNeedUpdate || o.tangentsNeedUpdate || r) && Pe(t, e, f.DYNAMIC_DRAW, !o.dynamic, i);
                    o.verticesNeedUpdate = !1, o.morphTargetsNeedUpdate = !1, o.elementsNeedUpdate = !1, o.uvsNeedUpdate = !1, o.normalsNeedUpdate = !1, o.colorsNeedUpdate = !1, o.tangentsNeedUpdate = !1, o.buffersNeedUpdate = !1, i.attributes && je(i)
                } else e instanceof $.Line ? (r = (i = Ae(e, o)).attributes && He(i), (o.verticesNeedUpdate || o.colorsNeedUpdate || o.lineDistancesNeedUpdate || r) && function (e, t) {
                    var r, i, o, a, n, s, h, l, c, p, u, d, m = e.vertices, y = e.colors, g = e.lineDistances,
                        v = m.length, x = y.length, w = g.length, _ = e.__vertexArray, b = e.__colorArray,
                        M = e.__lineDistanceArray, S = e.verticesNeedUpdate, A = e.colorsNeedUpdate,
                        T = e.lineDistancesNeedUpdate, E = e.__webglCustomAttributesList;
                    if (S) {
                        for (r = 0; r < v; r++) a = m[r], _[n = 3 * r] = a.x, _[n + 1] = a.y, _[n + 2] = a.z;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglVertexBuffer), f.bufferData(f.ARRAY_BUFFER, _, t)
                    }
                    if (A) {
                        for (i = 0; i < x; i++) s = y[i], b[n = 3 * i] = s.r, b[n + 1] = s.g, b[n + 2] = s.b;
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglColorBuffer), f.bufferData(f.ARRAY_BUFFER, b, t)
                    }
                    if (T) {
                        for (o = 0; o < w; o++) M[o] = g[o];
                        f.bindBuffer(f.ARRAY_BUFFER, e.__webglLineDistanceBuffer), f.bufferData(f.ARRAY_BUFFER, M, t)
                    }
                    if (E) for (h = 0, l = E.length; h < l; h++) if ((d = E[h]).needsUpdate && (void 0 === d.boundTo || "vertices" === d.boundTo)) {
                        if (n = 0, p = d.value.length, 1 === d.size) for (c = 0; c < p; c++) d.array[c] = d.value[c]; else if (2 === d.size) for (c = 0; c < p; c++) u = d.value[c], d.array[n] = u.x, d.array[n + 1] = u.y, n += 2; else if (3 === d.size) if ("c" === d.type) for (c = 0; c < p; c++) u = d.value[c], d.array[n] = u.r, d.array[n + 1] = u.g, d.array[n + 2] = u.b, n += 3; else for (c = 0; c < p; c++) u = d.value[c], d.array[n] = u.x, d.array[n + 1] = u.y, d.array[n + 2] = u.z, n += 3; else if (4 === d.size) for (c = 0; c < p; c++) u = d.value[c], d.array[n] = u.x, d.array[n + 1] = u.y, d.array[n + 2] = u.z, d.array[n + 3] = u.w, n += 4;
                        f.bindBuffer(f.ARRAY_BUFFER, d.buffer), f.bufferData(f.ARRAY_BUFFER, d.array, t)
                    }
                }(o, f.DYNAMIC_DRAW), o.verticesNeedUpdate = !1, o.colorsNeedUpdate = !1, o.lineDistancesNeedUpdate = !1, i.attributes && je(i)) : e instanceof $.ParticleSystem && (r = (i = Ae(e, o)).attributes && He(i), (o.verticesNeedUpdate || o.colorsNeedUpdate || e.sortParticles || r) && function (e, t, r) {
                    var i, o, a, n, s, h, l, c, p, u, d, m, y = e.vertices, g = y.length, v = e.colors, x = v.length,
                        w = e.__vertexArray, _ = e.__colorArray, b = e.__sortArray, M = e.verticesNeedUpdate,
                        S = (e.elementsNeedUpdate, e.colorsNeedUpdate), A = e.__webglCustomAttributesList;
                    if (r.sortParticles) {
                        for (K.copy(Y), K.multiply(r.matrixWorld), i = 0; i < g; i++) a = y[i], Z.copy(a), Z.applyProjection(K), b[i] = [Z.z, i];
                        for (b.sort(Ve), i = 0; i < g; i++) a = y[b[i][1]], w[n = 3 * i] = a.x, w[n + 1] = a.y, w[n + 2] = a.z;
                        for (o = 0; o < x; o++) n = 3 * o, h = v[b[o][1]], _[n] = h.r, _[n + 1] = h.g, _[n + 2] = h.b;
                        if (A) for (l = 0, c = A.length; l < c; l++) if (void 0 === (m = A[l]).boundTo || "vertices" === m.boundTo) if (n = 0, u = m.value.length, 1 === m.size) for (p = 0; p < u; p++) s = b[p][1], m.array[p] = m.value[s]; else if (2 === m.size) for (p = 0; p < u; p++) s = b[p][1], d = m.value[s], m.array[n] = d.x, m.array[n + 1] = d.y, n += 2; else if (3 === m.size) if ("c" === m.type) for (p = 0; p < u; p++) s = b[p][1], d = m.value[s], m.array[n] = d.r, m.array[n + 1] = d.g, m.array[n + 2] = d.b, n += 3; else for (p = 0; p < u; p++) s = b[p][1], d = m.value[s], m.array[n] = d.x, m.array[n + 1] = d.y, m.array[n + 2] = d.z, n += 3; else if (4 === m.size) for (p = 0; p < u; p++) s = b[p][1], d = m.value[s], m.array[n] = d.x, m.array[n + 1] = d.y, m.array[n + 2] = d.z, m.array[n + 3] = d.w, n += 4
                    } else {
                        if (M) for (i = 0; i < g; i++) a = y[i], w[n = 3 * i] = a.x, w[n + 1] = a.y, w[n + 2] = a.z;
                        if (S) for (o = 0; o < x; o++) h = v[o], _[n = 3 * o] = h.r, _[n + 1] = h.g, _[n + 2] = h.b;
                        if (A) for (l = 0, c = A.length; l < c; l++) if ((m = A[l]).needsUpdate && (void 0 === m.boundTo || "vertices" === m.boundTo)) if (u = m.value.length, n = 0, 1 === m.size) for (p = 0; p < u; p++) m.array[p] = m.value[p]; else if (2 === m.size) for (p = 0; p < u; p++) d = m.value[p], m.array[n] = d.x, m.array[n + 1] = d.y, n += 2; else if (3 === m.size) if ("c" === m.type) for (p = 0; p < u; p++) d = m.value[p], m.array[n] = d.r, m.array[n + 1] = d.g, m.array[n + 2] = d.b, n += 3; else for (p = 0; p < u; p++) d = m.value[p], m.array[n] = d.x, m.array[n + 1] = d.y, m.array[n + 2] = d.z, n += 3; else if (4 === m.size) for (p = 0; p < u; p++) d = m.value[p], m.array[n] = d.x, m.array[n + 1] = d.y, m.array[n + 2] = d.z, m.array[n + 3] = d.w, n += 4
                    }
                    if ((M || r.sortParticles) && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglVertexBuffer), f.bufferData(f.ARRAY_BUFFER, w, t)), (S || r.sortParticles) && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglColorBuffer), f.bufferData(f.ARRAY_BUFFER, _, t)), A) for (l = 0, c = A.length; l < c; l++) ((m = A[l]).needsUpdate || r.sortParticles) && (f.bindBuffer(f.ARRAY_BUFFER, m.buffer), f.bufferData(f.ARRAY_BUFFER, m.array, t))
                }(o, f.DYNAMIC_DRAW, e), o.verticesNeedUpdate = !1, o.colorsNeedUpdate = !1, i.attributes && je(i))
            }

            function He(e) {
                for (var t in e.attributes) if (e.attributes[t].needsUpdate) return !0;
                return !1
            }

            function je(e) {
                for (var t in e.attributes) e.attributes[t].needsUpdate = !1
            }

            function Xe(e, t) {
                e instanceof $.Mesh || e instanceof $.ParticleSystem || e instanceof $.Line ? qe(t.__webglObjects, e) : e instanceof $.Sprite ? Ye(t.__webglSprites, e) : e instanceof $.LensFlare ? Ye(t.__webglFlares, e) : (e instanceof $.ImmediateRenderObject || e.immediateRenderCallback) && qe(t.__webglObjectsImmediate, e), delete e.__webglActive
            }

            function qe(e, t) {
                for (var r = e.length - 1; r >= 0; r--) e[r].object === t && e.splice(r, 1)
            }

            function Ye(e, t) {
                for (var r = e.length - 1; r >= 0; r--) e[r] === t && e.splice(r, 1)
            }

            function Ke(e, r, i, o, a) {
                T = 0, o.needsUpdate && (o.program && be(o), x.initMaterial(o, r, i, a), o.needsUpdate = !1), o.morphTargets && (a.__webglMorphTargetInfluences || (a.__webglMorphTargetInfluences = new Float32Array(x.maxMorphTargets)));
                var n = !1, s = o.program, h = s.uniforms, l = o.uniforms;
                if (s.id !== _ && (f.useProgram(s.program), _ = s.id, n = !0), o.id !== M && (M = o.id, n = !0), (n || e !== A) && (f.uniformMatrix4fv(h.projectionMatrix, !1, e.projectionMatrix.elements), c && f.uniform1f(h.logDepthBufFC, 2 / (Math.log(e.far + 1) / Math.LN2)), e !== A && (A = e)), o.skinning) if (ne && a.skeleton.useVertexTexture) {
                    if (null !== h.boneTexture) {
                        var p = Qe();
                        f.uniform1i(h.boneTexture, p), x.setTexture(a.skeleton.boneTexture, p)
                    }
                    null !== h.boneTextureWidth && f.uniform1i(h.boneTextureWidth, a.skeleton.boneTextureWidth), null !== h.boneTextureHeight && f.uniform1i(h.boneTextureHeight, a.skeleton.boneTextureHeight)
                } else null !== h.boneGlobalMatrices && f.uniformMatrix4fv(h.boneGlobalMatrices, !1, a.skeleton.boneMatrices);
                return n && (i && o.fog && function (e, t) {
                    e.fogColor.value = t.color, t instanceof $.Fog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t instanceof $.FogExp2 && (e.fogDensity.value = t.density)
                }(l, i), (o instanceof $.MeshPhongMaterial || o instanceof $.MeshLambertMaterial || o.lights) && (J && (!function (e, t) {
                    var r, i, o, a, n, s, h, l, c, p = 0, u = 0, f = 0, d = ee, m = d.directional.colors,
                        y = d.directional.positions, g = d.point.colors, v = d.point.positions, w = d.point.distances,
                        _ = d.spot.colors, b = d.spot.positions, M = d.spot.distances, S = d.spot.directions,
                        A = d.spot.anglesCos, T = d.spot.exponents, E = d.hemi.skyColors, C = d.hemi.groundColors,
                        P = d.hemi.positions, L = 0, D = 0, R = 0, F = 0, U = 0, V = 0, z = 0, B = 0, N = 0, O = 0,
                        k = 0, I = 0;
                    for (r = 0, i = t.length; r < i; r++) if (!(o = t[r]).onlyShadow) if (a = o.color, h = o.intensity, c = o.distance, o instanceof $.AmbientLight) {
                        if (!o.visible) continue;
                        x.gammaInput ? (p += a.r * a.r, u += a.g * a.g, f += a.b * a.b) : (p += a.r, u += a.g, f += a.b)
                    } else if (o instanceof $.DirectionalLight) {
                        if (U += 1, !o.visible) continue;
                        if (Q.setFromMatrixPosition(o.matrixWorld), Z.setFromMatrixPosition(o.target.matrixWorld), Q.sub(Z), Q.normalize(), 0 === Q.x && 0 === Q.y && 0 === Q.z) continue;
                        y[N = 3 * L] = Q.x, y[N + 1] = Q.y, y[N + 2] = Q.z, x.gammaInput ? $e(m, N, a, h * h) : et(m, N, a, h), L += 1
                    } else if (o instanceof $.PointLight) {
                        if (V += 1, !o.visible) continue;
                        O = 3 * D, x.gammaInput ? $e(g, O, a, h * h) : et(g, O, a, h), Z.setFromMatrixPosition(o.matrixWorld), v[O] = Z.x, v[O + 1] = Z.y, v[O + 2] = Z.z, w[D] = c, D += 1
                    } else if (o instanceof $.SpotLight) {
                        if (z += 1, !o.visible) continue;
                        k = 3 * R, x.gammaInput ? $e(_, k, a, h * h) : et(_, k, a, h), Z.setFromMatrixPosition(o.matrixWorld), b[k] = Z.x, b[k + 1] = Z.y, b[k + 2] = Z.z, M[R] = c, Q.copy(Z), Z.setFromMatrixPosition(o.target.matrixWorld), Q.sub(Z), Q.normalize(), S[k] = Q.x, S[k + 1] = Q.y, S[k + 2] = Q.z, A[R] = Math.cos(o.angle), T[R] = o.exponent, R += 1
                    } else if (o instanceof $.HemisphereLight) {
                        if (B += 1, !o.visible) continue;
                        if (Q.setFromMatrixPosition(o.matrixWorld), Q.normalize(), 0 === Q.x && 0 === Q.y && 0 === Q.z) continue;
                        P[I = 3 * F] = Q.x, P[I + 1] = Q.y, P[I + 2] = Q.z, n = o.color, s = o.groundColor, x.gammaInput ? ($e(E, I, n, l = h * h), $e(C, I, s, l)) : (et(E, I, n, h), et(C, I, s, h)), F += 1
                    }
                    for (r = 3 * L, i = Math.max(m.length, 3 * U); r < i; r++) m[r] = 0;
                    for (r = 3 * D, i = Math.max(g.length, 3 * V); r < i; r++) g[r] = 0;
                    for (r = 3 * R, i = Math.max(_.length, 3 * z); r < i; r++) _[r] = 0;
                    for (r = 3 * F, i = Math.max(E.length, 3 * B); r < i; r++) E[r] = 0;
                    for (r = 3 * F, i = Math.max(C.length, 3 * B); r < i; r++) C[r] = 0;
                    d.directional.length = L, d.point.length = D, d.spot.length = R, d.hemi.length = F, d.ambient[0] = p, d.ambient[1] = u, d.ambient[2] = f
                }(0, r), J = !1), function (e, t) {
                    e.ambientLightColor.value = t.ambient, e.directionalLightColor.value = t.directional.colors, e.directionalLightDirection.value = t.directional.positions, e.pointLightColor.value = t.point.colors, e.pointLightPosition.value = t.point.positions, e.pointLightDistance.value = t.point.distances, e.spotLightColor.value = t.spot.colors, e.spotLightPosition.value = t.spot.positions, e.spotLightDistance.value = t.spot.distances, e.spotLightDirection.value = t.spot.directions, e.spotLightAngleCos.value = t.spot.anglesCos, e.spotLightExponent.value = t.spot.exponents, e.hemisphereLightSkyColor.value = t.hemi.skyColors, e.hemisphereLightGroundColor.value = t.hemi.groundColors, e.hemisphereLightDirection.value = t.hemi.positions
                }(l, ee)), (o instanceof $.MeshBasicMaterial || o instanceof $.MeshLambertMaterial || o instanceof $.MeshPhongMaterial) && function (e, t) {
                    e.opacity.value = t.opacity, x.gammaInput ? e.diffuse.value.copyGammaToLinear(t.color) : e.diffuse.value = t.color;
                    e.map.value = t.map, e.lightMap.value = t.lightMap, e.specularMap.value = t.specularMap, t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale);
                    t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale));
                    var r;
                    t.map ? r = t.map : t.specularMap ? r = t.specularMap : t.normalMap ? r = t.normalMap : t.bumpMap && (r = t.bumpMap);
                    if (void 0 !== r) {
                        var i = r.offset, o = r.repeat;
                        e.offsetRepeat.value.set(i.x, i.y, o.x, o.y)
                    }
                    e.envMap.value = t.envMap, e.flipEnvMap.value = t.envMap instanceof $.WebGLRenderTargetCube ? 1 : -1, x.gammaInput, e.reflectivity.value = t.reflectivity;
                    e.refractionRatio.value = t.refractionRatio, e.combine.value = t.combine, e.useRefract.value = t.envMap && t.envMap.mapping instanceof $.CubeRefractionMapping
                }(l, o), o instanceof $.LineBasicMaterial ? Ze(l, o) : o instanceof $.LineDashedMaterial ? (Ze(l, o), function (e, t) {
                    e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
                }(l, o)) : o instanceof $.ParticleSystemMaterial ? function (e, r) {
                    e.psColor.value = r.color, e.opacity.value = r.opacity, e.size.value = r.size, e.scale.value = t.height / 2, e.map.value = r.map
                }(l, o) : o instanceof $.MeshPhongMaterial ? function (e, t) {
                    e.shininess.value = t.shininess, x.gammaInput ? (e.ambient.value.copyGammaToLinear(t.ambient), e.emissive.value.copyGammaToLinear(t.emissive), e.specular.value.copyGammaToLinear(t.specular)) : (e.ambient.value = t.ambient, e.emissive.value = t.emissive, e.specular.value = t.specular);
                    t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
                }(l, o) : o instanceof $.MeshLambertMaterial ? function (e, t) {
                    x.gammaInput ? (e.ambient.value.copyGammaToLinear(t.ambient), e.emissive.value.copyGammaToLinear(t.emissive)) : (e.ambient.value = t.ambient, e.emissive.value = t.emissive);
                    t.wrapAround && e.wrapRGB.value.copy(t.wrapRGB)
                }(l, o) : o instanceof $.MeshDepthMaterial ? (l.mNear.value = e.near, l.mFar.value = e.far, l.opacity.value = o.opacity) : o instanceof $.MeshNormalMaterial && (l.opacity.value = o.opacity), a.receiveShadow && !o._shadowPass && function (e, t) {
                    if (e.shadowMatrix) for (var r = 0, i = 0, o = t.length; i < o; i++) {
                        var a = t[i];
                        a.castShadow && ((a instanceof $.SpotLight || a instanceof $.DirectionalLight && !a.shadowCascade) && (e.shadowMap.value[r] = a.shadowMap, e.shadowMapSize.value[r] = a.shadowMapSize, e.shadowMatrix.value[r] = a.shadowMatrix, e.shadowDarkness.value[r] = a.shadowDarkness, e.shadowBias.value[r] = a.shadowBias, r++))
                    }
                }(l, r), function (e, t) {
                    var r, i, o, a, n, s, h, l, c, p, u;
                    for (c = 0, p = t.length; c < p; c++) if (a = e.uniforms[t[c][1]]) if (r = t[c][0], o = r.type, i = r.value, "i" === o) f.uniform1i(a, i); else if ("f" === o) f.uniform1f(a, i); else if ("v2" === o) f.uniform2f(a, i.x, i.y); else if ("v3" === o) f.uniform3f(a, i.x, i.y, i.z); else if ("v4" === o) f.uniform4f(a, i.x, i.y, i.z, i.w); else if ("c" === o) f.uniform3f(a, i.r, i.g, i.b); else if ("iv1" === o) f.uniform1iv(a, i); else if ("iv" === o) f.uniform3iv(a, i); else if ("fv1" === o) f.uniform1fv(a, i); else if ("fv" === o) f.uniform3fv(a, i); else if ("v2v" === o) {
                        for (void 0 === r._array && (r._array = new Float32Array(2 * i.length)), h = 0, l = i.length; h < l; h++) u = 2 * h, r._array[u] = i[h].x, r._array[u + 1] = i[h].y;
                        f.uniform2fv(a, r._array)
                    } else if ("v3v" === o) {
                        for (void 0 === r._array && (r._array = new Float32Array(3 * i.length)), h = 0, l = i.length; h < l; h++) u = 3 * h, r._array[u] = i[h].x, r._array[u + 1] = i[h].y, r._array[u + 2] = i[h].z;
                        f.uniform3fv(a, r._array)
                    } else if ("v4v" === o) {
                        for (void 0 === r._array && (r._array = new Float32Array(4 * i.length)), h = 0, l = i.length; h < l; h++) u = 4 * h, r._array[u] = i[h].x, r._array[u + 1] = i[h].y, r._array[u + 2] = i[h].z, r._array[u + 3] = i[h].w;
                        f.uniform4fv(a, r._array)
                    } else if ("m3" === o) f.uniformMatrix3fv(a, !1, i.elements); else if ("m3v" === o) {
                        for (void 0 === r._array && (r._array = new Float32Array(9 * i.length)), h = 0, l = i.length; h < l; h++) i[h].flattenToArrayOffset(r._array, 9 * h);
                        f.uniformMatrix3fv(a, !1, r._array)
                    } else if ("m4" === o) f.uniformMatrix4fv(a, !1, i.elements); else if ("m4v" === o) {
                        for (void 0 === r._array && (r._array = new Float32Array(16 * i.length)), h = 0, l = i.length; h < l; h++) i[h].flattenToArrayOffset(r._array, 16 * h);
                        f.uniformMatrix4fv(a, !1, r._array)
                    } else if ("t" === o) {
                        if (n = i, s = Qe(), f.uniform1i(a, s), !n) continue;
                        n.image instanceof Array && 6 === n.image.length ? at(n, s) : n instanceof $.WebGLRenderTargetCube ? nt(n, s) : x.setTexture(n, s)
                    } else if ("tv" === o) {
                        for (void 0 === r._array && (r._array = []), h = 0, l = r.value.length; h < l; h++) r._array[h] = Qe();
                        for (f.uniform1iv(a, r._array), h = 0, l = r.value.length; h < l; h++) n = r.value[h], s = r._array[h], n && x.setTexture(n, s)
                    } else console.warn("THREE.WebGLRenderer: Unknown uniform type: " + o)
                }(s, o.uniformsList), (o instanceof $.ShaderMaterial || o instanceof $.MeshPhongMaterial || o.envMap) && null !== h.cameraPosition && (Z.setFromMatrixPosition(e.matrixWorld), f.uniform3f(h.cameraPosition, Z.x, Z.y, Z.z)), (o instanceof $.MeshPhongMaterial || o instanceof $.MeshLambertMaterial || o instanceof $.ShaderMaterial || o.skinning) && null !== h.viewMatrix && f.uniformMatrix4fv(h.viewMatrix, !1, e.matrixWorldInverse.elements)), function (e, t) {
                    f.uniformMatrix4fv(e.modelViewMatrix, !1, t._modelViewMatrix.elements), e.normalMatrix && f.uniformMatrix3fv(e.normalMatrix, !1, t._normalMatrix.elements)
                }(h, a), null !== h.modelMatrix && f.uniformMatrix4fv(h.modelMatrix, !1, a.matrixWorld.elements), s
            }

            function Ze(e, t) {
                e.diffuse.value = t.color, e.opacity.value = t.opacity
            }

            function Qe() {
                var e = T;
                return e >= te && console.warn("WebGLRenderer: trying to use " + e + " texture units while this GPU supports only " + te), T += 1, e
            }

            function Je(e, t) {
                e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse, e.matrixWorld), e._normalMatrix.getNormalMatrix(e._modelViewMatrix)
            }

            function $e(e, t, r, i) {
                e[t] = r.r * r.r * i, e[t + 1] = r.g * r.g * i, e[t + 2] = r.b * r.b * i
            }

            function et(e, t, r, i) {
                e[t] = r.r * i, e[t + 1] = r.g * i, e[t + 2] = r.b * i
            }

            function tt(e) {
                e !== N && (f.lineWidth(e), N = e)
            }

            function rt(e, t, r) {
                V !== e && (e ? f.enable(f.POLYGON_OFFSET_FILL) : f.disable(f.POLYGON_OFFSET_FILL), V = e), !e || z === t && B === r || (f.polygonOffset(t, r), z = t, B = r)
            }

            function it(e, t, r) {
                r ? (f.texParameteri(e, f.TEXTURE_WRAP_S, ct(t.wrapS)), f.texParameteri(e, f.TEXTURE_WRAP_T, ct(t.wrapT)), f.texParameteri(e, f.TEXTURE_MAG_FILTER, ct(t.magFilter)), f.texParameteri(e, f.TEXTURE_MIN_FILTER, ct(t.minFilter))) : (f.texParameteri(e, f.TEXTURE_WRAP_S, f.CLAMP_TO_EDGE), f.texParameteri(e, f.TEXTURE_WRAP_T, f.CLAMP_TO_EDGE), f.texParameteri(e, f.TEXTURE_MAG_FILTER, lt(t.magFilter)), f.texParameteri(e, f.TEXTURE_MIN_FILTER, lt(t.minFilter))), y && t.type !== $.FloatType && (t.anisotropy > 1 || t.__oldAnisotropy) && (f.texParameterf(e, y.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(t.anisotropy, oe)), t.__oldAnisotropy = t.anisotropy)
            }

            function ot(e, t) {
                if (e.width <= t && e.height <= t) return e;
                var r = Math.max(e.width, e.height), i = Math.floor(e.width * t / r), o = Math.floor(e.height * t / r),
                    a = document.createElement("canvas");
                return a.width = i, a.height = o, a.getContext("2d").drawImage(e, 0, 0, e.width, e.height, 0, 0, i, o), a
            }

            function at(e, t) {
                if (6 === e.image.length) if (e.needsUpdate) {
                    e.image.__webglTextureCube || (e.addEventListener("dispose", me), e.image.__webglTextureCube = f.createTexture(), x.info.memory.textures++), f.activeTexture(f.TEXTURE0 + t), f.bindTexture(f.TEXTURE_CUBE_MAP, e.image.__webglTextureCube), f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL, e.flipY);
                    for (var r = e instanceof $.CompressedTexture, i = [], o = 0; o < 6; o++) x.autoScaleCubemaps && !r ? i[o] = ot(e.image[o], ie) : i[o] = e.image[o];
                    var a = i[0], n = $.Math.isPowerOfTwo(a.width) && $.Math.isPowerOfTwo(a.height), s = ct(e.format),
                        h = ct(e.type);
                    it(f.TEXTURE_CUBE_MAP, e, n);
                    for (o = 0; o < 6; o++) if (r) for (var l, c = i[o].mipmaps, p = 0, u = c.length; p < u; p++) l = c[p], e.format !== $.RGBAFormat ? f.compressedTexImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X + o, p, s, l.width, l.height, 0, l.data) : f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X + o, p, s, l.width, l.height, 0, s, h, l.data); else f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X + o, 0, s, s, h, i[o]);
                    e.generateMipmaps && n && f.generateMipmap(f.TEXTURE_CUBE_MAP), e.needsUpdate = !1, e.onUpdate && e.onUpdate()
                } else f.activeTexture(f.TEXTURE0 + t), f.bindTexture(f.TEXTURE_CUBE_MAP, e.image.__webglTextureCube)
            }

            function nt(e, t) {
                f.activeTexture(f.TEXTURE0 + t), f.bindTexture(f.TEXTURE_CUBE_MAP, e.__webglTexture)
            }

            function st(e, t, r) {
                f.bindFramebuffer(f.FRAMEBUFFER, e), f.framebufferTexture2D(f.FRAMEBUFFER, f.COLOR_ATTACHMENT0, r, t.__webglTexture, 0)
            }

            function ht(e, t) {
                f.bindRenderbuffer(f.RENDERBUFFER, e), t.depthBuffer && !t.stencilBuffer ? (f.renderbufferStorage(f.RENDERBUFFER, f.DEPTH_COMPONENT16, t.width, t.height), f.framebufferRenderbuffer(f.FRAMEBUFFER, f.DEPTH_ATTACHMENT, f.RENDERBUFFER, e)) : t.depthBuffer && t.stencilBuffer ? (f.renderbufferStorage(f.RENDERBUFFER, f.DEPTH_STENCIL, t.width, t.height), f.framebufferRenderbuffer(f.FRAMEBUFFER, f.DEPTH_STENCIL_ATTACHMENT, f.RENDERBUFFER, e)) : f.renderbufferStorage(f.RENDERBUFFER, f.RGBA4, t.width, t.height)
            }

            function lt(e) {
                return e === $.NearestFilter || e === $.NearestMipMapNearestFilter || e === $.NearestMipMapLinearFilter ? f.NEAREST : f.LINEAR
            }

            function ct(e) {
                if (e === $.RepeatWrapping) return f.REPEAT;
                if (e === $.ClampToEdgeWrapping) return f.CLAMP_TO_EDGE;
                if (e === $.MirroredRepeatWrapping) return f.MIRRORED_REPEAT;
                if (e === $.NearestFilter) return f.NEAREST;
                if (e === $.NearestMipMapNearestFilter) return f.NEAREST_MIPMAP_NEAREST;
                if (e === $.NearestMipMapLinearFilter) return f.NEAREST_MIPMAP_LINEAR;
                if (e === $.LinearFilter) return f.LINEAR;
                if (e === $.LinearMipMapNearestFilter) return f.LINEAR_MIPMAP_NEAREST;
                if (e === $.LinearMipMapLinearFilter) return f.LINEAR_MIPMAP_LINEAR;
                if (e === $.UnsignedByteType) return f.UNSIGNED_BYTE;
                if (e === $.UnsignedShort4444Type) return f.UNSIGNED_SHORT_4_4_4_4;
                if (e === $.UnsignedShort5551Type) return f.UNSIGNED_SHORT_5_5_5_1;
                if (e === $.UnsignedShort565Type) return f.UNSIGNED_SHORT_5_6_5;
                if (e === $.ByteType) return f.BYTE;
                if (e === $.ShortType) return f.SHORT;
                if (e === $.UnsignedShortType) return f.UNSIGNED_SHORT;
                if (e === $.IntType) return f.INT;
                if (e === $.UnsignedIntType) return f.UNSIGNED_INT;
                if (e === $.FloatType) return f.FLOAT;
                if (e === $.AlphaFormat) return f.ALPHA;
                if (e === $.RGBFormat) return f.RGB;
                if (e === $.RGBAFormat) return f.RGBA;
                if (e === $.LuminanceFormat) return f.LUMINANCE;
                if (e === $.LuminanceAlphaFormat) return f.LUMINANCE_ALPHA;
                if (e === $.AddEquation) return f.FUNC_ADD;
                if (e === $.SubtractEquation) return f.FUNC_SUBTRACT;
                if (e === $.ReverseSubtractEquation) return f.FUNC_REVERSE_SUBTRACT;
                if (e === $.ZeroFactor) return f.ZERO;
                if (e === $.OneFactor) return f.ONE;
                if (e === $.SrcColorFactor) return f.SRC_COLOR;
                if (e === $.OneMinusSrcColorFactor) return f.ONE_MINUS_SRC_COLOR;
                if (e === $.SrcAlphaFactor) return f.SRC_ALPHA;
                if (e === $.OneMinusSrcAlphaFactor) return f.ONE_MINUS_SRC_ALPHA;
                if (e === $.DstAlphaFactor) return f.DST_ALPHA;
                if (e === $.OneMinusDstAlphaFactor) return f.ONE_MINUS_DST_ALPHA;
                if (e === $.DstColorFactor) return f.DST_COLOR;
                if (e === $.OneMinusDstColorFactor) return f.ONE_MINUS_DST_COLOR;
                if (e === $.SrcAlphaSaturateFactor) return f.SRC_ALPHA_SATURATE;
                if (void 0 !== g) {
                    if (e === $.RGB_S3TC_DXT1_Format) return g.COMPRESSED_RGB_S3TC_DXT1_EXT;
                    if (e === $.RGBA_S3TC_DXT1_Format) return g.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                    if (e === $.RGBA_S3TC_DXT3_Format) return g.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                    if (e === $.RGBA_S3TC_DXT5_Format) return g.COMPRESSED_RGBA_S3TC_DXT5_EXT
                }
                return 0
            }

            this.renderBufferImmediate = function (e, t, r) {
                if (De(), e.hasPositions && !e.__webglVertexBuffer && (e.__webglVertexBuffer = f.createBuffer()), e.hasNormals && !e.__webglNormalBuffer && (e.__webglNormalBuffer = f.createBuffer()), e.hasUvs && !e.__webglUvBuffer && (e.__webglUvBuffer = f.createBuffer()), e.hasColors && !e.__webglColorBuffer && (e.__webglColorBuffer = f.createBuffer()), e.hasPositions && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglVertexBuffer), f.bufferData(f.ARRAY_BUFFER, e.positionArray, f.DYNAMIC_DRAW), Re(t.attributes.position), f.vertexAttribPointer(t.attributes.position, 3, f.FLOAT, !1, 0, 0)), e.hasNormals) {
                    if (f.bindBuffer(f.ARRAY_BUFFER, e.__webglNormalBuffer), r.shading === $.FlatShading) {
                        var i, o, a, n, s, h, l, c, p, u, d, m = 3 * e.count;
                        for (d = 0; d < m; d += 9) n = (u = e.normalArray)[d], h = u[d + 1], c = u[d + 2], s = u[d + 3], l = u[d + 4], p = u[d + 5], i = (n + s + u[d + 6]) / 3, o = (h + l + u[d + 7]) / 3, a = (c + p + u[d + 8]) / 3, u[d] = i, u[d + 1] = o, u[d + 2] = a, u[d + 3] = i, u[d + 4] = o, u[d + 5] = a, u[d + 6] = i, u[d + 7] = o, u[d + 8] = a
                    }
                    f.bufferData(f.ARRAY_BUFFER, e.normalArray, f.DYNAMIC_DRAW), Re(t.attributes.normal), f.vertexAttribPointer(t.attributes.normal, 3, f.FLOAT, !1, 0, 0)
                }
                e.hasUvs && r.map && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglUvBuffer), f.bufferData(f.ARRAY_BUFFER, e.uvArray, f.DYNAMIC_DRAW), Re(t.attributes.uv), f.vertexAttribPointer(t.attributes.uv, 2, f.FLOAT, !1, 0, 0)), e.hasColors && r.vertexColors !== $.NoColors && (f.bindBuffer(f.ARRAY_BUFFER, e.__webglColorBuffer), f.bufferData(f.ARRAY_BUFFER, e.colorArray, f.DYNAMIC_DRAW), Re(t.attributes.color), f.vertexAttribPointer(t.attributes.color, 3, f.FLOAT, !1, 0, 0)), Fe(), f.drawArrays(f.TRIANGLES, 0, e.count), e.count = 0
            }, this.renderBufferDirect = function (e, t, r, i, o, a) {
                if (!1 !== i.visible) {
                    var n = Ke(e, t, r, i, a), s = n.attributes, h = o.attributes, l = !1, c = i.wireframe ? 1 : 0,
                        p = 16777215 * o.id + 2 * n.id + c;
                    if (p !== S && (S = p, l = !0), l && De(), a instanceof $.Mesh) if (g = h.index) {
                        if (g.array instanceof Uint32Array ? (w = f.UNSIGNED_INT, _ = 4) : (w = f.UNSIGNED_SHORT, _ = 2), 0 === (b = o.offsets).length) l && (Le(i, s, h, 0), f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, g.buffer)), f.drawElements(f.TRIANGLES, g.array.length, w, 0), x.info.render.calls++, x.info.render.vertices += g.array.length, x.info.render.faces += g.array.length / 3; else {
                            l = !0;
                            for (var u = 0, d = b.length; u < d; u++) {
                                var m = b[u].index;
                                l && (Le(i, s, h, m), f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, g.buffer)), f.drawElements(f.TRIANGLES, b[u].count, w, b[u].start * _), x.info.render.calls++, x.info.render.vertices += b[u].count, x.info.render.faces += b[u].count / 3
                            }
                        }
                    } else {
                        l && Le(i, s, h, 0);
                        var y = o.attributes.position;
                        f.drawArrays(f.TRIANGLES, 0, y.array.length / 3), x.info.render.calls++, x.info.render.vertices += y.array.length / 3, x.info.render.faces += y.array.length / 9
                    } else if (a instanceof $.ParticleSystem) {
                        l && Le(i, s, h, 0);
                        y = h.position;
                        f.drawArrays(f.POINTS, 0, y.array.length / 3), x.info.render.calls++, x.info.render.points += y.array.length / 3
                    } else if (a instanceof $.Line) {
                        var g, v = a.type === $.LineStrip ? f.LINE_STRIP : f.LINES;
                        if (tt(i.linewidth), g = h.index) {
                            var w, _, b;
                            if (g.array instanceof Uint32Array ? (w = f.UNSIGNED_INT, _ = 4) : (w = f.UNSIGNED_SHORT, _ = 2), 0 === (b = o.offsets).length) l && (Le(i, s, h, 0), f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, g.buffer)), f.drawElements(f.LINES, g.array.length, w, 0), x.info.render.calls++, x.info.render.vertices += g.array.length; else {
                                b.length > 1 && (l = !0);
                                for (u = 0, d = b.length; u < d; u++) {
                                    m = b[u].index;
                                    l && (Le(i, s, h, m), f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, g.buffer)), f.drawElements(f.LINES, b[u].count, w, b[u].start * _), x.info.render.calls++, x.info.render.vertices += b[u].count
                                }
                            }
                        } else {
                            l && Le(i, s, h, 0);
                            y = h.position;
                            f.drawArrays(v, 0, y.array.length / 3), x.info.render.calls++, x.info.render.points += y.array.length / 3
                        }
                    }
                }
            }, this.renderBuffer = function (e, t, r, i, o, a) {
                if (!1 !== i.visible) {
                    var n, s, h, l = Ke(e, t, r, i, a), c = l.attributes, p = !1, u = i.wireframe ? 1 : 0,
                        d = 16777215 * o.id + 2 * l.id + u;
                    if (d !== S && (S = d, p = !0), p && De(), !i.morphTargets && c.position >= 0 ? p && (f.bindBuffer(f.ARRAY_BUFFER, o.__webglVertexBuffer), Re(c.position), f.vertexAttribPointer(c.position, 3, f.FLOAT, !1, 0, 0)) : a.morphTargetBase && function (e, t, r) {
                        var i = e.program.attributes;
                        -1 !== r.morphTargetBase && i.position >= 0 ? (f.bindBuffer(f.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[r.morphTargetBase]), Re(i.position), f.vertexAttribPointer(i.position, 3, f.FLOAT, !1, 0, 0)) : i.position >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, t.__webglVertexBuffer), Re(i.position), f.vertexAttribPointer(i.position, 3, f.FLOAT, !1, 0, 0));
                        if (r.morphTargetForcedOrder.length) for (var o = 0, a = r.morphTargetForcedOrder, n = r.morphTargetInfluences; o < e.numSupportedMorphTargets && o < a.length;) i["morphTarget" + o] >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[a[o]]), Re(i["morphTarget" + o]), f.vertexAttribPointer(i["morphTarget" + o], 3, f.FLOAT, !1, 0, 0)), i["morphNormal" + o] >= 0 && e.morphNormals && (f.bindBuffer(f.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[a[o]]), Re(i["morphNormal" + o]), f.vertexAttribPointer(i["morphNormal" + o], 3, f.FLOAT, !1, 0, 0)), r.__webglMorphTargetInfluences[o] = n[a[o]], o++; else {
                            var s, h, l = [], c = (n = r.morphTargetInfluences).length;
                            for (h = 0; h < c; h++) (s = n[h]) > 0 && l.push([s, h]);
                            l.length > e.numSupportedMorphTargets ? (l.sort(Ve), l.length = e.numSupportedMorphTargets) : l.length > e.numSupportedMorphNormals ? l.sort(Ve) : 0 === l.length && l.push([0, 0]);
                            var p;
                            for (o = 0; o < e.numSupportedMorphTargets;) l[o] ? (p = l[o][1], i["morphTarget" + o] >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, t.__webglMorphTargetsBuffers[p]), Re(i["morphTarget" + o]), f.vertexAttribPointer(i["morphTarget" + o], 3, f.FLOAT, !1, 0, 0)), i["morphNormal" + o] >= 0 && e.morphNormals && (f.bindBuffer(f.ARRAY_BUFFER, t.__webglMorphNormalsBuffers[p]), Re(i["morphNormal" + o]), f.vertexAttribPointer(i["morphNormal" + o], 3, f.FLOAT, !1, 0, 0)), r.__webglMorphTargetInfluences[o] = n[p]) : r.__webglMorphTargetInfluences[o] = 0, o++
                        }
                        null !== e.program.uniforms.morphTargetInfluences && f.uniform1fv(e.program.uniforms.morphTargetInfluences, r.__webglMorphTargetInfluences)
                    }(i, o, a), p) {
                        if (o.__webglCustomAttributesList) for (s = 0, h = o.__webglCustomAttributesList.length; s < h; s++) c[(n = o.__webglCustomAttributesList[s]).buffer.belongsToAttribute] >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, n.buffer), Re(c[n.buffer.belongsToAttribute]), f.vertexAttribPointer(c[n.buffer.belongsToAttribute], n.size, f.FLOAT, !1, 0, 0));
                        c.color >= 0 && (a.geometry.colors.length > 0 || a.geometry.faces.length > 0 ? (f.bindBuffer(f.ARRAY_BUFFER, o.__webglColorBuffer), Re(c.color), f.vertexAttribPointer(c.color, 3, f.FLOAT, !1, 0, 0)) : i.defaultAttributeValues && f.vertexAttrib3fv(c.color, i.defaultAttributeValues.color)), c.normal >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, o.__webglNormalBuffer), Re(c.normal), f.vertexAttribPointer(c.normal, 3, f.FLOAT, !1, 0, 0)), c.tangent >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, o.__webglTangentBuffer), Re(c.tangent), f.vertexAttribPointer(c.tangent, 4, f.FLOAT, !1, 0, 0)), c.uv >= 0 && (a.geometry.faceVertexUvs[0] ? (f.bindBuffer(f.ARRAY_BUFFER, o.__webglUVBuffer), Re(c.uv), f.vertexAttribPointer(c.uv, 2, f.FLOAT, !1, 0, 0)) : i.defaultAttributeValues && f.vertexAttrib2fv(c.uv, i.defaultAttributeValues.uv)), c.uv2 >= 0 && (a.geometry.faceVertexUvs[1] ? (f.bindBuffer(f.ARRAY_BUFFER, o.__webglUV2Buffer), Re(c.uv2), f.vertexAttribPointer(c.uv2, 2, f.FLOAT, !1, 0, 0)) : i.defaultAttributeValues && f.vertexAttrib2fv(c.uv2, i.defaultAttributeValues.uv2)), i.skinning && c.skinIndex >= 0 && c.skinWeight >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, o.__webglSkinIndicesBuffer), Re(c.skinIndex), f.vertexAttribPointer(c.skinIndex, 4, f.FLOAT, !1, 0, 0), f.bindBuffer(f.ARRAY_BUFFER, o.__webglSkinWeightsBuffer), Re(c.skinWeight), f.vertexAttribPointer(c.skinWeight, 4, f.FLOAT, !1, 0, 0)), c.lineDistance >= 0 && (f.bindBuffer(f.ARRAY_BUFFER, o.__webglLineDistanceBuffer), Re(c.lineDistance), f.vertexAttribPointer(c.lineDistance, 1, f.FLOAT, !1, 0, 0))
                    }
                    if (Fe(), a instanceof $.Mesh) {
                        var m = o.__typeArray === Uint32Array ? f.UNSIGNED_INT : f.UNSIGNED_SHORT;
                        i.wireframe ? (tt(i.wireframeLinewidth), p && f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o.__webglLineBuffer), f.drawElements(f.LINES, o.__webglLineCount, m, 0)) : (p && f.bindBuffer(f.ELEMENT_ARRAY_BUFFER, o.__webglFaceBuffer), f.drawElements(f.TRIANGLES, o.__webglFaceCount, m, 0)), x.info.render.calls++, x.info.render.vertices += o.__webglFaceCount, x.info.render.faces += o.__webglFaceCount / 3
                    } else if (a instanceof $.Line) {
                        var y = a.type === $.LineStrip ? f.LINE_STRIP : f.LINES;
                        tt(i.linewidth), f.drawArrays(y, 0, o.__webglLineCount), x.info.render.calls++
                    } else a instanceof $.ParticleSystem && (f.drawArrays(f.POINTS, 0, o.__webglParticleCount), x.info.render.calls++, x.info.render.points += o.__webglParticleCount)
                }
            }, this.render = function (e, t, r, i) {
                if (t instanceof $.Camera != !1) {
                    var o, a, n, s, h, l = e.__lights, c = e.fog;
                    for (M = -1, J = !0, !0 === e.autoUpdate && e.updateMatrixWorld(), void 0 === t.parent && t.updateMatrixWorld(), t.matrixWorldInverse.getInverse(t.matrixWorld), Y.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), q.setFromMatrix(Y), this.autoUpdateObjects && this.initWebGLObjects(e), ze(this.renderPluginsPre, e, t), x.info.render.calls = 0, x.info.render.vertices = 0, x.info.render.faces = 0, x.info.render.points = 0, this.setRenderTarget(r), (this.autoClear || i) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil), o = 0, a = (h = e.__webglObjects).length; o < a; o++) s = (n = h[o]).object, n.id = o, n.render = !1, s.visible && ((s instanceof $.Mesh || s instanceof $.ParticleSystem) && s.frustumCulled && !q.intersectsObject(s) || (Je(s, t), ke(n), n.render = !0, !0 === this.sortObjects && (null !== s.renderDepth ? n.z = s.renderDepth : (Z.setFromMatrixPosition(s.matrixWorld), Z.applyProjection(Y), n.z = Z.z))));
                    for (this.sortObjects && h.sort(Ue), o = 0, a = (h = e.__webglObjectsImmediate).length; o < a; o++) (s = (n = h[o]).object).visible && (Je(s, t), Oe(n));
                    if (e.overrideMaterial) {
                        var p = e.overrideMaterial;
                        this.setBlending(p.blending, p.blendEquation, p.blendSrc, p.blendDst), this.setDepthTest(p.depthTest), this.setDepthWrite(p.depthWrite), rt(p.polygonOffset, p.polygonOffsetFactor, p.polygonOffsetUnits), Be(e.__webglObjects, !1, "", t, l, c, !0, p), Ne(e.__webglObjectsImmediate, "", t, l, c, !1, p)
                    } else {
                        p = null;
                        this.setBlending($.NoBlending), Be(e.__webglObjects, !0, "opaque", t, l, c, !1, p), Ne(e.__webglObjectsImmediate, "opaque", t, l, c, !1, p), Be(e.__webglObjects, !1, "transparent", t, l, c, !0, p), Ne(e.__webglObjectsImmediate, "transparent", t, l, c, !0, p)
                    }
                    ze(this.renderPluginsPost, e, t), r && r.generateMipmaps && r.minFilter !== $.NearestFilter && r.minFilter !== $.LinearFilter && function (e) {
                        e instanceof $.WebGLRenderTargetCube ? (f.bindTexture(f.TEXTURE_CUBE_MAP, e.__webglTexture), f.generateMipmap(f.TEXTURE_CUBE_MAP), f.bindTexture(f.TEXTURE_CUBE_MAP, null)) : (f.bindTexture(f.TEXTURE_2D, e.__webglTexture), f.generateMipmap(f.TEXTURE_2D), f.bindTexture(f.TEXTURE_2D, null))
                    }(r), this.setDepthTest(!0), this.setDepthWrite(!0)
                } else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
            }, this.renderImmediateObject = function (e, t, r, i, o) {
                var a = Ke(e, t, r, i, o);
                S = -1, x.setMaterialFaces(i), o.immediateRenderCallback ? o.immediateRenderCallback(a, f, q) : o.render((function (e) {
                    x.renderBufferImmediate(e, a, i)
                }))
            }, this.initWebGLObjects = function (e) {
                for (e.__webglObjects || (e.__webglObjects = [], e.__webglObjectsImmediate = [], e.__webglSprites = [], e.__webglFlares = []); e.__objectsAdded.length;) Ie(e.__objectsAdded[0], e), e.__objectsAdded.splice(0, 1);
                for (; e.__objectsRemoved.length;) Xe(e.__objectsRemoved[0], e), e.__objectsRemoved.splice(0, 1);
                for (var t = 0, r = e.__webglObjects.length; t < r; t++) {
                    var i = e.__webglObjects[t].object;
                    void 0 === i.__webglInit && (void 0 !== i.__webglActive && Xe(i, e), Ie(i, e)), We(i)
                }
            }, this.initMaterial = function (e, t, r, o) {
                var a, n, s, h, l, p, u;
                e.addEventListener("dispose", ge), e instanceof $.MeshDepthMaterial ? u = "depth" : e instanceof $.MeshNormalMaterial ? u = "normal" : e instanceof $.MeshBasicMaterial ? u = "basic" : e instanceof $.MeshLambertMaterial ? u = "lambert" : e instanceof $.MeshPhongMaterial ? u = "phong" : e instanceof $.LineBasicMaterial ? u = "basic" : e instanceof $.LineDashedMaterial ? u = "dashed" : e instanceof $.ParticleSystemMaterial && (u = "particle_basic"), u && function (e, t) {
                    e.uniforms = $.UniformsUtils.clone(t.uniforms), e.vertexShader = t.vertexShader, e.fragmentShader = t.fragmentShader
                }(e, $.ShaderLib[u]), h = function (e) {
                    for (var t = 0, r = 0, i = 0, o = 0, a = 0, n = e.length; a < n; a++) {
                        var s = e[a];
                        s.onlyShadow || !1 === s.visible || (s instanceof $.DirectionalLight && t++, s instanceof $.PointLight && r++, s instanceof $.SpotLight && i++, s instanceof $.HemisphereLight && o++)
                    }
                    return {directional: t, point: r, spot: i, hemi: o}
                }(t), p = function (e) {
                    for (var t = 0, r = 0, i = e.length; r < i; r++) {
                        var o = e[r];
                        o.castShadow && (o instanceof $.SpotLight && t++, o instanceof $.DirectionalLight && !o.shadowCascade && t++)
                    }
                    return t
                }(t), l = function (e) {
                    if (ne && e && e.skeleton && e.skeleton.useVertexTexture) return 1024;
                    var t = f.getParameter(f.MAX_VERTEX_UNIFORM_VECTORS), r = Math.floor((t - 20) / 4);
                    return void 0 !== e && e instanceof $.SkinnedMesh && (r = Math.min(e.skeleton.bones.length, r)) < e.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + e.skeleton.bones.length + ", this GPU supports just " + r + " (try OpenGL instead of ANGLE)"), r
                }(o), s = {
                    precision: i,
                    supportsVertexTextures: ae,
                    map: !!e.map,
                    envMap: !!e.envMap,
                    lightMap: !!e.lightMap,
                    bumpMap: !!e.bumpMap,
                    normalMap: !!e.normalMap,
                    specularMap: !!e.specularMap,
                    vertexColors: e.vertexColors,
                    fog: r,
                    useFog: e.fog,
                    fogExp: r instanceof $.FogExp2,
                    sizeAttenuation: e.sizeAttenuation,
                    logarithmicDepthBuffer: c,
                    skinning: e.skinning,
                    maxBones: l,
                    useVertexTexture: ne && o && o.skeleton && o.skeleton.useVertexTexture,
                    morphTargets: e.morphTargets,
                    morphNormals: e.morphNormals,
                    maxMorphTargets: this.maxMorphTargets,
                    maxMorphNormals: this.maxMorphNormals,
                    maxDirLights: h.directional,
                    maxPointLights: h.point,
                    maxSpotLights: h.spot,
                    maxHemiLights: h.hemi,
                    maxShadows: p,
                    shadowMapEnabled: this.shadowMapEnabled && o.receiveShadow && p > 0,
                    shadowMapType: this.shadowMapType,
                    shadowMapDebug: this.shadowMapDebug,
                    shadowMapCascade: this.shadowMapCascade,
                    alphaTest: e.alphaTest,
                    metal: e.metal,
                    wrapAround: e.wrapAround,
                    doubleSided: e.side === $.DoubleSide,
                    flipSided: e.side === $.BackSide
                };
                var d = [];
                for (var m in u ? d.push(u) : (d.push(e.fragmentShader), d.push(e.vertexShader)), e.defines) d.push(m), d.push(e.defines[m]);
                for (var y in s) d.push(y), d.push(s[y]);
                for (var g, v = d.join(), _ = (y = 0, w.length); y < _; y++) {
                    var b = w[y];
                    if (b.code === v) {
                        (g = b).usedTimes++;
                        break
                    }
                }
                void 0 === g && (g = new $.WebGLProgram(this, v, e, s), w.push(g), x.info.memory.programs = w.length), e.program = g;
                var M = e.program.attributes;
                if (e.morphTargets) {
                    e.numSupportedMorphTargets = 0;
                    var S = "morphTarget";
                    for (n = 0; n < this.maxMorphTargets; n++) M[S + n] >= 0 && e.numSupportedMorphTargets++
                }
                if (e.morphNormals) {
                    e.numSupportedMorphNormals = 0;
                    S = "morphNormal";
                    for (n = 0; n < this.maxMorphNormals; n++) M[S + n] >= 0 && e.numSupportedMorphNormals++
                }
                for (a in e.uniformsList = [], e.uniforms) e.uniformsList.push([e.uniforms[a], a])
            }, this.setFaceCulling = function (e, t) {
                e === $.CullFaceNone ? f.disable(f.CULL_FACE) : (t === $.FrontFaceDirectionCW ? f.frontFace(f.CW) : f.frontFace(f.CCW), e === $.CullFaceBack ? f.cullFace(f.BACK) : e === $.CullFaceFront ? f.cullFace(f.FRONT) : f.cullFace(f.FRONT_AND_BACK), f.enable(f.CULL_FACE))
            }, this.setMaterialFaces = function (e) {
                var t = e.side === $.DoubleSide, r = e.side === $.BackSide;
                E !== t && (t ? f.disable(f.CULL_FACE) : f.enable(f.CULL_FACE), E = t), C !== r && (r ? f.frontFace(f.CW) : f.frontFace(f.CCW), C = r)
            }, this.setDepthTest = function (e) {
                F !== e && (e ? f.enable(f.DEPTH_TEST) : f.disable(f.DEPTH_TEST), F = e)
            }, this.setDepthWrite = function (e) {
                U !== e && (f.depthMask(e), U = e)
            }, this.setBlending = function (e, t, r, i) {
                e !== P && (e === $.NoBlending ? f.disable(f.BLEND) : e === $.AdditiveBlending ? (f.enable(f.BLEND), f.blendEquation(f.FUNC_ADD), f.blendFunc(f.SRC_ALPHA, f.ONE)) : e === $.SubtractiveBlending ? (f.enable(f.BLEND), f.blendEquation(f.FUNC_ADD), f.blendFunc(f.ZERO, f.ONE_MINUS_SRC_COLOR)) : e === $.MultiplyBlending ? (f.enable(f.BLEND), f.blendEquation(f.FUNC_ADD), f.blendFunc(f.ZERO, f.SRC_COLOR)) : e === $.CustomBlending ? f.enable(f.BLEND) : (f.enable(f.BLEND), f.blendEquationSeparate(f.FUNC_ADD, f.FUNC_ADD), f.blendFuncSeparate(f.SRC_ALPHA, f.ONE_MINUS_SRC_ALPHA, f.ONE, f.ONE_MINUS_SRC_ALPHA)), P = e), e === $.CustomBlending ? (t !== L && (f.blendEquation(ct(t)), L = t), r === D && i === R || (f.blendFunc(ct(r), ct(i)), D = r, R = i)) : (L = null, D = null, R = null)
            }, this.setTexture = function (e, t) {
                if (e.needsUpdate) {
                    e.__webglInit || (e.__webglInit = !0, e.addEventListener("dispose", me), e.__webglTexture = f.createTexture(), x.info.memory.textures++), f.activeTexture(f.TEXTURE0 + t), f.bindTexture(f.TEXTURE_2D, e.__webglTexture), f.pixelStorei(f.UNPACK_FLIP_Y_WEBGL, e.flipY), f.pixelStorei(f.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha), f.pixelStorei(f.UNPACK_ALIGNMENT, e.unpackAlignment);
                    var r = e.image, i = $.Math.isPowerOfTwo(r.width) && $.Math.isPowerOfTwo(r.height),
                        o = ct(e.format), a = ct(e.type);
                    it(f.TEXTURE_2D, e, i);
                    var n, s = e.mipmaps;
                    if (e instanceof $.DataTexture) if (s.length > 0 && i) {
                        for (var h = 0, l = s.length; h < l; h++) n = s[h], f.texImage2D(f.TEXTURE_2D, h, o, n.width, n.height, 0, o, a, n.data);
                        e.generateMipmaps = !1
                    } else f.texImage2D(f.TEXTURE_2D, 0, o, r.width, r.height, 0, o, a, r.data); else if (e instanceof $.CompressedTexture) for (h = 0, l = s.length; h < l; h++) n = s[h], e.format !== $.RGBAFormat ? f.compressedTexImage2D(f.TEXTURE_2D, h, o, n.width, n.height, 0, n.data) : f.texImage2D(f.TEXTURE_2D, h, o, n.width, n.height, 0, o, a, n.data); else if (s.length > 0 && i) {
                        for (h = 0, l = s.length; h < l; h++) n = s[h], f.texImage2D(f.TEXTURE_2D, h, o, o, a, n);
                        e.generateMipmaps = !1
                    } else f.texImage2D(f.TEXTURE_2D, 0, o, o, a, e.image);
                    e.generateMipmaps && i && f.generateMipmap(f.TEXTURE_2D), e.needsUpdate = !1, e.onUpdate && e.onUpdate()
                } else f.activeTexture(f.TEXTURE0 + t), f.bindTexture(f.TEXTURE_2D, e.__webglTexture)
            }, this.setRenderTarget = function (e) {
                var t, r, i, o, a, n = e instanceof $.WebGLRenderTargetCube;
                if (e && !e.__webglFramebuffer) {
                    void 0 === e.depthBuffer && (e.depthBuffer = !0), void 0 === e.stencilBuffer && (e.stencilBuffer = !0), e.addEventListener("dispose", ye), e.__webglTexture = f.createTexture(), x.info.memory.textures++;
                    var s = $.Math.isPowerOfTwo(e.width) && $.Math.isPowerOfTwo(e.height), h = ct(e.format),
                        l = ct(e.type);
                    if (n) {
                        e.__webglFramebuffer = [], e.__webglRenderbuffer = [], f.bindTexture(f.TEXTURE_CUBE_MAP, e.__webglTexture), it(f.TEXTURE_CUBE_MAP, e, s);
                        for (var c = 0; c < 6; c++) e.__webglFramebuffer[c] = f.createFramebuffer(), e.__webglRenderbuffer[c] = f.createRenderbuffer(), f.texImage2D(f.TEXTURE_CUBE_MAP_POSITIVE_X + c, 0, h, e.width, e.height, 0, h, l, null), st(e.__webglFramebuffer[c], e, f.TEXTURE_CUBE_MAP_POSITIVE_X + c), ht(e.__webglRenderbuffer[c], e);
                        s && f.generateMipmap(f.TEXTURE_CUBE_MAP)
                    } else e.__webglFramebuffer = f.createFramebuffer(), e.shareDepthFrom ? e.__webglRenderbuffer = e.shareDepthFrom.__webglRenderbuffer : e.__webglRenderbuffer = f.createRenderbuffer(), f.bindTexture(f.TEXTURE_2D, e.__webglTexture), it(f.TEXTURE_2D, e, s), f.texImage2D(f.TEXTURE_2D, 0, h, e.width, e.height, 0, h, l, null), st(e.__webglFramebuffer, e, f.TEXTURE_2D), e.shareDepthFrom ? e.depthBuffer && !e.stencilBuffer ? f.framebufferRenderbuffer(f.FRAMEBUFFER, f.DEPTH_ATTACHMENT, f.RENDERBUFFER, e.__webglRenderbuffer) : e.depthBuffer && e.stencilBuffer && f.framebufferRenderbuffer(f.FRAMEBUFFER, f.DEPTH_STENCIL_ATTACHMENT, f.RENDERBUFFER, e.__webglRenderbuffer) : ht(e.__webglRenderbuffer, e), s && f.generateMipmap(f.TEXTURE_2D);
                    n ? f.bindTexture(f.TEXTURE_CUBE_MAP, null) : f.bindTexture(f.TEXTURE_2D, null), f.bindRenderbuffer(f.RENDERBUFFER, null), f.bindFramebuffer(f.FRAMEBUFFER, null)
                }
                e ? (t = n ? e.__webglFramebuffer[e.activeCubeFace] : e.__webglFramebuffer, r = e.width, i = e.height, o = 0, a = 0) : (t = null, r = I, i = G, o = O, a = k), t !== b && (f.bindFramebuffer(f.FRAMEBUFFER, t), f.viewport(o, a, r, i), b = t), W = r, H = i
            }, this.shadowMapPlugin = new $.ShadowMapPlugin, this.addPrePlugin(this.shadowMapPlugin), this.addPostPlugin(new $.SpritePlugin), this.addPostPlugin(new $.LensFlarePlugin)
        },$.WebGLRenderTarget = function (e, t, r) {
            this.width = e, this.height = t, r = r || {}, this.wrapS = void 0 !== r.wrapS ? r.wrapS : $.ClampToEdgeWrapping, this.wrapT = void 0 !== r.wrapT ? r.wrapT : $.ClampToEdgeWrapping, this.magFilter = void 0 !== r.magFilter ? r.magFilter : $.LinearFilter, this.minFilter = void 0 !== r.minFilter ? r.minFilter : $.LinearMipMapLinearFilter, this.anisotropy = void 0 !== r.anisotropy ? r.anisotropy : 1, this.offset = new $.Vector2(0, 0), this.repeat = new $.Vector2(1, 1), this.format = void 0 !== r.format ? r.format : $.RGBAFormat, this.type = void 0 !== r.type ? r.type : $.UnsignedByteType, this.depthBuffer = void 0 === r.depthBuffer || r.depthBuffer, this.stencilBuffer = void 0 === r.stencilBuffer || r.stencilBuffer, this.generateMipmaps = !0, this.shareDepthFrom = null
        },$.WebGLRenderTarget.prototype = {
            constructor: $.WebGLRenderTarget, setSize: function (e, t) {
                this.width = e, this.height = t
            }, clone: function () {
                var e = new $.WebGLRenderTarget(this.width, this.height);
                return e.wrapS = this.wrapS, e.wrapT = this.wrapT, e.magFilter = this.magFilter, e.minFilter = this.minFilter, e.anisotropy = this.anisotropy, e.offset.copy(this.offset), e.repeat.copy(this.repeat), e.format = this.format, e.type = this.type, e.depthBuffer = this.depthBuffer, e.stencilBuffer = this.stencilBuffer, e.generateMipmaps = this.generateMipmaps, e.shareDepthFrom = this.shareDepthFrom, e
            }, dispose: function () {
                this.dispatchEvent({type: "dispose"})
            }
        },$.EventDispatcher.prototype.apply($.WebGLRenderTarget.prototype),$.WebGLRenderTargetCube = function (e, t, r) {
            $.WebGLRenderTarget.call(this, e, t, r), this.activeCubeFace = 0
        },$.WebGLRenderTargetCube.prototype = Object.create($.WebGLRenderTarget.prototype),$.WebGLProgram = (N = 0, function (e, t, r, i) {
            var o = e, a = o.context, n = r.fragmentShader, s = r.vertexShader, h = r.uniforms, l = r.attributes,
                c = r.defines, p = r.index0AttributeName;
            void 0 === p && !0 === i.morphTargets && (p = "position");
            var u = "SHADOWMAP_TYPE_BASIC";
            i.shadowMapType === $.PCFShadowMap ? u = "SHADOWMAP_TYPE_PCF" : i.shadowMapType === $.PCFSoftShadowMap && (u = "SHADOWMAP_TYPE_PCF_SOFT");
            var f, d, m = function (e) {
                var t, r, i = [];
                for (var o in e) !1 !== (t = e[o]) && (r = "#define " + o + " " + t, i.push(r));
                return i.join("\n")
            }(c), y = a.createProgram();
            r instanceof $.RawShaderMaterial ? (f = "", d = "") : (f = ["precision " + i.precision + " float;", "precision " + i.precision + " int;", m, i.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", o.gammaInput ? "#define GAMMA_INPUT" : "", o.gammaOutput ? "#define GAMMA_OUTPUT" : "", "#define MAX_DIR_LIGHTS " + i.maxDirLights, "#define MAX_POINT_LIGHTS " + i.maxPointLights, "#define MAX_SPOT_LIGHTS " + i.maxSpotLights, "#define MAX_HEMI_LIGHTS " + i.maxHemiLights, "#define MAX_SHADOWS " + i.maxShadows, "#define MAX_BONES " + i.maxBones, i.map ? "#define USE_MAP" : "", i.envMap ? "#define USE_ENVMAP" : "", i.lightMap ? "#define USE_LIGHTMAP" : "", i.bumpMap ? "#define USE_BUMPMAP" : "", i.normalMap ? "#define USE_NORMALMAP" : "", i.specularMap ? "#define USE_SPECULARMAP" : "", i.vertexColors ? "#define USE_COLOR" : "", i.skinning ? "#define USE_SKINNING" : "", i.useVertexTexture ? "#define BONE_TEXTURE" : "", i.morphTargets ? "#define USE_MORPHTARGETS" : "", i.morphNormals ? "#define USE_MORPHNORMALS" : "", i.wrapAround ? "#define WRAP_AROUND" : "", i.doubleSided ? "#define DOUBLE_SIDED" : "", i.flipSided ? "#define FLIP_SIDED" : "", i.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", i.shadowMapEnabled ? "#define " + u : "", i.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", i.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", i.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", i.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "attribute vec2 uv2;", "#ifdef USE_COLOR", " attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", " attribute vec3 morphTarget0;", " attribute vec3 morphTarget1;", " attribute vec3 morphTarget2;", " attribute vec3 morphTarget3;", " #ifdef USE_MORPHNORMALS", "   attribute vec3 morphNormal0;", "   attribute vec3 morphNormal1;", "   attribute vec3 morphNormal2;", "   attribute vec3 morphNormal3;", " #else", "   attribute vec3 morphTarget4;", "   attribute vec3 morphTarget5;", "   attribute vec3 morphTarget6;", "   attribute vec3 morphTarget7;", " #endif", "#endif", "#ifdef USE_SKINNING", " attribute vec4 skinIndex;", " attribute vec4 skinWeight;", "#endif", ""].join("\n"), d = ["precision " + i.precision + " float;", "precision " + i.precision + " int;", i.bumpMap || i.normalMap ? "#extension GL_OES_standard_derivatives : enable" : "", m, "#define MAX_DIR_LIGHTS " + i.maxDirLights, "#define MAX_POINT_LIGHTS " + i.maxPointLights, "#define MAX_SPOT_LIGHTS " + i.maxSpotLights, "#define MAX_HEMI_LIGHTS " + i.maxHemiLights, "#define MAX_SHADOWS " + i.maxShadows, i.alphaTest ? "#define ALPHATEST " + i.alphaTest : "", o.gammaInput ? "#define GAMMA_INPUT" : "", o.gammaOutput ? "#define GAMMA_OUTPUT" : "", i.useFog && i.fog ? "#define USE_FOG" : "", i.useFog && i.fogExp ? "#define FOG_EXP2" : "", i.map ? "#define USE_MAP" : "", i.envMap ? "#define USE_ENVMAP" : "", i.lightMap ? "#define USE_LIGHTMAP" : "", i.bumpMap ? "#define USE_BUMPMAP" : "", i.normalMap ? "#define USE_NORMALMAP" : "", i.specularMap ? "#define USE_SPECULARMAP" : "", i.vertexColors ? "#define USE_COLOR" : "", i.metal ? "#define METAL" : "", i.wrapAround ? "#define WRAP_AROUND" : "", i.doubleSided ? "#define DOUBLE_SIDED" : "", i.flipSided ? "#define FLIP_SIDED" : "", i.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", i.shadowMapEnabled ? "#define " + u : "", i.shadowMapDebug ? "#define SHADOWMAP_DEBUG" : "", i.shadowMapCascade ? "#define SHADOWMAP_CASCADE" : "", i.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", ""].join("\n"));
            var g = new $.WebGLShader(a, a.VERTEX_SHADER, f + s), v = new $.WebGLShader(a, a.FRAGMENT_SHADER, d + n);
            a.attachShader(y, g), a.attachShader(y, v), void 0 !== p && a.bindAttribLocation(y, 0, p), a.linkProgram(y), !1 === a.getProgramParameter(y, a.LINK_STATUS) && (console.error("Could not initialise shader"), console.error("gl.VALIDATE_STATUS", a.getProgramParameter(y, a.VALIDATE_STATUS)), console.error("gl.getError()", a.getError())), "" !== a.getProgramInfoLog(y) && console.error("gl.getProgramInfoLog()", a.getProgramInfoLog(y)), a.deleteShader(g), a.deleteShader(v);
            var x = ["viewMatrix", "modelViewMatrix", "projectionMatrix", "normalMatrix", "modelMatrix", "cameraPosition", "morphTargetInfluences"];
            for (var w in i.useVertexTexture ? (x.push("boneTexture"), x.push("boneTextureWidth"), x.push("boneTextureHeight")) : x.push("boneGlobalMatrices"), i.logarithmicDepthBuffer && x.push("logDepthBufFC"), h) x.push(w);
            this.uniforms = function (e, t, r) {
                for (var i = {}, o = 0, a = r.length; o < a; o++) {
                    var n = r[o];
                    i[n] = e.getUniformLocation(t, n)
                }
                return i
            }(a, y, x), x = ["position", "normal", "uv", "uv2", "tangent", "color", "skinIndex", "skinWeight", "lineDistance"];
            for (var _ = 0; _ < i.maxMorphTargets; _++) x.push("morphTarget" + _);
            for (_ = 0; _ < i.maxMorphNormals; _++) x.push("morphNormal" + _);
            for (var b in l) x.push(b);
            return this.attributes = function (e, t, r) {
                for (var i = {}, o = 0, a = r.length; o < a; o++) {
                    var n = r[o];
                    i[n] = e.getAttribLocation(t, n)
                }
                return i
            }(a, y, x), this.id = N++, this.code = t, this.usedTimes = 1, this.program = y, this.vertexShader = g, this.fragmentShader = v, this
        }),$.WebGLShader = function (e, t, r) {
            var i = e.createShader(t);
            return e.shaderSource(i, r), e.compileShader(i), !1 === e.getShaderParameter(i, e.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."), "" !== e.getShaderInfoLog(i) && (console.error("THREE.WebGLShader:", "gl.getShaderInfoLog()", e.getShaderInfoLog(i)), console.error(function (e) {
                for (var t = e.split("\n"), r = 0; r < t.length; r++) t[r] = r + 1 + ": " + t[r];
                return t.join("\n")
            }(r))), i
        },$.RenderableVertex = function () {
            this.position = new $.Vector3, this.positionWorld = new $.Vector3, this.positionScreen = new $.Vector4, this.visible = !0
        },$.RenderableVertex.prototype.copy = function (e) {
            this.positionWorld.copy(e.positionWorld), this.positionScreen.copy(e.positionScreen)
        },$.RenderableFace = function () {
            this.id = 0, this.v1 = new $.RenderableVertex, this.v2 = new $.RenderableVertex, this.v3 = new $.RenderableVertex, this.normalModel = new $.Vector3, this.vertexNormalsModel = [new $.Vector3, new $.Vector3, new $.Vector3], this.vertexNormalsLength = 0, this.color = null, this.material = null, this.uvs = [new $.Vector2, new $.Vector2, new $.Vector2], this.z = 0
        },$.RenderableObject = function () {
            this.id = 0, this.object = null, this.z = 0
        },$.RenderableSprite = function () {
            this.id = 0, this.object = null, this.x = 0, this.y = 0, this.z = 0, this.rotation = 0, this.scale = new $.Vector2, this.material = null
        },$.RenderableLine = function () {
            this.id = 0, this.v1 = new $.RenderableVertex, this.v2 = new $.RenderableVertex, this.vertexColors = [new $.Color, new $.Color], this.material = null, this.z = 0
        },$.GeometryUtils = {
            merge: function (e, t, r) {
                var i;
                console.warn("DEPRECATED: GeometryUtils's .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."), t instanceof $.Mesh && (t.matrixAutoUpdate && t.updateMatrix(), i = t.matrix, t = t.geometry), e.merge(t, i, r)
            }, randomPointInTriangle: function () {
                var e = new $.Vector3;
                return function (t, r, i) {
                    var o = new $.Vector3, a = $.Math.random16(), n = $.Math.random16();
                    a + n > 1 && (a = 1 - a, n = 1 - n);
                    var s = 1 - a - n;
                    return o.copy(t), o.multiplyScalar(a), e.copy(r), e.multiplyScalar(n), o.add(e), e.copy(i), e.multiplyScalar(s), o.add(e), o
                }
            }(), randomPointInFace: function (e, t, r) {
                var i, o, a;
                return i = t.vertices[e.a], o = t.vertices[e.b], a = t.vertices[e.c], $.GeometryUtils.randomPointInTriangle(i, o, a)
            }, randomPointsInGeometry: function (e, t) {
                var r, i, o, a, n, s = e.faces, h = e.vertices, l = s.length, c = 0, p = [];
                for (i = 0; i < l; i++) o = h[(r = s[i]).a], a = h[r.b], n = h[r.c], r._area = $.GeometryUtils.triangleArea(o, a, n), c += r._area, p[i] = c;
                var u, f, d, m = [], y = {};
                for (i = 0; i < t; i++) u = $.Math.random16() * c, d = u, f = function e(t, r) {
                    if (r < t) return t;
                    var i = t + Math.floor((r - t) / 2);
                    return p[i] > d ? e(t, i - 1) : p[i] < d ? e(i + 1, r) : i
                }(0, p.length - 1), m[i] = $.GeometryUtils.randomPointInFace(s[f], e, !0), y[f] ? y[f] += 1 : y[f] = 1;
                return m
            }, triangleArea: (O = new $.Vector3, k = new $.Vector3, function (e, t, r) {
                return O.subVectors(t, e), k.subVectors(r, e), O.cross(k), .5 * O.length()
            }), center: function (e) {
                e.computeBoundingBox();
                var t = e.boundingBox, r = new $.Vector3;
                return r.addVectors(t.min, t.max), r.multiplyScalar(-.5), e.applyMatrix((new $.Matrix4).makeTranslation(r.x, r.y, r.z)), e.computeBoundingBox(), r
            }
        },$.ImageUtils = {
            crossOrigin: void 0, loadTexture: function (e, t, r, i) {
                var o = new $.ImageLoader;
                o.crossOrigin = this.crossOrigin;
                var a = new $.Texture(void 0, t), n = o.load(e, (function () {
                    a.needsUpdate = !0, r && r(a)
                }), void 0, (function (e) {
                    i && i(e)
                }));
                return a.image = n, a.sourceFile = e, a
            }, loadCompressedTexture: function (e, t, r, i) {
                var o = new $.CompressedTexture;
                o.mapping = t;
                var a = new XMLHttpRequest;
                return a.onload = function () {
                    var e = a.response, t = $.ImageUtils.parseDDS(e, !0);
                    o.format = t.format, o.mipmaps = t.mipmaps, o.image.width = t.width, o.image.height = t.height, o.generateMipmaps = !1, o.needsUpdate = !0, r && r(o)
                }, a.onerror = i, a.open("GET", e, !0), a.responseType = "arraybuffer", a.send(null), o
            }, loadTextureCube: function (e, t, r, i) {
                var o = [];
                o.loadCount = 0;
                var a = new $.ImageLoader;
                a.crossOrigin = this.crossOrigin;
                var n = new $.Texture;
                n.image = o, void 0 !== t && (n.mapping = t), n.flipY = !1;
                for (var s = 0, h = e.length; s < h; ++s) {
                    var l = a.load(e[s], (function () {
                        o.loadCount += 1, 6 === o.loadCount && (n.needsUpdate = !0, r && r(n))
                    }));
                    o[s] = l
                }
                return n
            }, loadCompressedTextureCube: function (e, t, r, i) {
                var o = [];
                o.loadCount = 0;
                var a = new $.CompressedTexture;
                a.image = o, void 0 !== t && (a.mapping = t), a.flipY = !1, a.generateMipmaps = !1;
                var n = function (e, t) {
                    return function () {
                        var i = e.response, n = $.ImageUtils.parseDDS(i, !0);
                        t.format = n.format, t.mipmaps = n.mipmaps, t.width = n.width, t.height = n.height, o.loadCount += 1, 6 === o.loadCount && (a.format = n.format, a.needsUpdate = !0, r && r(a))
                    }
                };
                if (e instanceof Array) for (var s = 0, h = e.length; s < h; ++s) {
                    var l = {};
                    o[s] = l, (p = new XMLHttpRequest).onload = n(p, l), p.onerror = i;
                    var c = e[s];
                    p.open("GET", c, !0), p.responseType = "arraybuffer", p.send(null)
                } else {
                    var p;
                    c = e;
                    (p = new XMLHttpRequest).onload = function () {
                        var e = p.response, t = $.ImageUtils.parseDDS(e, !0);
                        if (t.isCubemap) {
                            for (var i = t.mipmaps.length / t.mipmapCount, n = 0; n < i; n++) {
                                o[n] = {mipmaps: []};
                                for (var s = 0; s < t.mipmapCount; s++) o[n].mipmaps.push(t.mipmaps[n * t.mipmapCount + s]), o[n].format = t.format, o[n].width = t.width, o[n].height = t.height
                            }
                            a.format = t.format, a.needsUpdate = !0, r && r(a)
                        }
                    }, p.onerror = i, p.open("GET", c, !0), p.responseType = "arraybuffer", p.send(null)
                }
                return a
            }, loadDDSTexture: function (e, t, r, i) {
                var o = [];
                o.loadCount = 0;
                var a = new $.CompressedTexture;
                a.image = o, void 0 !== t && (a.mapping = t), a.flipY = !1, a.generateMipmaps = !1;
                var n = new XMLHttpRequest;
                return n.onload = function () {
                    var e = n.response, t = $.ImageUtils.parseDDS(e, !0);
                    if (t.isCubemap) for (var i = t.mipmaps.length / t.mipmapCount, s = 0; s < i; s++) {
                        o[s] = {mipmaps: []};
                        for (var h = 0; h < t.mipmapCount; h++) o[s].mipmaps.push(t.mipmaps[s * t.mipmapCount + h]), o[s].format = t.format, o[s].width = t.width, o[s].height = t.height
                    } else a.image.width = t.width, a.image.height = t.height, a.mipmaps = t.mipmaps;
                    a.format = t.format, a.needsUpdate = !0, r && r(a)
                }, n.onerror = i, n.open("GET", e, !0), n.responseType = "arraybuffer", n.send(null), a
            }, parseDDS: function (e, t) {
                var r = {mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1};

                function i(e) {
                    return e.charCodeAt(0) + (e.charCodeAt(1) << 8) + (e.charCodeAt(2) << 16) + (e.charCodeAt(3) << 24)
                }

                function o(e, t, r, i) {
                    for (var o = r * i * 4, a = new Uint8Array(e, t, o), n = new Uint8Array(o), s = 0, h = 0, l = 0; l < i; l++) for (var c = 0; c < r; c++) {
                        var p = a[h], u = a[++h], f = a[++h], d = a[++h];
                        h++, n[s] = f, n[++s] = u, n[++s] = p, n[++s] = d, s++
                    }
                    return n
                }

                var a, n = i("DXT1"), s = i("DXT3"), h = i("DXT5"), l = new Int32Array(e, 0, 31);
                if (542327876 !== l[0]) return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"), r;
                if (4 & !l[20]) return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"), r;
                var c, p = l[21], u = !1;
                switch (p) {
                    case n:
                        a = 8, r.format = $.RGB_S3TC_DXT1_Format;
                        break;
                    case s:
                        a = 16, r.format = $.RGBA_S3TC_DXT3_Format;
                        break;
                    case h:
                        a = 16, r.format = $.RGBA_S3TC_DXT5_Format;
                        break;
                    default:
                        if (!(32 == l[22] && 16711680 & l[23] && 65280 & l[24] && 255 & l[25] && 4278190080 & l[26])) return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ", (c = p, String.fromCharCode(255 & c, c >> 8 & 255, c >> 16 & 255, c >> 24 & 255))), r;
                        u = !0, a = 64, r.format = $.RGBAFormat
                }
                r.mipmapCount = 1, 131072 & l[2] && !1 !== t && (r.mipmapCount = Math.max(1, l[7])), r.isCubemap = !!(512 & l[28]), r.width = l[4], r.height = l[3];
                for (var f = l[1] + 4, d = r.width, m = r.height, y = r.isCubemap ? 6 : 1, g = 0; g < y; g++) {
                    for (var v = 0; v < r.mipmapCount; v++) {
                        if (u) var x = (w = o(e, f, d, m)).length; else {
                            x = Math.max(4, d) / 4 * Math.max(4, m) / 4 * a;
                            var w = new Uint8Array(e, f, x)
                        }
                        var _ = {data: w, width: d, height: m};
                        r.mipmaps.push(_), f += x, d = Math.max(.5 * d, 1), m = Math.max(.5 * m, 1)
                    }
                    d = r.width, m = r.height
                }
                return r
            }, getNormalMap: function (e, t) {
                var r = function (e, t) {
                    return [e[0] - t[0], e[1] - t[1], e[2] - t[2]]
                }, i = function (e) {
                    var t = Math.sqrt(e[0] * e[0] + e[1] * e[1] + e[2] * e[2]);
                    return [e[0] / t, e[1] / t, e[2] / t]
                };
                t |= 1;
                var o = e.width, a = e.height, n = document.createElement("canvas");
                n.width = o, n.height = a;
                var s = n.getContext("2d");
                s.drawImage(e, 0, 0);
                for (var h, l, c = s.getImageData(0, 0, o, a).data, p = s.createImageData(o, a), u = p.data, f = 0; f < o; f++) for (var d = 0; d < a; d++) {
                    var m = d - 1 < 0 ? 0 : d - 1, y = d + 1 > a - 1 ? a - 1 : d + 1, g = f - 1 < 0 ? 0 : f - 1,
                        v = f + 1 > o - 1 ? o - 1 : f + 1, x = [], w = [0, 0, c[4 * (d * o + f)] / 255 * t];
                    x.push([-1, 0, c[4 * (d * o + g)] / 255 * t]), x.push([-1, -1, c[4 * (m * o + g)] / 255 * t]), x.push([0, -1, c[4 * (m * o + f)] / 255 * t]), x.push([1, -1, c[4 * (m * o + v)] / 255 * t]), x.push([1, 0, c[4 * (d * o + v)] / 255 * t]), x.push([1, 1, c[4 * (y * o + v)] / 255 * t]), x.push([0, 1, c[4 * (y * o + f)] / 255 * t]), x.push([-1, 1, c[4 * (y * o + g)] / 255 * t]);
                    for (var _ = [], b = x.length, M = 0; M < b; M++) {
                        var S = x[M], A = x[(M + 1) % b];
                        S = r(S, w), A = r(A, w), _.push(i((l = A, [(h = S)[1] * l[2] - h[2] * l[1], h[2] * l[0] - h[0] * l[2], h[0] * l[1] - h[1] * l[0]])))
                    }
                    var T = [0, 0, 0];
                    for (M = 0; M < _.length; M++) T[0] += _[M][0], T[1] += _[M][1], T[2] += _[M][2];
                    T[0] /= _.length, T[1] /= _.length, T[2] /= _.length;
                    var E = 4 * (d * o + f);
                    u[E] = (T[0] + 1) / 2 * 255 | 0, u[E + 1] = (T[1] + 1) / 2 * 255 | 0, u[E + 2] = 255 * T[2] | 0, u[E + 3] = 255
                }
                return s.putImageData(p, 0, 0), n
            }, generateDataTexture: function (e, t, r) {
                for (var i = e * t, o = new Uint8Array(3 * i), a = Math.floor(255 * r.r), n = Math.floor(255 * r.g), s = Math.floor(255 * r.b), h = 0; h < i; h++) o[3 * h] = a, o[3 * h + 1] = n, o[3 * h + 2] = s;
                var l = new $.DataTexture(o, e, t, $.RGBFormat);
                return l.needsUpdate = !0, l
            }
        },$.SceneUtils = {
            createMultiMaterialObject: function (e, t) {
                for (var r = new $.Object3D, i = 0, o = t.length; i < o; i++) r.add(new $.Mesh(e, t[i]));
                return r
            }, detach: function (e, t, r) {
                e.applyMatrix(t.matrixWorld), t.remove(e), r.add(e)
            }, attach: function (e, t, r) {
                var i = new $.Matrix4;
                i.getInverse(r.matrixWorld), e.applyMatrix(i), t.remove(e), r.add(e)
            }
        },$.FontUtils = {
            faces: {},
            face: "helvetiker",
            weight: "normal",
            style: "normal",
            size: 150,
            divisions: 10,
            getFace: function () {
                return this.faces[this.face][this.weight][this.style]
            },
            loadFace: function (e) {
                var t = e.familyName.toLowerCase();
                this.faces[t] = this.faces[t] || {}, this.faces[t][e.cssFontWeight] = this.faces[t][e.cssFontWeight] || {}, this.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
                this.faces[t][e.cssFontWeight][e.cssFontStyle] = e;
                return e
            },
            drawText: function (e) {
                var t, r = this.getFace(), i = this.size / r.resolution, o = 0, a = String(e).split(""), n = a.length,
                    s = [];
                for (t = 0; t < n; t++) {
                    var h = new $.Path, l = this.extractGlyphPoints(a[t], r, i, o, h);
                    o += l.offset, s.push(l.path)
                }
                return {paths: s, offset: o / 2}
            },
            extractGlyphPoints: function (e, t, r, i, o) {
                var a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M = [], S = t.glyphs[e] || t.glyphs["?"];
                if (S) {
                    if (S.o) for (l = (h = S._cachedOutline || (S._cachedOutline = S.o.split(" "))).length, c = r, p = r, a = 0; a < l;) switch (h[a++]) {
                        case"m":
                            u = h[a++] * c + i, f = h[a++] * p, o.moveTo(u, f);
                            break;
                        case"l":
                            u = h[a++] * c + i, f = h[a++] * p, o.lineTo(u, f);
                            break;
                        case"q":
                            if (d = h[a++] * c + i, m = h[a++] * p, v = h[a++] * c + i, x = h[a++] * p, o.quadraticCurveTo(v, x, d, m), b = M[M.length - 1]) for (y = b.x, g = b.y, n = 1, s = this.divisions; n <= s; n++) {
                                var A = n / s;
                                $.Shape.Utils.b2(A, y, v, d), $.Shape.Utils.b2(A, g, x, m)
                            }
                            break;
                        case"b":
                            if (d = h[a++] * c + i, m = h[a++] * p, v = h[a++] * c + i, x = h[a++] * -p, w = h[a++] * c + i, _ = h[a++] * -p, o.bezierCurveTo(d, m, v, x, w, _), b = M[M.length - 1]) for (y = b.x, g = b.y, n = 1, s = this.divisions; n <= s; n++) A = n / s, $.Shape.Utils.b3(A, y, v, w, d), $.Shape.Utils.b3(A, g, x, _, m)
                    }
                    return {offset: S.ha * r, path: o}
                }
            }
        },$.FontUtils.generateShapes = function (e, t) {
            var r = void 0 !== (t = t || {}).size ? t.size : 100, i = void 0 !== t.curveSegments ? t.curveSegments : 4,
                o = void 0 !== t.font ? t.font : "helvetiker", a = void 0 !== t.weight ? t.weight : "normal",
                n = void 0 !== t.style ? t.style : "normal";
            $.FontUtils.size = r, $.FontUtils.divisions = i, $.FontUtils.face = o, $.FontUtils.weight = a, $.FontUtils.style = n;
            for (var s = $.FontUtils.drawText(e).paths, h = [], l = 0, c = s.length; l < c; l++) Array.prototype.push.apply(h, s[l].toShapes());
            return h
        },I = $.FontUtils,G = function (e) {
            for (var t = e.length, r = 0, i = t - 1, o = 0; o < t; i = o++) r += e[i].x * e[o].y - e[o].x * e[i].y;
            return .5 * r
        },W = function (e, t, r, i, o, a) {
            var n, s, h, l, c, p, u, f, d, m, y, g, v, x, w;
            if (s = e[a[t]].x, h = e[a[t]].y, l = e[a[r]].x, c = e[a[r]].y, p = e[a[i]].x, 1e-10 > (l - s) * ((u = e[a[i]].y) - h) - (c - h) * (p - s)) return !1;
            for (m = p - l, y = u - c, g = s - p, v = h - u, x = l - s, w = c - h, n = 0; n < o; n++) if (f = e[a[n]].x, d = e[a[n]].y, !(f === s && d === h || f === l && d === c || f === p && d === u) && m * (d - c) - y * (f - l) >= -1e-10 && g * (d - u) - v * (f - p) >= -1e-10 && x * (d - h) - w * (f - s) >= -1e-10) return !1;
            return !0
        },I.Triangulate = function (e, t) {
            var r = e.length;
            if (r < 3) return null;
            var i, o, a, n = [], s = [], h = [];
            if (G(e) > 0) for (o = 0; o < r; o++) s[o] = o; else for (o = 0; o < r; o++) s[o] = r - 1 - o;
            var l = r, c = 2 * l;
            for (o = l - 1; l > 2;) {
                if (c-- <= 0) return t ? h : n;
                if (l <= (i = o) && (i = 0), l <= (o = i + 1) && (o = 0), l <= (a = o + 1) && (a = 0), W(e, i, o, a, l, s)) {
                    var p, u, f, d, m;
                    for (p = s[i], u = s[o], f = s[a], n.push([e[p], e[u], e[f]]), h.push([s[i], s[o], s[a]]), d = o, m = o + 1; m < l; d++, m++) s[d] = s[m];
                    c = 2 * --l
                }
            }
            return t ? h : n
        },I.Triangulate.area = G,self._typeface_js = {
            faces: $.FontUtils.faces,
            loadFace: $.FontUtils.loadFace
        },$.typeface_js = self._typeface_js,$.Curve = function () {
        },$.Curve.prototype.getPoint = function (e) {
            return null
        },$.Curve.prototype.getPointAt = function (e) {
            var t = this.getUtoTmapping(e);
            return this.getPoint(t)
        },$.Curve.prototype.getPoints = function (e) {
            e || (e = 5);
            var t, r = [];
            for (t = 0; t <= e; t++) r.push(this.getPoint(t / e));
            return r
        },$.Curve.prototype.getSpacedPoints = function (e) {
            e || (e = 5);
            var t, r = [];
            for (t = 0; t <= e; t++) r.push(this.getPointAt(t / e));
            return r
        },$.Curve.prototype.getLength = function () {
            var e = this.getLengths();
            return e[e.length - 1]
        },$.Curve.prototype.getLengths = function (e) {
            if (e || (e = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length == e + 1 && !this.needsUpdate) return this.cacheArcLengths;
            this.needsUpdate = !1;
            var t, r, i = [], o = this.getPoint(0), a = 0;
            for (i.push(0), r = 1; r <= e; r++) a += (t = this.getPoint(r / e)).distanceTo(o), i.push(a), o = t;
            return this.cacheArcLengths = i, i
        },$.Curve.prototype.updateArcLengths = function () {
            this.needsUpdate = !0, this.getLengths()
        },$.Curve.prototype.getUtoTmapping = function (e, t) {
            var r, i = this.getLengths(), o = 0, a = i.length;
            r = t || e * i[a - 1];
            for (var n, s = 0, h = a - 1; s <= h;) if ((n = i[o = Math.floor(s + (h - s) / 2)] - r) < 0) s = o + 1; else {
                if (!(n > 0)) {
                    h = o;
                    break
                }
                h = o - 1
            }
            if (i[o = h] == r) return o / (a - 1);
            var l = i[o];
            return (o + (r - l) / (i[o + 1] - l)) / (a - 1)
        },$.Curve.prototype.getTangent = function (e) {
            var t = e - 1e-4, r = e + 1e-4;
            t < 0 && (t = 0), r > 1 && (r = 1);
            var i = this.getPoint(t);
            return this.getPoint(r).clone().sub(i).normalize()
        },$.Curve.prototype.getTangentAt = function (e) {
            var t = this.getUtoTmapping(e);
            return this.getTangent(t)
        },$.Curve.Utils = {
            tangentQuadraticBezier: function (e, t, r, i) {
                return 2 * (1 - e) * (r - t) + 2 * e * (i - r)
            }, tangentCubicBezier: function (e, t, r, i, o) {
                return -3 * t * (1 - e) * (1 - e) + 3 * r * (1 - e) * (1 - e) - 6 * e * r * (1 - e) + 6 * e * i * (1 - e) - 3 * e * e * i + 3 * e * e * o
            }, tangentSpline: function (e, t, r, i, o) {
                return 6 * e * e - 6 * e + (3 * e * e - 4 * e + 1) + (-6 * e * e + 6 * e) + (3 * e * e - 2 * e)
            }, interpolate: function (e, t, r, i, o) {
                var a = .5 * (r - e), n = .5 * (i - t), s = o * o;
                return (2 * t - 2 * r + a + n) * (o * s) + (-3 * t + 3 * r - 2 * a - n) * s + a * o + t
            }
        },$.Curve.create = function (e, t) {
            return e.prototype = Object.create($.Curve.prototype), e.prototype.getPoint = t, e
        },$.CurvePath = function () {
            this.curves = [], this.bends = [], this.autoClose = !1
        },$.CurvePath.prototype = Object.create($.Curve.prototype),$.CurvePath.prototype.add = function (e) {
            this.curves.push(e)
        },$.CurvePath.prototype.checkConnection = function () {
        },$.CurvePath.prototype.closePath = function () {
            var e = this.curves[0].getPoint(0), t = this.curves[this.curves.length - 1].getPoint(1);
            e.equals(t) || this.curves.push(new $.LineCurve(t, e))
        },$.CurvePath.prototype.getPoint = function (e) {
            for (var t, r = e * this.getLength(), i = this.getCurveLengths(), o = 0; o < i.length;) {
                if (i[o] >= r) {
                    var a = 1 - (i[o] - r) / (t = this.curves[o]).getLength();
                    return t.getPointAt(a)
                }
                o++
            }
            return null
        },$.CurvePath.prototype.getLength = function () {
            var e = this.getCurveLengths();
            return e[e.length - 1]
        },$.CurvePath.prototype.getCurveLengths = function () {
            if (this.cacheLengths && this.cacheLengths.length == this.curves.length) return this.cacheLengths;
            var e, t = [], r = 0, i = this.curves.length;
            for (e = 0; e < i; e++) r += this.curves[e].getLength(), t.push(r);
            return this.cacheLengths = t, t
        },$.CurvePath.prototype.getBoundingBox = function () {
            var e, t, r, i, o, a, n, s, h, l, c = this.getPoints();
            e = t = Number.NEGATIVE_INFINITY, i = o = Number.POSITIVE_INFINITY;
            var p = c[0] instanceof $.Vector3;
            for (l = p ? new $.Vector3 : new $.Vector2, s = 0, h = c.length; s < h; s++) (n = c[s]).x > e ? e = n.x : n.x < i && (i = n.x), n.y > t ? t = n.y : n.y < o && (o = n.y), p && (n.z > r ? r = n.z : n.z < a && (a = n.z)), l.add(n);
            var u = {minX: i, minY: o, maxX: e, maxY: t};
            return p && (u.maxZ = r, u.minZ = a), u
        },$.CurvePath.prototype.createPointsGeometry = function (e) {
            var t = this.getPoints(e, !0);
            return this.createGeometry(t)
        },$.CurvePath.prototype.createSpacedPointsGeometry = function (e) {
            var t = this.getSpacedPoints(e, !0);
            return this.createGeometry(t)
        },$.CurvePath.prototype.createGeometry = function (e) {
            for (var t = new $.Geometry, r = 0; r < e.length; r++) t.vertices.push(new $.Vector3(e[r].x, e[r].y, e[r].z || 0));
            return t
        },$.CurvePath.prototype.addWrapPath = function (e) {
            this.bends.push(e)
        },$.CurvePath.prototype.getTransformedPoints = function (e, t) {
            var r, i, o = this.getPoints(e);
            for (t || (t = this.bends), r = 0, i = t.length; r < i; r++) o = this.getWrapPoints(o, t[r]);
            return o
        },$.CurvePath.prototype.getTransformedSpacedPoints = function (e, t) {
            var r, i, o = this.getSpacedPoints(e);
            for (t || (t = this.bends), r = 0, i = t.length; r < i; r++) o = this.getWrapPoints(o, t[r]);
            return o
        },$.CurvePath.prototype.getWrapPoints = function (e, t) {
            var r, i, o, a, n, s, h = this.getBoundingBox();
            for (r = 0, i = e.length; r < i; r++) {
                a = (o = e[r]).x, n = o.y, s = a / h.maxX, s = t.getUtoTmapping(s, a);
                var l = t.getPoint(s), c = t.getTangent(s);
                c.set(-c.y, c.x).multiplyScalar(n), o.x = l.x + c.x, o.y = l.y + c.y
            }
            return e
        },$.Gyroscope = function () {
            $.Object3D.call(this)
        },$.Gyroscope.prototype = Object.create($.Object3D.prototype),$.Gyroscope.prototype.updateMatrixWorld = function (e) {
            this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (this.parent ? (this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorld.decompose(this.translationWorld, this.quaternionWorld, this.scaleWorld), this.matrix.decompose(this.translationObject, this.quaternionObject, this.scaleObject), this.matrixWorld.compose(this.translationWorld, this.quaternionObject, this.scaleWorld)) : this.matrixWorld.copy(this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
            for (var t = 0, r = this.children.length; t < r; t++) this.children[t].updateMatrixWorld(e)
        },$.Gyroscope.prototype.translationWorld = new $.Vector3,$.Gyroscope.prototype.translationObject = new $.Vector3,$.Gyroscope.prototype.quaternionWorld = new $.Quaternion,$.Gyroscope.prototype.quaternionObject = new $.Quaternion,$.Gyroscope.prototype.scaleWorld = new $.Vector3,$.Gyroscope.prototype.scaleObject = new $.Vector3,$.Path = function (e) {
            $.CurvePath.call(this), this.actions = [], e && this.fromPoints(e)
        },$.Path.prototype = Object.create($.CurvePath.prototype),$.PathActions = {
            MOVE_TO: "moveTo",
            LINE_TO: "lineTo",
            QUADRATIC_CURVE_TO: "quadraticCurveTo",
            BEZIER_CURVE_TO: "bezierCurveTo",
            CSPLINE_THRU: "splineThru",
            ARC: "arc",
            ELLIPSE: "ellipse"
        },$.Path.prototype.fromPoints = function (e) {
            this.moveTo(e[0].x, e[0].y);
            for (var t = 1, r = e.length; t < r; t++) this.lineTo(e[t].x, e[t].y)
        },$.Path.prototype.moveTo = function (e, t) {
            var r = Array.prototype.slice.call(arguments);
            this.actions.push({action: $.PathActions.MOVE_TO, args: r})
        },$.Path.prototype.lineTo = function (e, t) {
            var r = Array.prototype.slice.call(arguments), i = this.actions[this.actions.length - 1].args,
                o = i[i.length - 2], a = i[i.length - 1], n = new $.LineCurve(new $.Vector2(o, a), new $.Vector2(e, t));
            this.curves.push(n), this.actions.push({action: $.PathActions.LINE_TO, args: r})
        },$.Path.prototype.quadraticCurveTo = function (e, t, r, i) {
            var o = Array.prototype.slice.call(arguments), a = this.actions[this.actions.length - 1].args,
                n = a[a.length - 2], s = a[a.length - 1],
                h = new $.QuadraticBezierCurve(new $.Vector2(n, s), new $.Vector2(e, t), new $.Vector2(r, i));
            this.curves.push(h), this.actions.push({action: $.PathActions.QUADRATIC_CURVE_TO, args: o})
        },$.Path.prototype.bezierCurveTo = function (e, t, r, i, o, a) {
            var n = Array.prototype.slice.call(arguments), s = this.actions[this.actions.length - 1].args,
                h = s[s.length - 2], l = s[s.length - 1],
                c = new $.CubicBezierCurve(new $.Vector2(h, l), new $.Vector2(e, t), new $.Vector2(r, i), new $.Vector2(o, a));
            this.curves.push(c), this.actions.push({action: $.PathActions.BEZIER_CURVE_TO, args: n})
        },$.Path.prototype.splineThru = function (e) {
            var t = Array.prototype.slice.call(arguments), r = this.actions[this.actions.length - 1].args,
                i = r[r.length - 2], o = r[r.length - 1], a = [new $.Vector2(i, o)];
            Array.prototype.push.apply(a, e);
            var n = new $.SplineCurve(a);
            this.curves.push(n), this.actions.push({action: $.PathActions.CSPLINE_THRU, args: t})
        },$.Path.prototype.arc = function (e, t, r, i, o, a) {
            var n = this.actions[this.actions.length - 1].args, s = n[n.length - 2], h = n[n.length - 1];
            this.absarc(e + s, t + h, r, i, o, a)
        },$.Path.prototype.absarc = function (e, t, r, i, o, a) {
            this.absellipse(e, t, r, r, i, o, a)
        },$.Path.prototype.ellipse = function (e, t, r, i, o, a, n) {
            var s = this.actions[this.actions.length - 1].args, h = s[s.length - 2], l = s[s.length - 1];
            this.absellipse(e + h, t + l, r, i, o, a, n)
        },$.Path.prototype.absellipse = function (e, t, r, i, o, a, n) {
            var s = Array.prototype.slice.call(arguments), h = new $.EllipseCurve(e, t, r, i, o, a, n);
            this.curves.push(h);
            var l = h.getPoint(1);
            s.push(l.x), s.push(l.y), this.actions.push({action: $.PathActions.ELLIPSE, args: s})
        },$.Path.prototype.getSpacedPoints = function (e, t) {
            e || (e = 40);
            for (var r = [], i = 0; i < e; i++) r.push(this.getPoint(i / e));
            return r
        },$.Path.prototype.getPoints = function (e, t) {
            if (this.useSpacedPoints) return this.getSpacedPoints(e, t);
            e = e || 12;
            var r, i, o, a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w = [];
            for (r = 0, i = this.actions.length; r < i; r++) switch (a = (o = this.actions[r]).action, n = o.args, a) {
                case $.PathActions.MOVE_TO:
                case $.PathActions.LINE_TO:
                    w.push(new $.Vector2(n[0], n[1]));
                    break;
                case $.PathActions.QUADRATIC_CURVE_TO:
                    for (s = n[2], h = n[3], p = n[0], u = n[1], w.length > 0 ? (f = (m = w[w.length - 1]).x, d = m.y) : (f = (m = this.actions[r - 1].args)[m.length - 2], d = m[m.length - 1]), y = 1; y <= e; y++) g = y / e, v = $.Shape.Utils.b2(g, f, p, s), x = $.Shape.Utils.b2(g, d, u, h), w.push(new $.Vector2(v, x));
                    break;
                case $.PathActions.BEZIER_CURVE_TO:
                    for (s = n[4], h = n[5], p = n[0], u = n[1], l = n[2], c = n[3], w.length > 0 ? (f = (m = w[w.length - 1]).x, d = m.y) : (f = (m = this.actions[r - 1].args)[m.length - 2], d = m[m.length - 1]), y = 1; y <= e; y++) g = y / e, v = $.Shape.Utils.b3(g, f, p, l, s), x = $.Shape.Utils.b3(g, d, u, c, h), w.push(new $.Vector2(v, x));
                    break;
                case $.PathActions.CSPLINE_THRU:
                    m = this.actions[r - 1].args;
                    var _ = [new $.Vector2(m[m.length - 2], m[m.length - 1])], b = e * n[0].length;
                    _ = _.concat(n[0]);
                    var M = new $.SplineCurve(_);
                    for (y = 1; y <= b; y++) w.push(M.getPointAt(y / b));
                    break;
                case $.PathActions.ARC:
                    var S = n[0], A = n[1], T = n[2], E = n[3], C = n[4], P = !!n[5], L = C - E, D = 2 * e;
                    for (y = 1; y <= D; y++) g = y / D, P || (g = 1 - g), R = E + g * L, v = S + T * Math.cos(R), x = A + T * Math.sin(R), w.push(new $.Vector2(v, x));
                    break;
                case $.PathActions.ELLIPSE:
                    S = n[0], A = n[1];
                    var R, F = n[2], U = n[3];
                    E = n[4], C = n[5], P = !!n[6], L = C - E, D = 2 * e;
                    for (y = 1; y <= D; y++) g = y / D, P || (g = 1 - g), R = E + g * L, v = S + F * Math.cos(R), x = A + U * Math.sin(R), w.push(new $.Vector2(v, x))
            }
            var V = w[w.length - 1];
            return Math.abs(V.x - w[0].x) < 1e-10 && Math.abs(V.y - w[0].y) < 1e-10 && w.splice(w.length - 1, 1), t && w.push(w[0]), w
        },$.Path.prototype.toShapes = function (e, t) {
            function r(e) {
                for (var t = [], r = 0, i = e.length; r < i; r++) {
                    var o = e[r], a = new $.Shape;
                    a.actions = o.actions, a.curves = o.curves, t.push(a)
                }
                return t
            }

            function i(e, t) {
                for (var r = t.length, i = !1, o = r - 1, a = 0; a < r; o = a++) {
                    var n = t[o], s = t[a], h = s.x - n.x, l = s.y - n.y;
                    if (Math.abs(l) > 1e-10) {
                        if (l < 0 && (n = t[a], h = -h, s = t[o], l = -l), e.y < n.y || e.y > s.y) continue;
                        if (e.y == n.y) {
                            if (e.x == n.x) return !0
                        } else {
                            var c = l * (e.x - n.x) - h * (e.y - n.y);
                            if (0 == c) return !0;
                            if (c < 0) continue;
                            i = !i
                        }
                    } else {
                        if (e.y != n.y) continue;
                        if (s.x <= e.x && e.x <= n.x || n.x <= e.x && e.x <= s.x) return !0
                    }
                }
                return i
            }

            var o = function (e) {
                var t, r, i, o, a, n = [], s = new $.Path;
                for (t = 0, r = e.length; t < r; t++) a = (i = e[t]).args, (o = i.action) == $.PathActions.MOVE_TO && 0 != s.actions.length && (n.push(s), s = new $.Path), s[o].apply(s, a);
                return 0 != s.actions.length && n.push(s), n
            }(this.actions);
            if (0 == o.length) return [];
            if (!0 === t) return r(o);
            var a, n, s, h = [];
            if (1 == o.length) return n = o[0], (s = new $.Shape).actions = n.actions, s.curves = n.curves, h.push(s), h;
            var l = !$.Shape.Utils.isClockWise(o[0].getPoints());
            l = e ? !l : l;
            var c, p, u, f, d, m, y = [], g = [], v = [], x = 0;
            for (g[x] = void 0, v[x] = [], p = 0, u = o.length; p < u; p++) c = (n = o[p]).getPoints(), a = $.Shape.Utils.isClockWise(c), (a = e ? !a : a) ? (!l && g[x] && x++, g[x] = {
                s: new $.Shape,
                p: c
            }, g[x].s.actions = n.actions, g[x].s.curves = n.curves, l && x++, v[x] = []) : v[x].push({h: n, p: c[0]});
            if (!g[0]) return r(o);
            if (g.length > 1) {
                for (var w = !1, _ = [], b = 0, M = g.length; b < M; b++) y[b] = [];
                for (b = 0, M = g.length; b < M; b++) {
                    g[b];
                    for (var S = v[b], A = 0; A < S.length; A++) {
                        for (var T = S[A], E = !0, C = 0; C < g.length; C++) i(T.p, g[C].p) && (b != C && _.push({
                            froms: b,
                            tos: C,
                            hole: A
                        }), E ? (E = !1, y[C].push(T)) : w = !0);
                        E && y[b].push(T)
                    }
                }
                _.length > 0 && (w || (v = y))
            }
            for (p = 0, u = g.length; p < u; p++) for (s = g[p].s, h.push(s), d = 0, m = (f = v[p]).length; d < m; d++) s.holes.push(f[d].h);
            return h
        },$.Shape = function () {
            $.Path.apply(this, arguments), this.holes = []
        },$.Shape.prototype = Object.create($.Path.prototype),$.Shape.prototype.extrude = function (e) {
            return new $.ExtrudeGeometry(this, e)
        },$.Shape.prototype.makeGeometry = function (e) {
            return new $.ShapeGeometry(this, e)
        },$.Shape.prototype.getPointsHoles = function (e) {
            var t, r = this.holes.length, i = [];
            for (t = 0; t < r; t++) i[t] = this.holes[t].getTransformedPoints(e, this.bends);
            return i
        },$.Shape.prototype.getSpacedPointsHoles = function (e) {
            var t, r = this.holes.length, i = [];
            for (t = 0; t < r; t++) i[t] = this.holes[t].getTransformedSpacedPoints(e, this.bends);
            return i
        },$.Shape.prototype.extractAllPoints = function (e) {
            return {shape: this.getTransformedPoints(e), holes: this.getPointsHoles(e)}
        },$.Shape.prototype.extractPoints = function (e) {
            return this.useSpacedPoints ? this.extractAllSpacedPoints(e) : this.extractAllPoints(e)
        },$.Shape.prototype.extractAllSpacedPoints = function (e) {
            return {shape: this.getTransformedSpacedPoints(e), holes: this.getSpacedPointsHoles(e)}
        },$.Shape.Utils = {
            triangulateShape: function (e, t) {
                function r(e, t, r) {
                    return e.x != t.x ? e.x < t.x ? e.x <= r.x && r.x <= t.x : t.x <= r.x && r.x <= e.x : e.y < t.y ? e.y <= r.y && r.y <= t.y : t.y <= r.y && r.y <= e.y
                }

                function i(e, t, i, o, a) {
                    var n = t.x - e.x, s = t.y - e.y, h = o.x - i.x, l = o.y - i.y, c = e.x - i.x, p = e.y - i.y,
                        u = s * h - n * l, f = s * c - n * p;
                    if (Math.abs(u) > 1e-10) {
                        var d;
                        if (u > 0) {
                            if (f < 0 || f > u) return [];
                            if ((d = l * c - h * p) < 0 || d > u) return []
                        } else {
                            if (f > 0 || f < u) return [];
                            if ((d = l * c - h * p) > 0 || d < u) return []
                        }
                        if (0 == d) return !a || 0 != f && f != u ? [e] : [];
                        if (d == u) return !a || 0 != f && f != u ? [t] : [];
                        if (0 == f) return [i];
                        if (f == u) return [o];
                        var m = d / u;
                        return [{x: e.x + m * n, y: e.y + m * s}]
                    }
                    if (0 != f || l * c != h * p) return [];
                    var y, g, v, x, w, _, b, M, S = 0 == n && 0 == s, A = 0 == h && 0 == l;
                    return S && A ? e.x != i.x || e.y != i.y ? [] : [e] : S ? r(i, o, e) ? [e] : [] : A ? r(e, t, i) ? [i] : [] : (0 != n ? (e.x < t.x ? (y = e, v = e.x, g = t, x = t.x) : (y = t, v = t.x, g = e, x = e.x), i.x < o.x ? (w = i, b = i.x, _ = o, M = o.x) : (w = o, b = o.x, _ = i, M = i.x)) : (e.y < t.y ? (y = e, v = e.y, g = t, x = t.y) : (y = t, v = t.y, g = e, x = e.y), i.y < o.y ? (w = i, b = i.y, _ = o, M = o.y) : (w = o, b = o.y, _ = i, M = i.y)), v <= b ? x < b ? [] : x == b ? a ? [] : [w] : x <= M ? [w, g] : [w, _] : v > M ? [] : v == M ? a ? [] : [y] : x <= M ? [y, g] : [y, _])
                }

                function o(e, t, r, i) {
                    var o = t.x - e.x, a = t.y - e.y, n = r.x - e.x, s = r.y - e.y, h = i.x - e.x, l = i.y - e.y,
                        c = o * s - a * n, p = o * l - a * h;
                    if (Math.abs(c) > 1e-10) {
                        var u = h * s - l * n;
                        return c > 0 ? p >= 0 && u >= 0 : p >= 0 || u >= 0
                    }
                    return p > 0
                }

                for (var a, n, s, h, l, c, p = {}, u = e.concat(), f = 0, d = t.length; f < d; f++) Array.prototype.push.apply(u, t[f]);
                for (a = 0, n = u.length; a < n; a++) p[l = u[a].x + ":" + u[a].y], p[l] = a;
                var m = function (e, t) {
                    var r, a = e.concat();

                    function n(e, t) {
                        var i = a.length - 1, n = e - 1;
                        n < 0 && (n = i);
                        var s = e + 1;
                        s > i && (s = 0);
                        var h = o(a[e], a[n], a[s], r[t]);
                        if (!h) return !1;
                        var l = r.length - 1, c = t - 1;
                        c < 0 && (c = l);
                        var p = t + 1;
                        return p > l && (p = 0), !!(h = o(r[t], r[c], r[p], a[e]))
                    }

                    function s(e, t) {
                        var r, o;
                        for (r = 0; r < a.length; r++) if (o = r + 1, o %= a.length, i(e, t, a[r], a[o], !0).length > 0) return !0;
                        return !1
                    }

                    var h = [];

                    function l(e, r) {
                        var o, a, n, s;
                        for (o = 0; o < h.length; o++) for (a = t[h[o]], n = 0; n < a.length; n++) if (s = n + 1, s %= a.length, i(e, r, a[n], a[s], !0).length > 0) return !0;
                        return !1
                    }

                    for (var c, p, u, f, d, m, y, g, v, x, w = [], _ = 0, b = t.length; _ < b; _++) h.push(_);
                    for (var M = 0, S = 2 * h.length; h.length > 0 && !(--S < 0);) for (p = M; p < a.length; p++) {
                        u = a[p], c = -1;
                        for (_ = 0; _ < h.length; _++) if (d = h[_], void 0 === w[m = u.x + ":" + u.y + ":" + d]) {
                            r = t[d];
                            for (var A = 0; A < r.length; A++) if (f = r[A], n(p, A) && !s(u, f) && !l(u, f)) {
                                c = A, h.splice(_, 1), y = a.slice(0, p + 1), g = a.slice(p), v = r.slice(c), x = r.slice(0, c + 1), a = y.concat(v).concat(x).concat(g), M = p;
                                break
                            }
                            if (c >= 0) break;
                            w[m] = !0
                        }
                        if (c >= 0) break
                    }
                    return a
                }(e, t), y = $.FontUtils.Triangulate(m, !1);
                for (a = 0, n = y.length; a < n; a++) for (h = y[a], s = 0; s < 3; s++) void 0 !== (c = p[l = h[s].x + ":" + h[s].y]) && (h[s] = c);
                return y.concat()
            }, isClockWise: function (e) {
                return $.FontUtils.Triangulate.area(e) < 0
            }, b2p0: function (e, t) {
                var r = 1 - e;
                return r * r * t
            }, b2p1: function (e, t) {
                return 2 * (1 - e) * e * t
            }, b2p2: function (e, t) {
                return e * e * t
            }, b2: function (e, t, r, i) {
                return this.b2p0(e, t) + this.b2p1(e, r) + this.b2p2(e, i)
            }, b3p0: function (e, t) {
                var r = 1 - e;
                return r * r * r * t
            }, b3p1: function (e, t) {
                var r = 1 - e;
                return 3 * r * r * e * t
            }, b3p2: function (e, t) {
                return 3 * (1 - e) * e * e * t
            }, b3p3: function (e, t) {
                return e * e * e * t
            }, b3: function (e, t, r, i, o) {
                return this.b3p0(e, t) + this.b3p1(e, r) + this.b3p2(e, i) + this.b3p3(e, o)
            }
        },$.LineCurve = function (e, t) {
            this.v1 = e, this.v2 = t
        },$.LineCurve.prototype = Object.create($.Curve.prototype),$.LineCurve.prototype.getPoint = function (e) {
            var t = this.v2.clone().sub(this.v1);
            return t.multiplyScalar(e).add(this.v1), t
        },$.LineCurve.prototype.getPointAt = function (e) {
            return this.getPoint(e)
        },$.LineCurve.prototype.getTangent = function (e) {
            return this.v2.clone().sub(this.v1).normalize()
        },$.QuadraticBezierCurve = function (e, t, r) {
            this.v0 = e, this.v1 = t, this.v2 = r
        },$.QuadraticBezierCurve.prototype = Object.create($.Curve.prototype),$.QuadraticBezierCurve.prototype.getPoint = function (e) {
            var t, r;
            return t = $.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x), r = $.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y), new $.Vector2(t, r)
        },$.QuadraticBezierCurve.prototype.getTangent = function (e) {
            var t, r;
            t = $.Curve.Utils.tangentQuadraticBezier(e, this.v0.x, this.v1.x, this.v2.x), r = $.Curve.Utils.tangentQuadraticBezier(e, this.v0.y, this.v1.y, this.v2.y);
            var i = new $.Vector2(t, r);
            return i.normalize(), i
        },$.CubicBezierCurve = function (e, t, r, i) {
            this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = i
        },$.CubicBezierCurve.prototype = Object.create($.Curve.prototype),$.CubicBezierCurve.prototype.getPoint = function (e) {
            var t, r;
            return t = $.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), r = $.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y), new $.Vector2(t, r)
        },$.CubicBezierCurve.prototype.getTangent = function (e) {
            var t, r;
            t = $.Curve.Utils.tangentCubicBezier(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), r = $.Curve.Utils.tangentCubicBezier(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y);
            var i = new $.Vector2(t, r);
            return i.normalize(), i
        },$.SplineCurve = function (e) {
            this.points = null == e ? [] : e
        },$.SplineCurve.prototype = Object.create($.Curve.prototype),$.SplineCurve.prototype.getPoint = function (e) {
            var t, r, i, o = new $.Vector2, a = [], n = this.points;
            return i = (t = (n.length - 1) * e) - (r = Math.floor(t)), a[0] = 0 == r ? r : r - 1, a[1] = r, a[2] = r > n.length - 2 ? n.length - 1 : r + 1, a[3] = r > n.length - 3 ? n.length - 1 : r + 2, o.x = $.Curve.Utils.interpolate(n[a[0]].x, n[a[1]].x, n[a[2]].x, n[a[3]].x, i), o.y = $.Curve.Utils.interpolate(n[a[0]].y, n[a[1]].y, n[a[2]].y, n[a[3]].y, i), o
        },$.EllipseCurve = function (e, t, r, i, o, a, n) {
            this.aX = e, this.aY = t, this.xRadius = r, this.yRadius = i, this.aStartAngle = o, this.aEndAngle = a, this.aClockwise = n
        },$.EllipseCurve.prototype = Object.create($.Curve.prototype),$.EllipseCurve.prototype.getPoint = function (e) {
            var t, r = this.aEndAngle - this.aStartAngle;
            r < 0 && (r += 2 * Math.PI), r > 2 * Math.PI && (r -= 2 * Math.PI), t = !0 === this.aClockwise ? this.aEndAngle + (1 - e) * (2 * Math.PI - r) : this.aStartAngle + e * r;
            var i = this.aX + this.xRadius * Math.cos(t), o = this.aY + this.yRadius * Math.sin(t);
            return new $.Vector2(i, o)
        },$.ArcCurve = function (e, t, r, i, o, a) {
            $.EllipseCurve.call(this, e, t, r, r, i, o, a)
        },$.ArcCurve.prototype = Object.create($.EllipseCurve.prototype),$.LineCurve3 = $.Curve.create((function (e, t) {
            this.v1 = e, this.v2 = t
        }), (function (e) {
            var t = new $.Vector3;
            return t.subVectors(this.v2, this.v1), t.multiplyScalar(e), t.add(this.v1), t
        })),$.QuadraticBezierCurve3 = $.Curve.create((function (e, t, r) {
            this.v0 = e, this.v1 = t, this.v2 = r
        }), (function (e) {
            var t, r, i;
            return t = $.Shape.Utils.b2(e, this.v0.x, this.v1.x, this.v2.x), r = $.Shape.Utils.b2(e, this.v0.y, this.v1.y, this.v2.y), i = $.Shape.Utils.b2(e, this.v0.z, this.v1.z, this.v2.z), new $.Vector3(t, r, i)
        })),$.CubicBezierCurve3 = $.Curve.create((function (e, t, r, i) {
            this.v0 = e, this.v1 = t, this.v2 = r, this.v3 = i
        }), (function (e) {
            var t, r, i;
            return t = $.Shape.Utils.b3(e, this.v0.x, this.v1.x, this.v2.x, this.v3.x), r = $.Shape.Utils.b3(e, this.v0.y, this.v1.y, this.v2.y, this.v3.y), i = $.Shape.Utils.b3(e, this.v0.z, this.v1.z, this.v2.z, this.v3.z), new $.Vector3(t, r, i)
        })),$.SplineCurve3 = $.Curve.create((function (e) {
            this.points = null == e ? [] : e
        }), (function (e) {
            var t, r, i, o = new $.Vector3, a = [], n = this.points;
            i = (t = (n.length - 1) * e) - (r = Math.floor(t)), a[0] = 0 == r ? r : r - 1, a[1] = r, a[2] = r > n.length - 2 ? n.length - 1 : r + 1, a[3] = r > n.length - 3 ? n.length - 1 : r + 2;
            var s = n[a[0]], h = n[a[1]], l = n[a[2]], c = n[a[3]];
            return o.x = $.Curve.Utils.interpolate(s.x, h.x, l.x, c.x, i), o.y = $.Curve.Utils.interpolate(s.y, h.y, l.y, c.y, i), o.z = $.Curve.Utils.interpolate(s.z, h.z, l.z, c.z, i), o
        })),$.ClosedSplineCurve3 = $.Curve.create((function (e) {
            this.points = null == e ? [] : e
        }), (function (e) {
            var t, r, i, o = new $.Vector3, a = [], n = this.points;
            return i = (t = (n.length - 0) * e) - (r = Math.floor(t)), r += r > 0 ? 0 : (Math.floor(Math.abs(r) / n.length) + 1) * n.length, a[0] = (r - 1) % n.length, a[1] = r % n.length, a[2] = (r + 1) % n.length, a[3] = (r + 2) % n.length, o.x = $.Curve.Utils.interpolate(n[a[0]].x, n[a[1]].x, n[a[2]].x, n[a[3]].x, i), o.y = $.Curve.Utils.interpolate(n[a[0]].y, n[a[1]].y, n[a[2]].y, n[a[3]].y, i), o.z = $.Curve.Utils.interpolate(n[a[0]].z, n[a[1]].z, n[a[2]].z, n[a[3]].z, i), o
        })),$.AnimationHandler = (H = [], j = {}, X = {
            update: function (e) {
                for (var t = 0; t < H.length; t++) H[t].update(e)
            }, addToUpdate: function (e) {
                -1 === H.indexOf(e) && H.push(e)
            }, removeFromUpdate: function (e) {
                var t = H.indexOf(e);
                -1 !== t && H.splice(t, 1)
            }, add: function (e) {
                j[e.name], j[e.name] = e, Y(e)
            }, remove: function (e) {
                j[e], j[e] = void 0
            }, get: function (e) {
                if ("string" == typeof e) return j[e] ? j[e] : null
            }, parse: function (e) {
                var t = [];
                if (e instanceof $.SkinnedMesh) for (var r = 0; r < e.skeleton.bones.length; r++) t.push(e.skeleton.bones[r]); else q(e, t);
                return t
            }
        }, q = function (e, t) {
            t.push(e);
            for (var r = 0; r < e.children.length; r++) q(e.children[r], t)
        }, Y = function (e) {
            if (!0 !== e.initialized) {
                for (var t = 0; t < e.hierarchy.length; t++) {
                    for (var r = 0; r < e.hierarchy[t].keys.length; r++) if (e.hierarchy[t].keys[r].time < 0 && (e.hierarchy[t].keys[r].time = 0), void 0 !== e.hierarchy[t].keys[r].rot && !(e.hierarchy[t].keys[r].rot instanceof $.Quaternion)) {
                        var i = e.hierarchy[t].keys[r].rot;
                        e.hierarchy[t].keys[r].rot = (new $.Quaternion).fromArray(i)
                    }
                    if (e.hierarchy[t].keys.length && void 0 !== e.hierarchy[t].keys[0].morphTargets) {
                        var o = {};
                        for (r = 0; r < e.hierarchy[t].keys.length; r++) for (var a = 0; a < e.hierarchy[t].keys[r].morphTargets.length; a++) o[s = e.hierarchy[t].keys[r].morphTargets[a]] = -1;
                        for (e.hierarchy[t].usedMorphTargets = o, r = 0; r < e.hierarchy[t].keys.length; r++) {
                            var n = {};
                            for (var s in o) {
                                for (a = 0; a < e.hierarchy[t].keys[r].morphTargets.length; a++) if (e.hierarchy[t].keys[r].morphTargets[a] === s) {
                                    n[s] = e.hierarchy[t].keys[r].morphTargetsInfluences[a];
                                    break
                                }
                                a === e.hierarchy[t].keys[r].morphTargets.length && (n[s] = 0)
                            }
                            e.hierarchy[t].keys[r].morphTargetsInfluences = n
                        }
                    }
                    for (r = 1; r < e.hierarchy[t].keys.length; r++) e.hierarchy[t].keys[r].time === e.hierarchy[t].keys[r - 1].time && (e.hierarchy[t].keys.splice(r, 1), r--);
                    for (r = 0; r < e.hierarchy[t].keys.length; r++) e.hierarchy[t].keys[r].index = r
                }
                e.initialized = !0
            }
        }, X.LINEAR = 0, X.CATMULLROM = 1, X.CATMULLROM_FORWARD = 2, X),$.Animation = function (e, t) {
            this.root = e, this.data = $.AnimationHandler.get(t), this.hierarchy = $.AnimationHandler.parse(e), this.currentTime = 0, this.timeScale = 1, this.isPlaying = !1, this.isPaused = !0, this.loop = !0, this.weight = 0, this.interpolationType = $.AnimationHandler.LINEAR
        },$.Animation.prototype.keyTypes = ["pos", "rot", "scl"],$.Animation.prototype.play = function (e, t) {
            this.currentTime = void 0 !== e ? e : 0, this.weight = void 0 !== t ? t : 1, this.isPlaying = !0, this.isPaused = !1, this.reset(), $.AnimationHandler.addToUpdate(this)
        },$.Animation.prototype.pause = function () {
            !0 === this.isPaused ? $.AnimationHandler.addToUpdate(this) : $.AnimationHandler.removeFromUpdate(this), this.isPaused = !this.isPaused
        },$.Animation.prototype.stop = function () {
            this.isPlaying = !1, this.isPaused = !1, $.AnimationHandler.removeFromUpdate(this)
        },$.Animation.prototype.reset = function () {
            for (var e = 0, t = this.hierarchy.length; e < t; e++) {
                var r = this.hierarchy[e];
                r.matrixAutoUpdate = !0, void 0 === r.animationCache && (r.animationCache = {}), void 0 === r.animationCache[this.data.name] && (r.animationCache[this.data.name] = {}, r.animationCache[this.data.name].prevKey = {
                    pos: 0,
                    rot: 0,
                    scl: 0
                }, r.animationCache[this.data.name].nextKey = {
                    pos: 0,
                    rot: 0,
                    scl: 0
                }, r.animationCache[this.data.name].originalMatrix = r instanceof $.Bone ? r.skinMatrix : r.matrix);
                for (var i = r.animationCache[this.data.name], o = 0; o < 3; o++) {
                    for (var a = this.keyTypes[o], n = this.data.hierarchy[e].keys[0], s = this.getNextKeyWith(a, e, 1); s.time < this.currentTime && s.index > n.index;) n = s, s = this.getNextKeyWith(a, e, s.index + 1);
                    i.prevKey[a] = n, i.nextKey[a] = s
                }
            }
        },$.Animation.prototype.update = function () {
            var e = [], t = new $.Vector3, r = new $.Vector3, i = new $.Quaternion, o = function (e, t) {
                var r, i, o, n, s, h, l, c, p, u = [], f = [];
                return o = (r = (e.length - 1) * t) - (i = Math.floor(r)), u[0] = 0 === i ? i : i - 1, u[1] = i, u[2] = i > e.length - 2 ? i : i + 1, u[3] = i > e.length - 3 ? i : i + 2, h = e[u[0]], l = e[u[1]], c = e[u[2]], p = e[u[3]], s = o * (n = o * o), f[0] = a(h[0], l[0], c[0], p[0], o, n, s), f[1] = a(h[1], l[1], c[1], p[1], o, n, s), f[2] = a(h[2], l[2], c[2], p[2], o, n, s), f
            }, a = function (e, t, r, i, o, a, n) {
                var s = .5 * (r - e), h = .5 * (i - t);
                return (2 * (t - r) + s + h) * n + (-3 * (t - r) - 2 * s - h) * a + s * o + t
            };
            return function (a) {
                if (!1 !== this.isPlaying && (this.currentTime += a * this.timeScale, 0 !== this.weight)) {
                    var n, s = this.data.length;
                    if (!0 === this.loop && this.currentTime > s) this.currentTime %= s, this.reset(); else if (!1 === this.loop && this.currentTime > s) return void this.stop();
                    for (var h = 0, l = this.hierarchy.length; h < l; h++) for (var c = this.hierarchy[h], p = c.animationCache[this.data.name], u = 0; u < 3; u++) {
                        var f = this.keyTypes[u], d = p.prevKey[f], m = p.nextKey[f];
                        if (m.time <= this.currentTime) {
                            for (d = this.data.hierarchy[h].keys[0], m = this.getNextKeyWith(f, h, 1); m.time < this.currentTime && m.index > d.index;) d = m, m = this.getNextKeyWith(f, h, m.index + 1);
                            p.prevKey[f] = d, p.nextKey[f] = m
                        }
                        c.matrixAutoUpdate = !0, c.matrixWorldNeedsUpdate = !0;
                        var y = (this.currentTime - d.time) / (m.time - d.time), g = d[f], v = m[f];
                        if (y < 0 && (y = 0), y > 1 && (y = 1), "pos" === f) {
                            if (n = c.position, this.interpolationType === $.AnimationHandler.LINEAR) if (r.x = g[0] + (v[0] - g[0]) * y, r.y = g[1] + (v[1] - g[1]) * y, r.z = g[2] + (v[2] - g[2]) * y, c instanceof $.Bone) {
                                var x = this.weight / (this.weight + c.accumulatedPosWeight);
                                n.lerp(r, x), c.accumulatedPosWeight += this.weight
                            } else n = r; else if (this.interpolationType === $.AnimationHandler.CATMULLROM || this.interpolationType === $.AnimationHandler.CATMULLROM_FORWARD) {
                                e[0] = this.getPrevKeyWith("pos", h, d.index - 1).pos, e[1] = g, e[2] = v, e[3] = this.getNextKeyWith("pos", h, m.index + 1).pos;
                                var w = o(e, y = .33 * y + .33);
                                if (c instanceof $.Bone) {
                                    x = this.weight / (this.weight + c.accumulatedPosWeight);
                                    c.accumulatedPosWeight += this.weight
                                } else x = 1;
                                if (n.x = n.x + (w[0] - n.x) * x, n.y = n.y + (w[1] - n.y) * x, n.z = n.z + (w[2] - n.z) * x, this.interpolationType === $.AnimationHandler.CATMULLROM_FORWARD) {
                                    var _ = o(e, 1.01 * y);
                                    t.set(_[0], _[1], _[2]), t.sub(n), t.y = 0, t.normalize();
                                    var b = Math.atan2(t.x, t.z);
                                    c.rotation.set(0, b, 0)
                                }
                            }
                        } else if ("rot" === f) if ($.Quaternion.slerp(g, v, i, y), c instanceof $.Bone) if (0 === c.accumulatedRotWeight) c.quaternion.copy(i), c.accumulatedRotWeight = this.weight; else {
                            x = this.weight / (this.weight + c.accumulatedRotWeight);
                            $.Quaternion.slerp(c.quaternion, i, c.quaternion, x), c.accumulatedRotWeight += this.weight
                        } else c.quaternion.copy(i); else if ("scl" === f) if (n = c.scale, r.x = g[0] + (v[0] - g[0]) * y, r.y = g[1] + (v[1] - g[1]) * y, r.z = g[2] + (v[2] - g[2]) * y, c instanceof $.Bone) {
                            x = this.weight / (this.weight + c.accumulatedSclWeight);
                            n.lerp(r, x), c.accumulatedSclWeight += this.weight
                        } else n = r
                    }
                    return !0
                }
            }
        }(),$.Animation.prototype.getNextKeyWith = function (e, t, r) {
            var i = this.data.hierarchy[t].keys;
            for (this.interpolationType === $.AnimationHandler.CATMULLROM || this.interpolationType === $.AnimationHandler.CATMULLROM_FORWARD ? r = r < i.length - 1 ? r : i.length - 1 : r %= i.length; r < i.length; r++) if (void 0 !== i[r][e]) return i[r];
            return this.data.hierarchy[t].keys[0]
        },$.Animation.prototype.getPrevKeyWith = function (e, t, r) {
            var i = this.data.hierarchy[t].keys;
            for (r = this.interpolationType === $.AnimationHandler.CATMULLROM || this.interpolationType === $.AnimationHandler.CATMULLROM_FORWARD ? r > 0 ? r : 0 : r >= 0 ? r : r + i.length; r >= 0; r--) if (void 0 !== i[r][e]) return i[r];
            return this.data.hierarchy[t].keys[i.length - 1]
        },$.KeyFrameAnimation = function (e, t) {
            this.root = e, this.data = $.AnimationHandler.get(t), this.hierarchy = $.AnimationHandler.parse(e), this.currentTime = 0, this.timeScale = .001, this.isPlaying = !1, this.isPaused = !0, this.loop = !0;
            for (var r = 0, i = this.hierarchy.length; r < i; r++) {
                var o = this.data.hierarchy[r].keys, a = this.data.hierarchy[r].sids, n = this.hierarchy[r];
                if (o.length && a) {
                    for (var s = 0; s < a.length; s++) {
                        var h = a[s], l = this.getNextKeyWith(h, r, 0);
                        l && l.apply(h)
                    }
                    n.matrixAutoUpdate = !1, this.data.hierarchy[r].node.updateMatrix(), n.matrixWorldNeedsUpdate = !0
                }
            }
        },$.KeyFrameAnimation.prototype.play = function (e) {
            if (this.currentTime = void 0 !== e ? e : 0, !1 === this.isPlaying) {
                this.isPlaying = !0;
                var t, r, i, o = this.hierarchy.length;
                for (t = 0; t < o; t++) {
                    r = this.hierarchy[t], void 0 === (i = this.data.hierarchy[t]).animationCache && (i.animationCache = {}, i.animationCache.prevKey = null, i.animationCache.nextKey = null, i.animationCache.originalMatrix = r instanceof $.Bone ? r.skinMatrix : r.matrix);
                    var a = this.data.hierarchy[t].keys;
                    a.length && (i.animationCache.prevKey = a[0], i.animationCache.nextKey = a[1], this.startTime = Math.min(a[0].time, this.startTime), this.endTime = Math.max(a[a.length - 1].time, this.endTime))
                }
                this.update(0)
            }
            this.isPaused = !1, $.AnimationHandler.addToUpdate(this)
        },$.KeyFrameAnimation.prototype.pause = function () {
            this.isPaused ? $.AnimationHandler.addToUpdate(this) : $.AnimationHandler.removeFromUpdate(this), this.isPaused = !this.isPaused
        },$.KeyFrameAnimation.prototype.stop = function () {
            this.isPlaying = !1, this.isPaused = !1, $.AnimationHandler.removeFromUpdate(this);
            for (var e = 0; e < this.data.hierarchy.length; e++) {
                var t = this.hierarchy[e], r = this.data.hierarchy[e];
                if (void 0 !== r.animationCache) {
                    var i = r.animationCache.originalMatrix;
                    t instanceof $.Bone ? (i.copy(t.skinMatrix), t.skinMatrix = i) : (i.copy(t.matrix), t.matrix = i), delete r.animationCache
                }
            }
        },$.KeyFrameAnimation.prototype.update = function (e) {
            if (!1 !== this.isPlaying) {
                this.currentTime += e * this.timeScale;
                var t = this.data.length;
                !0 === this.loop && this.currentTime > t && (this.currentTime %= t), this.currentTime = Math.min(this.currentTime, t);
                for (var r = 0, i = this.hierarchy.length; r < i; r++) {
                    var o = this.hierarchy[r], a = this.data.hierarchy[r], n = a.keys, s = a.animationCache;
                    if (n.length) {
                        var h = s.prevKey, l = s.nextKey;
                        if (l.time <= this.currentTime) {
                            for (; l.time < this.currentTime && l.index > h.index;) l = n[(h = l).index + 1];
                            s.prevKey = h, s.nextKey = l
                        }
                        l.time >= this.currentTime ? h.interpolate(l, this.currentTime) : h.interpolate(l, l.time), this.data.hierarchy[r].node.updateMatrix(), o.matrixWorldNeedsUpdate = !0
                    }
                }
            }
        },$.KeyFrameAnimation.prototype.getNextKeyWith = function (e, t, r) {
            var i = this.data.hierarchy[t].keys;
            for (r %= i.length; r < i.length; r++) if (i[r].hasTarget(e)) return i[r];
            return i[0]
        },$.KeyFrameAnimation.prototype.getPrevKeyWith = function (e, t, r) {
            var i = this.data.hierarchy[t].keys;
            for (r = r >= 0 ? r : r + i.length; r >= 0; r--) if (i[r].hasTarget(e)) return i[r];
            return i[i.length - 1]
        },$.MorphAnimation = function (e) {
            this.mesh = e, this.frames = e.morphTargetInfluences.length, this.currentTime = 0, this.duration = 1e3, this.loop = !0, this.isPlaying = !1
        },$.MorphAnimation.prototype = {
            play: function () {
                this.isPlaying = !0
            }, pause: function () {
                this.isPlaying = !1
            }, update: (K = 0, Z = 0, function (e) {
                if (!1 !== this.isPlaying) {
                    this.currentTime += e, !0 === this.loop && this.currentTime > this.duration && (this.currentTime %= this.duration), this.currentTime = Math.min(this.currentTime, this.duration);
                    var t = this.duration / this.frames, r = Math.floor(this.currentTime / t);
                    r != Z && (this.mesh.morphTargetInfluences[K] = 0, this.mesh.morphTargetInfluences[Z] = 1, this.mesh.morphTargetInfluences[r] = 0, K = Z, Z = r), this.mesh.morphTargetInfluences[r] = this.currentTime % t / t, this.mesh.morphTargetInfluences[K] = 1 - this.mesh.morphTargetInfluences[r]
                }
            })
        },$.CubeCamera = function (e, t, r) {
            $.Object3D.call(this);
            var i = new $.PerspectiveCamera(90, 1, e, t);
            i.up.set(0, -1, 0), i.lookAt(new $.Vector3(1, 0, 0)), this.add(i);
            var o = new $.PerspectiveCamera(90, 1, e, t);
            o.up.set(0, -1, 0), o.lookAt(new $.Vector3(-1, 0, 0)), this.add(o);
            var a = new $.PerspectiveCamera(90, 1, e, t);
            a.up.set(0, 0, 1), a.lookAt(new $.Vector3(0, 1, 0)), this.add(a);
            var n = new $.PerspectiveCamera(90, 1, e, t);
            n.up.set(0, 0, -1), n.lookAt(new $.Vector3(0, -1, 0)), this.add(n);
            var s = new $.PerspectiveCamera(90, 1, e, t);
            s.up.set(0, -1, 0), s.lookAt(new $.Vector3(0, 0, 1)), this.add(s);
            var h = new $.PerspectiveCamera(90, 1, e, t);
            h.up.set(0, -1, 0), h.lookAt(new $.Vector3(0, 0, -1)), this.add(h), this.renderTarget = new $.WebGLRenderTargetCube(r, r, {
                format: $.RGBFormat,
                magFilter: $.LinearFilter,
                minFilter: $.LinearFilter
            }), this.updateCubeMap = function (e, t) {
                var r = this.renderTarget, l = r.generateMipmaps;
                r.generateMipmaps = !1, r.activeCubeFace = 0, e.render(t, i, r), r.activeCubeFace = 1, e.render(t, o, r), r.activeCubeFace = 2, e.render(t, a, r), r.activeCubeFace = 3, e.render(t, n, r), r.activeCubeFace = 4, e.render(t, s, r), r.generateMipmaps = l, r.activeCubeFace = 5, e.render(t, h, r)
            }
        },$.CubeCamera.prototype = Object.create($.Object3D.prototype),$.CombinedCamera = function (e, t, r, i, o, a, n) {
            $.Camera.call(this), this.fov = r, this.left = -e / 2, this.right = e / 2, this.top = t / 2, this.bottom = -t / 2, this.cameraO = new $.OrthographicCamera(e / -2, e / 2, t / 2, t / -2, a, n), this.cameraP = new $.PerspectiveCamera(r, e / t, i, o), this.zoom = 1, this.toPerspective()
        },$.CombinedCamera.prototype = Object.create($.Camera.prototype),$.CombinedCamera.prototype.toPerspective = function () {
            this.near = this.cameraP.near, this.far = this.cameraP.far, this.cameraP.fov = this.fov / this.zoom, this.cameraP.updateProjectionMatrix(), this.projectionMatrix = this.cameraP.projectionMatrix, this.inPerspectiveMode = !0, this.inOrthographicMode = !1
        },$.CombinedCamera.prototype.toOrthographic = function () {
            var e = this.fov, t = this.cameraP.aspect, r = (this.cameraP.near + this.cameraP.far) / 2,
                i = Math.tan(e / 2) * r, o = 2 * i * t / 2;
            i /= this.zoom, o /= this.zoom, this.cameraO.left = -o, this.cameraO.right = o, this.cameraO.top = i, this.cameraO.bottom = -i, this.cameraO.updateProjectionMatrix(), this.near = this.cameraO.near, this.far = this.cameraO.far, this.projectionMatrix = this.cameraO.projectionMatrix, this.inPerspectiveMode = !1, this.inOrthographicMode = !0
        },$.CombinedCamera.prototype.setSize = function (e, t) {
            this.cameraP.aspect = e / t, this.left = -e / 2, this.right = e / 2, this.top = t / 2, this.bottom = -t / 2
        },$.CombinedCamera.prototype.setFov = function (e) {
            this.fov = e, this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
        },$.CombinedCamera.prototype.updateProjectionMatrix = function () {
            this.inPerspectiveMode ? this.toPerspective() : (this.toPerspective(), this.toOrthographic())
        },$.CombinedCamera.prototype.setLens = function (e, t) {
            void 0 === t && (t = 24);
            var r = 2 * $.Math.radToDeg(Math.atan(t / (2 * e)));
            return this.setFov(r), r
        },$.CombinedCamera.prototype.setZoom = function (e) {
            this.zoom = e, this.inPerspectiveMode ? this.toPerspective() : this.toOrthographic()
        },$.CombinedCamera.prototype.toFrontView = function () {
            this.rotation.x = 0, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.CombinedCamera.prototype.toBackView = function () {
            this.rotation.x = 0, this.rotation.y = Math.PI, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.CombinedCamera.prototype.toLeftView = function () {
            this.rotation.x = 0, this.rotation.y = -Math.PI / 2, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.CombinedCamera.prototype.toRightView = function () {
            this.rotation.x = 0, this.rotation.y = Math.PI / 2, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.CombinedCamera.prototype.toTopView = function () {
            this.rotation.x = -Math.PI / 2, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.CombinedCamera.prototype.toBottomView = function () {
            this.rotation.x = Math.PI / 2, this.rotation.y = 0, this.rotation.z = 0, this.rotationAutoUpdate = !1
        },$.BoxGeometry = function (e, t, r, i, o, a) {
            $.Geometry.call(this), this.parameters = {
                width: e,
                height: t,
                depth: r,
                widthSegments: i,
                heightSegments: o,
                depthSegments: a
            }, this.widthSegments = i || 1, this.heightSegments = o || 1, this.depthSegments = a || 1;
            var n = this, s = e / 2, h = t / 2, l = r / 2;

            function c(e, t, r, i, o, a, s, h) {
                var l, c, p, u = n.widthSegments, f = n.heightSegments, d = o / 2, m = a / 2, y = n.vertices.length;
                "x" === e && "y" === t || "y" === e && "x" === t ? l = "z" : "x" === e && "z" === t || "z" === e && "x" === t ? (l = "y", f = n.depthSegments) : ("z" === e && "y" === t || "y" === e && "z" === t) && (l = "x", u = n.depthSegments);
                var g = u + 1, v = f + 1, x = o / u, w = a / f, _ = new $.Vector3;
                for (_[l] = s > 0 ? 1 : -1, p = 0; p < v; p++) for (c = 0; c < g; c++) {
                    var b = new $.Vector3;
                    b[e] = (c * x - d) * r, b[t] = (p * w - m) * i, b[l] = s, n.vertices.push(b)
                }
                for (p = 0; p < f; p++) for (c = 0; c < u; c++) {
                    var M = c + g * p, S = c + g * (p + 1), A = c + 1 + g * (p + 1), T = c + 1 + g * p,
                        E = new $.Vector2(c / u, 1 - p / f), C = new $.Vector2(c / u, 1 - (p + 1) / f),
                        P = new $.Vector2((c + 1) / u, 1 - (p + 1) / f), L = new $.Vector2((c + 1) / u, 1 - p / f),
                        D = new $.Face3(M + y, S + y, T + y);
                    D.normal.copy(_), D.vertexNormals.push(_.clone(), _.clone(), _.clone()), D.materialIndex = h, n.faces.push(D), n.faceVertexUvs[0].push([E, C, L]), (D = new $.Face3(S + y, A + y, T + y)).normal.copy(_), D.vertexNormals.push(_.clone(), _.clone(), _.clone()), D.materialIndex = h, n.faces.push(D), n.faceVertexUvs[0].push([C.clone(), P, L.clone()])
                }
            }

            c("z", "y", -1, -1, r, t, s, 0), c("z", "y", 1, -1, r, t, -s, 1), c("x", "z", 1, 1, e, r, h, 2), c("x", "z", 1, -1, e, r, -h, 3), c("x", "y", 1, -1, e, t, l, 4), c("x", "y", -1, -1, e, t, -l, 5), this.mergeVertices()
        },$.BoxGeometry.prototype = Object.create($.Geometry.prototype),$.CircleGeometry = function (e, t, r, i) {
            $.Geometry.call(this), this.parameters = {
                radius: e,
                segments: t,
                thetaStart: r,
                thetaLength: i
            }, e = e || 50, t = void 0 !== t ? Math.max(3, t) : 8, r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 2 * Math.PI;
            var o, a = [], n = new $.Vector3, s = new $.Vector2(.5, .5);
            for (this.vertices.push(n), a.push(s), o = 0; o <= t; o++) {
                var h = new $.Vector3, l = r + o / t * i;
                h.x = e * Math.cos(l), h.y = e * Math.sin(l), this.vertices.push(h), a.push(new $.Vector2((h.x / e + 1) / 2, (h.y / e + 1) / 2))
            }
            var c = new $.Vector3(0, 0, 1);
            for (o = 1; o <= t; o++) this.faces.push(new $.Face3(o, o + 1, 0, [c.clone(), c.clone(), c.clone()])), this.faceVertexUvs[0].push([a[o].clone(), a[o + 1].clone(), s.clone()]);
            this.computeFaceNormals(), this.boundingSphere = new $.Sphere(new $.Vector3, e)
        },$.CircleGeometry.prototype = Object.create($.Geometry.prototype),$.CubeGeometry = function (e, t, r, i, o, a) {
            return console.warn("DEPRECATED: THREE.CubeGeometry is deprecated. Use THREE.BoxGeometry instead."), new $.BoxGeometry(e, t, r, i, o, a)
        },$.CylinderGeometry = function (e, t, r, i, o, a) {
            $.Geometry.call(this), this.parameters = {
                radiusTop: e,
                radiusBottom: t,
                height: r,
                radialSegments: i,
                heightSegments: o,
                openEnded: a
            }, e = void 0 !== e ? e : 20, t = void 0 !== t ? t : 20, i = i || 8, o = o || 1, a = void 0 !== a && a;
            var n, s, h = (r = void 0 !== r ? r : 100) / 2, l = [], c = [];
            for (s = 0; s <= o; s++) {
                var p = [], u = [], f = s / o, d = f * (t - e) + e;
                for (n = 0; n <= i; n++) {
                    var m = n / i, y = new $.Vector3;
                    y.x = d * Math.sin(m * Math.PI * 2), y.y = -f * r + h, y.z = d * Math.cos(m * Math.PI * 2), this.vertices.push(y), p.push(this.vertices.length - 1), u.push(new $.Vector2(m, 1 - f))
                }
                l.push(p), c.push(u)
            }
            var g, v, x = (t - e) / r;
            for (n = 0; n < i; n++) for (0 !== e ? (g = this.vertices[l[0][n]].clone(), v = this.vertices[l[0][n + 1]].clone()) : (g = this.vertices[l[1][n]].clone(), v = this.vertices[l[1][n + 1]].clone()), g.setY(Math.sqrt(g.x * g.x + g.z * g.z) * x).normalize(), v.setY(Math.sqrt(v.x * v.x + v.z * v.z) * x).normalize(), s = 0; s < o; s++) {
                var w = l[s][n], _ = l[s + 1][n], b = l[s + 1][n + 1], M = l[s][n + 1], S = g.clone(), A = g.clone(),
                    T = v.clone(), E = v.clone(), C = c[s][n].clone(), P = c[s + 1][n].clone(),
                    L = c[s + 1][n + 1].clone(), D = c[s][n + 1].clone();
                this.faces.push(new $.Face3(w, _, M, [S, A, E])), this.faceVertexUvs[0].push([C, P, D]), this.faces.push(new $.Face3(_, b, M, [A.clone(), T, E.clone()])), this.faceVertexUvs[0].push([P.clone(), L, D.clone()])
            }
            if (!1 === a && e > 0) for (this.vertices.push(new $.Vector3(0, h, 0)), n = 0; n < i; n++) {
                w = l[0][n], _ = l[0][n + 1], b = this.vertices.length - 1, S = new $.Vector3(0, 1, 0), A = new $.Vector3(0, 1, 0), T = new $.Vector3(0, 1, 0), C = c[0][n].clone(), P = c[0][n + 1].clone(), L = new $.Vector2(P.x, 0);
                this.faces.push(new $.Face3(w, _, b, [S, A, T])), this.faceVertexUvs[0].push([C, P, L])
            }
            if (!1 === a && t > 0) for (this.vertices.push(new $.Vector3(0, -h, 0)), n = 0; n < i; n++) {
                w = l[s][n + 1], _ = l[s][n], b = this.vertices.length - 1, S = new $.Vector3(0, -1, 0), A = new $.Vector3(0, -1, 0), T = new $.Vector3(0, -1, 0), C = c[s][n + 1].clone(), P = c[s][n].clone(), L = new $.Vector2(P.x, 1);
                this.faces.push(new $.Face3(w, _, b, [S, A, T])), this.faceVertexUvs[0].push([C, P, L])
            }
            this.computeFaceNormals()
        },$.CylinderGeometry.prototype = Object.create($.Geometry.prototype),$.ExtrudeGeometry = function (e, t) {
            void 0 !== e ? ($.Geometry.call(this), e = e instanceof Array ? e : [e], this.shapebb = e[e.length - 1].getBoundingBox(), this.addShapeList(e, t), this.computeFaceNormals()) : e = []
        },$.ExtrudeGeometry.prototype = Object.create($.Geometry.prototype),$.ExtrudeGeometry.prototype.addShapeList = function (e, t) {
            for (var r = e.length, i = 0; i < r; i++) {
                var o = e[i];
                this.addShape(o, t)
            }
        },$.ExtrudeGeometry.prototype.addShape = function (e, t) {
            var r, i, o, a, n, s, h, l, c = void 0 !== t.amount ? t.amount : 100,
                p = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
                u = void 0 !== t.bevelSize ? t.bevelSize : p - 2, f = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
                d = void 0 === t.bevelEnabled || t.bevelEnabled, m = void 0 !== t.curveSegments ? t.curveSegments : 12,
                y = void 0 !== t.steps ? t.steps : 1, g = t.extrudePath, v = !1, x = t.material, w = t.extrudeMaterial,
                _ = void 0 !== t.UVGenerator ? t.UVGenerator : $.ExtrudeGeometry.WorldUVGenerator;
            this.shapebb;
            g && (r = g.getSpacedPoints(y), v = !0, d = !1, i = void 0 !== t.frames ? t.frames : new $.TubeGeometry.FrenetFrames(g, y, !1), o = new $.Vector3, a = new $.Vector3, n = new $.Vector3), d || (f = 0, p = 0, u = 0);
            var b = this, M = this.vertices.length, S = e.extractPoints(m), A = S.shape, T = S.holes,
                E = !$.Shape.Utils.isClockWise(A);
            if (E) {
                for (A = A.reverse(), h = 0, l = T.length; h < l; h++) s = T[h], $.Shape.Utils.isClockWise(s) && (T[h] = s.reverse());
                E = !1
            }
            var C = $.Shape.Utils.triangulateShape(A, T), P = A;
            for (h = 0, l = T.length; h < l; h++) s = T[h], A = A.concat(s);

            function L(e, t, r) {
                return t || console.log("die"), t.clone().multiplyScalar(r).add(e)
            }

            var D, R, F, U, V, z, B = A.length, N = C.length;
            P.length, Math.PI;

            function O(e, t, r) {
                var i, o, a = $.Math.sign, n = 1, s = e.x - t.x, h = e.y - t.y, l = r.x - e.x, c = r.y - e.y,
                    p = s * s + h * h, u = s * c - h * l;
                if (Math.abs(u) > 1e-10) {
                    var f = Math.sqrt(p), d = Math.sqrt(l * l + c * c), m = t.x - h / f, y = t.y + s / f,
                        g = ((r.x - c / d - m) * c - (r.y + l / d - y) * l) / (s * c - h * l),
                        v = (i = m + s * g - e.x) * i + (o = y + h * g - e.y) * o;
                    if (v <= 2) return new $.Vector2(i, o);
                    n = Math.sqrt(v / 2)
                } else {
                    var x = !1;
                    s > 1e-10 ? l > 1e-10 && (x = !0) : s < -1e-10 ? l < -1e-10 && (x = !0) : a(h) == a(c) && (x = !0), x ? (i = -h, o = s, n = Math.sqrt(p)) : (i = s, o = h, n = Math.sqrt(p / 2))
                }
                return new $.Vector2(i / n, o / n)
            }

            for (var k = [], I = 0, G = P.length, W = G - 1, H = I + 1; I < G; I++, W++, H++) {
                W === G && (W = 0), H === G && (H = 0);
                P[I], P[W], P[H];
                k[I] = O(P[I], P[W], P[H])
            }
            var j, X, q = [], Y = k.concat();
            for (h = 0, l = T.length; h < l; h++) {
                for (s = T[h], j = [], I = 0, W = (G = s.length) - 1, H = I + 1; I < G; I++, W++, H++) W === G && (W = 0), H === G && (H = 0), j[I] = O(s[I], s[W], s[H]);
                q.push(j), Y = Y.concat(j)
            }
            for (D = 0; D < f; D++) {
                for (U = p * (1 - (F = D / f)), R = u * Math.sin(F * Math.PI / 2), I = 0, G = P.length; I < G; I++) Z((V = L(P[I], k[I], R)).x, V.y, -U);
                for (h = 0, l = T.length; h < l; h++) for (s = T[h], j = q[h], I = 0, G = s.length; I < G; I++) Z((V = L(s[I], j[I], R)).x, V.y, -U)
            }
            for (R = u, I = 0; I < B; I++) V = d ? L(A[I], Y[I], R) : A[I], v ? (a.copy(i.normals[0]).multiplyScalar(V.x), o.copy(i.binormals[0]).multiplyScalar(V.y), n.copy(r[0]).add(a).add(o), Z(n.x, n.y, n.z)) : Z(V.x, V.y, 0);
            for (X = 1; X <= y; X++) for (I = 0; I < B; I++) V = d ? L(A[I], Y[I], R) : A[I], v ? (a.copy(i.normals[X]).multiplyScalar(V.x), o.copy(i.binormals[X]).multiplyScalar(V.y), n.copy(r[X]).add(a).add(o), Z(n.x, n.y, n.z)) : Z(V.x, V.y, c / y * X);
            for (D = f - 1; D >= 0; D--) {
                for (U = p * (1 - (F = D / f)), R = u * Math.sin(F * Math.PI / 2), I = 0, G = P.length; I < G; I++) Z((V = L(P[I], k[I], R)).x, V.y, c + U);
                for (h = 0, l = T.length; h < l; h++) for (s = T[h], j = q[h], I = 0, G = s.length; I < G; I++) V = L(s[I], j[I], R), v ? Z(V.x, V.y + r[y - 1].y, r[y - 1].x + U) : Z(V.x, V.y, c + U)
            }

            function K(e, t) {
                var r, i;
                for (I = e.length; --I >= 0;) {
                    r = I, (i = I - 1) < 0 && (i = e.length - 1);
                    var o = 0, a = y + 2 * f;
                    for (o = 0; o < a; o++) {
                        var n = B * o, s = B * (o + 1);
                        J(t + r + n, t + i + n, t + i + s, t + r + s, e, o, a, r, i)
                    }
                }
            }

            function Z(e, t, r) {
                b.vertices.push(new $.Vector3(e, t, r))
            }

            function Q(r, i, o, a) {
                r += M, i += M, o += M, b.faces.push(new $.Face3(r, i, o, null, null, x));
                var n = a ? _.generateBottomUV(b, e, t, r, i, o) : _.generateTopUV(b, e, t, r, i, o);
                b.faceVertexUvs[0].push(n)
            }

            function J(r, i, o, a, n, s, h, l, c) {
                r += M, i += M, o += M, a += M, b.faces.push(new $.Face3(r, i, a, null, null, w)), b.faces.push(new $.Face3(i, o, a, null, null, w));
                var p = _.generateSideWallUV(b, e, n, t, r, i, o, a, s, h, l, c);
                b.faceVertexUvs[0].push([p[0], p[1], p[3]]), b.faceVertexUvs[0].push([p[1], p[2], p[3]])
            }

            !function () {
                if (d) {
                    var e = 0, t = B * e;
                    for (I = 0; I < N; I++) Q((z = C[I])[2] + t, z[1] + t, z[0] + t, !0);
                    for (t = B * (e = y + 2 * f), I = 0; I < N; I++) Q((z = C[I])[0] + t, z[1] + t, z[2] + t, !1)
                } else {
                    for (I = 0; I < N; I++) Q((z = C[I])[2], z[1], z[0], !0);
                    for (I = 0; I < N; I++) Q((z = C[I])[0] + B * y, z[1] + B * y, z[2] + B * y, !1)
                }
            }(), function () {
                var e = 0;
                for (K(P, e), e += P.length, h = 0, l = T.length; h < l; h++) K(s = T[h], e), e += s.length
            }()
        },$.ExtrudeGeometry.WorldUVGenerator = {
            generateTopUV: function (e, t, r, i, o, a) {
                var n = e.vertices[i].x, s = e.vertices[i].y, h = e.vertices[o].x, l = e.vertices[o].y,
                    c = e.vertices[a].x, p = e.vertices[a].y;
                return [new $.Vector2(n, s), new $.Vector2(h, l), new $.Vector2(c, p)]
            }, generateBottomUV: function (e, t, r, i, o, a) {
                return this.generateTopUV(e, t, r, i, o, a)
            }, generateSideWallUV: function (e, t, r, i, o, a, n, s, h, l, c, p) {
                var u = e.vertices[o].x, f = e.vertices[o].y, d = e.vertices[o].z, m = e.vertices[a].x,
                    y = e.vertices[a].y, g = e.vertices[a].z, v = e.vertices[n].x, x = e.vertices[n].y,
                    w = e.vertices[n].z, _ = e.vertices[s].x, b = e.vertices[s].y, M = e.vertices[s].z;
                return Math.abs(f - y) < .01 ? [new $.Vector2(u, 1 - d), new $.Vector2(m, 1 - g), new $.Vector2(v, 1 - w), new $.Vector2(_, 1 - M)] : [new $.Vector2(f, 1 - d), new $.Vector2(y, 1 - g), new $.Vector2(x, 1 - w), new $.Vector2(b, 1 - M)]
            }
        },$.ExtrudeGeometry.__v1 = new $.Vector2,$.ExtrudeGeometry.__v2 = new $.Vector2,$.ExtrudeGeometry.__v3 = new $.Vector2,$.ExtrudeGeometry.__v4 = new $.Vector2,$.ExtrudeGeometry.__v5 = new $.Vector2,$.ExtrudeGeometry.__v6 = new $.Vector2,$.ShapeGeometry = function (e, t) {
            $.Geometry.call(this), e instanceof Array == !1 && (e = [e]), this.shapebb = e[e.length - 1].getBoundingBox(), this.addShapeList(e, t), this.computeFaceNormals()
        },$.ShapeGeometry.prototype = Object.create($.Geometry.prototype),$.ShapeGeometry.prototype.addShapeList = function (e, t) {
            for (var r = 0, i = e.length; r < i; r++) this.addShape(e[r], t);
            return this
        },$.ShapeGeometry.prototype.addShape = function (e, t) {
            void 0 === t && (t = {});
            var r, i, o, a = void 0 !== t.curveSegments ? t.curveSegments : 12, n = t.material,
                s = void 0 === t.UVGenerator ? $.ExtrudeGeometry.WorldUVGenerator : t.UVGenerator,
                h = (this.shapebb, this.vertices.length), l = e.extractPoints(a), c = l.shape, p = l.holes,
                u = !$.Shape.Utils.isClockWise(c);
            if (u) {
                for (c = c.reverse(), r = 0, i = p.length; r < i; r++) o = p[r], $.Shape.Utils.isClockWise(o) && (p[r] = o.reverse());
                u = !1
            }
            var f = $.Shape.Utils.triangulateShape(c, p), d = c;
            for (r = 0, i = p.length; r < i; r++) o = p[r], c = c.concat(o);
            var m, y, g = c.length, v = f.length;
            d.length;
            for (r = 0; r < g; r++) m = c[r], this.vertices.push(new $.Vector3(m.x, m.y, 0));
            for (r = 0; r < v; r++) {
                var x = (y = f[r])[0] + h, w = y[1] + h, _ = y[2] + h;
                this.faces.push(new $.Face3(x, w, _, null, null, n)), this.faceVertexUvs[0].push(s.generateBottomUV(this, e, t, x, w, _))
            }
        },$.LatheGeometry = function (e, t, r, i) {
            $.Geometry.call(this), t = t || 12, r = r || 0, i = i || 2 * Math.PI;
            for (var o = 1 / (e.length - 1), a = 1 / t, n = 0, s = t; n <= s; n++) for (var h = r + n * a * i, l = Math.cos(h), c = Math.sin(h), p = 0, u = e.length; p < u; p++) {
                var f = e[p], d = new $.Vector3;
                d.x = l * f.x - c * f.y, d.y = c * f.x + l * f.y, d.z = f.z, this.vertices.push(d)
            }
            var m = e.length;
            for (n = 0, s = t; n < s; n++) for (p = 0, u = e.length - 1; p < u; p++) {
                var y = p + m * n, g = y, v = y + m, x = (l = y + 1 + m, y + 1), w = n * a, _ = p * o, b = w + a,
                    M = _ + o;
                this.faces.push(new $.Face3(g, v, x)), this.faceVertexUvs[0].push([new $.Vector2(w, _), new $.Vector2(b, _), new $.Vector2(w, M)]), this.faces.push(new $.Face3(v, l, x)), this.faceVertexUvs[0].push([new $.Vector2(b, _), new $.Vector2(b, M), new $.Vector2(w, M)])
            }
            this.mergeVertices(), this.computeFaceNormals(), this.computeVertexNormals()
        },$.LatheGeometry.prototype = Object.create($.Geometry.prototype),$.PlaneGeometry = function (e, t, r, i) {
            var o, a;
            $.Geometry.call(this), this.parameters = {width: e, height: t, widthSegments: r, heightSegments: i};
            var n = e / 2, s = t / 2, h = r || 1, l = i || 1, c = h + 1, p = l + 1, u = e / h, f = t / l,
                d = new $.Vector3(0, 0, 1);
            for (a = 0; a < p; a++) {
                var m = a * f - s;
                for (o = 0; o < c; o++) {
                    var y = o * u - n;
                    this.vertices.push(new $.Vector3(y, -m, 0))
                }
            }
            for (a = 0; a < l; a++) for (o = 0; o < h; o++) {
                var g = o + c * a, v = o + c * (a + 1), x = o + 1 + c * (a + 1), w = o + 1 + c * a,
                    _ = new $.Vector2(o / h, 1 - a / l), b = new $.Vector2(o / h, 1 - (a + 1) / l),
                    M = new $.Vector2((o + 1) / h, 1 - (a + 1) / l), S = new $.Vector2((o + 1) / h, 1 - a / l),
                    A = new $.Face3(g, v, w);
                A.normal.copy(d), A.vertexNormals.push(d.clone(), d.clone(), d.clone()), this.faces.push(A), this.faceVertexUvs[0].push([_, b, S]), (A = new $.Face3(v, x, w)).normal.copy(d), A.vertexNormals.push(d.clone(), d.clone(), d.clone()), this.faces.push(A), this.faceVertexUvs[0].push([b.clone(), M, S.clone()])
            }
        },$.PlaneGeometry.prototype = Object.create($.Geometry.prototype),$.RingGeometry = function (e, t, r, i, o, a) {
            $.Geometry.call(this), e = e || 0, t = t || 50, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : 2 * Math.PI, r = void 0 !== r ? Math.max(3, r) : 8;
            var n, s, h = [], l = e, c = (t - e) / (i = void 0 !== i ? Math.max(3, i) : 8);
            for (n = 0; n <= i; n++) {
                for (s = 0; s <= r; s++) {
                    var p = new $.Vector3, u = o + s / r * a;
                    p.x = l * Math.cos(u), p.y = l * Math.sin(u), this.vertices.push(p), h.push(new $.Vector2((p.x / t + 1) / 2, (p.y / t + 1) / 2))
                }
                l += c
            }
            var f = new $.Vector3(0, 0, 1);
            for (n = 0; n < i; n++) {
                var d = n * r;
                for (s = 0; s <= r; s++) {
                    var m = (u = s + d) + n, y = u + r + n, g = u + r + 1 + n;
                    this.faces.push(new $.Face3(m, y, g, [f.clone(), f.clone(), f.clone()])), this.faceVertexUvs[0].push([h[m].clone(), h[y].clone(), h[g].clone()]), m = u + n, y = u + r + 1 + n, g = u + 1 + n, this.faces.push(new $.Face3(m, y, g, [f.clone(), f.clone(), f.clone()])), this.faceVertexUvs[0].push([h[m].clone(), h[y].clone(), h[g].clone()])
                }
            }
            this.computeFaceNormals(), this.boundingSphere = new $.Sphere(new $.Vector3, l)
        },$.RingGeometry.prototype = Object.create($.Geometry.prototype),$.SphereGeometry = function (e, t, r, i, o, a, n) {
            $.Geometry.call(this), this.parameters = {
                radius: e,
                widthSegments: t,
                heightSegments: r,
                phiStart: i,
                phiLength: o,
                thetaStart: a,
                thetaLength: n
            }, e = e || 50, t = Math.max(3, Math.floor(t) || 8), r = Math.max(2, Math.floor(r) || 6), i = void 0 !== i ? i : 0, o = void 0 !== o ? o : 2 * Math.PI, a = void 0 !== a ? a : 0, n = void 0 !== n ? n : Math.PI;
            var s, h, l = [], c = [];
            for (h = 0; h <= r; h++) {
                var p = [], u = [];
                for (s = 0; s <= t; s++) {
                    var f = s / t, d = h / r, m = new $.Vector3;
                    m.x = -e * Math.cos(i + f * o) * Math.sin(a + d * n), m.y = e * Math.cos(a + d * n), m.z = e * Math.sin(i + f * o) * Math.sin(a + d * n), this.vertices.push(m), p.push(this.vertices.length - 1), u.push(new $.Vector2(f, 1 - d))
                }
                l.push(p), c.push(u)
            }
            for (h = 0; h < r; h++) for (s = 0; s < t; s++) {
                var y = l[h][s + 1], g = l[h][s], v = l[h + 1][s], x = l[h + 1][s + 1],
                    w = this.vertices[y].clone().normalize(), _ = this.vertices[g].clone().normalize(),
                    b = this.vertices[v].clone().normalize(), M = this.vertices[x].clone().normalize(),
                    S = c[h][s + 1].clone(), A = c[h][s].clone(), T = c[h + 1][s].clone(), E = c[h + 1][s + 1].clone();
                Math.abs(this.vertices[y].y) === e ? (S.x = (S.x + A.x) / 2, this.faces.push(new $.Face3(y, v, x, [w, b, M])), this.faceVertexUvs[0].push([S, T, E])) : Math.abs(this.vertices[v].y) === e ? (T.x = (T.x + E.x) / 2, this.faces.push(new $.Face3(y, g, v, [w, _, b])), this.faceVertexUvs[0].push([S, A, T])) : (this.faces.push(new $.Face3(y, g, x, [w, _, M])), this.faceVertexUvs[0].push([S, A, E]), this.faces.push(new $.Face3(g, v, x, [_.clone(), b, M.clone()])), this.faceVertexUvs[0].push([A.clone(), T, E.clone()]))
            }
            this.computeFaceNormals(), this.boundingSphere = new $.Sphere(new $.Vector3, e)
        },$.SphereGeometry.prototype = Object.create($.Geometry.prototype),$.TextGeometry = function (e, t) {
            t = t || {};
            var r = $.FontUtils.generateShapes(e, t);
            t.amount = void 0 !== t.height ? t.height : 50, void 0 === t.bevelThickness && (t.bevelThickness = 10), void 0 === t.bevelSize && (t.bevelSize = 8), void 0 === t.bevelEnabled && (t.bevelEnabled = !1), $.ExtrudeGeometry.call(this, r, t)
        },$.TextGeometry.prototype = Object.create($.ExtrudeGeometry.prototype),$.TorusGeometry = function (e, t, r, i, o) {
            $.Geometry.call(this), this.parameters = {
                radius: e,
                tube: t,
                radialSegments: r,
                tubularSegments: i,
                arc: o
            }, e = e || 100, t = t || 40, r = r || 8, i = i || 6, o = o || 2 * Math.PI;
            for (var a = new $.Vector3, n = [], s = [], h = 0; h <= r; h++) for (var l = 0; l <= i; l++) {
                var c = l / i * o, p = h / r * Math.PI * 2;
                a.x = e * Math.cos(c), a.y = e * Math.sin(c);
                var u = new $.Vector3;
                u.x = (e + t * Math.cos(p)) * Math.cos(c), u.y = (e + t * Math.cos(p)) * Math.sin(c), u.z = t * Math.sin(p), this.vertices.push(u), n.push(new $.Vector2(l / i, h / r)), s.push(u.clone().sub(a).normalize())
            }
            for (h = 1; h <= r; h++) for (l = 1; l <= i; l++) {
                var f = (i + 1) * h + l - 1, d = (i + 1) * (h - 1) + l - 1, m = (i + 1) * (h - 1) + l,
                    y = (i + 1) * h + l, g = new $.Face3(f, d, y, [s[f].clone(), s[d].clone(), s[y].clone()]);
                this.faces.push(g), this.faceVertexUvs[0].push([n[f].clone(), n[d].clone(), n[y].clone()]), g = new $.Face3(d, m, y, [s[d].clone(), s[m].clone(), s[y].clone()]), this.faces.push(g), this.faceVertexUvs[0].push([n[d].clone(), n[m].clone(), n[y].clone()])
            }
            this.computeFaceNormals()
        },$.TorusGeometry.prototype = Object.create($.Geometry.prototype),$.TorusKnotGeometry = function (e, t, r, i, o, a, n) {
            $.Geometry.call(this), this.parameters = {
                radius: e,
                tube: t,
                radialSegments: r,
                tubularSegments: i,
                p: o,
                q: a,
                heightScale: n
            }, e = e || 100, t = t || 40, r = r || 64, i = i || 8, o = o || 2, a = a || 3, n = n || 1;
            for (var s = new Array(r), h = new $.Vector3, l = new $.Vector3, c = new $.Vector3, p = 0; p < r; ++p) {
                s[p] = new Array(i);
                var u = p / r * 2 * o * Math.PI, f = L(u, a, o, e, n), d = L(u + .01, a, o, e, n);
                h.subVectors(d, f), l.addVectors(d, f), c.crossVectors(h, l), l.crossVectors(c, h), c.normalize(), l.normalize();
                for (var m = 0; m < i; ++m) {
                    var y = m / i * 2 * Math.PI, g = -t * Math.cos(y), v = t * Math.sin(y), x = new $.Vector3;
                    x.x = f.x + g * l.x + v * c.x, x.y = f.y + g * l.y + v * c.y, x.z = f.z + g * l.z + v * c.z, s[p][m] = this.vertices.push(x) - 1
                }
            }
            for (p = 0; p < r; ++p) for (m = 0; m < i; ++m) {
                var w = (p + 1) % r, _ = (m + 1) % i, b = s[p][m], M = s[w][m], S = s[w][_], A = s[p][_],
                    T = new $.Vector2(p / r, m / i), E = new $.Vector2((p + 1) / r, m / i),
                    C = new $.Vector2((p + 1) / r, (m + 1) / i), P = new $.Vector2(p / r, (m + 1) / i);
                this.faces.push(new $.Face3(b, M, A)), this.faceVertexUvs[0].push([T, E, P]), this.faces.push(new $.Face3(M, S, A)), this.faceVertexUvs[0].push([E.clone(), C, P.clone()])
            }

            function L(e, t, r, i, o) {
                var a = Math.cos(e), n = Math.sin(e), s = t / r * e, h = Math.cos(s), l = i * (2 + h) * .5 * a,
                    c = i * (2 + h) * n * .5, p = o * i * Math.sin(s) * .5;
                return new $.Vector3(l, c, p)
            }

            this.computeFaceNormals(), this.computeVertexNormals()
        },$.TorusKnotGeometry.prototype = Object.create($.Geometry.prototype),$.TubeGeometry = function (e, t, r, i, o) {
            $.Geometry.call(this), this.parameters = {
                path: e,
                segments: t,
                radius: r,
                radialSegments: i,
                closed: o
            }, r = r || 1, i = i || 8, o = o || !1;
            var a, n, s, h, l, c, p, u, f, d, m, y, g, v, x, w, _, b, M, S = [], A = this, T = (t = t || 64) + 1,
                E = new $.Vector3, C = new $.TubeGeometry.FrenetFrames(e, t, o), P = C.tangents, L = C.normals,
                D = C.binormals;

            function R(e, t, r) {
                return A.vertices.push(new $.Vector3(e, t, r)) - 1
            }

            for (this.tangents = P, this.normals = L, this.binormals = D, u = 0; u < T; u++) for (S[u] = [], s = u / (T - 1), p = e.getPointAt(s), P[u], a = L[u], n = D[u], f = 0; f < i; f++) h = f / i * 2 * Math.PI, l = -r * Math.cos(h), c = r * Math.sin(h), E.copy(p), E.x += l * a.x + c * n.x, E.y += l * a.y + c * n.y, E.z += l * a.z + c * n.z, S[u][f] = R(E.x, E.y, E.z);
            for (u = 0; u < t; u++) for (f = 0; f < i; f++) d = o ? (u + 1) % t : u + 1, m = (f + 1) % i, y = S[u][f], g = S[d][f], v = S[d][m], x = S[u][m], w = new $.Vector2(u / t, f / i), _ = new $.Vector2((u + 1) / t, f / i), b = new $.Vector2((u + 1) / t, (f + 1) / i), M = new $.Vector2(u / t, (f + 1) / i), this.faces.push(new $.Face3(y, g, x)), this.faceVertexUvs[0].push([w, _, M]), this.faces.push(new $.Face3(g, v, x)), this.faceVertexUvs[0].push([_.clone(), b, M.clone()]);
            this.computeFaceNormals(), this.computeVertexNormals()
        },$.TubeGeometry.prototype = Object.create($.Geometry.prototype),$.TubeGeometry.FrenetFrames = function (e, t, r) {
            new $.Vector3;
            var i, o, a, n, s, h, l, c = new $.Vector3, p = (new $.Vector3, []), u = [], f = [], d = new $.Vector3,
                m = new $.Matrix4, y = t + 1, g = 1e-4;
            for (this.tangents = p, this.normals = u, this.binormals = f, h = 0; h < y; h++) l = h / (y - 1), p[h] = e.getTangentAt(l), p[h].normalize();
            for (function () {
                u[0] = new $.Vector3, f[0] = new $.Vector3, o = Number.MAX_VALUE, a = Math.abs(p[0].x), n = Math.abs(p[0].y), s = Math.abs(p[0].z), a <= o && (o = a, c.set(1, 0, 0));
                n <= o && (o = n, c.set(0, 1, 0));
                s <= o && c.set(0, 0, 1);
                d.crossVectors(p[0], c).normalize(), u[0].crossVectors(p[0], d), f[0].crossVectors(p[0], u[0])
            }(), h = 1; h < y; h++) u[h] = u[h - 1].clone(), f[h] = f[h - 1].clone(), d.crossVectors(p[h - 1], p[h]), d.length() > g && (d.normalize(), i = Math.acos($.Math.clamp(p[h - 1].dot(p[h]), -1, 1)), u[h].applyMatrix4(m.makeRotationAxis(d, i))), f[h].crossVectors(p[h], u[h]);
            if (r) for (i = Math.acos($.Math.clamp(u[0].dot(u[y - 1]), -1, 1)), i /= y - 1, p[0].dot(d.crossVectors(u[0], u[y - 1])) > 0 && (i = -i), h = 1; h < y; h++) u[h].applyMatrix4(m.makeRotationAxis(p[h], i * h)), f[h].crossVectors(p[h], u[h])
        },$.PolyhedronGeometry = function (e, t, r, i) {
            $.Geometry.call(this), r = r || 1, i = i || 0;
            for (var o = this, a = 0, n = e.length; a < n; a += 3) w(new $.Vector3(e[a], e[a + 1], e[a + 2]));
            var s = this.vertices, h = [], l = (a = 0, 0);
            for (n = t.length; a < n; a += 3, l++) {
                var c = s[t[a]], p = s[t[a + 1]], u = s[t[a + 2]];
                h[l] = new $.Face3(c.index, p.index, u.index, [c.clone(), p.clone(), u.clone()])
            }
            var f = new $.Vector3;
            for (a = 0, n = h.length; a < n; a++) b(h[a], i);
            for (a = 0, n = this.faceVertexUvs[0].length; a < n; a++) {
                var d = this.faceVertexUvs[0][a], m = d[0].x, y = d[1].x, g = d[2].x, v = Math.max(m, Math.max(y, g)),
                    x = Math.min(m, Math.min(y, g));
                v > .9 && x < .1 && (m < .2 && (d[0].x += 1), y < .2 && (d[1].x += 1), g < .2 && (d[2].x += 1))
            }
            for (a = 0, n = this.vertices.length; a < n; a++) this.vertices[a].multiplyScalar(r);

            function w(e) {
                var t = e.normalize().clone();
                t.index = o.vertices.push(t) - 1;
                var r = M(e) / 2 / Math.PI + .5, i = function (e) {
                    return Math.atan2(-e.y, Math.sqrt(e.x * e.x + e.z * e.z))
                }(e) / Math.PI + .5;
                return t.uv = new $.Vector2(r, 1 - i), t
            }

            function _(e, t, r) {
                var i = new $.Face3(e.index, t.index, r.index, [e.clone(), t.clone(), r.clone()]);
                o.faces.push(i), f.copy(e).add(t).add(r).divideScalar(3);
                var a = M(f);
                o.faceVertexUvs[0].push([S(e.uv, e, a), S(t.uv, t, a), S(r.uv, r, a)])
            }

            function b(e, t) {
                for (var r = Math.pow(2, t), i = (Math.pow(4, t), w(o.vertices[e.a])), a = w(o.vertices[e.b]), n = w(o.vertices[e.c]), s = [], h = 0; h <= r; h++) {
                    s[h] = [];
                    for (var l = w(i.clone().lerp(n, h / r)), c = w(a.clone().lerp(n, h / r)), p = r - h, u = 0; u <= p; u++) s[h][u] = 0 == u && h == r ? l : w(l.clone().lerp(c, u / p))
                }
                for (h = 0; h < r; h++) for (u = 0; u < 2 * (r - h) - 1; u++) {
                    var f = Math.floor(u / 2);
                    u % 2 == 0 ? _(s[h][f + 1], s[h + 1][f], s[h][f]) : _(s[h][f + 1], s[h + 1][f + 1], s[h + 1][f])
                }
            }

            function M(e) {
                return Math.atan2(e.z, -e.x)
            }

            function S(e, t, r) {
                return r < 0 && 1 === e.x && (e = new $.Vector2(e.x - 1, e.y)), 0 === t.x && 0 === t.z && (e = new $.Vector2(r / 2 / Math.PI + .5, e.y)), e.clone()
            }

            this.mergeVertices(), this.computeFaceNormals(), this.boundingSphere = new $.Sphere(new $.Vector3, r)
        },$.PolyhedronGeometry.prototype = Object.create($.Geometry.prototype),$.IcosahedronGeometry = function (e, t) {
            this.parameters = {radius: e, detail: t};
            var r = (1 + Math.sqrt(5)) / 2,
                i = [-1, r, 0, 1, r, 0, -1, -r, 0, 1, -r, 0, 0, -1, r, 0, 1, r, 0, -1, -r, 0, 1, -r, r, 0, -1, r, 0, 1, -r, 0, -1, -r, 0, 1];
            $.PolyhedronGeometry.call(this, i, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t)
        },$.IcosahedronGeometry.prototype = Object.create($.Geometry.prototype),$.OctahedronGeometry = function (e, t) {
            this.parameters = {radius: e, detail: t};
            $.PolyhedronGeometry.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t)
        },$.OctahedronGeometry.prototype = Object.create($.Geometry.prototype),$.TetrahedronGeometry = function (e, t) {
            $.PolyhedronGeometry.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t)
        },$.TetrahedronGeometry.prototype = Object.create($.Geometry.prototype),$.ParametricGeometry = function (e, t, r) {
            $.Geometry.call(this);
            var i, o, a, n, s, h, l, c, p, u, f, d, m = this.vertices, y = this.faces, g = this.faceVertexUvs[0],
                v = t + 1;
            for (i = 0; i <= r; i++) for (n = i / r, o = 0; o <= t; o++) a = e(o / t, n), m.push(a);
            for (i = 0; i < r; i++) for (o = 0; o < t; o++) s = i * v + o, h = i * v + o + 1, l = (i + 1) * v + o + 1, c = (i + 1) * v + o, p = new $.Vector2(o / t, i / r), u = new $.Vector2((o + 1) / t, i / r), f = new $.Vector2((o + 1) / t, (i + 1) / r), d = new $.Vector2(o / t, (i + 1) / r), y.push(new $.Face3(s, h, c)), g.push([p, u, d]), y.push(new $.Face3(h, l, c)), g.push([u.clone(), f, d.clone()]);
            this.computeFaceNormals(), this.computeVertexNormals()
        },$.ParametricGeometry.prototype = Object.create($.Geometry.prototype),$.AxisHelper = function (e) {
            e = e || 1;
            var t = new $.Geometry;
            t.vertices.push(new $.Vector3, new $.Vector3(e, 0, 0), new $.Vector3, new $.Vector3(0, e, 0), new $.Vector3, new $.Vector3(0, 0, e)), t.colors.push(new $.Color(16711680), new $.Color(16755200), new $.Color(65280), new $.Color(11206400), new $.Color(255), new $.Color(43775));
            var r = new $.LineBasicMaterial({vertexColors: $.VertexColors});
            $.Line.call(this, t, r, $.LinePieces)
        },$.AxisHelper.prototype = Object.create($.Line.prototype),$.ArrowHelper = function (e, t, r, i, o, a) {
            $.Object3D.call(this), void 0 === i && (i = 16776960), void 0 === r && (r = 1), void 0 === o && (o = .2 * r), void 0 === a && (a = .2 * o), this.position = t;
            var n = new $.Geometry;
            n.vertices.push(new $.Vector3(0, 0, 0)), n.vertices.push(new $.Vector3(0, 1, 0)), this.line = new $.Line(n, new $.LineBasicMaterial({color: i})), this.line.matrixAutoUpdate = !1, this.add(this.line);
            var s = new $.CylinderGeometry(0, .5, 1, 5, 1);
            s.applyMatrix((new $.Matrix4).makeTranslation(0, -.5, 0)), this.cone = new $.Mesh(s, new $.MeshBasicMaterial({color: i})), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(r, o, a)
        },$.ArrowHelper.prototype = Object.create($.Object3D.prototype),$.ArrowHelper.prototype.setDirection = (J = new $.Vector3, function (e) {
            e.y > .99999 ? this.quaternion.set(0, 0, 0, 1) : e.y < -.99999 ? this.quaternion.set(1, 0, 0, 0) : (J.set(e.z, 0, -e.x).normalize(), Q = Math.acos(e.y), this.quaternion.setFromAxisAngle(J, Q))
        }),$.ArrowHelper.prototype.setLength = function (e, t, r) {
            void 0 === t && (t = .2 * e), void 0 === r && (r = .2 * t), this.line.scale.set(1, e, 1), this.line.updateMatrix(), this.cone.scale.set(r, t, r), this.cone.position.y = e, this.cone.updateMatrix()
        },$.ArrowHelper.prototype.setColor = function (e) {
            this.line.material.color.set(e), this.cone.material.color.set(e)
        },$.BoxHelper = function (e) {
            var t = [new $.Vector3(1, 1, 1), new $.Vector3(-1, 1, 1), new $.Vector3(-1, -1, 1), new $.Vector3(1, -1, 1), new $.Vector3(1, 1, -1), new $.Vector3(-1, 1, -1), new $.Vector3(-1, -1, -1), new $.Vector3(1, -1, -1)];
            this.vertices = t;
            var r = new $.Geometry;
            r.vertices.push(t[0], t[1], t[1], t[2], t[2], t[3], t[3], t[0], t[4], t[5], t[5], t[6], t[6], t[7], t[7], t[4], t[0], t[4], t[1], t[5], t[2], t[6], t[3], t[7]), $.Line.call(this, r, new $.LineBasicMaterial({color: 16776960}), $.LinePieces), void 0 !== e && this.update(e)
        },$.BoxHelper.prototype = Object.create($.Line.prototype),$.BoxHelper.prototype.update = function (e) {
            var t = e.geometry;
            null === t.boundingBox && t.computeBoundingBox();
            var r = t.boundingBox.min, i = t.boundingBox.max, o = this.vertices;
            o[0].set(i.x, i.y, i.z), o[1].set(r.x, i.y, i.z), o[2].set(r.x, r.y, i.z), o[3].set(i.x, r.y, i.z), o[4].set(i.x, i.y, r.z), o[5].set(r.x, i.y, r.z), o[6].set(r.x, r.y, r.z), o[7].set(i.x, r.y, r.z), this.geometry.computeBoundingSphere(), this.geometry.verticesNeedUpdate = !0, this.matrixAutoUpdate = !1, this.matrixWorld = e.matrixWorld
        },$.BoundingBoxHelper = function (e, t) {
            var r = void 0 !== t ? t : 8947848;
            this.object = e, this.box = new $.Box3, $.Mesh.call(this, new $.BoxGeometry(1, 1, 1), new $.MeshBasicMaterial({
                color: r,
                wireframe: !0
            }))
        },$.BoundingBoxHelper.prototype = Object.create($.Mesh.prototype),$.BoundingBoxHelper.prototype.update = function () {
            this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
        },$.CameraHelper = function (e) {
            var t = new $.Geometry, r = new $.LineBasicMaterial({color: 16777215, vertexColors: $.FaceColors}), i = {};

            function o(e, t, r) {
                a(e, r), a(t, r)
            }

            function a(e, r) {
                t.vertices.push(new $.Vector3), t.colors.push(new $.Color(r)), void 0 === i[e] && (i[e] = []), i[e].push(t.vertices.length - 1)
            }

            o("n1", "n2", 16755200), o("n2", "n4", 16755200), o("n4", "n3", 16755200), o("n3", "n1", 16755200), o("f1", "f2", 16755200), o("f2", "f4", 16755200), o("f4", "f3", 16755200), o("f3", "f1", 16755200), o("n1", "f1", 16755200), o("n2", "f2", 16755200), o("n3", "f3", 16755200), o("n4", "f4", 16755200), o("p", "n1", 16711680), o("p", "n2", 16711680), o("p", "n3", 16711680), o("p", "n4", 16711680), o("u1", "u2", 43775), o("u2", "u3", 43775), o("u3", "u1", 43775), o("c", "t", 16777215), o("p", "c", 3355443), o("cn1", "cn2", 3355443), o("cn3", "cn4", 3355443), o("cf1", "cf2", 3355443), o("cf3", "cf4", 3355443), $.Line.call(this, t, r, $.LinePieces), this.camera = e, this.matrixWorld = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = i, this.update()
        },$.CameraHelper.prototype = Object.create($.Line.prototype),$.CameraHelper.prototype.update = function () {
            var e = new $.Vector3, t = new $.Camera, r = new $.Projector;
            return function () {
                var i = this;

                function o(o, a, n, s) {
                    e.set(a, n, s), r.unprojectVector(e, t);
                    var h = i.pointMap[o];
                    if (void 0 !== h) for (var l = 0, c = h.length; l < c; l++) i.geometry.vertices[h[l]].copy(e)
                }

                t.projectionMatrix.copy(this.camera.projectionMatrix), o("c", 0, 0, -1), o("t", 0, 0, 1), o("n1", -1, -1, -1), o("n2", 1, -1, -1), o("n3", -1, 1, -1), o("n4", 1, 1, -1), o("f1", -1, -1, 1), o("f2", 1, -1, 1), o("f3", -1, 1, 1), o("f4", 1, 1, 1), o("u1", .7, 1.1, -1), o("u2", -.7, 1.1, -1), o("u3", 0, 2, -1), o("cf1", -1, 0, 1), o("cf2", 1, 0, 1), o("cf3", 0, -1, 1), o("cf4", 0, 1, 1), o("cn1", -1, 0, -1), o("cn2", 1, 0, -1), o("cn3", 0, -1, -1), o("cn4", 0, 1, -1), this.geometry.verticesNeedUpdate = !0
            }
        }(),$.DirectionalLightHelper = function (e, t) {
            $.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrixWorld = e.matrixWorld, this.matrixAutoUpdate = !1, t = t || 1;
            var r = new $.Geometry;
            r.vertices.push(new $.Vector3(-t, t, 0), new $.Vector3(t, t, 0), new $.Vector3(t, -t, 0), new $.Vector3(-t, -t, 0), new $.Vector3(-t, t, 0));
            var i = new $.LineBasicMaterial({fog: !1});
            i.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.lightPlane = new $.Line(r, i), this.add(this.lightPlane), (r = new $.Geometry).vertices.push(new $.Vector3, new $.Vector3), (i = new $.LineBasicMaterial({fog: !1})).color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine = new $.Line(r, i), this.add(this.targetLine), this.update()
        },$.DirectionalLightHelper.prototype = Object.create($.Object3D.prototype),$.DirectionalLightHelper.prototype.dispose = function () {
            this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
        },$.DirectionalLightHelper.prototype.update = function () {
            var e = new $.Vector3, t = new $.Vector3, r = new $.Vector3;
            return function () {
                e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), r.subVectors(t, e), this.lightPlane.lookAt(r), this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), this.targetLine.geometry.vertices[1].copy(r), this.targetLine.geometry.verticesNeedUpdate = !0, this.targetLine.material.color.copy(this.lightPlane.material.color)
            }
        }(),$.EdgesHelper = function (e, t) {
            var r = void 0 !== t ? t : 16777215, i = [0, 0], o = {}, a = function (e, t) {
                return e - t
            }, n = ["a", "b", "c"], s = new $.BufferGeometry, h = e.geometry.clone();
            h.mergeVertices(), h.computeFaceNormals();
            for (var l = h.vertices, c = h.faces, p = 0, u = 0, f = c.length; u < f; u++) for (var d = c[u], m = 0; m < 3; m++) {
                i[0] = d[n[m]], i[1] = d[n[(m + 1) % 3]], i.sort(a), void 0 === o[v = i.toString()] ? (o[v] = {
                    vert1: i[0],
                    vert2: i[1],
                    face1: u,
                    face2: void 0
                }, p++) : o[v].face2 = u
            }
            s.addAttribute("position", new $.Float32Attribute(2 * p, 3));
            var y = s.attributes.position.array, g = 0;
            for (var v in o) {
                var x = o[v];
                if (void 0 === x.face2 || c[x.face1].normal.dot(c[x.face2].normal) < .9999) {
                    var w = l[x.vert1];
                    y[g++] = w.x, y[g++] = w.y, y[g++] = w.z, w = l[x.vert2], y[g++] = w.x, y[g++] = w.y, y[g++] = w.z
                }
            }
            $.Line.call(this, s, new $.LineBasicMaterial({color: r}), $.LinePieces), this.matrixAutoUpdate = !1, this.matrixWorld = e.matrixWorld
        },$.EdgesHelper.prototype = Object.create($.Line.prototype),$.FaceNormalsHelper = function (e, t, r, i) {
            this.object = e, this.size = void 0 !== t ? t : 1;
            for (var o = void 0 !== r ? r : 16776960, a = void 0 !== i ? i : 1, n = new $.Geometry, s = 0, h = this.object.geometry.faces.length; s < h; s++) n.vertices.push(new $.Vector3, new $.Vector3);
            $.Line.call(this, n, new $.LineBasicMaterial({
                color: o,
                linewidth: a
            }), $.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new $.Matrix3, this.update()
        },$.FaceNormalsHelper.prototype = Object.create($.Line.prototype),$.FaceNormalsHelper.prototype.update = function () {
            var e = this.geometry.vertices, t = this.object, r = t.geometry.vertices, i = t.geometry.faces,
                o = t.matrixWorld;
            t.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(o);
            for (var a = 0, n = 0, s = i.length; a < s; a++, n += 2) {
                var h = i[a];
                e[n].copy(r[h.a]).add(r[h.b]).add(r[h.c]).divideScalar(3).applyMatrix4(o), e[n + 1].copy(h.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(e[n])
            }
            return this.geometry.verticesNeedUpdate = !0, this
        },$.GridHelper = function (e, t) {
            var r = new $.Geometry, i = new $.LineBasicMaterial({vertexColors: $.VertexColors});
            this.color1 = new $.Color(4473924), this.color2 = new $.Color(8947848);
            for (var o = -e; o <= e; o += t) {
                r.vertices.push(new $.Vector3(-e, 0, o), new $.Vector3(e, 0, o), new $.Vector3(o, 0, -e), new $.Vector3(o, 0, e));
                var a = 0 === o ? this.color1 : this.color2;
                r.colors.push(a, a, a, a)
            }
            $.Line.call(this, r, i, $.LinePieces)
        },$.GridHelper.prototype = Object.create($.Line.prototype),$.GridHelper.prototype.setColors = function (e, t) {
            this.color1.set(e), this.color2.set(t), this.geometry.colorsNeedUpdate = !0
        },$.HemisphereLightHelper = function (e, t, r, i) {
            $.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrixWorld = e.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new $.Color, new $.Color];
            var o = new $.SphereGeometry(t, 4, 2);
            o.applyMatrix((new $.Matrix4).makeRotationX(-Math.PI / 2));
            for (var a = 0; a < 8; a++) o.faces[a].color = this.colors[a < 4 ? 0 : 1];
            var n = new $.MeshBasicMaterial({vertexColors: $.FaceColors, wireframe: !0});
            this.lightSphere = new $.Mesh(o, n), this.add(this.lightSphere), this.update()
        },$.HemisphereLightHelper.prototype = Object.create($.Object3D.prototype),$.HemisphereLightHelper.prototype.dispose = function () {
            this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose()
        },$.HemisphereLightHelper.prototype.update = function () {
            var e = new $.Vector3;
            return function () {
                this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
            }
        }(),$.PointLightHelper = function (e, t) {
            this.light = e, this.light.updateMatrixWorld();
            var r = new $.SphereGeometry(t, 4, 2), i = new $.MeshBasicMaterial({wireframe: !0, fog: !1});
            i.color.copy(this.light.color).multiplyScalar(this.light.intensity), $.Mesh.call(this, r, i), this.matrixWorld = this.light.matrixWorld, this.matrixAutoUpdate = !1
        },$.PointLightHelper.prototype = Object.create($.Mesh.prototype),$.PointLightHelper.prototype.dispose = function () {
            this.geometry.dispose(), this.material.dispose()
        },$.PointLightHelper.prototype.update = function () {
            this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
        },$.SkeletonHelper = function (e) {
            for (var t = e.skeleton, r = new $.Geometry, i = 0; i < t.bones.length; i++) {
                t.bones[i].parent instanceof $.Bone && (r.vertices.push(new $.Vector3), r.vertices.push(new $.Vector3), r.colors.push(new $.Color(0, 0, 1)), r.colors.push(new $.Color(0, 1, 0)))
            }
            var o = new $.LineBasicMaterial({vertexColors: !0, depthTest: !1, depthWrite: !1, transparent: !0});
            $.Line.call(this, r, o, $.LinePieces), this.skeleton = t, this.matrixWorld = e.matrixWorld, this.matrixAutoUpdate = !1, this.update()
        },$.SkeletonHelper.prototype = Object.create($.Line.prototype),$.SkeletonHelper.prototype.update = function () {
            for (var e = this.geometry, t = 0, r = 0; r < this.skeleton.bones.length; r++) {
                var i = this.skeleton.bones[r];
                i.parent instanceof $.Bone && (e.vertices[t].setFromMatrixPosition(i.skinMatrix), e.vertices[t + 1].setFromMatrixPosition(i.parent.skinMatrix), t += 2)
            }
            e.verticesNeedUpdate = !0, e.computeBoundingSphere()
        },$.SpotLightHelper = function (e) {
            $.Object3D.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrixWorld = e.matrixWorld, this.matrixAutoUpdate = !1;
            var t = new $.CylinderGeometry(0, 1, 1, 8, 1, !0);
            t.applyMatrix((new $.Matrix4).makeTranslation(0, -.5, 0)), t.applyMatrix((new $.Matrix4).makeRotationX(-Math.PI / 2));
            var r = new $.MeshBasicMaterial({wireframe: !0, fog: !1});
            this.cone = new $.Mesh(t, r), this.add(this.cone), this.update()
        },$.SpotLightHelper.prototype = Object.create($.Object3D.prototype),$.SpotLightHelper.prototype.dispose = function () {
            this.cone.geometry.dispose(), this.cone.material.dispose()
        },$.SpotLightHelper.prototype.update = function () {
            var e = new $.Vector3, t = new $.Vector3;
            return function () {
                var r = this.light.distance ? this.light.distance : 1e4, i = r * Math.tan(this.light.angle);
                this.cone.scale.set(i, i, r), e.setFromMatrixPosition(this.light.matrixWorld), t.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(t.sub(e)), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
            }
        }(),$.VertexNormalsHelper = function (e, t, r, i) {
            this.object = e, this.size = void 0 !== t ? t : 1;
            for (var o = void 0 !== r ? r : 16711680, a = void 0 !== i ? i : 1, n = new $.Geometry, s = (e.geometry.vertices, e.geometry.faces), h = 0, l = s.length; h < l; h++) for (var c = 0, p = s[h].vertexNormals.length; c < p; c++) n.vertices.push(new $.Vector3), n.vertices.push(new $.Vector3);
            $.Line.call(this, n, new $.LineBasicMaterial({
                color: o,
                linewidth: a
            }), $.LinePieces), this.matrixAutoUpdate = !1, this.normalMatrix = new $.Matrix3, this.update()
        },$.VertexNormalsHelper.prototype = Object.create($.Line.prototype),$.VertexNormalsHelper.prototype.update = function (e) {
            var t = new $.Vector3;
            return function (e) {
                var r = ["a", "b", "c", "d"];
                this.object.updateMatrixWorld(!0), this.normalMatrix.getNormalMatrix(this.object.matrixWorld);
                for (var i = this.geometry.vertices, o = this.object.geometry.vertices, a = this.object.geometry.faces, n = this.object.matrixWorld, s = 0, h = 0, l = a.length; h < l; h++) for (var c = a[h], p = 0, u = c.vertexNormals.length; p < u; p++) {
                    var f = o[c[r[p]]], d = c.vertexNormals[p];
                    i[s].copy(f).applyMatrix4(n), t.copy(d).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size), t.add(i[s]), i[s += 1].copy(t), s += 1
                }
                return this.geometry.verticesNeedUpdate = !0, this
            }
        }(),$.VertexTangentsHelper = function (e, t, r, i) {
            this.object = e, this.size = void 0 !== t ? t : 1;
            for (var o = void 0 !== r ? r : 255, a = void 0 !== i ? i : 1, n = new $.Geometry, s = (e.geometry.vertices, e.geometry.faces), h = 0, l = s.length; h < l; h++) for (var c = 0, p = s[h].vertexTangents.length; c < p; c++) n.vertices.push(new $.Vector3), n.vertices.push(new $.Vector3);
            $.Line.call(this, n, new $.LineBasicMaterial({
                color: o,
                linewidth: a
            }), $.LinePieces), this.matrixAutoUpdate = !1, this.update()
        },$.VertexTangentsHelper.prototype = Object.create($.Line.prototype),$.VertexTangentsHelper.prototype.update = function (e) {
            var t = new $.Vector3;
            return function (e) {
                var r = ["a", "b", "c", "d"];
                this.object.updateMatrixWorld(!0);
                for (var i = this.geometry.vertices, o = this.object.geometry.vertices, a = this.object.geometry.faces, n = this.object.matrixWorld, s = 0, h = 0, l = a.length; h < l; h++) for (var c = a[h], p = 0, u = c.vertexTangents.length; p < u; p++) {
                    var f = o[c[r[p]]], d = c.vertexTangents[p];
                    i[s].copy(f).applyMatrix4(n), t.copy(d).transformDirection(n).multiplyScalar(this.size), t.add(i[s]), i[s += 1].copy(t), s += 1
                }
                return this.geometry.verticesNeedUpdate = !0, this
            }
        }(),$.WireframeHelper = function (e, t) {
            var r = void 0 !== t ? t : 16777215, i = [0, 0], o = {}, a = function (e, t) {
                return e - t
            }, n = ["a", "b", "c"], s = new $.BufferGeometry;
            if (e.geometry instanceof $.Geometry) {
                for (var h = e.geometry.vertices, l = e.geometry.faces, c = 0, p = new Uint32Array(6 * l.length), u = 0, f = l.length; u < f; u++) for (var d = l[u], m = 0; m < 3; m++) {
                    i[0] = d[n[m]], i[1] = d[n[(m + 1) % 3]], i.sort(a), void 0 === o[T = i.toString()] && (p[2 * c] = i[0], p[2 * c + 1] = i[1], o[T] = !0, c++)
                }
                s.addAttribute("position", new $.Float32Attribute(2 * c, 3));
                var y = s.attributes.position.array;
                for (u = 0, f = c; u < f; u++) for (m = 0; m < 2; m++) {
                    var g = h[p[2 * u + m]];
                    y[(S = 6 * u + 3 * m) + 0] = g.x, y[S + 1] = g.y, y[S + 2] = g.z
                }
            } else if (e.geometry instanceof $.BufferGeometry && void 0 !== e.geometry.attributes.index) {
                h = e.geometry.attributes.position.array;
                for (var v = e.geometry.attributes.index.array, x = e.geometry.offsets, w = (c = 0, p = new Uint32Array(2 * v.length), 0), _ = x.length; w < _; ++w) for (var b = x[w].start, M = x[w].count, S = x[w].index, A = (u = b, b + M); u < A; u += 3) for (m = 0; m < 3; m++) {
                    var T;
                    i[0] = S + v[u + m], i[1] = S + v[u + (m + 1) % 3], i.sort(a), void 0 === o[T = i.toString()] && (p[2 * c] = i[0], p[2 * c + 1] = i[1], o[T] = !0, c++)
                }
                s.addAttribute("position", new $.Float32Attribute(2 * c, 3));
                for (y = s.attributes.position.array, u = 0, f = c; u < f; u++) for (m = 0; m < 2; m++) {
                    S = 6 * u + 3 * m;
                    var E = 3 * p[2 * u + m];
                    y[S + 0] = h[E], y[S + 1] = h[E + 1], y[S + 2] = h[E + 2]
                }
            } else if (e.geometry instanceof $.BufferGeometry) {
                var C = (c = (h = e.geometry.attributes.position.array).length / 3) / 3;
                s.addAttribute("position", new $.Float32Attribute(2 * c, 3));
                for (y = s.attributes.position.array, u = 0, f = C; u < f; u++) for (m = 0; m < 3; m++) {
                    var P = 9 * u + 3 * m;
                    y[(S = 18 * u + 6 * m) + 0] = h[P], y[S + 1] = h[P + 1], y[S + 2] = h[P + 2];
                    E = 9 * u + (m + 1) % 3 * 3;
                    y[S + 3] = h[E], y[S + 4] = h[E + 1], y[S + 5] = h[E + 2]
                }
            }
            $.Line.call(this, s, new $.LineBasicMaterial({color: r}), $.LinePieces), this.matrixAutoUpdate = !1, this.matrixWorld = e.matrixWorld
        },$.WireframeHelper.prototype = Object.create($.Line.prototype),$.ImmediateRenderObject = function () {
            $.Object3D.call(this), this.render = function (e) {
            }
        },$.ImmediateRenderObject.prototype = Object.create($.Object3D.prototype),$.LensFlare = function (e, t, r, i, o) {
            $.Object3D.call(this), this.lensFlares = [], this.positionScreen = new $.Vector3, this.customUpdateCallback = void 0, void 0 !== e && this.add(e, t, r, i, o)
        },$.LensFlare.prototype = Object.create($.Object3D.prototype),$.LensFlare.prototype.add = function (e, t, r, i, o, a) {
            void 0 === t && (t = -1), void 0 === r && (r = 0), void 0 === a && (a = 1), void 0 === o && (o = new $.Color(16777215)), void 0 === i && (i = $.NormalBlending), r = Math.min(r, Math.max(0, r)), this.lensFlares.push({
                texture: e,
                size: t,
                distance: r,
                x: 0,
                y: 0,
                z: 0,
                scale: 1,
                rotation: 1,
                opacity: a,
                color: o,
                blending: i
            })
        },$.LensFlare.prototype.updateLensFlares = function () {
            var e, t, r = this.lensFlares.length, i = 2 * -this.positionScreen.x, o = 2 * -this.positionScreen.y;
            for (e = 0; e < r; e++) (t = this.lensFlares[e]).x = this.positionScreen.x + i * t.distance, t.y = this.positionScreen.y + o * t.distance, t.wantedRotation = t.x * Math.PI * .25, t.rotation += .25 * (t.wantedRotation - t.rotation)
        },$.MorphBlendMesh = function (e, t) {
            $.Mesh.call(this, e, t), this.animationsMap = {}, this.animationsList = [];
            var r = this.geometry.morphTargets.length, i = r - 1, o = r / 1;
            this.createAnimation("__default", 0, i, o), this.setAnimationWeight("__default", 1)
        },$.MorphBlendMesh.prototype = Object.create($.Mesh.prototype),$.MorphBlendMesh.prototype.createAnimation = function (e, t, r, i) {
            var o = {
                startFrame: t,
                endFrame: r,
                length: r - t + 1,
                fps: i,
                duration: (r - t) / i,
                lastFrame: 0,
                currentFrame: 0,
                active: !1,
                time: 0,
                direction: 1,
                weight: 1,
                directionBackwards: !1,
                mirroredLoop: !1
            };
            this.animationsMap[e] = o, this.animationsList.push(o)
        },$.MorphBlendMesh.prototype.autoCreateAnimations = function (e) {
            for (var t, r = /([a-z]+)(\d+)/, i = {}, o = this.geometry, a = 0, n = o.morphTargets.length; a < n; a++) {
                var s = o.morphTargets[a].name.match(r);
                if (s && s.length > 1) {
                    var h = s[1];
                    s[2];
                    i[h] || (i[h] = {
                        start: 1 / 0,
                        end: -1 / 0
                    }), a < (l = i[h]).start && (l.start = a), a > l.end && (l.end = a), t || (t = h)
                }
            }
            for (var h in i) {
                var l = i[h];
                this.createAnimation(h, l.start, l.end, e)
            }
            this.firstAnimation = t
        },$.MorphBlendMesh.prototype.setAnimationDirectionForward = function (e) {
            var t = this.animationsMap[e];
            t && (t.direction = 1, t.directionBackwards = !1)
        },$.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (e) {
            var t = this.animationsMap[e];
            t && (t.direction = -1, t.directionBackwards = !0)
        },$.MorphBlendMesh.prototype.setAnimationFPS = function (e, t) {
            var r = this.animationsMap[e];
            r && (r.fps = t, r.duration = (r.end - r.start) / r.fps)
        },$.MorphBlendMesh.prototype.setAnimationDuration = function (e, t) {
            var r = this.animationsMap[e];
            r && (r.duration = t, r.fps = (r.end - r.start) / r.duration)
        },$.MorphBlendMesh.prototype.setAnimationWeight = function (e, t) {
            var r = this.animationsMap[e];
            r && (r.weight = t)
        },$.MorphBlendMesh.prototype.setAnimationTime = function (e, t) {
            var r = this.animationsMap[e];
            r && (r.time = t)
        },$.MorphBlendMesh.prototype.getAnimationTime = function (e) {
            var t = 0, r = this.animationsMap[e];
            return r && (t = r.time), t
        },$.MorphBlendMesh.prototype.getAnimationDuration = function (e) {
            var t = -1, r = this.animationsMap[e];
            return r && (t = r.duration), t
        },$.MorphBlendMesh.prototype.playAnimation = function (e) {
            var t = this.animationsMap[e];
            t ? (t.time = 0, t.active = !0) : console.warn("animation[" + e + "] undefined")
        },$.MorphBlendMesh.prototype.stopAnimation = function (e) {
            var t = this.animationsMap[e];
            t && (t.active = !1)
        },$.MorphBlendMesh.prototype.update = function (e) {
            for (var t = 0, r = this.animationsList.length; t < r; t++) {
                var i = this.animationsList[t];
                if (i.active) {
                    var o = i.duration / i.length;
                    i.time += i.direction * e, i.mirroredLoop ? (i.time > i.duration || i.time < 0) && (i.direction *= -1, i.time > i.duration && (i.time = i.duration, i.directionBackwards = !0), i.time < 0 && (i.time = 0, i.directionBackwards = !1)) : (i.time = i.time % i.duration, i.time < 0 && (i.time += i.duration));
                    var a = i.startFrame + $.Math.clamp(Math.floor(i.time / o), 0, i.length - 1), n = i.weight;
                    a !== i.currentFrame && (this.morphTargetInfluences[i.lastFrame] = 0, this.morphTargetInfluences[i.currentFrame] = 1 * n, this.morphTargetInfluences[a] = 0, i.lastFrame = i.currentFrame, i.currentFrame = a);
                    var s = i.time % o / o;
                    i.directionBackwards && (s = 1 - s), this.morphTargetInfluences[i.currentFrame] = s * n, this.morphTargetInfluences[i.lastFrame] = (1 - s) * n
                }
            }
        },$.LensFlarePlugin = function () {
            var e, t, r, i = {};

            function o(t, r) {
                var i = e.createProgram(), o = e.createShader(e.FRAGMENT_SHADER), a = e.createShader(e.VERTEX_SHADER),
                    n = "precision " + r + " float;\n";
                return e.shaderSource(o, n + t.fragmentShader), e.shaderSource(a, n + t.vertexShader), e.compileShader(o), e.compileShader(a), e.attachShader(i, o), e.attachShader(i, a), e.linkProgram(i), i
            }

            this.init = function (a) {
                e = a.context, t = a, r = a.getPrecision(), i.vertices = new Float32Array(16), i.faces = new Uint16Array(6);
                var n = 0;
                i.vertices[n++] = -1, i.vertices[n++] = -1, i.vertices[n++] = 0, i.vertices[n++] = 0, i.vertices[n++] = 1, i.vertices[n++] = -1, i.vertices[n++] = 1, i.vertices[n++] = 0, i.vertices[n++] = 1, i.vertices[n++] = 1, i.vertices[n++] = 1, i.vertices[n++] = 1, i.vertices[n++] = -1, i.vertices[n++] = 1, i.vertices[n++] = 0, i.vertices[n++] = 1, n = 0, i.faces[n++] = 0, i.faces[n++] = 1, i.faces[n++] = 2, i.faces[n++] = 0, i.faces[n++] = 2, i.faces[n++] = 3, i.vertexBuffer = e.createBuffer(), i.elementBuffer = e.createBuffer(), e.bindBuffer(e.ARRAY_BUFFER, i.vertexBuffer), e.bufferData(e.ARRAY_BUFFER, i.vertices, e.STATIC_DRAW), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, i.elementBuffer), e.bufferData(e.ELEMENT_ARRAY_BUFFER, i.faces, e.STATIC_DRAW), i.tempTexture = e.createTexture(), i.occlusionTexture = e.createTexture(), e.bindTexture(e.TEXTURE_2D, i.tempTexture), e.texImage2D(e.TEXTURE_2D, 0, e.RGB, 16, 16, 0, e.RGB, e.UNSIGNED_BYTE, null), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST), e.bindTexture(e.TEXTURE_2D, i.occlusionTexture), e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, 16, 16, 0, e.RGBA, e.UNSIGNED_BYTE, null), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MAG_FILTER, e.NEAREST), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_MIN_FILTER, e.NEAREST), e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS) <= 0 ? (i.hasVertexTexture = !1, i.program = o($.ShaderFlares.lensFlare, r)) : (i.hasVertexTexture = !0, i.program = o($.ShaderFlares.lensFlareVertexTexture, r)), i.attributes = {}, i.uniforms = {}, i.attributes.vertex = e.getAttribLocation(i.program, "position"), i.attributes.uv = e.getAttribLocation(i.program, "uv"), i.uniforms.renderType = e.getUniformLocation(i.program, "renderType"), i.uniforms.map = e.getUniformLocation(i.program, "map"), i.uniforms.occlusionMap = e.getUniformLocation(i.program, "occlusionMap"), i.uniforms.opacity = e.getUniformLocation(i.program, "opacity"), i.uniforms.color = e.getUniformLocation(i.program, "color"), i.uniforms.scale = e.getUniformLocation(i.program, "scale"), i.uniforms.rotation = e.getUniformLocation(i.program, "rotation"), i.uniforms.screenPosition = e.getUniformLocation(i.program, "screenPosition")
            }, this.render = function (r, o, a, n) {
                var s = r.__webglFlares, h = s.length;
                if (h) {
                    var l, c, p, u, f, d = new $.Vector3, m = n / a, y = .5 * a, g = .5 * n, v = 16 / n,
                        x = new $.Vector2(v * m, v), w = new $.Vector3(1, 1, 0), _ = new $.Vector2(1, 1),
                        b = i.uniforms, M = i.attributes;
                    for (e.useProgram(i.program), e.enableVertexAttribArray(i.attributes.vertex), e.enableVertexAttribArray(i.attributes.uv), e.uniform1i(b.occlusionMap, 0), e.uniform1i(b.map, 1), e.bindBuffer(e.ARRAY_BUFFER, i.vertexBuffer), e.vertexAttribPointer(M.vertex, 2, e.FLOAT, !1, 16, 0), e.vertexAttribPointer(M.uv, 2, e.FLOAT, !1, 16, 8), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, i.elementBuffer), e.disable(e.CULL_FACE), e.depthMask(!1), l = 0; l < h; l++) if (v = 16 / n, x.set(v * m, v), u = s[l], d.set(u.matrixWorld.elements[12], u.matrixWorld.elements[13], u.matrixWorld.elements[14]), d.applyMatrix4(o.matrixWorldInverse), d.applyProjection(o.projectionMatrix), w.copy(d), _.x = w.x * y + y, _.y = w.y * g + g, i.hasVertexTexture || _.x > 0 && _.x < a && _.y > 0 && _.y < n) for (e.activeTexture(e.TEXTURE1), e.bindTexture(e.TEXTURE_2D, i.tempTexture), e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGB, _.x - 8, _.y - 8, 16, 16, 0), e.uniform1i(b.renderType, 0), e.uniform2f(b.scale, x.x, x.y), e.uniform3f(b.screenPosition, w.x, w.y, w.z), e.disable(e.BLEND), e.enable(e.DEPTH_TEST), e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0), e.activeTexture(e.TEXTURE0), e.bindTexture(e.TEXTURE_2D, i.occlusionTexture), e.copyTexImage2D(e.TEXTURE_2D, 0, e.RGBA, _.x - 8, _.y - 8, 16, 16, 0), e.uniform1i(b.renderType, 1), e.disable(e.DEPTH_TEST), e.activeTexture(e.TEXTURE1), e.bindTexture(e.TEXTURE_2D, i.tempTexture), e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0), u.positionScreen.copy(w), u.customUpdateCallback ? u.customUpdateCallback(u) : u.updateLensFlares(), e.uniform1i(b.renderType, 2), e.enable(e.BLEND), c = 0, p = u.lensFlares.length; c < p; c++) (f = u.lensFlares[c]).opacity > .001 && f.scale > .001 && (w.x = f.x, w.y = f.y, w.z = f.z, v = f.size * f.scale / n, x.x = v * m, x.y = v, e.uniform3f(b.screenPosition, w.x, w.y, w.z), e.uniform2f(b.scale, x.x, x.y), e.uniform1f(b.rotation, f.rotation), e.uniform1f(b.opacity, f.opacity), e.uniform3f(b.color, f.color.r, f.color.g, f.color.b), t.setBlending(f.blending, f.blendEquation, f.blendSrc, f.blendDst), t.setTexture(f.texture, 1), e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0));
                    e.enable(e.CULL_FACE), e.enable(e.DEPTH_TEST), e.depthMask(!0)
                }
            }
        },$.ShadowMapPlugin = function () {
            var e, t, r, i, o, a, n = new $.Frustum, s = new $.Matrix4, h = new $.Vector3, l = new $.Vector3,
                c = new $.Vector3;

            function p(e, t) {
                var r = new $.DirectionalLight;
                r.isVirtual = !0, r.onlyShadow = !0, r.castShadow = !0, r.shadowCameraNear = e.shadowCameraNear, r.shadowCameraFar = e.shadowCameraFar, r.shadowCameraLeft = e.shadowCameraLeft, r.shadowCameraRight = e.shadowCameraRight, r.shadowCameraBottom = e.shadowCameraBottom, r.shadowCameraTop = e.shadowCameraTop, r.shadowCameraVisible = e.shadowCameraVisible, r.shadowDarkness = e.shadowDarkness, r.shadowBias = e.shadowCascadeBias[t], r.shadowMapWidth = e.shadowCascadeWidth[t], r.shadowMapHeight = e.shadowCascadeHeight[t], r.pointsWorld = [], r.pointsFrustum = [];
                for (var i = r.pointsWorld, o = r.pointsFrustum, a = 0; a < 8; a++) i[a] = new $.Vector3, o[a] = new $.Vector3;
                var n = e.shadowCascadeNearZ[t], s = e.shadowCascadeFarZ[t];
                return o[0].set(-1, -1, n), o[1].set(1, -1, n), o[2].set(-1, 1, n), o[3].set(1, 1, n), o[4].set(-1, -1, s), o[5].set(1, -1, s), o[6].set(-1, 1, s), o[7].set(1, 1, s), r
            }

            function u(e, t) {
                var r = e.shadowCascadeArray[t];
                r.position.copy(e.position), r.target.position.copy(e.target.position), r.lookAt(r.target), r.shadowCameraVisible = e.shadowCameraVisible, r.shadowDarkness = e.shadowDarkness, r.shadowBias = e.shadowCascadeBias[t];
                var i = e.shadowCascadeNearZ[t], o = e.shadowCascadeFarZ[t], a = r.pointsFrustum;
                a[0].z = i, a[1].z = i, a[2].z = i, a[3].z = i, a[4].z = o, a[5].z = o, a[6].z = o, a[7].z = o
            }

            function f(e, t) {
                var r = t.shadowCamera, i = t.pointsFrustum, o = t.pointsWorld;
                h.set(1 / 0, 1 / 0, 1 / 0), l.set(-1 / 0, -1 / 0, -1 / 0);
                for (var a = 0; a < 8; a++) {
                    var n = o[a];
                    n.copy(i[a]), $.ShadowMapPlugin.__projector.unprojectVector(n, e), n.applyMatrix4(r.matrixWorldInverse), n.x < h.x && (h.x = n.x), n.x > l.x && (l.x = n.x), n.y < h.y && (h.y = n.y), n.y > l.y && (l.y = n.y), n.z < h.z && (h.z = n.z), n.z > l.z && (l.z = n.z)
                }
                r.left = h.x, r.right = l.x, r.top = l.y, r.bottom = h.y, r.updateProjectionMatrix()
            }

            function d(e) {
                return e.material instanceof $.MeshFaceMaterial ? e.material.materials[0] : e.material
            }

            this.init = function (n) {
                e = n.context, t = n;
                var s = $.ShaderLib.depthRGBA, h = $.UniformsUtils.clone(s.uniforms);
                r = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h
                }), i = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    morphTargets: !0
                }), o = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    skinning: !0
                }), a = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    morphTargets: !0,
                    skinning: !0
                }), r._shadowPass = !0, i._shadowPass = !0, o._shadowPass = !0, a._shadowPass = !0
            }, this.render = function (e, r) {
                t.shadowMapEnabled && t.shadowMapAutoUpdate && this.update(e, r)
            }, this.update = function (h, l) {
                var m, y, g, v, x, w, _, b, M, S, A, T, E, C, P = [], L = 0;
                for (e.clearColor(1, 1, 1, 1), e.disable(e.BLEND), e.enable(e.CULL_FACE), e.frontFace(e.CCW), t.shadowMapCullFace === $.CullFaceFront ? e.cullFace(e.FRONT) : e.cullFace(e.BACK), t.setDepthTest(!0), m = 0, y = h.__lights.length; m < y; m++) if ((E = h.__lights[m]).castShadow) if (E instanceof $.DirectionalLight && E.shadowCascade) for (x = 0; x < E.shadowCascadeCount; x++) {
                    var D;
                    if (E.shadowCascadeArray[x]) D = E.shadowCascadeArray[x]; else {
                        (D = p(E, x)).originalCamera = l;
                        var R = new $.Gyroscope;
                        R.position.copy(E.shadowCascadeOffset), R.add(D), R.add(D.target), l.add(R), E.shadowCascadeArray[x] = D, console.log("Created virtualLight", D)
                    }
                    u(E, x), P[L] = D, L++
                } else P[L] = E, L++;
                for (m = 0, y = P.length; m < y; m++) {
                    if (!(E = P[m]).shadowMap) {
                        var F = $.LinearFilter;
                        t.shadowMapType === $.PCFSoftShadowMap && (F = $.NearestFilter);
                        var U = {minFilter: F, magFilter: F, format: $.RGBAFormat};
                        E.shadowMap = new $.WebGLRenderTarget(E.shadowMapWidth, E.shadowMapHeight, U), E.shadowMapSize = new $.Vector2(E.shadowMapWidth, E.shadowMapHeight), E.shadowMatrix = new $.Matrix4
                    }
                    if (!E.shadowCamera) {
                        if (E instanceof $.SpotLight) E.shadowCamera = new $.PerspectiveCamera(E.shadowCameraFov, E.shadowMapWidth / E.shadowMapHeight, E.shadowCameraNear, E.shadowCameraFar); else {
                            if (!(E instanceof $.DirectionalLight)) {
                                console.error("Unsupported light type for shadow");
                                continue
                            }
                            E.shadowCamera = new $.OrthographicCamera(E.shadowCameraLeft, E.shadowCameraRight, E.shadowCameraTop, E.shadowCameraBottom, E.shadowCameraNear, E.shadowCameraFar)
                        }
                        h.add(E.shadowCamera), !0 === h.autoUpdate && h.updateMatrixWorld()
                    }
                    for (E.shadowCameraVisible && !E.cameraHelper && (E.cameraHelper = new $.CameraHelper(E.shadowCamera), E.shadowCamera.add(E.cameraHelper)), E.isVirtual && D.originalCamera == l && f(l, E), w = E.shadowMap, _ = E.shadowMatrix, (b = E.shadowCamera).position.setFromMatrixPosition(E.matrixWorld), c.setFromMatrixPosition(E.target.matrixWorld), b.lookAt(c), b.updateMatrixWorld(), b.matrixWorldInverse.getInverse(b.matrixWorld), E.cameraHelper && (E.cameraHelper.visible = E.shadowCameraVisible), E.shadowCameraVisible && E.cameraHelper.update(), _.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), _.multiply(b.projectionMatrix), _.multiply(b.matrixWorldInverse), s.multiplyMatrices(b.projectionMatrix, b.matrixWorldInverse), n.setFromMatrix(s), t.setRenderTarget(w), t.clear(), g = 0, v = (C = h.__webglObjects).length; g < v; g++) T = (A = C[g]).object, A.render = !1, T.visible && T.castShadow && ((T instanceof $.Mesh || T instanceof $.ParticleSystem) && T.frustumCulled && !n.intersectsObject(T) || (T._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, T.matrixWorld), A.render = !0));
                    var V, z, B;
                    for (g = 0, v = C.length; g < v; g++) (A = C[g]).render && (T = A.object, M = A.buffer, V = d(T), z = void 0 !== T.geometry.morphTargets && T.geometry.morphTargets.length > 0 && V.morphTargets, B = T instanceof $.SkinnedMesh && V.skinning, S = T.customDepthMaterial ? T.customDepthMaterial : B ? z ? a : o : z ? i : r, t.setMaterialFaces(V), M instanceof $.BufferGeometry ? t.renderBufferDirect(b, h.__lights, null, S, M, T) : t.renderBuffer(b, h.__lights, null, S, M, T));
                    for (g = 0, v = (C = h.__webglObjectsImmediate).length; g < v; g++) (T = (A = C[g]).object).visible && T.castShadow && (T._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse, T.matrixWorld), t.renderImmediateObject(b, h.__lights, null, r, T))
                }
                var N = t.getClearColor(), O = t.getClearAlpha();
                e.clearColor(N.r, N.g, N.b, O), e.enable(e.BLEND), t.shadowMapCullFace === $.CullFaceFront && e.cullFace(e.BACK)
            }
        },$.ShadowMapPlugin.__projector = new $.Projector,$.SpritePlugin = function () {
            var e, t, r, i, o, a, n, s, h, l;

            function c(e, t) {
                return e.z !== t.z ? t.z - e.z : t.id - e.id
            }

            this.init = function (c) {
                e = c.context, t = c, i = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]), o = new Uint16Array([0, 1, 2, 0, 2, 3]), a = e.createBuffer(), n = e.createBuffer(), e.bindBuffer(e.ARRAY_BUFFER, a), e.bufferData(e.ARRAY_BUFFER, i, e.STATIC_DRAW), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n), e.bufferData(e.ELEMENT_ARRAY_BUFFER, o, e.STATIC_DRAW), s = function () {
                    var r = e.createProgram(), i = e.createShader(e.VERTEX_SHADER),
                        o = e.createShader(e.FRAGMENT_SHADER);
                    return e.shaderSource(i, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform float rotation;", "uniform vec2 scale;", "uniform vec2 uvOffset;", "uniform vec2 uvScale;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uvOffset + uv * uvScale;", "vec2 alignedPosition = position * scale;", "vec2 rotatedPosition;", "rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;", "rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;", "vec4 finalPosition;", "finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );", "finalPosition.xy += rotatedPosition;", "finalPosition = projectionMatrix * finalPosition;", "gl_Position = finalPosition;", "}"].join("\n")), e.shaderSource(o, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;", "uniform sampler2D map;", "uniform float opacity;", "uniform int fogType;", "uniform vec3 fogColor;", "uniform float fogDensity;", "uniform float fogNear;", "uniform float fogFar;", "uniform float alphaTest;", "varying vec2 vUV;", "void main() {", "vec4 texture = texture2D( map, vUV );", "if ( texture.a < alphaTest ) discard;", "gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );", "if ( fogType > 0 ) {", "float depth = gl_FragCoord.z / gl_FragCoord.w;", "float fogFactor = 0.0;", "if ( fogType == 1 ) {", "fogFactor = smoothstep( fogNear, fogFar, depth );", "} else {", "const float LOG2 = 1.442695;", "float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );", "fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );", "}", "gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );", "}", "}"].join("\n")), e.compileShader(i), e.compileShader(o), e.attachShader(r, i), e.attachShader(r, o), e.linkProgram(r), r
                }(), h = {
                    position: e.getAttribLocation(s, "position"),
                    uv: e.getAttribLocation(s, "uv")
                }, l = {
                    uvOffset: e.getUniformLocation(s, "uvOffset"),
                    uvScale: e.getUniformLocation(s, "uvScale"),
                    rotation: e.getUniformLocation(s, "rotation"),
                    scale: e.getUniformLocation(s, "scale"),
                    color: e.getUniformLocation(s, "color"),
                    map: e.getUniformLocation(s, "map"),
                    opacity: e.getUniformLocation(s, "opacity"),
                    modelViewMatrix: e.getUniformLocation(s, "modelViewMatrix"),
                    projectionMatrix: e.getUniformLocation(s, "projectionMatrix"),
                    fogType: e.getUniformLocation(s, "fogType"),
                    fogDensity: e.getUniformLocation(s, "fogDensity"),
                    fogNear: e.getUniformLocation(s, "fogNear"),
                    fogFar: e.getUniformLocation(s, "fogFar"),
                    fogColor: e.getUniformLocation(s, "fogColor"),
                    alphaTest: e.getUniformLocation(s, "alphaTest")
                };
                var p = document.createElement("canvas");
                p.width = 8, p.height = 8;
                var u = p.getContext("2d");
                u.fillStyle = "#ffffff", u.fillRect(0, 0, p.width, p.height), (r = new $.Texture(p)).needsUpdate = !0
            }, this.render = function (i, o, p, u) {
                var f = i.__webglSprites, d = f.length;
                if (d) {
                    e.useProgram(s), e.enableVertexAttribArray(h.position), e.enableVertexAttribArray(h.uv), e.disable(e.CULL_FACE), e.enable(e.BLEND), e.bindBuffer(e.ARRAY_BUFFER, a), e.vertexAttribPointer(h.position, 2, e.FLOAT, !1, 16, 0), e.vertexAttribPointer(h.uv, 2, e.FLOAT, !1, 16, 8), e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, n), e.uniformMatrix4fv(l.projectionMatrix, !1, o.projectionMatrix.elements), e.activeTexture(e.TEXTURE0), e.uniform1i(l.map, 0);
                    var m = 0, y = 0, g = i.fog;
                    g ? (e.uniform3f(l.fogColor, g.color.r, g.color.g, g.color.b), g instanceof $.Fog ? (e.uniform1f(l.fogNear, g.near), e.uniform1f(l.fogFar, g.far), e.uniform1i(l.fogType, 1), m = 1, y = 1) : g instanceof $.FogExp2 && (e.uniform1f(l.fogDensity, g.density), e.uniform1i(l.fogType, 2), m = 2, y = 2)) : (e.uniform1i(l.fogType, 0), m = 0, y = 0);
                    var v, x, w, _, b = [];
                    for (v = 0; v < d; v++) w = (x = f[v]).material, !1 !== x.visible && (x._modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, x.matrixWorld), x.z = -x._modelViewMatrix.elements[14]);
                    for (f.sort(c), v = 0; v < d; v++) !1 !== (x = f[v]).visible && (w = x.material, e.uniform1f(l.alphaTest, w.alphaTest), e.uniformMatrix4fv(l.modelViewMatrix, !1, x._modelViewMatrix.elements), b[0] = x.scale.x, b[1] = x.scale.y, m !== (_ = i.fog && w.fog ? y : 0) && (e.uniform1i(l.fogType, _), m = _), null !== w.map ? (e.uniform2f(l.uvOffset, w.map.offset.x, w.map.offset.y), e.uniform2f(l.uvScale, w.map.repeat.x, w.map.repeat.y)) : (e.uniform2f(l.uvOffset, 0, 0), e.uniform2f(l.uvScale, 1, 1)), e.uniform1f(l.opacity, w.opacity), e.uniform3f(l.color, w.color.r, w.color.g, w.color.b), e.uniform1f(l.rotation, w.rotation), e.uniform2fv(l.scale, b), t.setBlending(w.blending, w.blendEquation, w.blendSrc, w.blendDst), t.setDepthTest(w.depthTest), t.setDepthWrite(w.depthWrite), w.map && w.map.image && w.map.image.width ? t.setTexture(w.map, 0) : t.setTexture(r, 0), e.drawElements(e.TRIANGLES, 6, e.UNSIGNED_SHORT, 0));
                    e.enable(e.CULL_FACE)
                }
            }
        },$.DepthPassPlugin = function () {
            this.enabled = !1, this.renderTarget = null;
            var e, t, r, i, o, a, n = new $.Frustum, s = new $.Matrix4;

            function h(e) {
                return e.material instanceof $.MeshFaceMaterial ? e.material.materials[0] : e.material
            }

            this.init = function (n) {
                e = n.context, t = n;
                var s = $.ShaderLib.depthRGBA, h = $.UniformsUtils.clone(s.uniforms);
                r = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h
                }), i = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    morphTargets: !0
                }), o = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    skinning: !0
                }), a = new $.ShaderMaterial({
                    fragmentShader: s.fragmentShader,
                    vertexShader: s.vertexShader,
                    uniforms: h,
                    morphTargets: !0,
                    skinning: !0
                }), r._shadowPass = !0, i._shadowPass = !0, o._shadowPass = !0, a._shadowPass = !0
            }, this.render = function (e, t) {
                this.enabled && this.update(e, t)
            }, this.update = function (l, c) {
                var p, u, f, d, m, y, g, v, x, w;
                for (e.clearColor(1, 1, 1, 1), e.disable(e.BLEND), t.setDepthTest(!0), !0 === l.autoUpdate && l.updateMatrixWorld(), c.matrixWorldInverse.getInverse(c.matrixWorld), s.multiplyMatrices(c.projectionMatrix, c.matrixWorldInverse), n.setFromMatrix(s), t.setRenderTarget(this.renderTarget), t.clear(), p = 0, u = (g = l.__webglObjects).length; p < u; p++) y = (m = g[p]).object, m.render = !1, y.visible && ((y instanceof $.Mesh || y instanceof $.ParticleSystem) && y.frustumCulled && !n.intersectsObject(y) || (y._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse, y.matrixWorld), m.render = !0));
                for (p = 0, u = g.length; p < u; p++) if ((m = g[p]).render) {
                    if (y = m.object, f = m.buffer, y instanceof $.ParticleSystem && !y.customDepthMaterial) continue;
                    (v = h(y)) && t.setMaterialFaces(y.material), x = void 0 !== y.geometry.morphTargets && y.geometry.morphTargets.length > 0 && v.morphTargets, w = y instanceof $.SkinnedMesh && v.skinning, d = y.customDepthMaterial ? y.customDepthMaterial : w ? x ? a : o : x ? i : r, f instanceof $.BufferGeometry ? t.renderBufferDirect(c, l.__lights, null, d, f, y) : t.renderBuffer(c, l.__lights, null, d, f, y)
                }
                for (p = 0, u = (g = l.__webglObjectsImmediate).length; p < u; p++) (y = (m = g[p]).object).visible && (y._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse, y.matrixWorld), t.renderImmediateObject(c, l.__lights, null, r, y));
                var _ = t.getClearColor(), b = t.getClearAlpha();
                e.clearColor(_.r, _.g, _.b, b), e.enable(e.BLEND)
            }
        },$.ShaderFlares = {
            lensFlareVertexTexture: {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "uniform sampler2D occlusionMap;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );", "vVisibility =        visibility.r / 9.0;", "vVisibility *= 1.0 - visibility.g / 9.0;", "vVisibility *=       visibility.b / 9.0;", "vVisibility *= 1.0 - visibility.a / 9.0;", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["uniform lowp int renderType;", "uniform sampler2D map;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "varying float vVisibility;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * vVisibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            }, lensFlare: {
                vertexShader: ["uniform lowp int renderType;", "uniform vec3 screenPosition;", "uniform vec2 scale;", "uniform float rotation;", "attribute vec2 position;", "attribute vec2 uv;", "varying vec2 vUV;", "void main() {", "vUV = uv;", "vec2 pos = position;", "if( renderType == 2 ) {", "pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;", "pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;", "}", "gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );", "}"].join("\n"),
                fragmentShader: ["precision mediump float;", "uniform lowp int renderType;", "uniform sampler2D map;", "uniform sampler2D occlusionMap;", "uniform float opacity;", "uniform vec3 color;", "varying vec2 vUV;", "void main() {", "if( renderType == 0 ) {", "gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );", "} else if( renderType == 1 ) {", "gl_FragColor = texture2D( map, vUV );", "} else {", "float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;", "visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;", "visibility = ( 1.0 - visibility / 4.0 );", "vec4 texture = texture2D( map, vUV );", "texture.a *= opacity * visibility;", "gl_FragColor = texture;", "gl_FragColor.rgb *= color;", "}", "}"].join("\n")
            }
        };
        var ee = r(49), te = r(203), re = r.n(te);
        const {CF_DATACENTERS: ie, LARGEST_CITIES: oe} = r(715);
        d3 = Object.assign({}, r(32)), function () {
            var e, t = "light", r = {
                dark: {r: 50, g: 50, b: 50, s: {a: "0.0", b: "1.0", c: "0.3"}},
                light: {r: 173, g: 210, b: 235, s: {a: "0.3", b: "0.6", c: "0.02"}}
            }, i = {
                dark: {r: 70, g: 70, b: 70, s: {a: "0.0", b: "1.0", c: "0.3"}},
                light: {r: 29, g: 82, b: 116, s: {a: "0.3", b: "0.6", c: "0.02"}}
            }, o = {
                datacenter: {dark: {r: 243, g: 128, b: 32, s: "0.15"}, light: {r: 243, g: 128, b: 32, s: "0.0"}},
                population: {dark: {r: 100, g: 97, b: 93, s: "0.15"}, light: {r: 159, g: 182, b: 202, s: "0.0"}}
            }, a = !0, n = {x: 0, y: 0, z: 0}, h = !1, l = function () {
                return window.matchMedia("(max-width: 768px)").matches ? (h = !0, !0) : (h = !1, !1)
            };
            l();
            var c, p, u, f, d, m, y, g, v, x, w, _, b, M = 500, S = M, A = 200, T = {x: 1.565, y: .475},
                E = {x: T.x, y: T.y}, C = 1, P = 0, L = 0, D = [], R = [], F = function () {
                    return C >= .7 && P < .5 && L <= 0
                }, U = function (e, t, r) {
                    var i = e * (Math.PI / 180), o = -t * (Math.PI / 180) + Math.PI;
                    return new $.Vector3(Math.cos(i) * Math.cos(o) * r, Math.sin(i) * r, Math.cos(i) * Math.sin(o) * r)
                }, V = function (e, t) {
                    return e.material || (e.material = "datacenter" === t ? new $.ShaderMaterial({
                        vertexShader: I,
                        fragmentShader: W(e.r, e.g, e.b, e.s)
                    }) : new $.MeshBasicMaterial({color: new $.Color(e.r / 255, e.g / 255, e.b / 255)})), e.material
                };

            function z(e, r) {
                $.Object3D.call(this), this.type = e;
                var i = .01 * A * .8 * r, a = V(o[e][t]);
                this.sphere = "datacenter" === e ? new $.Mesh(new $.SphereGeometry(1.25 * i, 16, 8), a) : new $.Mesh(new $.CircleGeometry(3 * i, 16, 8), a), this.sphere.position.y = 1, this.add(this.sphere)
            }

            z.prototype = Object.create($.Object3D.prototype);
            var B = function (e, t, r, i) {
                    var o = new z(r, i), a = e * (Math.PI / 180), n = -t * (Math.PI / 180) + Math.PI, s = A;
                    return o.position.set(Math.cos(a) * Math.cos(n) * s, Math.sin(a) * s, Math.cos(a) * Math.sin(n) * s), o.rotation.set(0, -n, a - .5 * Math.PI), o.sphere.rotation.set(-.5 * Math.PI, 0, 0), p.add(o), o
                }, N = function (e) {
                    const r = ie[e];
                    let i, a, n = -1;
                    for (; n < 50 || n > 150;) {
                        i = Math.floor((ie.length - 1) * Math.random()), a = ie[i];
                        const e = U(r.lat, r.lon, A), t = U(a.lat, a.lon, A);
                        n = e.distanceTo(t)
                    }
                    var s = [r.lat, r.lon, a.lat, a.lon];
                    const h = o.datacenter[t],
                        l = new $.LineBasicMaterial({color: new $.Color(h.r / 255, h.g / 255, h.b / 255)}),
                        c = new $.Geometry, u = function (e) {
                            const [t, r, i, o] = e, a = U(t, r, A + .8), n = U(i, o, A + .8),
                                s = d3.geoInterpolate([r, t], [o, i]), h = s(.25), l = s(.75), c = U(h[1], h[0], A + 50),
                                p = U(l[1], l[0], A + 50);
                            return new $.CubicBezierCurve3(a, c, p, n)
                        }(s).getPoints(299), f = [];
                    for (var d = 0; d < u.length; d += 1) f.push(u[0]);
                    c.vertices.push(...f);
                    var m = new $.Line(c, l);
                    return p.add(m), {startIndex: e, endIndex: i, line: m, toSplinePoint: 0, material: l, splinePoints: u}
                }, O = function (t) {
                    var r = (y = (c = t).clientWidth < 500 ? 500 : c.clientWidth) / (u = y);
                    (d = new $.WebGLRenderer({alpha: !0})).setSize(y, u), d.context.canvas.addEventListener("webglcontextlost", K, !1), d.context.canvas.addEventListener("webglcontextrestored", Z, !1), c.appendChild(d.domElement), m = new $.Scene, (e = new $.PerspectiveCamera(30, r, 1, 1900)).lookAt(n), k(), window.addEventListener("resize", Q), Y()
                }, k = function () {
                    (p = new $.Object3D).rotation.y = -T.x, p.rotation.x = T.y, j(), X(), q(), D = [], ie.forEach((function (e) {
                        D.push(B(e.lat, e.lon, "datacenter", 1))
                    })), h || oe.forEach((function (e) {
                        D.push(B(e.y, e.x, "population", .3 + e.p / 22315474 * 2))
                    })), m.add(p)
                },
                I = ["varying vec3 vNormal;", "void main() {", "vec4 pos = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "vNormal = normalize( normalMatrix * normalize( position ));", "gl_Position = pos;", "}"].join("\n"),
                G = function (e, t, r, i) {
                    return ["varying vec3 vNormal;", "void main() {", "float i =      pow(clamp(dot( vNormal, normalize(vec3( 0.0,  0.5, 1.0 ))), " + i.a + ", " + i.b + "), " + i.c + ");", "float i2 = 0.8-pow(clamp(dot( vNormal, normalize(vec3( 0.0, -0.0, 1.0 ))),     0.0,     1.0),     1.7);", "gl_FragColor = vec4(" + e / 255 + ", " + t / 255 + ", " + r / 255 + ", 1.0) * vec4(i*i*i+0.0*clamp(i2,0.0,1.0));", "gl_FragColor.a = 1.0;", "}"].join("\n")
                }, W = function (e, t, r, i) {
                    return ["varying vec3 vNormal;", "void main() {", "float i =      pow(clamp(dot( vNormal, normalize(vec3( 0.0, -0.0, 1.0 ))), 0.0, 1.0), " + i + ");", "float i2 = 0.8-pow(clamp(dot( vNormal, normalize(vec3( 0.0, -0.0, 1.0 ))), 0.0, 1.0), 0.4);", "gl_FragColor = vec4(" + e / 255 + ", " + t / 255 + ", " + r / 255 + ", 1.0) * vec4(i*i*i+0.0*clamp(i2,0.0,1.0));", "gl_FragColor.a = 1.0;", "}"].join("\n")
                }, H = function (e) {
                    return new $.ShaderMaterial({vertexShader: I, fragmentShader: G(e.r, e.g, e.b, e.s)})
                }, j = function () {
                    g = new $.SphereGeometry(A, 50, 50), v = H(r[t]), x = new $.Mesh(g, v), p.add(x)
                }, X = function () {
                    w = s, _ = H(i[t]), b = J(w, _), p.add(b)
                }, q = function () {
                    var e = document.documentElement;
                    new MutationObserver((function (a) {
                        for (var n of a) "attributes" === n.type && "theme" === n.attributeName && (t = e.getAttribute("theme"), x.material = H(r[t]), b.material = H(i[t]), D.forEach((function (e) {
                            e.sphere.material = V(o[e.type][t])
                        })))
                    })).observe(e, {attributes: !0})
                }, Y = function () {
                    f = requestAnimationFrame(Y), a && (E.x -= .001), T.x += .1 * (E.x - T.x), T.y += .1 * (E.y - T.y), S += .3 * (M - S), e.position.z = h ? 1300 : 900, e.position.y = 100, n.y = 0, n.x = 0, e.lookAt(n), p.rotation.y = -T.x, p.rotation.x = T.y;
                    var t = Math.max(0, Math.min(1, (P - .2) / .6));
                    window.markers = D;
                    var r = ["x", "y", "z"];
                    if (D.forEach((function (e) {
                        r.forEach((function (r) {
                            "datacenter" === e.type ? e.children[0].scale[r] = .001 + Math.max(0, C - .2) / .8 * .999 : e.children[0].scale[r] = .001 + .999 * t
                        }))
                    })), F() && Math.random() > .8 && R.length < 25) {
                        const e = Math.floor(Math.random() * (ie.length - 1));
                        R.push(N(e))
                    }
                    R.forEach((function (e, t) {
                        const r = e.line.geometry.vertices.length, i = Math.min(e.toSplinePoint + 8, 1.5 * r);
                        for (var o = 0; o < r; o += 1) e.line.geometry.vertices[o] = i < r / 2 ? o < i ? e.splinePoints[o] : e.splinePoints[i] : o < i - r / 2 ? e.splinePoints[i - r / 2 - 1] : o < i ? e.splinePoints[o] : e.splinePoints[Math.min(i, r - 1)];
                        e.line.geometry.verticesNeedUpdate = !0, e.toSplinePoint = i, i >= 1.5 * r && (p.remove(e.line), F() ? R[t] = N(e.endIndex) : R[t] = void 0)
                    }));
                    for (var i = R.length; i >= 0; i -= 1) void 0 === R[i] && R.splice(i, 1);
                    p.updateMatrix(), d.render(m, e)
                }, K = function (e) {
                    e.preventDefault(), cancelAnimationFrame(f)
                }, Z = function () {
                    O(c)
                }, Q = function () {
                    l(), y = c.clientWidth < 500 ? 500 : c.clientWidth, u = y, e.aspect = y / u, d.setSize(y, u)
                }, J = function (e, t) {
                    var r = e().children[0].children[0].attributes.Vertex.elements, i = new $.Geometry, o = 0, a = [];
                    for (o = 0; o < r.length; o += 3) a.push(new $.Vector3(r[o], r[o + 1], r[o + 2]));
                    for (a = re(a, 1 / 64), o = 0; o < a.length; o++) i.vertices.push(a[o]);
                    for (o = 0; o < a.length; o += 3) i.faces.push(new $.Face3(o, o + 1, o + 2, null, null));
                    i.computeFaceNormals(), i.computeVertexNormals(), i.computeBoundingSphere();
                    var n = new $.Mesh(i, t);
                    n.type = $.Triangles;
                    var s = h ? 3155e-8 : 3144e-8;
                    return n.scale.x = n.scale.y = n.scale.z = s, n.rotation.x = -Math.PI / 2, n.rotation.z = Math.PI, n.matrixAutoUpdate = !1, n.doubleSided = !0, n.updateMatrix(), n
                }, ee = function (e, t, r, i) {
                    var o, a, n, s, h, l, c = new $.Vector3, p = new $.Vector3, u = new $.Vector3,
                        f = (o = c.subVectors(t, e)).length();
                    if (f > 1.1 * i) {
                        for (n = f / (a = Math.max(2, Math.ceil(f / i))), s = o.normalize(), h = [], l = 0; l < a; l++) p.copy(s), p.multiplyScalar(n * l), p.add(e), u.copy(s), u.multiplyScalar(n * (l + 1)), u.add(e), h = h.concat(ee(p.clone(), u.clone(), r, i));
                        return h
                    }
                    return o.subVectors(r, t).length() > 1.1 * i ? ee(t, r, e, i) : o.subVectors(r, e).length() > 1.1 * i ? ee(r, e, t, i) : [e, t, r]
                }, te = function (e, t) {
                    for (var r = e, i = 0; i < r.length; i++) r[i].multiplyScalar(t / r[i].length());
                    return r
                }, re = function (e, t) {
                    var r = [], i = e, o = i[0].length();
                    t *= 2 * Math.PI * o;
                    for (var a = 0; a < i.length; a += 3) {
                        var n = ee(i[a], i[a + 1], i[a + 2], t);
                        te(n, o);
                        for (var s = 0; s < n.length; s++) r.push(n[s])
                    }
                    return r
                };
            window.Globe = {
                init: O, autospin: function (e) {
                    a = e
                }, spin: function (e) {
                    E.x -= e
                }, setDistanceTarget: function (e) {
                    M = Math.max(500, Math.min(1e3, e))
                }, setHeroProgress: function (e) {
                    C = e
                }, setNetworkProgress: function (e) {
                    P = e
                }, setPopulationProgress: function (e) {
                    L = e
                }
            }
        }(), o()(() => {
            const e = o()(".js-bottom-banner__close"),
                t = "bottomBannerHidden-" + o()(".js-bottom-banner").data("name");
            Object(ee.e)(t) || window.setTimeout((function () {
                o()(".js-bottom-banner").css({opacity: 1})
            }), 2e3), e.on("click", (function () {
                o()(".js-bottom-banner").css({opacity: 0}), Object(ee.g)(t)
            }));
            var r = o()(".globe"), i = r[0];
            r.waypoint((function () {
                Globe.init(i), Globe.setDistanceTarget(500), this.disable()
            }), {offset: "4000"});
            const a = document.querySelector(".typewriter").dataset.typewriter.split(",");
            window.typewriter || (window.typewriter = new re.a(".typewriter", {
                strings: a,
                autoStart: !0,
                wrapperClassName: "headline1",
                loop: !0
            }));
            var s = !1, h = o()(".js-homepage-stream").get(0);

            function l() {
                h.pause(), o()(".js-homepage-video-modal__pause").hide(), o()(".js-homepage-video-modal").fadeOut(300, (function () {
                    o()(".js-homepage-video-modal").css("display", "none")
                })), o()(".js-meerkat-banner").hasClass("meerkat-banner--opened") && (o()(".js-meerkat-banner").removeClass("meerkat-banner--opened"), o()(".js-meerkat-banner").addClass("meerkat-banner--closed")), o()("html, body").css({
                    overflow: "auto",
                    height: "auto"
                })
            }

            o()(".js-homepage-video__play-text, .js-homepage-video__viewport").click((function () {
                o()(this).hasClass("js-homepage-video__viewport") && o()("body").hasClass("homepage__hero-test--V1") || (o()(".js-homepage-video-modal").css("display", "flex"), o()("html, body").css({
                    overflow: "hidden",
                    height: "100%"
                }), n.a.any || o()(".js-homepage-video-modal").hide(), o()(".js-homepage-video-modal").fadeIn(300, (function () {
                    h.play(), s || (s = !0)
                })))
            })), o()(".js-homepage-video-modal").click((function (e) {
                if (o()(e.target).is(".js-homepage-video-modal") || o()(e.target).is(".homepage-video-modal__close")) return l(), !1
            })), o()(document).keyup((function (e) {
                27 === e.keyCode && l()
            }))
        })
    }, 74: function (e, t, r) {
        "use strict";
        r.d(t, "e", (function () {
            return i
        })), r.d(t, "a", (function () {
            return o
        })), r.d(t, "b", (function () {
            return a
        })), r.d(t, "c", (function () {
            return n
        })), r.d(t, "d", (function () {
            return s
        }));
        r(136);
        var i = new RegExp(/[-a-zA-Z0-9@:%_+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_+.~#?&//=]*)?/i),
            o = "eucookiebanner",
            a = {weekday: "long", year: "numeric", month: "short", day: "numeric", hour: "2-digit", minute: "2-digit"},
            n = ["US", "AU", "GB", "FR", "DE", "CA", "KP", "NO", "SE", "CH", "NZ", "JP", "FI", "DL", "AT", "BE", "HK", "IS", "HU", "IE", "LU", "NL", "PL", "SG", "TW"],
            s = {
                AD: "EMEA",
                AE: "EMEA",
                AF: "EMEA",
                AG: "LATAM",
                AI: "LATAM",
                AL: "EMEA",
                AM: "EMEA",
                AO: "EMEA",
                AQ: "EMEA",
                AR: "LATAM",
                AS: "APAC",
                AT: "EMEA",
                AU: "APAC",
                AW: "LATAM",
                AX: "EMEA",
                AZ: "EMEA",
                BA: "EMEA",
                BB: "LATAM",
                BD: "APAC",
                BE: "EMEA",
                BF: "EMEA",
                BG: "EMEA",
                BH: "EMEA",
                BI: "EMEA",
                BJ: "EMEA",
                BL: "EMEA",
                BM: "LATAM",
                BN: "APAC",
                BO: "LATAM",
                BR: "LATAM",
                BS: "LATAM",
                BT: "APAC",
                BV: "EMEA",
                BW: "EMEA",
                BY: "EMEA",
                BZ: "LATAM",
                CA: "NA",
                CC: "APAC",
                CD: "EMEA",
                CF: "EMEA",
                CG: "EMEA",
                CH: "EMEA",
                CI: "EMEA",
                CK: "EMEA",
                CL: "LATAM",
                CM: "EMEA",
                CN: "APAC",
                CO: "LATAM",
                CR: "LATAM",
                CU: "LATAM",
                CV: "EMEA",
                CW: "EMEA",
                CX: "APAC",
                CY: "EMEA",
                CZ: "EMEA",
                DE: "EMEA",
                DJ: "EMEA",
                DK: "EMEA",
                DM: "LATAM",
                DO: "LATAM",
                DZ: "EMEA",
                EC: "LATAM",
                EE: "EMEA",
                EG: "EMEA",
                EH: "EMEA",
                ER: "EMEA",
                ES: "EMEA",
                ET: "EMEA",
                FI: "EMEA",
                FJ: "APAC",
                FK: "LATAM",
                FM: "APAC",
                FO: "EMEA",
                FR: "EMEA",
                GA: "EMEA",
                GB: "EMEA(UK)",
                GD: "LATAM",
                GE: "EMEA",
                GF: "EMEA",
                GG: "EMEA",
                GH: "EMEA",
                GI: "EMEA",
                GL: "EMEA",
                GM: "EMEA",
                GN: "EMEA",
                GP: "EMEA",
                GQ: "EMEA",
                GR: "EMEA",
                GS: "LATAM",
                GT: "LATAM",
                GU: "APAC",
                GW: "EMEA",
                GY: "LATAM",
                HK: "APAC",
                HM: "EMEA",
                HN: "LATAM",
                HR: "EMEA",
                HT: "LATAM",
                HU: "EMEA",
                ID: "APAC",
                IE: "EMEA",
                IL: "EMEA",
                IM: "EMEA",
                IN: "APAC",
                IO: "APAC",
                IQ: "EMEA",
                IR: "EMEA",
                IS: "EMEA",
                IT: "EMEA",
                JE: "EMEA",
                JM: "LATAM",
                JO: "EMEA",
                JP: "APAC",
                KE: "EMEA",
                KG: "EMEA",
                KH: "APAC",
                KI: "APAC",
                KM: "EMEA",
                KN: "LATAM",
                KP: "APAC",
                KR: "APAC",
                KW: "EMEA",
                KY: "LATAM",
                KZ: "EMEA",
                LA: "APAC",
                LB: "EMEA",
                LC: "LATAM",
                LI: "EMEA",
                LK: "APAC",
                LR: "EMEA",
                LS: "EMEA",
                LT: "EMEA",
                LU: "EMEA",
                LV: "EMEA",
                LY: "EMEA",
                MA: "EMEA",
                MC: "EMEA",
                MD: "EMEA",
                ME: "EMEA",
                MF: "EMEA",
                MG: "EMEA",
                MH: "APAC",
                MK: "EMEA",
                ML: "EMEA",
                MM: "APAC",
                MN: "APAC",
                MO: "APAC",
                MP: "APAC",
                MQ: "EMEA",
                MR: "EMEA",
                MS: "LATAM",
                MT: "EMEA",
                MU: "EMEA",
                MV: "APAC",
                MW: "EMEA",
                MX: "LATAM",
                MY: "APAC",
                MZ: "EMEA",
                NA: "EMEA",
                NC: "EMEA",
                NE: "EMEA",
                NF: "APAC",
                NG: "EMEA",
                NI: "LATAM",
                NL: "EMEA",
                NO: "EMEA",
                NP: "APAC",
                NR: "APAC",
                NU: "APAC",
                NZ: "APAC",
                OM: "EMEA",
                PA: "LATAM",
                PE: "LATAM",
                PF: "EMEA",
                PG: "APAC",
                PH: "APAC",
                PK: "APAC",
                PL: "EMEA",
                PM: "EMEA",
                PN: "APAC",
                PR: "LATAM",
                PS: "EMEA",
                PT: "EMEA",
                PW: "APAC",
                PY: "LATAM",
                QA: "EMEA",
                RE: "EMEA",
                RO: "EMEA",
                RS: "EMEA",
                RU: "EMEA",
                RW: "EMEA",
                SA: "EMEA",
                SB: "APAC",
                SC: "EMEA",
                SD: "EMEA",
                SE: "EMEA",
                SG: "APAC",
                SH: "EMEA",
                SI: "EMEA",
                SJ: "EMEA",
                SK: "EMEA",
                SL: "EMEA",
                SM: "EMEA",
                SN: "EMEA",
                SO: "EMEA",
                SR: "LATAM",
                SS: "EMEA",
                ST: "EMEA",
                SV: "LATAM",
                SX: "EMEA",
                SY: "EMEA",
                SZ: "EMEA",
                TC: "LATAM",
                TD: "EMEA",
                TF: "EMEA",
                TG: "EMEA",
                TH: "APAC",
                TJ: "EMEA",
                TK: "APAC",
                TL: "APAC",
                TM: "EMEA",
                TN: "EMEA",
                TO: "APAC",
                TR: "EMEA",
                TT: "LATAM",
                TV: "APAC",
                TW: "APAC",
                TZ: "EMEA",
                UA: "EMEA",
                UG: "EMEA",
                UM: "APAC",
                US: "NA",
                UY: "LATAM",
                UZ: "EMEA",
                VA: "EMEA",
                VC: "LATAM",
                VE: "LATAM",
                VG: "LATAM",
                VI: "LATAM",
                VN: "APAC",
                VU: "APAC",
                WF: "EMEA",
                WS: "APAC",
                YE: "EMEA",
                YT: "EMEA",
                ZA: "EMEA",
                ZM: "EMEA",
                ZW: "EMEA"
            }
    }, 76: function (e, t, r) {
        "use strict";
        r.d(t, "a", (function () {
            return a
        }));
        var i = r(48),
            o = ["AT", "BE", "BG", "HR", "CY", "CZ", "DK", "EE", "FI", "FR", "DE", "GR", "HU", "IE", "IT", "LV", "LT", "LU", "MT", "NL", "PL", "PT", "RO", "SK", "SI", "ES", "SE", "GB", "CH", "LI", "IS", "NO"];

        function a() {
            return Object(i.a)().then((function (e) {
                return -1 !== o.indexOf(e.loc)
            }))
        }
    }
}, [[727, 0, 1, 2, 14, 147]]]);